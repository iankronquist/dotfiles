2014-05-27 15:54:40	-->	muricula (kronquii@osuosl/staff/muricula) has joined #python
2014-05-27 15:54:40	--	Topic for #python is "NO LOL | NO PROJECT EULER | Don't paste, use http://bpaste.net/+python | 2.x or 3.x? http://bit.ly/py2vs3k | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Find your nearest Python User Group: http://goo.gl/S1Zsq | #python-fr #python.dev #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-india"
2014-05-27 15:54:40	--	Topic set by Yhg1s (~thomas@python/psf/thomas) on Thu, 01 May 2014 04:48:13
2014-05-27 15:54:40	--	Nicks #python: [[CCP]FoxFour [mda] [SLB] [Tritium] \marrub \u03b5 _404`d __class__ __main__ _Atom_ _bradk _fmm _habnabit _ikke_ _jack_ _jj_ _joe_ _ken_ _krux _TB_ Aaeriele abele aboudreault abyss42 AcidReign acorwin actel AcTiVaTe Addem Adran ADubhlaoich AE7IK Affliction AG_Clinton agjacome agrajag42 agrif agurk ahammond aidan ainmosni airtonix AkashicLegend akiml_ Akita akp al1o Alan albel727 AlecksG Aletheuo|work Alex` alexandernst Alina-malina aljohri alone alviria Amadiro ambossen ameoba Amnesia amoe amospalla An_Ony_Moose anaconda Ancient AncientPC anddam Anders_J AndreasLutro andyland ankesh11 Anxi80 AnYaDi Aoy_c apetresc Aph3x-WL_ APLU aquinas araujo arch__ Ard1t ArexR ari-_-e ari` armin armyriad artificialexit Asandari asdf` asmundg AStorm ASUChander atriv audax333 aureianimus av0idz Avaris avelldiroll averell avium avu awktion az_ Azelphur azi` Azulinho azyr babilen badon balder balkian balrog bandroidx Bane^ barometz basepi bdavenport bedouin BeholdMyGlory belak Beornwulf berceanu Berra berto- bgs100 Biappi BiDOrD BillTheButcher BillyZane bind Biopandemic bipolar Bird|otherbox bitcraft bitnumus bjb_credil bkuberek blackms blahsphemer blakbunnie27 BlastHardcheese bloodevil blubbi BlueShark bnmalcabis bob_f bobeirasa bogosport BombStrike boos booya Bosse boustrophedon bpgoldsb braincrash brammator Brando753 Brewster brick brodul Browser brutal_lobster bsdbandit bsdgeek bsmt bstrie Bugson Bung_ Burgundy Burrito bw_ bwreilly c0ded C0deMaver1ck c45y C48I52AG ca1n cae- Caelum caktux Callek calp cam camerin canibanoglu cardboard CareBear\ carebeer carljm CatKiller caughtinflux causasui caveat- cdunklau cebor Celelibi cenhyperion cephalostrum cereal cesar_bo cescalante cewing chainsawbike chalcedony chamunks chance chaos95 Chewtoy chewyDelicious ChickeNES chihhsin china chipolux chocko chowmeined Chrisje ChristianS chronos chrysn cibs cjwelborn clajo04 clearcut Cleo clone1018 cloudster cnf cnj codehero codeitloadit codex0 codingkevin cofi ColdKeyboard comand commandoline confluency connor_goodwolf conorh convict cooldude Cork CorpusCallosum cosmin cothrun crane crazedpsyc crazysim CrazyWoods crisisking crissae Cruwer cruxeternus CrypticByte cryptk CryptoCrack cryzed cschneid cshell cwc cwillu_at_work cwillu_borken cxz Cydrobolt cyphase czapla d10n d1b d^_^b dabbott Dabo Daemoen daemonkeeper DaEvil1 daGrevis Damianz Dan39 dancat dangayle daniel3 danmackay dannib darkbasic DarkOrb DarkSector darrik DarthGandalf dataangel davividal davor Dawhee_ dbristow dcrosta dcrosta_ de-vri-es DeadSix27 deanj deathspawn Deaygo Debnet deed02392 deepy defane Defektro defk0n deranged_user derek_v Derimagia Deseaus desophos Dester detrout devdazed devhost dfdx2 DFieldFL dgoon-cloud dgriffi dh dhubbard diadara Diaoul digicyc digilord digitalfiz diminoten dirn DistantStar djapo djbrown dkua dmzda dnikolai dodgems doebi doobeh dosequis dougia dous dozn dpn` draculus drager drawks dray3 dRbiG drd drodger DropBear dropdrive drwx DrZaius dsirrine dsoto dstufft Dude-X_ duderonomy dumby_PC dutc E1ven eagleflo eataix echevemaster echoe ecj ecool edenist edk Edoxile edunham EdwardIII edwardly eeriegeek eevee eigenlicht ejnahc eka ekarlso ekem eliasp eliezerfot123 elkclone elyezer|out emacsnw Embalmed emma emorrow eN_Joy enbergj enderst eneon Enthralled EntropyArchive entwanne ePirat epitron epopt37 ericp4 eshlox esse- etank Ether_Man euphoriaa evanz everett evilroots ewong ex0a Ex0deus Eyess f1nhack fabian facetus_malum faldridge farn fayimora fbsd fcodiaz felipe felipeduardo ffualo FichteFoll Fill finnrobi fionnan firecat53 fission6 flax flebel flexd flubby_nanabo flufmnstr flymol0 fnordbert Fogest folivora forgot forrestv franzip frb FreezingCold freggles FrejConnolly Frosh frostschutz frymaster Fusxfaranto fuzeman|away fvox13 fxdgear FZombie g3rms Gambit- Gamenoob gamingrobot gamma Gammo Garen Garion gbarboza gbowyer_ gcbirzan gebba gelos Gentle geoffstokes george2 georgemarshall gfortune ggherdov GGMethos ggp GhettoGroceryBag gimps Gio^ giorgosp githogori gkap glebihan_ Gm4n Gman32 go|dfish gr33n7007h gremly grizwako groundnuty grundrausch3n gsnedders gsoul gt3 gtc gugah guilhermebr gv gv1222 gyaresu h12o hackeron hakced Hammerhead2011-S hammi HansiHE happyface hatch_ havok88 hayer hays hazardous HedgeMage heedly heedypo Heimdall heinrich5991 hekman HelPiNgU2 HeN heroux Hien higebu hiptobecubic Hix hockeynut hoelzro hopthrisC HTT-Bird Husio huza hybridpollo hzopak i3luefire_ iaj iAmerikan icecream iceTwy_znc IchEsseDichAuf idr0p ifdm_ igordcard igordcard_afk iiie iivvoo ikanobori impulse150 indigo individuwill Infant infernix infobob inhahe innertracks insequent Internet13 interru intnsity intricate iogg IotaSpencer ips|malc iron_houzi Irrelium irv isa56k Ishaq isomer isomorphic italorossi ItsYoda ivan\ ivan` ivanf ix007 ixokai ixti j4m13 j_king jaboles jackal jaggz|2 jaharmi Jake0720 jakebasile jalaziz james41382 jameswf jameyc jamphat JanC jandrusk janelleb Janhouse japesinator jarshwah Jarus javawizard jayne jaysonsantos jbhatta jbraeg jdiez Jeebiss jeffrubic jeffspies jekt jemadux Jerub Jezzz jgeboski jgelens jhardin jholden_away Jikkz Jimmy_Rustles jimpop jjmalina jjmojojjmojo jkbbwr jleclanche jml jnix JodaZ Joe_knock joedj JoeLoser joevandyk john_f johnnyfive jonanin Joost` Jordan_U jordane jorey jorgev joshbaptiste joshfinnie JoshNang JPaul JPeterson jpm jprice jpwgarrison jrib jroo jseutter jstarcher jt__ jtrucks Jubb Jucato Juhaz juiz Junaos junixbr Jupelius Justin justinabrahms jwSchool JZTech101 k-man Kabaka kafitz kahtahs kahu kakashi_ Kaltiz kalz Kamilion kaos01 Katharsis kayatwork kbrosnan kbtr_ kcj keatont keekz keepguessing kelvan kenbolton kensington keNzi kerosene kerrick kesselhaus_ kevin-brown kevinb kevlarman kevr keypusher kfr2 Kharec kiki_lamb kimiamania KindOne kinnou kirin` KirkMcDonald kit kl0_ kl4us klep kline Klumben kmcguire knigitz knotti KnownSyntax Ko koalallama komposti kormoc kq_away krizzo Kroisse Kruppe KrzyStar ksa kStolen kunwon1 kurti Kwpolska kylethebaker kyrre l403 l_amee LACP Lacriatch lahwran lasers lau- LaunchDirector lawnchair lazyPower ldlework lduros le_tropico lebster Left_Turn legless399 Lemony lettzmi Liam` lifty likewhoa Lindrian lionaneesh Liothen LippeN LK- Llew lmpyspaceprncs lnxg33k localhost00 lol768 lorenzosu_ LoRez lotia lseb lsjostro lsocks luanpab luckman212 Lulzon Lunatrius lupfantomo Luyt_ lv_ lvh LysergicDreams lyxus M-ou-se m3thodical[CIN] MaaaZ maatrox Macacity macicka Macuser maedox mage_ mahmoud mahmoudimus maik majoh malex manacit mandrake` Mandus manfred mankypirate Maple__ marccc marcinkuzminski marienz mark_t MarkusH marmalodak marr martian martin_ masak masen mathemancer mathu Matjong mattallmill mattcen mattmcc maZtah mbCE23 McMAGIC--Copy Megtastique mehdi mehwork Mellified_Man MentalAtrophy merlin83 merlinsbrain mescalinum metalight metathink mexi_d3_ mfisher mfranzwa mgodzilla mic_e MightyJoe mijicd mikemac milena MilkmanDan mimi_vx MindDrive MindfulMonk Mio-chan mission MissionCritical mist mjacob mjulian mjuszczak mlq Mo0O mobileblue Mogget mogsy_work moldy mon5ter mondzug monokrome monoprotic mooky moop MOSCOW mostly_d34dh0r53 moted motsu|away MouldyOldBones Moussekateer mpajor mpoole mr-foobar MrC MrElendig mrhanky MrMagic mrmanner MRN MrNaz mshroyer MSHughes mtomwing mtx_init mulander MultiColourPixel mumixam muricula murosai murr4y mushroomed muteki Muzer mven mwilson mwk MyMind mythmon myusuf3 n13z n8o nagev Nahra nanonyme napalmbrain naquad natim Natureshadow ncode ncthom91 necavi nedbat Neg127 NelleV nemesit|znc nero Netfeed Niamkik nicdev nicholasserra nick1 Nickeeh nido nielsle NightTrain nihilista nikola niluje nisstyre Nitori nitro25 nkuttler nodern Noldorin nopf norrell nosklo Nothing4You nottheoilrig Novacha novist nseger nsfw ntio nullpuppy Numinex nwilson5 oahong oakridge obiwahn octarine oculux Oddity odigem offby1 offbyone ohcibi ojdo okinomo olasd oleo Oli Olipro olly_c onebitaway OnkelTem onthestairs opsec Orbitrix ormaaj Orphis oubiga overrider oxsyn Oxyd P-l p1l0t pa Pagan Palantiri Paradisee Paradox924X parallel21 pastry pdtpatr1ck pdtpatrick Peng pepijndevos peripeteian petercommand peterwalker78 pf_moore pgurumur ph88_ phaer Phage phantomcircuit Pharaoh Phase phlixi_ phobi phood phracker phroa phryk phschwartz Pici pingbat pingveno PivotedSteed Pixa Plastefuchs Platini platinuum pld plepzz plh plustwo pocketprotector polaco_zZz Polytonic Porkepix poseidon position88 pr3d4t0r Praise prattmic praveenkumar prdx preaction proycon przemkovv przemoc psaintlaurent psedlak Psi-Jack psil ptrv puckoh purch PurpleDog pwh pyn pythonirc1011 pythonsnake qiemem qu1ckkkk quantsini Quashie quintopia R0b0t1 rabidfurby Raccoon radman raid raijin rails_smith raj ratsupremacy RavenEye Raynes razor rcombs rcxdude Red_M redkrieg regebro|afk regtools remote Remram renoirb Retrace revdiablo revolve rew1red rezmuh ribasushi rich- RichardBronosky rickest Rickmasta Rikairchy riskable rivarun Rix RiXtEr rjx rmk rob`` roberto- robgraves robink robmorrissey robvdl rocky rockyrock roentgen roger_rabbit rolha ronny RoryHughes ross` rostam rotham rotor Roukoswarf roxfan rroa Rstevoa RudyValencia Rufflewind_ ruffy Rundll runnyspot russw rvchangue ryan-c ryanakca Rylee rylinaux s1gh s_e sab3r sadmac Sakurazaki salparadise Samb1 samfalkner saml SamSagaZ sanova Sarcasm sarlalian sbach scharan schmilblick schribl scoobertron Score_Under scorphus scriptiee scriptThis Scub seagreen SebastianFlyte seeingred SegFaultAX Seisatsu sejo seoul_man sephiap Seppy serban Sergobe Sergonium Setsuako SevenWolf sgray10 sgviking shackra shadok ShadowStruck shadyabhi shambat sharktopus Shayanjm shello sherafff ShinySides shoerain shortdudey123 Shukaro Siberian_Tiger SiegeX Silex silverdust simpleminds simplisity sindreij SirCmpwn SirDeiu sirtaj SittingShiva sivoais sjaak_trekhaak SJr ska-fan skakri skelterjohn skoskav skullone sl3dge_ slacker_nl slasktask sleuth slu9freek SmokeyD smue smyers Snake2k snkcld snowp SntPx so sobczyk softwaredoug SoftwareMaven sokoll solidus-river someplace someprimetime Somni Sonderblade sonofflynn soosfarm spaceone spal speaker1234 spec_ed sphenxes Spleeze spossiba sproingie spvensko sqrrl sr sral srijay ssbr ssbr_at_work ssidhu ssut stack stain stal[GL] stdDoubt Stealth stealthii steffan stephan48 Stereo SteveG stoned stooj_ stopbit storrgie streety striglia Striki StupidWeasel stylus subleq sudorandom supernaut SushiDude Svedrin svenstaro Svet_Roid swaj SWAT swebb sweemeng_office sword symptom synfin synfinatic syphar syrius tabo tacohat talanor talin tan tanja84dk tapout Taranis Tatsh tawonga tazle TBCOOL TCubed tdfischer TDJACR tdy TeamMat tech-desk technivore techwave61 tedoc2000 tehhobbit tekacs telling tensorpudding tephra Terminus- Terr Texnical TFKyle ThatOtherGuy the_lalelu the_rat TheBigRedButton TheBub TheFakeazneD525 thegameg thelinuxkid themagician TheNumb therealfakemoot TheReverend403 thiderman ThiefMaster thirsteh thirsteh_ thnee thomasHorse thunderbolt Tii tilgovi timewa1ker TingPing tiron tiwula tjayh913 tlevine tobaljackson ToBeFree tobias1 Togusa tom tomaw TomFooligan tomobrien ToothlessGear toothrot Torhal tortal tos9 totokaka totte Tranzorro Trashlord Trasp treeherder trewq trey trinque TripTastic troyt trwired Trynemjoel ts33kr tuturto Twey twobitsprite twoxyo txomon|home TylerE tyll tylrr Typo u-ou u0m3 ua uidzer0 Uitto ujjain ulkesh ultrashag Ulver umair underyx Unode unreal untitaker Uriziel urlgrabber Urushiol Vadtec VadtecWk ValicekB vbabiy veloutin VeXocide Vialas Viiru vinky_ viper0984 virhilo VooDooNOFX Vornicus Vostok vt102 Vutral w0rp wac wagnerrp Wamanuz wapiflapi war9407 warsh Watcher7 wchun WebDawg Wegge wei2912 werdna weuolululu Whiskey white_widow Widdershin willroberts Windwaker winny winsoff wjb wkmanire wldcordeiro_work wodim wolrah WormDrink worstadmin wozzoz wting Wu wyri x^2 xace xcolour XDS2010_ Xe xender XenGi Xerion xiaomiao xintron Xiti xMopxShell xnox xrogaan xsamurai xsappyx xsteadfastx xuu yacc_ yamz yano yaw yeshuah Yhg1s ynot Yomi yorick YS-L z0ran zack6849 Zackio zacts zaiste zalami zamba Zarthus zedsdeadbaby Zeedox_ zerotek Zespre Zesty_ zhost Zimsky zlalanne zmo zodiac ZombieFe_ zygen zymurgy ZyX-I zz_veatch zz_whg]
2014-05-27 15:54:40	--	Channel #python: 1465 nicks (0 ops, 0 halfops, 0 voices, 1465 normals)
2014-05-27 15:54:42	--	Channel created on Sat, 25 Nov 2006 22:42:41
2014-05-27 15:55:12	<--	ptrv (~ptrv@p4FCDEFE6.dip0.t-ipconnect.de) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-05-27 15:55:38	<--	Quashie (~boingredd@173.247.202.84) has quit (Ping timeout: 240 seconds)
2014-05-27 15:56:01	<--	Anxi80 (Anxi80@unaffiliated/anxi80) has quit (Ping timeout: 252 seconds)
2014-05-27 15:56:09	-->	Anxi80 (Anxi80@unaffiliated/anxi80) has joined #python
2014-05-27 15:56:51	speaker1234	keypusher: any more thoughts on my problem?
2014-05-27 15:56:58	<--	emorrow (~Thunderbi@86.44.238.42) has quit (Quit: emorrow)
2014-05-27 15:57:02	-->	semigloss (~semigloss@d192-24-132-200.try.wideopenwest.com) has joined #python
2014-05-27 15:57:46	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Remote host closed the connection)
2014-05-27 15:58:13	<--	Jucato (~jucato@kde/developer/jucato) has quit (Ping timeout: 252 seconds)
2014-05-27 15:58:20	muricula	hey does anyone know if the pysnmp devs have a channel? Alterantely is there a way to get the low level documentation and not just an overview? I looked at the public site and can't find comprehensive docs.
2014-05-27 15:58:26	<--	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2014-05-27 15:58:50	 *	muricula alternates n`s and a`s
2014-05-27 15:59:02	<--	jonanin (~Jonanin@2601:9:4680:d2c:3401:465c:73fa:726e) has quit (Ping timeout: 245 seconds)
2014-05-27 15:59:13	<--	zlalanne (~zlalanne@nat/ti/x-eklkjdcbfgmrgdgn) has quit (Quit: Leaving)
2014-05-27 15:59:31	<--	iogg (~rpolli@93-41-231-86.ip83.fastwebnet.it) has quit (Ping timeout: 240 seconds)
2014-05-27 15:59:53	 *	gfortune peers curiously at muricula's antics
2014-05-27 15:59:58	-->	fluidr (~fluid@unaffiliated/fluidr) has joined #python
2014-05-27 16:00:04	<--	i3luefire_ (~i3lue@wsip-184-178-235-57.tu.ok.cox.net) has quit (Quit: Leaving)
2014-05-27 16:00:11	KirkMcDonald	muricula: "Low level documentation"? Something tells me that's called "source code."
2014-05-27 16:00:18	<--	aquinas (~aquinas_@unaffiliated/aquinas) has quit (Read error: Connection reset by peer)
2014-05-27 16:00:26	-->	bhamhawker (~bhamhawke@pool-173-65-120-45.tampfl.fios.verizon.net) has joined #python
2014-05-27 16:00:27	-->	i3luefire_ (~i3lue@wsip-184-178-235-57.tu.ok.cox.net) has joined #python
2014-05-27 16:00:27	<--	FichteFoll (~FichteFol@unaffiliated/fichtefoll) has quit (Quit: 0x90)
2014-05-27 16:00:27	-->	sandman13 (~sandman@202.51.86.6) has joined #python
2014-05-27 16:00:35	<--	mven (~textual@169.241.49.233) has quit (Ping timeout: 258 seconds)
2014-05-27 16:00:45	keypusher	muricula: there's links on their site to documentation, source code, 2 dev mailing lists, and a feedback form
2014-05-27 16:00:48	-->	Deesl (~bsdboy@redhat/deesl) has joined #python
2014-05-27 16:00:50	muricula	KirkMcDonald: unfortunately
2014-05-27 16:00:55	<--	Muzer (~muzer@cpc1-sotn13-2-0-cust331.15-1.cable.virginm.net) has quit (Excess Flood)
2014-05-27 16:01:00	<--	winsoff (~foo@66.205.210.40) has left #python ("Channel Departure")
2014-05-27 16:01:22	muricula	yes, so the docs provide an overview, and I'm looking at the source and mailing lists now
2014-05-27 16:01:28	-->	aquinas (~aquinas_@unaffiliated/aquinas) has joined #python
2014-05-27 16:01:41	keypusher	speaker1234: example i posted is the best i can give i think.  i looked at your code, but there is too much there for me to try and fit it in for you.
2014-05-27 16:02:05	-->	grep0r (grep0r@bitcoinshell.mooo.com) has joined #python
2014-05-27 16:02:05	-->	wwnnbb (~wwnnbb@85.112.113.2) has joined #python
2014-05-27 16:02:11	speaker1234	keypusher: thanks for looking.  I appreciate it
2014-05-27 16:02:19	<--	JoeLoser (~JoeLoser@24-207-245-104.dhcp.stls.mo.charter.com) has quit (Ping timeout: 265 seconds)
2014-05-27 16:02:20	<--	the_rat (~the_rat@217.200.185.235) has quit (Read error: Connection reset by peer)
2014-05-27 16:02:32	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 16:02:42	<--	AcTiVaTe (~activate@d594eeda.static.dsl.concepts.nl) has quit (Remote host closed the connection)
2014-05-27 16:02:46	-->	the_rat (~the_rat@217.200.185.235) has joined #python
2014-05-27 16:02:52	<--	nicholasserra (~Adium@cpe-24-93-244-49.neo.res.rr.com) has quit (Quit: Leaving.)
2014-05-27 16:03:02	<--	x^2 (~ben@ool-2f15cb1e.static.optonline.net) has quit (Quit: Leaving)
2014-05-27 16:03:08	-->	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has joined #python
2014-05-27 16:03:36	<--	Deesl (~bsdboy@redhat/deesl) has quit (Client Quit)
2014-05-27 16:05:16	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-27 16:05:28	<--	defk0n (~defk0n@sub-221ip15.rev.onenet.an) has left #python
2014-05-27 16:05:41	<--	tedoc2000 (~tedoc2000@nat/yahoo/x-yglwphxximjqabvy) has quit (Ping timeout: 264 seconds)
2014-05-27 16:06:04	mon5ter	i'm working on an simple irc client and want to implement all the reply codes (found in rfc). what should i use for that? dict()?
2014-05-27 16:06:07	-->	tedoc2000 (~tedoc2000@2001:4998:effd:600:808c:d6c4:5610:c4b3) has joined #python
2014-05-27 16:07:00	-->	euxneks (~chris@unaffiliated/euxneks) has joined #python
2014-05-27 16:07:19	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-27 16:07:21	mon5ter	i want to use it like a db for my parser later on
2014-05-27 16:07:24	<--	huza (~My@112.246.199.137) has quit (Ping timeout: 240 seconds)
2014-05-27 16:07:57	<--	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has quit (Quit: AkashicLegend)
2014-05-27 16:08:13	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-27 16:08:19	<--	tilgovi (~randall@couchdb/committer/tilgovi) has quit (Remote host closed the connection)
2014-05-27 16:08:40	<--	ojdo (~ojdo@unaffiliated/ojdo) has quit (Disconnected by services)
2014-05-27 16:08:44	<--	rotham (~harry@174.32.52.153) has quit (Read error: Connection reset by peer)
2014-05-27 16:08:53	-->	ojdo (~ojdo@unaffiliated/ojdo) has joined #python
2014-05-27 16:09:04	-->	Muzer (~muzer@cpc1-sotn13-2-0-cust331.15-1.cable.virginm.net) has joined #python
2014-05-27 16:09:04	sandman13	I have two scripts that do the same work i.e. solve jumbled words. But I don't know which one would be regarded as good script. First version: http://bpaste.net/show/bWoHUQ6uvhxp2qAIOyej/ Second version: http://bpaste.net/show/mZ7bOhLMTLkGk27hH5tJ/
2014-05-27 16:09:30	-->	rotham (~harry@174.32.52.153) has joined #python
2014-05-27 16:09:39	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-27 16:10:05	KirkMcDonald	sandman13: Well the second one is mixing tabs and spaces.
2014-05-27 16:10:49	sandman13	KirkMcDonald: if I ignore tabs and spaces, then?
2014-05-27 16:10:54	-->	kosh (~kosh@aesaeion.com) has joined #python
2014-05-27 16:11:07	euxneks	sandman13, if the dictionary text is sorted, you can probably cut down on the number of values you search through by sorting the characters in the scrambled word too
2014-05-27 16:11:09	-->	nicholasserra (~Adium@cpe-24-93-244-49.neo.res.rr.com) has joined #python
2014-05-27 16:11:21	-->	shadowe989 (~shadowe98@74-32-109-176.dr01.rmny.wv.frontiernet.net) has joined #python
2014-05-27 16:11:24	KirkMcDonald	sandman13: They're essentially the same.
2014-05-27 16:11:31	gfortune	sandman13: Those look like they were written by two different people
2014-05-27 16:11:51	euxneks	sandman13, ignore me
2014-05-27 16:12:05	sandman13	gfortune: written by same person
2014-05-27 16:12:16	<--	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has quit (Remote host closed the connection)
2014-05-27 16:12:44	keypusher	sandman13: which do you prefer?
2014-05-27 16:12:57	<--	bnmalcabis (~benjy@190.12.90.110) has quit (Quit: Leaving)
2014-05-27 16:13:03	-->	nande_ (~quassel@190.183.4.91) has joined #python
2014-05-27 16:14:08	sandman13	keypusher: one that will have lesser running time
2014-05-27 16:14:13	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-27 16:14:39	-->	lyxus_ (~lyxus@cpe-198-72-209-168.socal.res.rr.com) has joined #python
2014-05-27 16:15:40	gfortune	sandman13: Have you tried using the profiler against non-trivial data sets?
2014-05-27 16:15:48	JodaZ	sandman13, are you asking people which homework is the better to copy?
2014-05-27 16:16:16	gfortune	JodaZ: so direct :)
2014-05-27 16:16:18	sandman13	JodaZ: that is not the homework, I have written them by myself
2014-05-27 16:16:36	sandman13	I have spent 3 hours on that
2014-05-27 16:16:38	-->	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has joined #python
2014-05-27 16:16:48	-->	rapidfyre (~rapidfyre@host86-149-199-58.range86-149.btcentralplus.com) has joined #python
2014-05-27 16:16:53	keypusher	golly
2014-05-27 16:17:03	<--	Edoxile (~Edoxile@edoxile.net) has quit (Remote host closed the connection)
2014-05-27 16:17:40	<--	nedbat (~nedbat@python/psf/nedbat) has quit
2014-05-27 16:18:00	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-27 16:18:24	-->	Stormhawk (~Stormhawk@unaffiliated/stormhawk) has joined #python
2014-05-27 16:18:27	<--	solidus-river (~solidus-r@207.170.224.131) has quit (Ping timeout: 276 seconds)
2014-05-27 16:18:37	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 245 seconds)
2014-05-27 16:18:39	<--	Stormhawk (~Stormhawk@unaffiliated/stormhawk) has left #python
2014-05-27 16:18:42	keepguessing	Is it possible to have a default value for an argument of a function to be another function?
2014-05-27 16:18:53	JodaZ	sandman13, oO
2014-05-27 16:19:01	speaker1234	keepguessing: I think it is
2014-05-27 16:19:03	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-27 16:19:14	--	swebb is now known as zz_swebb
2014-05-27 16:19:18	speaker1234	should not be hard to try
2014-05-27 16:19:22	VooDooNOFX	keepguessing: sure.
2014-05-27 16:19:28	-->	Yeretik (~Yeretik@201.255.255.83) has joined #python
2014-05-27 16:19:48	gfortune	sandman13: So, profile the two different solutions and see which one is faster if that's really your criteria.  Alternatively, also implement the same solution using a list comprehension (a single line "main()")  and profile that solution.
2014-05-27 16:19:52	<--	italorossi (~italoross@187.60.66.11) has quit (Remote host closed the connection)
2014-05-27 16:19:53	Yeretik	 Hi... There's a control class like wx.DatePickerCtrl but to time pick ?? In wxPython? I'm checked http://wxpython.org/Phoenix/docs/html/adv.TimePickerCtrl.html but is not clear enough... For example, where do i set USE_TIMEPICKCTRL to 1 ?
2014-05-27 16:20:24	sandman13	gfortune: profile means tracing?
2014-05-27 16:20:38	sandman13	gfortune: I am beginner at python
2014-05-27 16:20:42	gfortune	sandman13: profile records performance/timing info
2014-05-27 16:20:54	<--	kenbolton (~kenbolton@ool-4350648f.dyn.optonline.net) has quit (Quit: kenbolton)
2014-05-27 16:20:55	VooDooNOFX	keepguessing: http://ideone.com/CuuA3L
2014-05-27 16:21:09	<--	speaker1234 (~Thunderbi@173-14-129-9-NewEngland.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-05-27 16:21:22	gfortune	sandman13: And make sure to use largish data sets when you're doing a profile so you get realistic numbers.
2014-05-27 16:21:24	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-27 16:22:15	gfortune	sandman13: Regardless, you really ought to figure out the list comp solution.  It's very clean looking and should give solid performance.
2014-05-27 16:22:20	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-27 16:22:29	<--	nande_ (~quassel@190.183.4.91) has quit (Remote host closed the connection)
2014-05-27 16:22:29	-->	Edoxile (~Edoxile@edoxile.net) has joined #python
2014-05-27 16:23:36	sandman13	gfortune: I will figure out that but now I have to go
2014-05-27 16:23:43	VooDooNOFX	keepguessing: just remember that the default_func is __init__'d at the start of the script (during it's definition), not when the my_awesome_function is called.
2014-05-27 16:24:07	<--	ADubhlaoich (~ADubhlaoi@86.42.127.53) has quit (Quit: Leaving)
2014-05-27 16:24:10	<--	sandman13 (~sandman@202.51.86.6) has quit (Quit: I/O Error)
2014-05-27 16:24:35	-->	codeomegaprime (~visualrea@rrcs-70-60-127-110.midsouth.biz.rr.com) has joined #python
2014-05-27 16:24:40	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-27 16:24:53	codeomegaprime	Is there a way in Python 3 to change which eth0 interface you are using
2014-05-27 16:25:43	<--	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has quit (Read error: Connection reset by peer)
2014-05-27 16:26:09	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 16:26:16	<--	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2014-05-27 16:26:24	-->	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has joined #python
2014-05-27 16:26:28	keypusher	eth0 is an interface.  in what are you interacting directly with it?
2014-05-27 16:26:33	<--	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has quit (Read error: Connection reset by peer)
2014-05-27 16:26:52	codeomegaprime	I want to use my static IP addresses and rotate them for security
2014-05-27 16:26:59	<--	Paradisee (~Paradisee@2.239.28.120) has quit (Ping timeout: 255 seconds)
2014-05-27 16:27:04	-->	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has joined #python
2014-05-27 16:27:13	<--	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has quit (Read error: Connection reset by peer)
2014-05-27 16:27:28	<--	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has quit (Quit: innertracks)
2014-05-27 16:27:36	keypusher	and these static ip addresses are assigned to eth0, eth1  or something?
2014-05-27 16:27:38	-->	Mooash (~mooash@unaffiliated/mooash) has joined #python
2014-05-27 16:27:42	<--	_Atom_ (~jawat@108-73-1-253.lightspeed.austtx.sbcglobal.net) has quit (Remote host closed the connection)
2014-05-27 16:27:44	-->	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has joined #python
2014-05-27 16:27:52	codeomegaprime	eth0 eth0:1 eth0:2
2014-05-27 16:27:56	keypusher	ah ok
2014-05-27 16:28:06	keypusher	virtual ips?
2014-05-27 16:28:11	codeomegaprime	yes
2014-05-27 16:28:27	<--	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has quit (Read error: Connection reset by peer)
2014-05-27 16:28:58	Jerub	that smells like legacy ifconfig stuff
2014-05-27 16:28:58	keypusher	i don't think there is anything native.  you just have to figure out the sequence of shell commands to do what you want and run them via subprocess
2014-05-27 16:28:59	<--	samfalkner (~samfalkne@inet-aumc07-o.oracle.com) has quit (Remote host closed the connection)
2014-05-27 16:29:04	<--	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has quit (Remote host closed the connection)
2014-05-27 16:29:14	-->	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has joined #python
2014-05-27 16:29:18	<--	tiwula (~lane@ip68-231-204-63.oc.oc.cox.net) has quit (Ping timeout: 240 seconds)
2014-05-27 16:29:18	codeomegaprime	Jerub not quite
2014-05-27 16:29:25	codeomegaprime	keypusher that is what I was afraid of
2014-05-27 16:29:30	Jerub	well, the legacy ioctl interface to the kernel to configure interfaces
2014-05-27 16:29:33	-->	kenbolton (~kenbolton@ool-4350648f.dyn.optonline.net) has joined #python
2014-05-27 16:29:34	Jerub	but nevermind that
2014-05-27 16:29:38	<--	bhamhawker (~bhamhawke@pool-173-65-120-45.tampfl.fios.verizon.net) has quit (Quit: bhamhawker)
2014-05-27 16:29:39	-->	darkf (~darkf___@unaffiliated/darkf) has joined #python
2014-05-27 16:29:42	keypusher	ewww
2014-05-27 16:29:42	-->	LordWillO (~LordWillO@cpe-76-188-188-110.neo.res.rr.com) has joined #python
2014-05-27 16:29:43	codeomegaprime	I dont wawnt to configure the interfaces
2014-05-27 16:29:45	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-27 16:29:57	Jerub	what you should do is s = socket.socket(); s.bind(('local-ip-address', 0)); s.connect(...)
2014-05-27 16:29:57	codeomegaprime	I just want python to use the interface to connect to my second machine
2014-05-27 16:30:06	-->	naught101 (~naught101@123.208.14.196) has joined #python
2014-05-27 16:30:10	codeomegaprime	Jerub ok cool
2014-05-27 16:30:32	codeomegaprime	I will give that ago
2014-05-27 16:30:34	Jerub	but also, don't use ifconfig, eth0:1 etc is a dirty hack, you should learn how to use iproute2 :)
2014-05-27 16:30:35	<--	kcj (~kcj@unaffiliated/kcj) has quit (Ping timeout: 255 seconds)
2014-05-27 16:30:42	codeomegaprime	a go*
2014-05-27 16:30:47	codeomegaprime	ok col
2014-05-27 16:30:49	codeomegaprime	cool
2014-05-27 16:31:31	<--	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 240 seconds)
2014-05-27 16:31:43	<--	nicholasserra (~Adium@cpe-24-93-244-49.neo.res.rr.com) has quit (Quit: Leaving.)
2014-05-27 16:31:53	<--	rapidfyre (~rapidfyre@host86-149-199-58.range86-149.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-05-27 16:32:01	<--	Mooash (~mooash@unaffiliated/mooash) has quit (Ping timeout: 258 seconds)
2014-05-27 16:32:13	-->	mchelem (~Thunderbi@186.213.129.254) has joined #python
2014-05-27 16:32:53	<--	BeholdMyGlory (~behold@unaffiliated/beholdmyglory) has quit (Quit: Leaving)
2014-05-27 16:32:58	-->	kumarat9pm (~surendra@123.252.227.75) has joined #python
2014-05-27 16:33:12	-->	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has joined #python
2014-05-27 16:33:32	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 16:34:34	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-27 16:34:51	diminoten	how does one install pip without any network access
2014-05-27 16:35:15	offby1	one drives someplace with network access, downloads it onto a USB stick, then drives back home
2014-05-27 16:35:20	-->	alexsnake (~alexsnake@200.79.231.98) has joined #python
2014-05-27 16:35:52	offby1	there are variant techniques, where you get your friend to drive.
2014-05-27 16:35:53	<--	the_rat (~the_rat@217.200.185.235) has quit (Ping timeout: 252 seconds)
2014-05-27 16:36:01	diminoten	oh
2014-05-27 16:36:02	<--	yorick (~yorick@oftn/member/yorick) has quit (Read error: Connection reset by peer)
2014-05-27 16:36:04	diminoten	silly me
2014-05-27 16:36:07	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Ping timeout: 245 seconds)
2014-05-27 16:36:08	offby1	Also, walking and taking the bus can work, if you have a recent enough version of python
2014-05-27 16:36:27	<--	mchelem (~Thunderbi@186.213.129.254) has quit (Client Quit)
2014-05-27 16:36:35	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-27 16:37:06	<--	mijicd (~mijicd@cable-188-246-49-55.dynamic.kdsinter.net) has quit (Remote host closed the connection)
2014-05-27 16:37:18	lyxus_	Is there anyway to specify the destination of the folder in the setup.py (not on the stdin)
2014-05-27 16:37:19	offby1	semi-seriously: python 3.4, I _think_, has pip built in.  Hooray
2014-05-27 16:37:28	<--	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has quit
2014-05-27 16:37:31	<--	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-27 16:37:44	diminoten	for some reason I didn't consider that pip would have a setup.py
2014-05-27 16:37:50	diminoten	it does though so that was easy
2014-05-27 16:38:06	keypusher	turtles all the way down
2014-05-27 16:38:38	diminoten	now I have to create a dependency tree for my project and hand-move all the necessary packages :(
2014-05-27 16:38:57	<--	frostschutz (~frostschu@p4FFF445E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-05-27 16:40:01	<--	desophos (~desophos@128.149.227.202) has quit (Quit: Leaving)
2014-05-27 16:40:02	<--	shadok (~muaddib@unaffiliated/shadok) has quit (Ping timeout: 255 seconds)
2014-05-27 16:40:04	<--	echevemaster (~echevemas@fedora/echevemaster) has quit (Remote host closed the connection)
2014-05-27 16:40:23	<--	Mellified_Man (~Mellified@eddie.mellified.com) has quit (Ping timeout: 252 seconds)
2014-05-27 16:40:50	offby1	packaging is a bitch.
2014-05-27 16:41:03	-->	il (~not_mike@unaffiliated/not-mike/x-4399907) has joined #python
2014-05-27 16:41:07	<--	huza (~My@182.38.83.129) has quit (Quit: WeeChat 0.3.8)
2014-05-27 16:41:28	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 16:41:41	lyxus_	the reason, why i need this is because I need to replace some files of a curent packages.
2014-05-27 16:41:43	-->	the_rat (~the_rat@217.200.185.195) has joined #python
2014-05-27 16:41:44	-->	Mooash (~mooash@unaffiliated/mooash) has joined #python
2014-05-27 16:41:53	il	if I install a package in vitrenv does it install it in real life?
2014-05-27 16:41:55	-->	mven (~textual@ip68-104-38-84.lv.lv.cox.net) has joined #python
2014-05-27 16:42:00	diminoten	is this real life
2014-05-27 16:42:01	il	virtenv*
2014-05-27 16:42:07	-->	LakeSolon (~LakeSolon@c-75-73-127-70.hsd1.mn.comcast.net) has joined #python
2014-05-27 16:42:11	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-27 16:42:11	diminoten	and il no, just in the virtual env
2014-05-27 16:42:12	<--	nemesit|znc (~nemesit|z@84.200.7.95) has quit (Ping timeout: 240 seconds)
2014-05-27 16:42:23	il	diminoten, how do i install it in real life
2014-05-27 16:42:29	Yeretik	 Hi... There's a control class like wx.DatePickerCtrl but to time pick ?? In wxPython? I'm checked http://wxpython.org/Phoenix/docs/html/adv.TimePickerCtrl.html but is not clear enough... For example, where do i set USE_TIMEPICKCTRL to 1 ?
2014-05-27 16:42:29	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-27 16:42:30	il	if I only have access to the virtenv
2014-05-27 16:42:35	diminoten	you don't
2014-05-27 16:42:41	diminoten	if you don't have access, that is
2014-05-27 16:42:44	tos9	What is real life?
2014-05-27 16:42:48	il	dang
2014-05-27 16:42:48	diminoten	Where are we?
2014-05-27 16:42:50	-->	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has joined #python
2014-05-27 16:42:53	il	what year is it
2014-05-27 16:43:07	diminoten	il what's the reason for wanting to install it in real life
2014-05-27 16:43:17	il	I'm working in openshift
2014-05-27 16:43:20	diminoten	virtualenv should support your every need
2014-05-27 16:43:22	il	And I don't have sudo
2014-05-27 16:43:28	<--	sgviking (~sgviking@gateway/tor-sasl/sgviking) has quit (Remote host closed the connection)
2014-05-27 16:43:28	tos9	So?
2014-05-27 16:43:29	<--	_joe_ (~joe@wikimedia/GLavagetto-WMF) has quit (Remote host closed the connection)
2014-05-27 16:43:40	<--	xnox (~xnox@ubuntu/member/xnox) has quit (Quit: ZNC - http://znc.in)
2014-05-27 16:43:40	-->	_joe_ (~joe@wikimedia/GLavagetto-WMF) has joined #python
2014-05-27 16:43:40	il	pip install pandas -> access denied
2014-05-27 16:43:49	il	sudo apt-get install pandas -> access denied
2014-05-27 16:43:58	il	easy_install pandas -> access denied
2014-05-27 16:44:00	diminoten	just install it into a virtualenv and make sure openshift is using your virtualenv as its python root
2014-05-27 16:44:01	il	works in virtenv though
2014-05-27 16:44:02	<--	SteveG (~SteveG@pdpc/supporter/21for7/steveg) has quit (Ping timeout: 245 seconds)
2014-05-27 16:44:04	-->	sgviking (~sgviking@gateway/tor-sasl/sgviking) has joined #python
2014-05-27 16:44:12	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 16:44:13	il	diminoten, how do I do that?
2014-05-27 16:44:18	diminoten	i dunno
2014-05-27 16:44:19	il	still new to python and sysadmining
2014-05-27 16:44:22	il	dayum
2014-05-27 16:44:27	offby1	gaw dayum
2014-05-27 16:44:27	-->	schemanic (~schemanic@c-24-147-92-164.hsd1.vt.comcast.net) has joined #python
2014-05-27 16:44:27	il	is that a good practice?
2014-05-27 16:44:32	diminoten	that's just a configuration thing in virtualenv
2014-05-27 16:44:35	offby1	<il> sudo apt-get install pandas -> access denied
2014-05-27 16:44:40	offby1	il: that surprises me.
2014-05-27 16:44:46	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-27 16:44:48	il	surprised me too
2014-05-27 16:44:52	<--	pld (~pld@unaffiliated/pld) has quit (Ping timeout: 245 seconds)
2014-05-27 16:44:54	diminoten	er not virtualenv, openshift
2014-05-27 16:45:11	il	yea
2014-05-27 16:45:12	-->	jeffisabelle (~jeffisabe@85.110.126.115) has joined #python
2014-05-27 16:45:39	il	can't have admin access to my own damn (free) server
2014-05-27 16:45:46	il	still though, I should have some
2014-05-27 16:45:58	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-27 16:46:07	<--	Mooash (~mooash@unaffiliated/mooash) has quit (Ping timeout: 245 seconds)
2014-05-27 16:46:16	offby1	"openshift" sounds vaguely off-color ... http://en.wiktionary.org/wiki/shift#Noun
2014-05-27 16:46:30	offby1	il: well, that's part of your problem.
2014-05-27 16:46:38	il	Lol
2014-05-27 16:46:39	offby1	il: try "pip install --user pandas"
2014-05-27 16:46:53	il	oh shit that worked
2014-05-27 16:46:56	il	nope nvm
2014-05-27 16:47:14	offby1	il: how did it fail?
2014-05-27 16:47:14	keypusher	isn't openshift a red hat thing?
2014-05-27 16:47:31	keypusher	and it uses apt?
2014-05-27 16:47:38	<--	fission6 (~fission6@199.47.74.246) has quit (Quit: fission6)
2014-05-27 16:47:39	<--	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-05-27 16:47:41	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 255 seconds)
2014-05-27 16:48:04	il	with sudo apt-get install pandas I get - bash: /usr/bin/sudo: Permission denied (you had asked before)
2014-05-27 16:48:38	-->	Ephexeve (~benmezger@187.65.231.51) has joined #python
2014-05-27 16:48:40	wkmanire	il: Which OS are you using?
2014-05-27 16:48:43	-->	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 16:48:45	offby1	il: but I wanted to know how "pip install --user pandas" failed.
2014-05-27 16:48:52	il	And with pip install -user pandas I got - OSError: Errno 13 Permission denied var/lib/openshift/<my username>.pip
2014-05-27 16:48:58	il	--user*
2014-05-27 16:49:09	offby1	il: who are you logged in as?
2014-05-27 16:49:45	offby1	I suspect there's something weird with your box.  Must you use this strange machine which prevents you from becoming root?
2014-05-27 16:49:57	offby1	that's crazy in this the 21st century.
2014-05-27 16:50:04	<--	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Client Quit)
2014-05-27 16:50:12	il	its a long username full of numbers and letters, randomly generated
2014-05-27 16:50:25	-->	Mooash (~mooash@unaffiliated/mooash) has joined #python
2014-05-27 16:50:31	offby1	so?
2014-05-27 16:50:33	il	going to go to #openshift to see what's up
2014-05-27 16:50:35	wkmanire	24 1/2th CENTURY!
2014-05-27 16:50:39	<--	LordWillO (~LordWillO@cpe-76-188-188-110.neo.res.rr.com) has quit (Ping timeout: 252 seconds)
2014-05-27 16:50:45	<--	wwnnbb (~wwnnbb@85.112.113.2) has quit (Quit: wwnnbb)
2014-05-27 16:50:56	offby1	"The Hong Kong Cavaliers"
2014-05-27 16:51:03	<--	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-05-27 16:51:34	-->	tiwula (~lane@ip68-231-204-63.oc.oc.cox.net) has joined #python
2014-05-27 16:51:56	keypusher	are you sure it doesn't use yum?
2014-05-27 16:52:09	keypusher	i can't imagine a world in which red hat is running anything that involves apt
2014-05-27 16:52:18	-->	Bico_Fino (~Bico_Fino@189.102.89.66) has joined #python
2014-05-27 16:52:27	offby1	me neither
2014-05-27 16:52:45	il	apparently if i had sudo access i could edit other people's accounts
2014-05-27 16:52:45	<--	lyxus_ (~lyxus@cpe-198-72-209-168.socal.res.rr.com) has quit (Quit: lyxus_)
2014-05-27 16:52:46	-->	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 16:52:49	offby1	il: I suspect most of your problems have to do with you and your machine, and not Python so much.
2014-05-27 16:52:55	<--	naught101 (~naught101@123.208.14.196) has quit (Read error: Connection reset by peer)
2014-05-27 16:52:59	il	which isn't good
2014-05-27 16:53:02	il	for them anyway
2014-05-27 16:53:06	offby1	il: which is why these days people generally have a machine to themselves.
2014-05-27 16:53:19	keypusher	yes, there are good reasons you cannot become root on secure shared servers
2014-05-27 16:53:19	<--	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Write error: Connection reset by peer)
2014-05-27 16:53:20	offby1	timesharing was big in the 1960s, but now, not so much.
2014-05-27 16:53:27	offby1	Computers have gotten a bit cheaper in the last 50 years.
2014-05-27 16:53:42	-->	naught101 (~naught101@123.208.14.196) has joined #python
2014-05-27 16:53:57	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-27 16:54:05	-->	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 16:54:23	<--	tylrr (~textual@rrcs-173-197-114-202.west.biz.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-27 16:55:10	il	offby1, it's a long story why I'm using an open source server
2014-05-27 16:55:13	il	last minute thing
2014-05-27 16:55:14	AE7IK	Just a little...
2014-05-27 16:55:24	-->	jonanin (~Jonanin@2601:9:4680:d2c:3401:465c:73fa:726e) has joined #python
2014-05-27 16:55:40	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-27 16:55:41	offby1	AE7IK: why, back in 1970, it cost over $4 for a 20GB USB stick.  Can you imagine?
2014-05-27 16:55:49	<--	huza (~My@182.38.83.129) has quit (Quit: WeeChat 0.3.8)
2014-05-27 16:55:51	<--	IchEsseDichAuf (~grek@blfd-4db00242.pool.mediaWays.net) has quit (Quit: Leaving.)
2014-05-27 16:55:51	offby1	and $4 was worth more then than it is now.
2014-05-27 16:56:06	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 16:56:09	-->	faldridg_ (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-27 16:56:22	<--	huza (~My@182.38.83.129) has quit (Client Quit)
2014-05-27 16:56:42	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 16:56:46	-->	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has joined #python
2014-05-27 16:56:53	<--	bwreilly (~bwreilly@66.193.98.226) has quit (Ping timeout: 252 seconds)
2014-05-27 16:56:55	 *	AE7IK adds a few zeros to that figure. :)
2014-05-27 16:57:22	offby1	details
2014-05-27 16:57:24	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 16:57:31	offby1	what's a few orders of magnitude
2014-05-27 16:57:43	<--	alexsnake (~alexsnake@200.79.231.98) has quit (Remote host closed the connection)
2014-05-27 16:57:51	 *	offby1 invents a beer named "Magnitude" so that he can sit at a bar, and order a Magnitude
2014-05-27 16:57:52	 *	offby1 nods gravely 
2014-05-27 16:58:15	<--	cofi (~user@ip-95-223-13-237.unitymediagroup.de) has quit (Ping timeout: 252 seconds)
2014-05-27 16:59:31	<--	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-27 16:59:35	<--	huza (~My@182.38.83.129) has quit (Client Quit)
2014-05-27 16:59:45	--	wkmanire is now known as wkmanire_
2014-05-27 16:59:49	-->	cmheisel_ (~cheisel@z69-94-192-254.ips.direcpath.com) has joined #python
2014-05-27 17:00:05	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 17:00:18	-->	ifdef42 (~pepsi@134.134.139.74) has joined #python
2014-05-27 17:00:19	<--	jonanin (~Jonanin@2601:9:4680:d2c:3401:465c:73fa:726e) has quit (Ping timeout: 265 seconds)
2014-05-27 17:00:46	<--	faldridg_ (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-05-27 17:01:05	-->	mashin (~mooash@unaffiliated/mooash) has joined #python
2014-05-27 17:01:39	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-27 17:02:15	<--	dangayle (~dang@users.spokesman.com) has quit (Quit: dangayle)
2014-05-27 17:03:12	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-27 17:03:15	<--	cwc (~cwc@ec2-54-213-168-176.us-west-2.compute.amazonaws.com) has quit (Remote host closed the connection)
2014-05-27 17:03:16	-->	kl0__ (~void@unaffiliated/rf14) has joined #python
2014-05-27 17:03:50	<--	kl0_ (~void@unaffiliated/rf14) has quit (Ping timeout: 258 seconds)
2014-05-27 17:04:01	--	kl0__ is now known as kl0_
2014-05-27 17:04:32	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-27 17:04:35	<--	Mooash (~mooash@unaffiliated/mooash) has quit (Ping timeout: 252 seconds)
2014-05-27 17:04:51	<--	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-27 17:05:36	<--	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-05-27 17:05:38	-->	seanz (~seanz@2602:30a:2ca1:e700::17) has joined #python
2014-05-27 17:05:57	<--	huza (~My@182.38.83.129) has quit (Read error: Connection reset by peer)
2014-05-27 17:06:08	<--	seanz (~seanz@2602:30a:2ca1:e700::17) has left #python
2014-05-27 17:06:32	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 17:06:41	 *	nedbat watches the offby1 show....
2014-05-27 17:07:13	<--	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 17:07:48	<--	gkap (~gkap@c-71-237-208-229.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-27 17:08:49	<--	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 17:09:27	<--	knotti (~knotti@142.196.166.112) has quit (Ping timeout: 245 seconds)
2014-05-27 17:09:28	-->	cwc (~cwc@ec2-54-213-168-176.us-west-2.compute.amazonaws.com) has joined #python
2014-05-27 17:09:44	storrgie	Has anyone used requests to hit one of googles apis?
2014-05-27 17:09:57	<--	euxneks (~chris@unaffiliated/euxneks) has quit (Quit: Ex-Chat)
2014-05-27 17:10:14	-->	JamesNZ (~james@fedora/JamesNZ) has joined #python
2014-05-27 17:10:35	<--	[mda] (~daniel@bas1-newmarket85-3096616480.dsl.bell.ca) has quit (Quit: leaving)
2014-05-27 17:10:46	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2014-05-27 17:10:59	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 17:11:05	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 252 seconds)
2014-05-27 17:11:49	<--	Gambit- (~Gambit-@unaffiliated/gambit-) has quit (Ping timeout: 252 seconds)
2014-05-27 17:12:08	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-27 17:12:17	<--	Debnet (~marc@smtp2.sa-cim.fr) has quit (Ping timeout: 264 seconds)
2014-05-27 17:12:56	-->	Debnet (~marc@smtp2.sa-cim.fr) has joined #python
2014-05-27 17:14:07	-->	Mellified_Man (~Mellified@eddie.mellified.com) has joined #python
2014-05-27 17:14:08	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-27 17:15:02	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-27 17:15:29	<--	spal (~susam@pdpc/supporter/active/spal) has quit (Read error: Connection reset by peer)
2014-05-27 17:15:33	nedbat	storrgie: in IRC, it's best just to ask your real question, rather than a preliminary like that.
2014-05-27 17:15:36	-->	n_k (~nkumar@198.187.190.223) has joined #python
2014-05-27 17:15:43	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 258 seconds)
2014-05-27 17:15:55	-->	galactic_pretty_ (~aaa@210.223.154.133) has joined #python
2014-05-27 17:15:58	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-27 17:16:47	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 17:17:41	<--	Cruwer (~cruwer@201.21.8.145) has quit (Ping timeout: 264 seconds)
2014-05-27 17:18:53	<--	wleslie (~verte@python/site-packages/verte) has quit (Ping timeout: 264 seconds)
2014-05-27 17:19:09	-->	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has joined #python
2014-05-27 17:19:14	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2014-05-27 17:20:08	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 265 seconds)
2014-05-27 17:20:12	<--	mon5ter (~utilita@91-66-183-218-dynip.superkabel.de) has quit
2014-05-27 17:20:40	<--	codeitloadit (~codeitloa@wsip-68-225-25-202.oc.oc.cox.net) has quit
2014-05-27 17:21:24	<--	huza (~My@182.38.83.129) has quit (Quit: WeeChat 0.3.8)
2014-05-27 17:21:26	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 255 seconds)
2014-05-27 17:21:41	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 17:22:09	-->	codeitloadit (~codeitloa@wsip-68-225-25-202.oc.oc.cox.net) has joined #python
2014-05-27 17:23:17	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 252 seconds)
2014-05-27 17:23:32	-->	Nine_9 (~quassel@177.68.181.95) has joined #python
2014-05-27 17:23:41	<--	mashin (~mooash@unaffiliated/mooash) has quit (Ping timeout: 255 seconds)
2014-05-27 17:23:46	-->	JerryT (~jerryt@ip24-252-42-26.om.om.cox.net) has joined #python
2014-05-27 17:23:48	-->	LordWillO (~LordWillO@cpe-76-188-188-110.neo.res.rr.com) has joined #python
2014-05-27 17:24:12	<--	JerryT (~jerryt@ip24-252-42-26.om.om.cox.net) has quit (Max SendQ exceeded)
2014-05-27 17:24:20	-->	phantomx013 (63e57dd7@gateway/web/freenode/ip.99.229.125.215) has joined #python
2014-05-27 17:25:17	<--	ixti (~ixti@77.226.194.200) has quit (Ping timeout: 245 seconds)
2014-05-27 17:25:21	-->	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-27 17:25:28	-->	jchysk (~yo@wsip-24-234-185-148.lv.lv.cox.net) has joined #python
2014-05-27 17:25:46	<--	eataix (sid16964@gateway/web/irccloud.com/x-tuxuplqwcaekrldl) has quit
2014-05-27 17:26:12	-->	johnkevinmbasco (~johnkevin@125.212.122.71) has joined #python
2014-05-27 17:26:37	-->	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has joined #python
2014-05-27 17:26:38	-->	FreezingCold (~FreezingC@135.0.41.14) has joined #python
2014-05-27 17:26:40	--	Joe_knock is now known as Joe_knock_ITZ_
2014-05-27 17:27:04	<--	Zeedox_ (~quassel@h-141-127.a176.priv.bahnhof.se) has quit (Remote host closed the connection)
2014-05-27 17:27:45	-->	Jucato (~jucato@kde/developer/jucato) has joined #python
2014-05-27 17:28:14	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-27 17:28:15	<--	cesar_bo (uid17588@gateway/web/irccloud.com/x-zkwfpryxuexglrzu) has quit (Quit: Connection closed for inactivity)
2014-05-27 17:29:11	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-27 17:29:18	<--	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 17:30:05	--	motsu|away is now known as motsu
2014-05-27 17:31:20	-->	spal (~susam@pdpc/supporter/active/spal) has joined #python
2014-05-27 17:32:12	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-27 17:32:23	-->	Mooash (~mooash@unaffiliated/mooash) has joined #python
2014-05-27 17:33:03	<--	huza (~My@182.38.83.129) has quit (Quit: WeeChat 0.3.8)
2014-05-27 17:33:04	-->	jonanin (~Jonanin@2601:9:4680:d2c:3401:465c:73fa:726e) has joined #python
2014-05-27 17:33:26	-->	huza (~My@182.38.83.129) has joined #python
2014-05-27 17:33:39	<--	tedoc2000 (~tedoc2000@2001:4998:effd:600:808c:d6c4:5610:c4b3) has quit (Remote host closed the connection)
2014-05-27 17:33:44	<--	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has quit
2014-05-27 17:33:58	-->	tedoc2000 (~tedoc2000@2001:4998:effd:600:808c:d6c4:5610:c4b3) has joined #python
2014-05-27 17:34:56	<--	Burrito (~Burrito@unaffiliated/burrito) has quit (Quit: Leaving)
2014-05-27 17:35:48	<--	huza (~My@182.38.83.129) has quit (Client Quit)
2014-05-27 17:36:10	-->	tedoc200_ (~tedoc2000@nat/yahoo/x-ocdfolaqwkwoxvun) has joined #python
2014-05-27 17:37:20	-->	lyxus_ (~lyxus@172.56.41.69) has joined #python
2014-05-27 17:37:21	-->	Leeds (~richardc@n112118156036.netvigator.com) has joined #python
2014-05-27 17:37:41	-->	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-27 17:38:20	<--	wleslie (~verte@python/site-packages/verte) has quit (Ping timeout: 258 seconds)
2014-05-27 17:38:20	<--	johnkevinmbasco (~johnkevin@125.212.122.71) has quit (Ping timeout: 255 seconds)
2014-05-27 17:38:41	<--	tedoc2000 (~tedoc2000@2001:4998:effd:600:808c:d6c4:5610:c4b3) has quit (Ping timeout: 264 seconds)
2014-05-27 17:38:48	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-27 17:39:39	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2014-05-27 17:40:21	-->	vlcn (~vulcan@znc.forkwhilefork.com) has joined #python
2014-05-27 17:40:23	-->	giampaolo (~giampaolo@ppp-149-239.32-151.iol.it) has joined #python
2014-05-27 17:41:01	<--	nedbat (~nedbat@python/psf/nedbat) has quit
2014-05-27 17:41:29	<--	CrazyWoods (~nowolfer@61.131.72.115) has quit (Quit: leaving)
2014-05-27 17:41:43	<--	kenbolton (~kenbolton@ool-4350648f.dyn.optonline.net) has quit (Quit: kenbolton)
2014-05-27 17:41:48	<--	rocky (~rocky@crbknf0209w-142162011178.dhcp-dynamic.FibreOp.nl.bellaliant.net) has quit (Ping timeout: 240 seconds)
2014-05-27 17:41:57	-->	JerryT (~jerryt@ip24-252-42-26.om.om.cox.net) has joined #python
2014-05-27 17:43:15	<--	agrajag42 (uid27336@gateway/web/irccloud.com/x-esjaozfopkbeqkya) has quit (Quit: Connection closed for inactivity)
2014-05-27 17:44:08	-->	kenbolton (~kenbolton@ool-4350648f.dyn.optonline.net) has joined #python
2014-05-27 17:45:13	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 17:46:00	-->	Zigtalk (~Zigtalk@cpe-72-182-60-182.austin.res.rr.com) has joined #python
2014-05-27 17:46:18	-->	heedypo1 (~heedypo@user-5af4a188.broadband.tesco.net) has joined #python
2014-05-27 17:47:16	-->	cesar_bo (uid17588@gateway/web/irccloud.com/x-yogarlvtxaqoytdj) has joined #python
2014-05-27 17:47:30	-->	thinkxl (~Adium@ip-64-134-24-164.public.wayport.net) has joined #python
2014-05-27 17:47:33	<--	thinkxl (~Adium@ip-64-134-24-164.public.wayport.net) has quit (Max SendQ exceeded)
2014-05-27 17:47:54	-->	thinkxl (~Adium@ip-64-134-24-164.public.wayport.net) has joined #python
2014-05-27 17:47:57	<--	thinkxl (~Adium@ip-64-134-24-164.public.wayport.net) has quit (Max SendQ exceeded)
2014-05-27 17:48:17	-->	thinkxl (~Adium@ip-64-134-24-164.public.wayport.net) has joined #python
2014-05-27 17:48:49	<--	marr (~ccc@dynamic-78-9-134-228.ssp.dialog.net.pl) has quit (Ping timeout: 276 seconds)
2014-05-27 17:48:49	-->	plutoniix (~plutoniix@210.213.57.70) has joined #python
2014-05-27 17:49:03	Ephexeve	Hey guys, is there a way I can fill a web registration from using a python bot (for example), is there anyway I can fill the form and submit it?
2014-05-27 17:49:24	<--	lyxus_ (~lyxus@172.56.41.69) has quit (Quit: lyxus_)
2014-05-27 17:49:40	<--	motsu (motsu35@2604:180:1::ec72:b654) has left #python ("Konversation terminated!")
2014-05-27 17:50:06	<--	ASUChander (~asuchande@cpe-071-070-224-227.nc.res.rr.com) has quit
2014-05-27 17:50:13	galactic_pretty_	fjdlfjdlka
2014-05-27 17:51:18	-->	Brackson (~Brackson@72.168.136.9) has joined #python
2014-05-27 17:51:19	<--	mission (~mission@unaffiliated/mission) has quit (Remote host closed the connection)
2014-05-27 17:51:58	-->	toordog (~toordog@unaffiliated/toordog) has joined #python
2014-05-27 17:52:10	wleslie	Ephexeve: form posts are pretty straightforward, you can do it with urllib - take a look at the module documentation.
2014-05-27 17:52:53	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Ping timeout: 252 seconds)
2014-05-27 17:53:15	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 252 seconds)
2014-05-27 17:53:38	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Quit: aljohri)
2014-05-27 17:53:43	VooDooNOFX	Ephexeve: you can also do it with the superior requests library if you don't mind a 3rd party library.
2014-05-27 17:53:49	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-27 17:54:21	-->	ZombieFeynman (~ZombieFey@wsip-70-166-123-110.ph.ph.cox.net) has joined #python
2014-05-27 17:54:25	-->	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has joined #python
2014-05-27 17:54:45	wleslie	Ephexeve: you will need to look at the page source, examine the <form> tag and the name='' attribute of the various inputs.
2014-05-27 17:54:53	<--	Infant (~thomas@78-56-194-78.static.zebra.lt) has quit (Quit: Leaving)
2014-05-27 17:55:18	<--	tedoc200_ (~tedoc2000@nat/yahoo/x-ocdfolaqwkwoxvun) has quit (Ping timeout: 240 seconds)
2014-05-27 17:55:49	--	zz_swebb is now known as swebb
2014-05-27 17:55:58	Ephexeve	wleslie: Indeed.. That's the problem..
2014-05-27 17:56:28	Ephexeve	VooDooNOFX: yes, requests kick ass, I checked mechanize also. But it's difficult to know every site, since they always have different form tags :(
2014-05-27 17:56:44	<--	codex0 (~anonymous@173.254.199.83) has quit (Quit: codex0)
2014-05-27 17:57:53	<--	ZombieFe_ (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has quit (Ping timeout: 255 seconds)
2014-05-27 17:58:58	<--	galactic_pretty_ (~aaa@210.223.154.133) has quit (Ping timeout: 240 seconds)
2014-05-27 17:59:10	-->	Arctico (~Arctico@12.175.218.87.dynamic.jazztel.es) has joined #python
2014-05-27 18:00:01	<--	eliezerfot123 (~Thunderbi@200.109.52.175) has quit (Quit: eliezerfot123)
2014-05-27 18:00:09	<--	vlcn (~vulcan@znc.forkwhilefork.com) has left #python ("Textual IRC Client: www.textualapp.com")
2014-05-27 18:00:36	<--	LordWillO (~LordWillO@cpe-76-188-188-110.neo.res.rr.com) has quit (Quit: Leaving)
2014-05-27 18:00:57	<--	flubby_nanabo (~flubby_na@unaffiliated/tonnynerd) has quit (Ping timeout: 252 seconds)
2014-05-27 18:01:32	-->	czapla (~czapla@2a02:8109:8380:1298:91ee:a5ce:9a33:7ada) has joined #python
2014-05-27 18:01:39	--	spec_ed is now known as ed_spec_away
2014-05-27 18:01:59	wleslie	well yes, it's like the fact that you can't call a function if you don't know what arguments it takes
2014-05-27 18:02:40	<--	naught101 (~naught101@123.208.14.196) has quit (Ping timeout: 265 seconds)
2014-05-27 18:03:27	<--	cmheisel_ (~cheisel@z69-94-192-254.ips.direcpath.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-27 18:03:48	<--	shello (~shello@bl13-12-124.dsl.telepac.pt) has quit (Quit: shello)
2014-05-27 18:04:24	-->	claptor (~avarice@107-134-134-100.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-27 18:04:26	-->	shunya_chakra (~shunya@117.200.76.248) has joined #python
2014-05-27 18:05:58	<--	kenbolton (~kenbolton@ool-4350648f.dyn.optonline.net) has quit (Quit: kenbolton)
2014-05-27 18:06:45	-->	mpking (~mpking@c-68-35-34-147.hsd1.nm.comcast.net) has joined #python
2014-05-27 18:07:10	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-27 18:07:12	<--	codeitloadit (~codeitloa@wsip-68-225-25-202.oc.oc.cox.net) has quit
2014-05-27 18:07:27	<--	cshell (~cshell@167.220.26.234) has quit (Quit: cshell)
2014-05-27 18:07:34	<--	Brando753 (~Brando753@unaffiliated/brando753) has quit (Ping timeout: 240 seconds)
2014-05-27 18:08:08	Ephexeve	indeed
2014-05-27 18:08:34	<--	TCubed (~Adium@173-8-22-181-WashingtonDC.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2014-05-27 18:08:34	<--	winny (~winny@mirbsd/mksh-user/winstonw) has quit (Ping timeout: 240 seconds)
2014-05-27 18:08:38	-->	HowardwLo (~HowardwLo@c-98-207-232-11.hsd1.ca.comcast.net) has joined #python
2014-05-27 18:08:54	<--	joshfinnie (~joshfinni@192.241.179.87) has quit (Ping timeout: 240 seconds)
2014-05-27 18:08:54	<--	mfisher (~mfisher@snowyinn.nsa.org) has quit (Ping timeout: 240 seconds)
2014-05-27 18:08:54	<--	martian (~martian@107.170.126.126) has quit (Ping timeout: 240 seconds)
2014-05-27 18:08:57	<--	Vutral (~ss@mirbsd/special/Vutral) has quit (Ping timeout: 265 seconds)
2014-05-27 18:09:11	HowardwLo	whats it called when you turn a url http://google.com into http%3A%F%Fgoogle.com   ? (not accurate)
2014-05-27 18:09:14	<--	dancat (~dan@198.199.94.106) has quit (Ping timeout: 240 seconds)
2014-05-27 18:09:18	<--	guilhermebr (~guilherme@179.182.195.22) has quit (Remote host closed the connection)
2014-05-27 18:09:45	<--	flexd (~flexd@hydra.cognitive.io) has quit (Ping timeout: 252 seconds)
2014-05-27 18:09:51	JodaZ	HowardwLo, urlencoding
2014-05-27 18:10:00	-->	winny (~winny@mirbsd/mksh-user/winstonw) has joined #python
2014-05-27 18:10:00	HowardwLo	JodaZ: encoding, thanks
2014-05-27 18:10:17	<--	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-27 18:10:32	<--	toordog (~toordog@unaffiliated/toordog) has quit (Read error: Connection reset by peer)
2014-05-27 18:10:40	HowardwLo	JodaZ: urllib.quote yes?
2014-05-27 18:10:40	-->	mfisher (~mfisher@snowyinn.nsa.org) has joined #python
2014-05-27 18:10:53	-->	toordog (~toordog@unaffiliated/toordog) has joined #python
2014-05-27 18:11:33	shunya_chakra	Hi, in python which one is better to use camelcase or underscore convention...
2014-05-27 18:11:34	<--	czapla (~czapla@2a02:8109:8380:1298:91ee:a5ce:9a33:7ada) has quit (Remote host closed the connection)
2014-05-27 18:11:35	JodaZ	HowardwLo, yes, but if you are doing http requests i suggest you use the requests module, it does all of this by itself
2014-05-27 18:11:51	HowardwLo	JodaZ: ah ok, i’ll check it out. thank you
2014-05-27 18:12:13	JodaZ	HowardwLo, it is really 10x better than any other way to do http stuff in python
2014-05-27 18:12:30	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-27 18:12:37	-->	flexd (~flexd@hydra.cognitive.io) has joined #python
2014-05-27 18:12:41	<--	ulkesh (~ulkesh@107.170.45.219) has quit (Ping timeout: 252 seconds)
2014-05-27 18:12:47	HowardwLo	JodaZ: even if i just need to convert a URL into an encoded version?
2014-05-27 18:12:54	-->	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has joined #python
2014-05-27 18:13:07	-->	introom (~introom@wf077-078.ust.hk) has joined #python
2014-05-27 18:13:31	JodaZ	HowardwLo, you rarely should need to do that manually
2014-05-27 18:13:38	-->	Brando753 (~Brando753@unaffiliated/brando753) has joined #python
2014-05-27 18:13:48	HowardwLo	JodaZ: i’m building an affiliate link
2014-05-27 18:13:55	JodaZ	HowardwLo, are you outputting this to html?
2014-05-27 18:13:56	HowardwLo	and they require me to encode the url
2014-05-27 18:14:11	-->	ulkesh (~ulkesh@107.170.45.219) has joined #python
2014-05-27 18:14:32	<--	SevenWolf (~SevenWolf@unaffiliated/sevenwolf) has quit (Ping timeout: 255 seconds)
2014-05-27 18:15:22	-->	SevenWolf (~SevenWolf@unaffiliated/sevenwolf) has joined #python
2014-05-27 18:15:37	JodaZ	HowardwLo, you do this encoding for something you use as a url parameter, not for the whole url
2014-05-27 18:15:51	HowardwLo	JodaZ: oh. is there a method to convert the whole url?
2014-05-27 18:16:20	JodaZ	HowardwLo, i don't know what you are trying to do
2014-05-27 18:16:25	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-27 18:16:34	-->	Vutral (~ss@mirbsd/special/Vutral) has joined #python
2014-05-27 18:16:43	HowardwLo	JodaZ: http://urlencode.org/ that, but in python
2014-05-27 18:16:53	--	Auv is now known as AuvIsWonderful
2014-05-27 18:16:54	JodaZ	HowardwLo, if you go like ads.com/fu.php?ref=http%3A%F%Fgoogle.com
2014-05-27 18:16:56	--	AuvIsWonderful is now known as Auv
2014-05-27 18:16:59	wleslie	shunya_chakra: many people base style off this: https://www.python.org/dev/peps/pep-0008
2014-05-27 18:17:16	HowardwLo	JodaZ: ya, something like that
2014-05-27 18:17:16	<--	the_rat (~the_rat@217.200.185.195) has quit (Read error: Connection reset by peer)
2014-05-27 18:17:30	HowardwLo	JodaZ: i need to encode a url, and append to ads.com/fu.php?ref=  …
2014-05-27 18:17:32	<--	wleslie (~verte@python/site-packages/verte) has quit (Read error: Connection reset by peer)
2014-05-27 18:17:40	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 18:17:48	JodaZ	HowardwLo, yeah, that should be fine...
2014-05-27 18:18:00	-->	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has joined #python
2014-05-27 18:18:06	JodaZ	"ads.com/fu.php?ref="+urllib.quote(
2014-05-27 18:19:32	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-27 18:19:33	-->	knapper_tech (~knapper_t@p6115-ipngn4801marunouchi.tokyo.ocn.ne.jp) has joined #python
2014-05-27 18:19:37	-->	saml_ (~saml@pool-71-190-4-101.nycmny.east.verizon.net) has joined #python
2014-05-27 18:21:01	<--	ecool (~ecool@ip68-13-123-60.om.om.cox.net) has quit (Quit: WeeChat 0.4.3)
2014-05-27 18:21:05	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 255 seconds)
2014-05-27 18:21:33	-->	moqca (94e782ac@gateway/web/freenode/ip.148.231.130.172) has joined #python
2014-05-27 18:21:48	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 240 seconds)
2014-05-27 18:22:40	-->	rawfodog (~rawfodog@bas8-montreal28-845454797.dsl.bell.ca) has joined #python
2014-05-27 18:22:53	HowardwLo	JodaZ: ah ok, thanks
2014-05-27 18:23:02	moqca	I have a class that reads some financial data from DBF files.  I want to be able to "query" the data, however I want the arguments to be optional, where if the argument is not provided it returns everything     http://bpaste.net/show/28VCNFnaoj0iYl78etjd/     on the make aux function
2014-05-27 18:23:11	<--	mulander (uid1766@gateway/web/irccloud.com/x-jdjcjbowrklwjrmj) has quit (Quit: Connection closed for inactivity)
2014-05-27 18:23:18	-->	ecool (~ecool@ip68-13-123-60.om.om.cox.net) has joined #python
2014-05-27 18:23:38	moqca	How can I do it such that some arguments are optional withouth having to write a ton of if statements?
2014-05-27 18:23:49	shunya_chakra	thanks wleslie
2014-05-27 18:23:54	-->	bhamhawker (~bhamhawke@pool-173-65-120-45.tampfl.fios.verizon.net) has joined #python
2014-05-27 18:24:41	<--	dcrosta_ (~dcrosta@pool-173-68-28-178.nycmny.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-27 18:25:21	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 18:26:19	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-27 18:26:36	<--	nero (~nero@unaffiliated/nero) has quit (Ping timeout: 240 seconds)
2014-05-27 18:26:42	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-27 18:26:42	-->	ZombieFe_ (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has joined #python
2014-05-27 18:27:53	-->	ChronosA (~Fake@unaffiliated/chronosa) has joined #python
2014-05-27 18:29:01	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-27 18:29:23	<--	DaEvil1 (~DaEvil1@ti0004a400-0098.bb.online.no) has quit
2014-05-27 18:30:02	-->	thesheff17 (~thesheff1@2600:1008:b00b:ceb4:79b8:8e8a:6e38:3a0a) has joined #python
2014-05-27 18:30:17	<--	ZombieFeynman (~ZombieFey@wsip-70-166-123-110.ph.ph.cox.net) has quit (Ping timeout: 252 seconds)
2014-05-27 18:30:19	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined #python
2014-05-27 18:30:22	-->	porkshoulder (~naegelejd@c-68-55-37-146.hsd1.md.comcast.net) has joined #python
2014-05-27 18:30:54	-->	alemedeiros (~alemedeir@187.10.22.149) has joined #python
2014-05-27 18:32:14	-->	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has joined #python
2014-05-27 18:32:22	<--	porkshoulder (~naegelejd@c-68-55-37-146.hsd1.md.comcast.net) has left #python
2014-05-27 18:32:36	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 18:32:54	-->	Ariel_Calzada (~aricalso@201.216.0.73) has joined #python
2014-05-27 18:33:12	-->	manizzle (~manizzle@107-220-114-180.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-27 18:34:03	-->	guilhermebr (~guilherme@179.182.195.22) has joined #python
2014-05-27 18:34:34	<--	crisisking (~too_many_@deadpope.somethingdead.com) has quit (Ping timeout: 240 seconds)
2014-05-27 18:34:55	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 18:35:17	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 245 seconds)
2014-05-27 18:36:12	<--	bhamhawker (~bhamhawke@pool-173-65-120-45.tampfl.fios.verizon.net) has quit (Quit: bhamhawker)
2014-05-27 18:36:18	-->	crisisking (~too_many_@deadpope.somethingdead.com) has joined #python
2014-05-27 18:36:40	-->	magicflakes (~cellopin@202.78.127.130) has joined #python
2014-05-27 18:36:54	<--	Terminus- (~null@unaffiliated/terminus) has quit (Ping timeout: 240 seconds)
2014-05-27 18:36:54	<--	jbhatta (~med@ocelotent.com) has quit (Ping timeout: 240 seconds)
2014-05-27 18:37:16	-->	jr3_ (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-27 18:38:09	-->	Terminus- (~null@unaffiliated/terminus) has joined #python
2014-05-27 18:38:11	jr3_	question, I need to sort a list of dates, e.g, Jan 1, 2014, Dec 22, 2012, .... without using any date classes.
2014-05-27 18:38:19	<--	Nine_9 (~quassel@177.68.181.95) has quit (Remote host closed the connection)
2014-05-27 18:38:44	jr3_	I thought about parsing out the month,day,year and running a calc from unix epoch then storing that integer and then sorting on that
2014-05-27 18:38:57	<--	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has quit (Quit: Leaving)
2014-05-27 18:39:22	jr3_	I'm curious if anyone can comment on my approach?
2014-05-27 18:40:16	offby1	jr3_: my comment is: what have you got against date classes?
2014-05-27 18:40:35	jr3_	offby1: it's a challenge ive been given heh
2014-05-27 18:40:52	<--	Vutral (~ss@mirbsd/special/Vutral) has quit (Quit: Life is too short)
2014-05-27 18:41:18	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-27 18:41:50	<--	someprimetime (~someprime@nextdoor.static.monkeybrains.net) has quit (Quit: someprimetime)
2014-05-27 18:41:58	<--	kl0_ (~void@unaffiliated/rf14) has quit (Ping timeout: 258 seconds)
2014-05-27 18:42:00	-->	TCubed (~Adium@ip70-174-167-244.dc.dc.cox.net) has joined #python
2014-05-27 18:42:18	<--	tensorpudding (~tensorpud@99.102.69.122) has quit (Ping timeout: 265 seconds)
2014-05-27 18:43:00	<--	ZombieFe_ (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has quit (Ping timeout: 240 seconds)
2014-05-27 18:43:10	-->	andkenneth (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has joined #python
2014-05-27 18:43:12	VooDooNOFX	jr3_: How is the sorted data getting to you? ints, strings, etc?
2014-05-27 18:43:26	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 18:43:34	<--	guilhermebr (~guilherme@179.182.195.22) has quit (Remote host closed the connection)
2014-05-27 18:43:57	<--	ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 252 seconds)
2014-05-27 18:44:04	-->	tensorpudding (~tensorpud@99.102.69.122) has joined #python
2014-05-27 18:44:15	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Read error: Connection reset by peer)
2014-05-27 18:44:48	jr3_	VooDooNOFX: I'm not sure what you mean, but I figured I'd foreach date string parse and calc the days since unix epoch into k/v structure, then sort on the value
2014-05-27 18:44:57	moqca	Alright, I got this http://bpaste.net/show/ibC79lMfsAxPfsoQca1o/  which filters data dynamically based on arguments provided. If I wanted to filter said data for example, between 2 vals:    1000<x<2000, how could I do it?
2014-05-27 18:45:29	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 18:45:30	VooDooNOFX	jr3_: I mean, what type of date formats are you expecting to parse? "Jan 01, 1970" and "01/01/1970", or just one.
2014-05-27 18:45:36	-->	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has joined #python
2014-05-27 18:46:12	-->	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has joined #python
2014-05-27 18:46:22	jr3_	ahh so: "Jan 1, 1970"  -- so first 3 letters then day from 1-31 no leading 0 and then the year
2014-05-27 18:46:28	VooDooNOFX	moqca: you don't need to iterate over kwargs.keys(). You can just iterate over kwargs (which returns the keys automatically). However, it's usually best to iterate over kwargs.iteritems().
2014-05-27 18:46:29	<--	yaw (~yaw@41.215.169.74) has quit (Ping timeout: 264 seconds)
2014-05-27 18:46:35	jr3_	4 digit year
2014-05-27 18:46:39	-->	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has joined #python
2014-05-27 18:46:53	-->	atolani (Arpit@nat/redhat/x-sjhwhegkinxlvnfn) has joined #python
2014-05-27 18:46:59	jr3_	actually k/v wont work since there can be duplicate dates?
2014-05-27 18:47:11	<--	mathemancer (~mathemanc@66.85.135.66) has quit (Quit: leaving)
2014-05-27 18:47:27	-->	mathemancer (~mathemanc@66.85.135.66) has joined #python
2014-05-27 18:47:27	-->	Vutral (~ss@mirbsd/special/Vutral) has joined #python
2014-05-27 18:47:35	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-27 18:47:48	<--	keepguessing (48346013@gateway/web/freenode/ip.72.52.96.19) has quit (Ping timeout: 240 seconds)
2014-05-27 18:48:06	VooDooNOFX	jr3_: then your approach is likely good. convert each string to an int (using some mapping). What are you expecting to get out of something like "Jan 2nd, 1970" using your parser?
2014-05-27 18:49:18	-->	Moor (~Moor@73.189.94.25) has joined #python
2014-05-27 18:49:34	jr3_	VooDooNOFX: so I figured I would calculate the distance from Unix Epoch in days, so for instance for "Jan 2, 1970" would return 1 day, I would store that returned day some how then sort on it so I get a sorted date list
2014-05-27 18:49:40	moqca	VooDooNOFX: thanks, I'll change my code. Do you have an idea on how I could approach my problem?
2014-05-27 18:49:50	VooDooNOFX	jr3_: To see how the datetime module does it, you can see the C source (http://svn.python.org/projects/python/trunk/Modules/datetimemodule.c). Look for the datetime_strptime function.
2014-05-27 18:50:08	<--	thinkxl (~Adium@ip-64-134-24-164.public.wayport.net) has quit (Quit: Leaving.)
2014-05-27 18:50:51	-->	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has joined #python
2014-05-27 18:50:54	VooDooNOFX	moqca: I can't tell what you're trying to do here. Can you explain it better. Also, pastebin your modified code, which might help us understand it better.
2014-05-27 18:51:58	<--	shadowe989 (~shadowe98@74-32-109-176.dr01.rmny.wv.frontiernet.net) has quit (Ping timeout: 265 seconds)
2014-05-27 18:52:12	-->	ValicekB (~tbox@dot.snat.baz.cz) has joined #python
2014-05-27 18:52:19	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 240 seconds)
2014-05-27 18:52:42	VooDooNOFX	jr3_: You need to identify some resolution of time. the builtin uses microseconds I believe. So your result of "1 day" is actually 86400 seconds.
2014-05-27 18:53:04	<--	kevlarman (~roman@tremulous/officialdevannoyer/kevlarman) has quit (Quit: Lost terminal)
2014-05-27 18:53:05	<--	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has quit (Ping timeout: 258 seconds)
2014-05-27 18:53:27	-->	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has joined #python
2014-05-27 18:53:32	<--	smue (~smue@gateway/tor-sasl/smue) has quit (Ping timeout: 272 seconds)
2014-05-27 18:53:44	VooDooNOFX	jr3_: if your resolution of time is 1 second that is...
2014-05-27 18:54:06	<--	rawfodog (~rawfodog@bas8-montreal28-845454797.dsl.bell.ca) has quit (Quit: Ex-Chat)
2014-05-27 18:54:53	jr3_	my resolution can be in days, does that make sense
2014-05-27 18:55:09	jr3_	I'm not considered with hours,minutes,seconds
2014-05-27 18:55:17	moqca	VooDooNOFX: http://bpaste.net/show/TcmZxAZMAkOrB1TibtCb/
2014-05-27 18:55:22	moqca	I hope thats a bit clearer
2014-05-27 18:55:52	VooDooNOFX	jr3_: Ok, that makes it easier then. Map the month strings to an int, then you're applying a weight to each field.
2014-05-27 18:56:11	-->	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has joined #python
2014-05-27 18:56:19	<--	Setsuako (~setsuako@unaffiliated/setsuako) has quit (Ping timeout: 240 seconds)
2014-05-27 18:56:23	VooDooNOFX	jr3_: days get a weight of 1, months get a weight of 12, years get 365.25, etc. then your just doing math.
2014-05-27 18:56:30	-->	koz (~koz@2601:8:a900:88a:1e6f:65ff:fe31:7fcb) has joined #python
2014-05-27 18:56:30	offby1	jr3_: if all you need to do is sort, I'd just convert each month into two digits -- january being 01, dec being 12 -- then rearrange the stuff so it's year-month-day, make sure the day is zero-padded, then just sort lexicographically.
2014-05-27 18:56:47	offby1	basically, convert the date to iso8601.
2014-05-27 18:56:51	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-27 18:57:07	offby1	jr3_: http://xkcd.com/1179/
2014-05-27 18:57:19	-->	smue (~smue@gateway/tor-sasl/smue) has joined #python
2014-05-27 18:57:26	jr3_	yea! I'm new to python, so this is a challenge
2014-05-27 18:57:38	offby1	should be easy.
2014-05-27 18:57:41	<--	Stealth (stealth@sourcemage/archon/stealth) has quit (Ping timeout: 252 seconds)
2014-05-27 18:57:44	offby1	for some value of "easy":-)
2014-05-27 18:58:08	-->	yaw (~yaw@41.215.170.16) has joined #python
2014-05-27 18:58:12	-->	amstan (~alex@aichallenge/admin/amstan) has joined #python
2014-05-27 18:58:20	jr3_	haha, it's funny how things are easy until you get into them
2014-05-27 18:58:29	VooDooNOFX	moqca: you would add a line at 17. if val lower_limit < x < higher_limit:
2014-05-27 18:58:30	<--	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has quit
2014-05-27 18:58:32	-->	boris317 (~boris317@unaffiliated/boris317) has joined #python
2014-05-27 18:58:36	<--	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has quit (Remote host closed the connection)
2014-05-27 18:58:43	VooDooNOFX	moqca: Of course, you need to define those limits elsewhere above that line.
2014-05-27 18:58:47	<--	klep (~klep@pdpc/supporter/active/klep) has quit (Ping timeout: 252 seconds)
2014-05-27 18:59:26	moqca	hmm, so I could read that off kwargs normally, right?
2014-05-27 18:59:38	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-27 19:00:27	moqca	Ahh, so I can still do the same thing and it wont matter if it does a second pass over the limits since it will return the same data
2014-05-27 19:00:40	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-27 19:00:45	shunya_chakra	At last now i got the good grasp in collections :)
2014-05-27 19:00:53	-->	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has joined #python
2014-05-27 19:01:08	<--	z0ran (~z0ran@gateway/tor-sasl/z0ran) has quit (Ping timeout: 272 seconds)
2014-05-27 19:01:14	-->	bwreilly (~bwreilly@50.106.46.213) has joined #python
2014-05-27 19:01:14	-->	tyll_ (~till@fedora/tyll) has joined #python
2014-05-27 19:01:20	<--	nitro25 (~nitro25@cpe-66-66-232-241.rochester.res.rr.com) has quit (Quit: end of line...)
2014-05-27 19:01:28	<--	bwreilly (~bwreilly@50.106.46.213) has quit (Remote host closed the connection)
2014-05-27 19:01:31	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Ping timeout: 258 seconds)
2014-05-27 19:01:49	VooDooNOFX	moqca: Let me get this right. You want some way to filter the data sets on multiple value limits at once without the generic function having to implement a huge if, elif, else type of structure?
2014-05-27 19:01:55	-->	bwreilly (~bwreilly@50.106.46.213) has joined #python
2014-05-27 19:02:27	-->	aledista (~aledista@c-50-140-175-239.hsd1.il.comcast.net) has joined #python
2014-05-27 19:02:31	-->	Stealth (stealth@sourcemage/archon/stealth) has joined #python
2014-05-27 19:02:33	<--	Samb1 (~Sammysama@2001:8b0:856:1:6627:37ff:fe35:ddc1) has quit (Ping timeout: 252 seconds)
2014-05-27 19:02:35	moqca	yes
2014-05-27 19:02:51	VooDooNOFX	moqca: then you want a list of anonymous functions that your function can test each value by
2014-05-27 19:02:58	VooDooNOFX	moqca: They're also called lambdas.
2014-05-27 19:03:27	-->	Guest36550 (aww@awwcookies.com) has joined #python
2014-05-27 19:04:04	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-128.dynamic.uwaterloo.ca) has joined #python
2014-05-27 19:04:18	<--	tyll (~till@fedora/tyll) has quit (Ping timeout: 240 seconds)
2014-05-27 19:04:30	--	Joe_knock_ITZ_ is now known as Joe_knock
2014-05-27 19:04:31	jr3_	offby1: the only issue is that the dates need to follow the same format
2014-05-27 19:04:35	<--	Guest36550 (aww@awwcookies.com) has quit (Quit: ZNC - http://znc.in)
2014-05-27 19:04:47	Joe_knock	What algorithms might one use in a web framework?
2014-05-27 19:04:50	jr3_	I would need to convert them back after theyre sorted to a format like "Jan 1, 2014"
2014-05-27 19:05:00	-->	pybokeh (~pyb0k3h@2605:a000:1104:aa:a060:5268:d58e:64b2) has joined #python
2014-05-27 19:05:04	<--	aledista (~aledista@c-50-140-175-239.hsd1.il.comcast.net) has quit (Client Quit)
2014-05-27 19:05:05	-->	Aww (aww@awwcookies.com) has joined #python
2014-05-27 19:05:14	jr3_	Joe_knock: that has infinite answers pretty much
2014-05-27 19:05:21	offby1	jr3_: my take: https://gist.github.com/b21ccdb3defdcc4e90c6
2014-05-27 19:05:22	moqca	VooDooNOFX: Awesome, do you, by any chance, have something I can look at (read)?
2014-05-27 19:05:37	moqca	VooDooNOFX: lambdas have always been this magic riddled things
2014-05-27 19:05:56	Joe_knock	jr3_: Generally speaking though, would one need to write his own algorithms or is most of it baked in already?
2014-05-27 19:06:16	<--	Aww (aww@awwcookies.com) has quit (Client Quit)
2014-05-27 19:06:16	VooDooNOFX	moqca: Well, give me an example of a real filter. Which key do you want to search within a range?
2014-05-27 19:06:17	<--	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has quit (Remote host closed the connection)
2014-05-27 19:06:28	<--	Typo (~Typomatic@unaffiliated/typo) has quit (Ping timeout: 265 seconds)
2014-05-27 19:06:39	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Quit: Computer has gone to sleep.)
2014-05-27 19:06:52	<--	HowardwLo (~HowardwLo@c-98-207-232-11.hsd1.ca.comcast.net) has left #python
2014-05-27 19:07:10	<--	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has quit (Read error: Connection reset by peer)
2014-05-27 19:07:23	moqca	I want to filter 'cuenta' from 973000 to 1000000
2014-05-27 19:07:41	shunya_chakra	Is anyone know where can i get the top open source project list developed in python?
2014-05-27 19:07:51	jr3_	offby1: that's a nice solution, better than mine, I was creating lists and dicts left and right *sigh*
2014-05-27 19:08:06	offby1	jr3_: it takes a tough man to make a tender chicken
2014-05-27 19:08:07	 *	offby1 nods gravely 
2014-05-27 19:08:25	jr3_	lol
2014-05-27 19:08:58	offby1	now if only I could get my cat to bring my dinner
2014-05-27 19:10:00	Pici	shunya_chakra: I'm not sure how you'd define 'top', but I'm pretty sure that python.org has examples, and github has a number of searching methods
2014-05-27 19:10:12	-->	Typo (~Typomatic@unaffiliated/typo) has joined #python
2014-05-27 19:10:13	jr3_	Joe_knock: if the algo you need is already built into the lib i'd use it over custom code
2014-05-27 19:10:17	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 19:10:29	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 264 seconds)
2014-05-27 19:10:35	-->	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has joined #python
2014-05-27 19:10:35	<--	braincrash (~braincras@bl4-145-136.dsl.telepac.pt) has quit (Ping timeout: 255 seconds)
2014-05-27 19:10:36	-->	jnoob22 (~jnoob@c-76-25-106-67.hsd1.co.comcast.net) has joined #python
2014-05-27 19:10:44	jr3_	oops python is a no laugh out loud zone
2014-05-27 19:10:50	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-27 19:10:55	<--	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has quit (Quit: This computer has gone to sleep)
2014-05-27 19:11:06	Pici	keep your laughing on the inside.
2014-05-27 19:11:21	<--	isomer (~textual@unaffiliated/isomer) has quit (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
2014-05-27 19:11:28	-->	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has joined #python
2014-05-27 19:11:45	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-27 19:12:13	offby1	the bot waggled its finger at you, eh?
2014-05-27 19:12:15	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 19:12:20	<--	Joe_knock (~client@105-236-148-58.access.mtnbusiness.co.za) has quit (Quit: Leaving)
2014-05-27 19:12:20	<--	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has quit (Remote host closed the connection)
2014-05-27 19:12:23	VooDooNOFX	moqca: Well, lambdas are functions, without the def some_name(*args, **kwargs) part.
2014-05-27 19:12:46	-->	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has joined #python
2014-05-27 19:12:46	offby1	moqca: with a ton of arbitrary-seeming restrictions.
2014-05-27 19:12:48	-->	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has joined #python
2014-05-27 19:12:53	VooDooNOFX	moqca: So, here you can use a combination of filter and a list of lambdas to test your values.
2014-05-27 19:13:10	shunya_chakra	Pici, thanks I'll look at github
2014-05-27 19:13:45	jr3_	mr infobob warned me
2014-05-27 19:13:53	 *	jr3_ commits seppuku
2014-05-27 19:14:11	Callek	oooook, can someone explain to me why I get a travis error with https://github.com/mozilla/build-relengapi/pull/55 for a module thing, when it works locally just fine :/  (e.g. I *do* have a util.tz since I have a util/__init__.py (moved from util.py) and a util/tz.py ---- locally I removed all pyc files too
2014-05-27 19:14:48	moqca	VooDooNOFX: Thanks!, I'll research a bit more.
2014-05-27 19:15:07	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 19:15:24	--	ed_spec_away is now known as spec_ed
2014-05-27 19:15:37	-->	z0ran (~z0ran@gateway/tor-sasl/z0ran) has joined #python
2014-05-27 19:15:44	<--	spec_ed (~spec_ed@c-98-203-32-130.hsd1.fl.comcast.net) has quit (Quit: Haggling with the fish monger...)
2014-05-27 19:15:57	-->	johnkevinmbasco (~johnkevin@125.212.122.71) has joined #python
2014-05-27 19:16:34	<--	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has quit (Read error: Connection reset by peer)
2014-05-27 19:17:00	-->	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has joined #python
2014-05-27 19:17:11	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-27 19:17:37	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 19:17:56	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Client Quit)
2014-05-27 19:18:07	<--	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has quit (Read error: Connection reset by peer)
2014-05-27 19:18:31	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Quit: aljohri)
2014-05-27 19:18:33	-->	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has joined #python
2014-05-27 19:19:09	<--	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has quit (Ping timeout: 276 seconds)
2014-05-27 19:19:37	<--	TCubed (~Adium@ip70-174-167-244.dc.dc.cox.net) has quit (Quit: Leaving.)
2014-05-27 19:21:15	-->	italorossi (~italoross@179.156.50.246) has joined #python
2014-05-27 19:21:31	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 240 seconds)
2014-05-27 19:21:40	-->	Back2Basics (~jeremy@cpe-173-175-53-12.hot.res.rr.com) has joined #python
2014-05-27 19:22:29	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 264 seconds)
2014-05-27 19:22:29	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-05-27 19:23:38	<--	weuolululu (~zhouwe@118.228.153.194) has quit (Read error: Connection reset by peer)
2014-05-27 19:23:44	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-27 19:24:05	Pici	Callek: your "from relengapi import util" import is trying to import from util.py, not from your util package in the same path.  You really shouldn't be using the same name, as it will just end up confusing things.
2014-05-27 19:24:59	<--	kumarat9pm (~surendra@123.252.227.75) has quit (Ping timeout: 255 seconds)
2014-05-27 19:25:13	Back2Basics	how much time do you devote to reading code vs writing code?
2014-05-27 19:25:30	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 19:25:38	<--	italorossi (~italoross@179.156.50.246) has quit (Ping timeout: 240 seconds)
2014-05-27 19:25:57	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 19:26:05	<--	jamphat (~jamphat@66-44-29-175.c3-0.129-ubr1.lnh-129.md.cable.rcn.com) has quit (Ping timeout: 264 seconds)
2014-05-27 19:26:08	edunham	Back2Basics: are you asking someone in particular, or just the channel?
2014-05-27 19:26:31	<--	phantomx013 (63e57dd7@gateway/web/freenode/ip.99.229.125.215) has quit (Quit: Page closed)
2014-05-27 19:27:06	<--	McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Ping timeout: 272 seconds)
2014-05-27 19:27:52	Callek	Pici: I moved util.py --> util/__init__.py
2014-05-27 19:28:04	Callek	Pici: or at least that is/was my intent (and what I think is happening)
2014-05-27 19:28:29	-->	McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined #python
2014-05-27 19:28:31	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-27 19:28:58	<--	rails_smith (~rails_smi@136.166.156.64) has quit (Quit: Leaving.)
2014-05-27 19:28:58	<--	duderonomy (~duderonom@136.166.156.64) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 19:29:13	<--	jandrusk (~jra@cpe-24-29-234-80.neo.res.rr.com) has quit (Remote host closed the connection)
2014-05-27 19:29:29	-->	k_sze[work] (~kvirc@unaffiliated/kira) has joined #python
2014-05-27 19:29:31	-->	Aww (aww@awwcookies.com) has joined #python
2014-05-27 19:29:37	-->	mrj (~textual@unaffiliated/vty) has joined #python
2014-05-27 19:29:57	Pici	Callek: iirc, git won't untrack delete files unless you tell it to, so you may want to double check your commit.
2014-05-27 19:30:12	Avaris	Callek: util/__init__.py doesn't import tz.py. so, you can't get util.tz by just importing util
2014-05-27 19:30:16	-->	kushal2 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has joined #python
2014-05-27 19:30:32	-->	Doug__ (~quassel@c-76-104-27-79.hsd1.va.comcast.net) has joined #python
2014-05-27 19:31:04	-->	muxdemux (~garrettwi@pool-72-73-112-115.ptldme.east.myfairpoint.net) has joined #python
2014-05-27 19:31:16	-->	vbabiy_ (~vbabiy@cpe-098-024-041-201.carolina.res.rr.com) has joined #python
2014-05-27 19:31:16	-->	wong2 (~wong2@124.205.66.195) has joined #python
2014-05-27 19:31:20	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-27 19:31:23	-->	hashfail (~noone@unaffiliated/gimps) has joined #python
2014-05-27 19:31:51	-->	parduse (parduse@unaffiliated/parduse) has joined #python
2014-05-27 19:32:22	-->	Andyrez (~andyrez@41.58.212.228) has joined #python
2014-05-27 19:32:29	<--	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has quit (Remote host closed the connection)
2014-05-27 19:32:38	-->	defane_ (~defane@ring0.re) has joined #python
2014-05-27 19:32:40	<--	tiwula (~lane@ip68-231-204-63.oc.oc.cox.net) has quit (Quit: Leaving)
2014-05-27 19:32:58	-->	flubby_nanabo (~flubby_na@unaffiliated/tonnynerd) has joined #python
2014-05-27 19:33:03	-->	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has joined #python
2014-05-27 19:33:05	<--	softwaredoug (~quassel@c-76-104-27-79.hsd1.va.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	lettzmi (~lettzmi@64.149.140.196) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	kushal3 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has quit (Remote host closed the connection)
2014-05-27 19:33:05	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	Callek (~chatzilla@75-138-181-33.dhcp.oxfr.ma.charter.com) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	vbabiy (~vbabiy@cpe-098-024-041-201.carolina.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	hays (~hays@unaffiliated/hays) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	monoprotic (~monoproti@unaffiliated/monoprotic) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:05	<--	crisisking (~too_many_@deadpope.somethingdead.com) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:05	<--	Kroisse (~Kroisse@1.234.65.45) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:05	<--	ewong (~chatzilla@101.78.229.242) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:06	<--	jaharmi (jaharmi@rs2.risingnet.net) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:06	<--	StupidWeasel (~i.am@weasel.stupidweasel.com) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:06	<--	lduros (~user@fsf/member/lduros) has quit (Remote host closed the connection)
2014-05-27 19:33:06	<--	idr0p (idr0p@gateway/shell/xzibition.com/x-kmbfsubgpavcrweh) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:06	<--	detrout (~detrout@chaos.caltech.edu) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:06	<--	gv (~gv@unaffiliated/gv) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:06	<--	defane (~defane@ring0.re) has quit (Remote host closed the connection)
2014-05-27 19:33:06	<--	ntio (~ntio@unaffiliated/ntio) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:16	-->	Callek (~chatzilla@75-138-181-33.dhcp.oxfr.ma.charter.com) has joined #python
2014-05-27 19:33:18	<--	gimps (~noone@unaffiliated/gimps) has quit (Read error: Connection reset by peer)
2014-05-27 19:33:21	<--	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:21	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:21	<--	LysergicDreams (~Lysergia@208-46-125-98.dia.static.qwest.net) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:21	<--	ua (~ua@unaffiliated/uniqanomaly) has quit (Ping timeout: 252 seconds)
2014-05-27 19:33:27	<--	jorgev (~jorgev@rrcs-67-52-158-66.west.biz.rr.com) has quit (Quit: Computer has gone to sleep.)
2014-05-27 19:33:36	<--	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has quit (Remote host closed the connection)
2014-05-27 19:33:40	-->	gv (~gv@unaffiliated/gv) has joined #python
2014-05-27 19:33:42	<--	nicdev (~user@kilimanjaro.rafpepa.com) has quit (Remote host closed the connection)
2014-05-27 19:33:43	-->	Kroisse (~Kroisse@1.234.65.45) has joined #python
2014-05-27 19:33:44	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 19:33:44	Callek	Pici: bah freenode just bounced me, and missed your reply 9after I said I moved util.py --> util/__init__.py
2014-05-27 19:33:54	-->	crisisking (~too_many_@deadpope.somethingdead.com) has joined #python
2014-05-27 19:33:54	<--	keypusher (~tmeagher@209.6.175.46) has quit (Remote host closed the connection)
2014-05-27 19:33:58	-->	detrout (~detrout@chaos.caltech.edu) has joined #python
2014-05-27 19:34:01	-->	StupidWeasel (~i.am@weasel.stupidweasel.com) has joined #python
2014-05-27 19:34:09	-->	LysergicDreams (~Lysergia@208-46-125-98.dia.static.qwest.net) has joined #python
2014-05-27 19:34:13	-->	ua (~ua@unaffiliated/uniqanomaly) has joined #python
2014-05-27 19:34:22	Avaris	then you also missed this :) Callek: util/__init__.py doesn't import tz.py. so, you can't get util.tz by just importing util
2014-05-27 19:34:26	-->	ntio (~ntio@unaffiliated/ntio) has joined #python
2014-05-27 19:34:29	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-27 19:34:31	-->	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has joined #python
2014-05-27 19:34:36	Callek	Avaris: indeed, thanks
2014-05-27 19:34:44	-->	hays (~hays@unaffiliated/hays) has joined #python
2014-05-27 19:34:54	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-27 19:34:55	<--	bwreilly (~bwreilly@50.106.46.213) has quit (Ping timeout: 252 seconds)
2014-05-27 19:34:58	Callek	is that different than an empty __init__.py in util/  such that if I moved _everything_ out of __init__.py I'd get the behavior I expect?
2014-05-27 19:35:07	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Client Quit)
2014-05-27 19:35:09	-->	idr0p (idr0p@gateway/shell/xzibition.com/x-seqgdtolkmwfeghz) has joined #python
2014-05-27 19:35:23	 *	Callek could always try it, but still makes me wonder why things are passing locally
2014-05-27 19:35:30	Callek	with py2.7.3
2014-05-27 19:35:39	-->	bwreilly (~bwreilly@50.106.46.213) has joined #python
2014-05-27 19:35:40	-->	jaharmi (jaharmi@rs2.risingnet.net) has joined #python
2014-05-27 19:35:44	Avaris	Callek: no it's not. `import util` will give you everything __init__.py does.
2014-05-27 19:36:50	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-27 19:37:11	VooDooNOFX	moqca: Sorry that's a vague reply. i'll come up with a concrete example right now.
2014-05-27 19:37:14	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-27 19:37:19	Avaris	Callek: either you do `import util.tz` (or equivalent) or __init__.py should import tz if you want it to be available when you import util
2014-05-27 19:37:46	Back2Basics	edunham: just the channel
2014-05-27 19:37:53	Callek	ok, thanks guys
2014-05-27 19:38:03	 *	Callek wonders how he's gone this long in life without grasping this concept
2014-05-27 19:38:05	Callek	:/
2014-05-27 19:38:14	Callek	(since I've been doing py dev for > 6 years now)
2014-05-27 19:38:22	-->	nicdev (~user@kilimanjaro.rafpepa.com) has joined #python
2014-05-27 19:38:25	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-27 19:38:29	edunham	Back2Basics: I personally read perhaps 10x-100x as many lines as I write
2014-05-27 19:38:29	<--	al1o (~al1o@p4FF54E8A.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-05-27 19:38:44	edunham	but then again I'm a bit of a newbie, and a sysadmin, so I prefer letting others do the work for me
2014-05-27 19:38:49	<--	nedbat (~nedbat@python/psf/nedbat) has quit (Client Quit)
2014-05-27 19:38:53	edunham	heck actually that guess is probably way too low
2014-05-27 19:39:15	-->	al1o (~al1o@p4FF541E8.dip0.t-ipconnect.de) has joined #python
2014-05-27 19:39:23	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-27 19:39:40	Back2Basics	edunham: how do you use python for sysadmin work? (salt?)
2014-05-27 19:40:29	edunham	Back2Basics: uhh I support a bunch of python apps
2014-05-27 19:41:03	edunham	most of the docs and slides I write are sphinx/hieroglyph, which are python projects and for which I write python scripts to drag information in
2014-05-27 19:41:13	<--	johnkevinmbasco (~johnkevin@125.212.122.71) has quit (Read error: Connection reset by peer)
2014-05-27 19:41:15	<--	franzip (~Administr@2-226-58-214.ip179.fastwebnet.it) has quit (Quit: ...)
2014-05-27 19:42:01	edunham	I also work closely with a development team that writes apps for my systems (custom status monitoring, VM management, etc.) in python and end up mentoring them a bit
2014-05-27 19:42:08	<--	thesheff17 (~thesheff1@2600:1008:b00b:ceb4:79b8:8e8a:6e38:3a0a) has quit (Read error: Connection reset by peer)
2014-05-27 19:42:52	Pici	Callek: btw, I said: git won't untrack deleted files unless you tell it to, so you may want to double check your commit.
2014-05-27 19:43:06	<--	ChronosA (~Fake@unaffiliated/chronosa) has quit (Quit: Bye)
2014-05-27 19:43:18	<--	agjacome (~agjacome@181.217.11.37.dynamic.jazztel.es) has quit (Quit: leaving)
2014-05-27 19:43:26	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 19:43:32	<--	jonanin (~Jonanin@2601:9:4680:d2c:3401:465c:73fa:726e) has quit (Quit: WeeChat 0.4.3)
2014-05-27 19:43:52	Callek	Pici: I admit to being horrid at git (I'm a mercurial guy at heart) -- I did a git move, github shows the file as renamed, is there a way to verify things better?
2014-05-27 19:44:10	Callek	(util.py did already exist on `master` prior to my changes)
2014-05-27 19:44:26	<--	Ariel_Calzada (~aricalso@201.216.0.73) has quit (Quit: Bye all)
2014-05-27 19:45:19	Back2Basics	edunham: so DevOps?
2014-05-27 19:45:24	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 240 seconds)
2014-05-27 19:45:32	-->	thinkxl (~Adium@207-91-184-235.nstci.net) has joined #python
2014-05-27 19:45:38	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 19:45:48	edunham	Back2Basics: ehh, I guess you could call it that, and I call it that when I teach devops bootcamp... but I'm not a huge fan of buzzwordey acronyms :)
2014-05-27 19:45:48	<--	firecat53 (~firecat53@c-98-225-17-95.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2014-05-27 19:45:55	-->	amargherio (~MarioEIU@107-192-152-221.lightspeed.rcsntx.sbcglobal.net) has joined #python
2014-05-27 19:45:58	<--	jalaziz (~jalaziz@67-207-118-18.static.wiline.com) has quit (Ping timeout: 240 seconds)
2014-05-27 19:45:59	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Leaving)
2014-05-27 19:47:01	<--	Bico_Fino (~Bico_Fino@189.102.89.66) has quit (Remote host closed the connection)
2014-05-27 19:47:29	-->	someprimetime (~someprime@c-76-102-120-110.hsd1.ca.comcast.net) has joined #python
2014-05-27 19:48:19	-->	kumarat9pm (~surendra@42.104.15.71) has joined #python
2014-05-27 19:48:45	-->	naught101 (~naught101@uniwide-pat-pool-129-94-8-80.gw.unsw.edu.au) has joined #python
2014-05-27 19:49:13	<--	bwreilly (~bwreilly@50.106.46.213) has quit (Ping timeout: 252 seconds)
2014-05-27 19:49:14	<--	Brackson (~Brackson@72.168.136.9) has quit (Read error: Connection reset by peer)
2014-05-27 19:49:16	<--	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has quit (Quit: AkashicLegend)
2014-05-27 19:49:26	<--	Sarcasm (~sarcastic@unaffiliated/sarcasm) has quit (Ping timeout: 258 seconds)
2014-05-27 19:50:35	<--	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has quit (Ping timeout: 258 seconds)
2014-05-27 19:50:35	-->	duderonomy (~duderonom@c-50-156-2-20.hsd1.ca.comcast.net) has joined #python
2014-05-27 19:50:35	moqca	VooDooNOFX: Thanks
2014-05-27 19:50:38	-->	guilhermebr (~guilherme@179.182.195.22) has joined #python
2014-05-27 19:50:40	VooDooNOFX	moqca: http://ideone.com/TQ0SCV
2014-05-27 19:50:58	-->	donspaulding (~donspauld@71.201.172.43) has joined #python
2014-05-27 19:51:04	VooDooNOFX	moqca: That should teach you about map(), as well as lambdas
2014-05-27 19:51:09	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 19:51:32	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Read error: Connection reset by peer)
2014-05-27 19:51:36	VooDooNOFX	moqca: Notice on line 34, I use a lambda function to map each filter to my data.
2014-05-27 19:52:12	<--	shunya_chakra (~shunya@117.200.76.248) has quit (Quit: Leaving)
2014-05-27 19:52:13	moqca	Woah, thanks a lot, this is more than I hoped for, haha
2014-05-27 19:52:30	<--	someprimetime (~someprime@c-76-102-120-110.hsd1.ca.comcast.net) has quit (Quit: someprimetime)
2014-05-27 19:52:35	Moor	Hi, um, I was looking for a simple, well featured, Markov chain module?
2014-05-27 19:52:38	VooDooNOFX	moqca: and each filter is in turn a lambda which evaluates some x value, which is actually some 'data' value.
2014-05-27 19:53:04	<--	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has quit
2014-05-27 19:54:33	-->	huza (~My@153.119.220.145) has joined #python
2014-05-27 19:54:43	Moor	Like, I know it isn't that hard to write a simple one, but then there is dividing it into sentences, and other stuff -- and it seemed like something that someone would already have done, but...?
2014-05-27 19:55:46	<--	guilhermebr (~guilherme@179.182.195.22) has quit (Ping timeout: 265 seconds)
2014-05-27 19:56:02	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Ping timeout: 255 seconds)
2014-05-27 19:56:03	sproingie	Moor: if you familiarize yourself with how a markov chain works, the code practically writes itself
2014-05-27 19:56:22	VooDooNOFX	moqca: I hope that solves the problem you were having, after you extrapolate (extrapolar?) that into your code.
2014-05-27 19:56:39	 *	offby1 might be a Markov chain himself
2014-05-27 19:57:12	sproingie	Moor: all they do is record a table of word->nextword, so in this sentence, you have the pairs "all->they", "they->do", "do->is", and so on
2014-05-27 19:57:13	<--	kumarat9pm (~surendra@42.104.15.71) has quit (Ping timeout: 265 seconds)
2014-05-27 19:57:30	-->	aljohri (~atul@wireless-165-124-129-66.nuwlan.northwestern.edu) has joined #python
2014-05-27 19:57:33	<--	cyphase (~cyphase@unaffiliated/cyphase) has quit (Ping timeout: 252 seconds)
2014-05-27 19:57:35	<--	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2014-05-27 19:57:39	moqca	VooDooNOFX: Yeah it seems like it was exactly what I was looking for. I'll play around with it, again, thanks
2014-05-27 19:57:44	<--	Frosh (uid4206@gateway/web/irccloud.com/x-aywwzdduoxnckgvd) has quit (Quit: Connection closed for inactivity)
2014-05-27 19:58:13	Moor	sproingie: The markov chain code writes itself. But, like, coming up with good places to start and stop seem like they would be a lot harder.
2014-05-27 19:59:17	sproingie	Moor: you can pick a random word, though making it carry on oddball conversations usually means picking a word out of soemone's sentence and starting from it
2014-05-27 20:00:01	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-27 20:00:14	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-27 20:00:15	Moor	sproingie: I was more planning on books. I wanted to try using it to play at "mixing" different books.
2014-05-27 20:00:22	Moor	offby1: Well, would you mind (re-?)reading Through the Looking Glass and The Road to Oz, then?
2014-05-27 20:00:55	<--	duderonomy (~duderonom@c-50-156-2-20.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 20:01:38	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 20:02:18	<--	manizzle (~manizzle@107-220-114-180.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2014-05-27 20:02:18	-->	josuebrunel (~josuebrun@cho94-3-82-227-125-5.fbx.proxad.net) has joined #python
2014-05-27 20:02:18	-->	italorossi (~italoross@179.156.50.246) has joined #python
2014-05-27 20:02:51	<--	yaw (~yaw@41.215.170.16) has quit (Ping timeout: 258 seconds)
2014-05-27 20:02:59	-->	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has joined #python
2014-05-27 20:03:02	-->	arescorpio (~arescorpi@204-27-245-190.fibertel.com.ar) has joined #python
2014-05-27 20:03:02	sproingie	Moor: i've seen some amusing results from that, including one that used the collected works of Ayn Rand and Karl Marx
2014-05-27 20:03:37	-->	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has joined #python
2014-05-27 20:03:54	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 20:04:06	offby1	emacs has a built-in markov-chain command: M-x dissociated-press
2014-05-27 20:04:26	offby1	every text editor needs one!
2014-05-27 20:05:41	--	wkmanire_ is now known as wkmanire
2014-05-27 20:06:04	-->	Gaan (~textual@12-141.207-68.elmore.res.rr.com) has joined #python
2014-05-27 20:06:08	sproingie	shame that yow and psychoanalyze-pinhead are gone now
2014-05-27 20:06:53	<--	italorossi (~italoross@179.156.50.246) has quit (Ping timeout: 264 seconds)
2014-05-27 20:06:58	sproingie	good as gone anyway.  will be gone for real in emacs25
2014-05-27 20:07:09	-->	thesheff17 (~thesheff1@24-148-57-183.c3-0.lem-ubr1.chi-lem.il.cable.rcn.com) has joined #python
2014-05-27 20:08:40	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-27 20:08:55	-->	dancat (~dan@198.199.94.106) has joined #python
2014-05-27 20:09:07	<--	heroux (~heroux@50708181.static.ziggozakelijk.nl) has quit (Ping timeout: 240 seconds)
2014-05-27 20:09:21	-->	braincrash (~braincras@bl14-213-147.dsl.telepac.pt) has joined #python
2014-05-27 20:09:30	_habnabit	boo
2014-05-27 20:10:03	<--	Yeretik (~Yeretik@201.255.255.83) has quit (Quit: Leaving)
2014-05-27 20:10:34	-->	kumarat9pm (~surendra@42.104.15.71) has joined #python
2014-05-27 20:11:35	-->	the4tress (~ryan@c-50-168-143-57.hsd1.sc.comcast.net) has joined #python
2014-05-27 20:11:40	<--	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has quit (Ping timeout: 258 seconds)
2014-05-27 20:11:57	the4tress	i have a dictionary: {'params': (u'asdf', u'asdf2'), 'call': u'test'}
2014-05-27 20:12:10	<--	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has quit (Quit: Bye)
2014-05-27 20:12:19	the4tress	how can i call the method in the key "call"?
2014-05-27 20:12:23	-->	czapla (~czapla@2a02:8109:8380:1298:d87b:8d2:a8df:fed) has joined #python
2014-05-27 20:12:42	sproingie	u'test' isn't a method
2014-05-27 20:12:47	the4tress	i know
2014-05-27 20:12:51	the4tress	but i have a method named test
2014-05-27 20:12:58	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Ping timeout: 240 seconds)
2014-05-27 20:13:13	sproingie	getattr will grab a thing by name.  including methods.
2014-05-27 20:13:41	-->	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has joined #python
2014-05-27 20:14:02	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 245 seconds)
2014-05-27 20:14:06	<--	cewing (~cewing@97-113-30-194.tukw.qwest.net) has quit (Quit: Hasta lumbago...)
2014-05-27 20:14:09	the4tress	sproingie: perfect, thanks
2014-05-27 20:14:53	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 20:16:13	<--	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-05-27 20:16:20	<--	jleclanche (~adys@unaffiliated/adys) has quit (Quit: No Ping reply in 90 seconds.)
2014-05-27 20:17:00	<--	Mooash (~mooash@unaffiliated/mooash) has quit (Ping timeout: 276 seconds)
2014-05-27 20:17:02	<--	czapla (~czapla@2a02:8109:8380:1298:d87b:8d2:a8df:fed) has quit (Ping timeout: 265 seconds)
2014-05-27 20:17:29	offby1	*whew*
2014-05-27 20:17:29	-->	jleclanche (~adys@unaffiliated/adys) has joined #python
2014-05-27 20:17:36	offby1	was afraid they'd resort to "eval"
2014-05-27 20:17:41	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 20:17:57	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-27 20:18:18	<--	Macacity (~Macacity@cpe-001a4f1e9770.ip-pool.rftonline.net) has quit (Ping timeout: 276 seconds)
2014-05-27 20:18:28	-->	AnYaDi (~AnYaDi@res-234-101.dyn.carleton.edu) has joined #python
2014-05-27 20:19:37	-->	wjimenez5271 (~wjimenez5@108-222-64-6.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-27 20:20:03	<--	codeomegaprime (~visualrea@rrcs-70-60-127-110.midsouth.biz.rr.com) has quit (Quit: Leaving)
2014-05-27 20:20:24	<--	Jucato (~jucato@kde/developer/jucato) has quit (Quit: Konversation terminated!)
2014-05-27 20:21:16	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Quit: Lost terminal)
2014-05-27 20:21:20	-->	cgrage (cgrage@prizon.net) has joined #python
2014-05-27 20:22:24	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 258 seconds)
2014-05-27 20:22:29	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 252 seconds)
2014-05-27 20:22:35	<--	eka (~eka@190.237.10.159) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2014-05-27 20:23:32	<--	amargherio (~MarioEIU@107-192-152-221.lightspeed.rcsntx.sbcglobal.net) has quit (Remote host closed the connection)
2014-05-27 20:24:36	Back2Basics	is there a way to tell what is hashable?
2014-05-27 20:24:41	-->	firecat53 (~firecat53@209.188.5.250) has joined #python
2014-05-27 20:24:45	<--	kumarat9pm (~surendra@42.104.15.71) has quit (Quit: Leaving.)
2014-05-27 20:24:46	<--	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has quit (Quit: This computer has gone to sleep)
2014-05-27 20:24:51	<--	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-27 20:24:53	ssbr_at_work	Back2Basics: not without hashing it
2014-05-27 20:25:00	-->	kumarat9pm (~surendra@42.104.15.71) has joined #python
2014-05-27 20:25:01	-->	kushal (~kdas@fedora/kushal) has joined #python
2014-05-27 20:25:02	ssbr_at_work	(hash(x))
2014-05-27 20:25:34	-->	knotti (~knotti@142.196.166.112) has joined #python
2014-05-27 20:26:11	-->	TakinOver (~quassel@pool-98-112-189-18.lsanca.fios.verizon.net) has joined #python
2014-05-27 20:27:15	-->	fluter (~fluter@fedora/fluter) has joined #python
2014-05-27 20:27:18	offby1	s/hashable/blendable/
2014-05-27 20:27:54	<--	fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-05-27 20:28:26	-->	fluter (~fluter@fedora/fluter) has joined #python
2014-05-27 20:29:27	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-27 20:30:53	-->	Grant_P (~grant@14-200-229-143.static.tpgi.com.au) has joined #python
2014-05-27 20:30:55	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-27 20:32:16	Grant_P	Hello, i have a dictionary with the items been a tuple of two numbers. I want to sort the two numbers from higher to lower or lower to higher which ever way. What's the best approach here? Something easy to read/understand.
2014-05-27 20:32:29	<--	kushal2 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has quit (Read error: Connection reset by peer)
2014-05-27 20:32:34	-->	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has joined #python
2014-05-27 20:32:50	-->	pretty_function (~pretty_fu@61.12.96.10) has joined #python
2014-05-27 20:32:55	-->	kushal2 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has joined #python
2014-05-27 20:33:13	-->	mkenny_laptop (~matt@c-24-18-230-47.hsd1.wa.comcast.net) has joined #python
2014-05-27 20:33:33	-->	hoot (~hoot@5.140.191.189) has joined #python
2014-05-27 20:33:34	stal[GL]	python smoke
2014-05-27 20:33:37	stal[GL]	don't breathe this
2014-05-27 20:34:15	-->	uon (~zjqu@116.226.75.137) has joined #python
2014-05-27 20:34:34	-->	Samb2 (~Sammysama@2.121.203.77) has joined #python
2014-05-27 20:34:42	<--	g3rms (~Adium@50.56.229.5) has quit (Quit: Leaving.)
2014-05-27 20:35:28	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-27 20:35:44	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-27 20:36:12	-->	duderonomy (~duderonom@c-50-156-2-20.hsd1.ca.comcast.net) has joined #python
2014-05-27 20:37:31	<--	rotham (~harry@174.32.52.153) has quit (Read error: Connection reset by peer)
2014-05-27 20:37:48	<--	kumarat9pm (~surendra@42.104.15.71) has quit (Ping timeout: 276 seconds)
2014-05-27 20:37:50	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Leaving)
2014-05-27 20:38:03	<--	andkenneth (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has quit (Quit: Leaving)
2014-05-27 20:38:05	-->	AndKenneth_ (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has joined #python
2014-05-27 20:38:08	<--	AndKenneth_ (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has quit (Read error: Connection reset by peer)
2014-05-27 20:38:25	-->	andkenneth (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has joined #python
2014-05-27 20:38:30	<--	hoot (~hoot@5.140.191.189) has quit (Ping timeout: 258 seconds)
2014-05-27 20:38:30	-->	rotham (~harry@174.32.52.153) has joined #python
2014-05-27 20:38:47	-->	theRealGent (~theRealGe@c-67-173-136-172.hsd1.il.comcast.net) has joined #python
2014-05-27 20:39:16	<--	muxdemux (~garrettwi@pool-72-73-112-115.ptldme.east.myfairpoint.net) has quit (Ping timeout: 265 seconds)
2014-05-27 20:39:34	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-27 20:39:58	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Quit: Leaving)
2014-05-27 20:41:05	-->	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has joined #python
2014-05-27 20:42:14	-->	kumarat9pm (~surendra@42.104.15.31) has joined #python
2014-05-27 20:42:27	-->	eoss (~e0s@pdpc/supporter/student/eoss) has joined #python
2014-05-27 20:42:42	<--	rotham (~harry@174.32.52.153) has quit (Read error: Connection reset by peer)
2014-05-27 20:43:17	<--	duderonomy (~duderonom@c-50-156-2-20.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 20:43:56	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 255 seconds)
2014-05-27 20:44:03	-->	rotham (~harry@174.32.52.153) has joined #python
2014-05-27 20:45:20	<--	theRealGent (~theRealGe@c-67-173-136-172.hsd1.il.comcast.net) has quit (Quit: theRealGent)
2014-05-27 20:45:33	<--	kmcguire (~kmcguire@120-219.207-68.elmore.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-05-27 20:45:54	-->	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has joined #python
2014-05-27 20:46:48	<--	moqca (94e782ac@gateway/web/freenode/ip.148.231.130.172) has quit (Ping timeout: 240 seconds)
2014-05-27 20:46:48	<--	LakeSolon (~LakeSolon@c-75-73-127-70.hsd1.mn.comcast.net) has quit (Quit: Leaving.)
2014-05-27 20:46:49	-->	ragsagar (~ragsagar@unaffiliated/ragsagar) has joined #python
2014-05-27 20:46:51	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-128.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-27 20:47:04	-->	heroux (~heroux@50708181.static.ziggozakelijk.nl) has joined #python
2014-05-27 20:47:59	the4tress	im trying to call a method, but i don't know exactly how many arguments are being passed to the method
2014-05-27 20:47:59	<--	kumarat9pm (~surendra@42.104.15.31) has left #python
2014-05-27 20:48:07	the4tress	is there an exception for too many agruments?
2014-05-27 20:48:12	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 20:49:00	<--	toordog (~toordog@unaffiliated/toordog) has quit (Ping timeout: 240 seconds)
2014-05-27 20:49:07	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Client Quit)
2014-05-27 20:49:30	<--	Burgundy (~burgundy@188.25.126.27) has quit (Ping timeout: 276 seconds)
2014-05-27 20:49:57	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-27 20:50:22	the4tress	nevermind
2014-05-27 20:51:29	-->	guilhermebr (~guilherme@179.182.195.22) has joined #python
2014-05-27 20:51:30	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 20:51:40	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-27 20:51:50	<--	Typo (~Typomatic@unaffiliated/typo) has quit (Ping timeout: 265 seconds)
2014-05-27 20:52:57	-->	mordonez (~mordonez@190.43.190.13) has joined #python
2014-05-27 20:54:44	-->	Typo (~Typomatic@unaffiliated/typo) has joined #python
2014-05-27 20:55:00	<--	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has quit (Quit: This computer has gone to sleep)
2014-05-27 20:55:48	<--	guilhermebr (~guilherme@179.182.195.22) has quit (Ping timeout: 240 seconds)
2014-05-27 20:55:52	<--	Ephexeve (~benmezger@187.65.231.51) has quit (Remote host closed the connection)
2014-05-27 20:56:33	-->	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has joined #python
2014-05-27 20:57:36	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-27 20:57:47	-->	l4cr0ss (~l4cr0ss@unaffiliated/l4cr0ss) has joined #python
2014-05-27 20:58:20	<--	twobitsprite (~isaac@cpe-071-065-237-218.nc.res.rr.com) has quit (Quit: Lost terminal)
2014-05-27 20:58:47	<--	saml_ (~saml@pool-71-190-4-101.nycmny.east.verizon.net) has quit (Ping timeout: 252 seconds)
2014-05-27 20:59:34	-->	LeMike (~Thunderbi@dslb-084-063-151-122.pools.arcor-ip.net) has joined #python
2014-05-27 20:59:54	<--	heroux (~heroux@50708181.static.ziggozakelijk.nl) has quit (Ping timeout: 276 seconds)
2014-05-27 21:00:36	-->	johnkevinmbasco (~johnkevin@103.14.62.42) has joined #python
2014-05-27 21:00:54	-->	heroux (~heroux@50708181.static.ziggozakelijk.nl) has joined #python
2014-05-27 21:01:05	<--	firecat53 (~firecat53@209.188.5.250) has quit (Ping timeout: 252 seconds)
2014-05-27 21:01:24	<--	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has quit (Ping timeout: 240 seconds)
2014-05-27 21:01:24	-->	max__ (~max@c-71-231-120-93.hsd1.wa.comcast.net) has joined #python
2014-05-27 21:01:31	-->	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has joined #python
2014-05-27 21:01:33	-->	porco (~porco@218.30.180.178) has joined #python
2014-05-27 21:01:48	--	max__ is now known as Synthead
2014-05-27 21:02:42	<--	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-27 21:03:15	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-27 21:03:40	<--	wjb (~wjb@cust-11248.ptera.net) has quit (Read error: Connection reset by peer)
2014-05-27 21:03:41	-->	mFacenet (~mFacenet@unaffiliated/mfacenet) has joined #python
2014-05-27 21:04:14	-->	wolrah_ (~wolrah@24.239.210.140) has joined #python
2014-05-27 21:04:42	-->	codeitloadit (~codeitloa@ip68-106-222-103.oc.oc.cox.net) has joined #python
2014-05-27 21:04:53	<--	wolrah (~wolrah@24.239.210.140) has quit (Ping timeout: 255 seconds)
2014-05-27 21:05:05	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-27 21:05:28	-->	brilliant_beast (fake@c-71-231-197-211.hsd1.wa.comcast.net) has joined #python
2014-05-27 21:05:32	-->	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has joined #python
2014-05-27 21:06:46	<--	wjimenez5271 (~wjimenez5@108-222-64-6.lightspeed.sntcca.sbcglobal.net) has quit (Quit: Leaving.)
2014-05-27 21:07:01	<--	ericp4 (~userep@71-12-189-48.dhcp.leds.al.charter.com) has quit (Quit: Nettalk6 - www.ntalk.de)
2014-05-27 21:07:43	-->	wjimenez5271 (~wjimenez5@108-222-64-6.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-27 21:08:27	-->	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has joined #python
2014-05-27 21:09:20	<--	the4tress (~ryan@c-50-168-143-57.hsd1.sc.comcast.net) has left #python
2014-05-27 21:09:22	huza	*nevermind*
2014-05-27 21:10:42	<--	tjayh913 (~chatzilla@64-136-199-84.dyn.everestkc.net) has quit (Ping timeout: 258 seconds)
2014-05-27 21:11:22	<--	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-27 21:12:16	-->	tjayh913 (~chatzilla@64-136-199-84.dyn.everestkc.net) has joined #python
2014-05-27 21:12:19	<--	Andyrez (~andyrez@41.58.212.228) has quit (Ping timeout: 240 seconds)
2014-05-27 21:12:33	<--	AnYaDi (~AnYaDi@res-234-101.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 21:12:50	--	bogosport is now known as Derpitiz0r
2014-05-27 21:13:01	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-27 21:13:31	-->	derfj (sid19429@gateway/web/irccloud.com/x-dnbvvsbuxwzwmcty) has joined #python
2014-05-27 21:14:37	l4cr0ss	Fairly new to python. Windows user. What do I need to do to include this library in my code? https://code.google.com/p/python-ntlm/
2014-05-27 21:15:28	Lacriatch	l4cr0ss: pip install python-ntlm
2014-05-27 21:15:40	Lacriatch	Then in your code import ntlm
2014-05-27 21:16:24	<--	pr3d4t0r (~zhenya01@varenka.cime.net) has quit (Quit: WeeChat 0.3.7)
2014-05-27 21:16:27	<--	donspaulding (~donspauld@71.201.172.43) has quit (Quit: donspaulding)
2014-05-27 21:16:30	-->	kcj (~kcj@unaffiliated/kcj) has joined #python
2014-05-27 21:16:50	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-27 21:17:07	-->	kumarat9pm (~surendra@123.252.231.217) has joined #python
2014-05-27 21:17:10	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-27 21:17:39	l4cr0ss	Easy. Thanks
2014-05-27 21:17:41	-->	greenshirt (~byte@118.97.22.161) has joined #python
2014-05-27 21:17:42	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 21:17:54	<--	thinkxl (~Adium@207-91-184-235.nstci.net) has quit (Quit: Leaving.)
2014-05-27 21:17:54	-->	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has joined #python
2014-05-27 21:18:18	-->	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-27 21:18:44	greenshirt	hello...what is crucial differences between stackless, greenlet, green threads, and normal threads ?
2014-05-27 21:18:56	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-27 21:19:10	cwillu_borken	normal threads are scheduled by the os
2014-05-27 21:19:43	<--	eggsmiao (~cat@121.237.100.25) has quit (Read error: Connection reset by peer)
2014-05-27 21:19:46	-->	studmuf (~studmuf@2601:9:6700:bf:d0dd:856c:5848:82e5) has joined #python
2014-05-27 21:19:55	-->	HeresJohny (~john@customer-46-39-105-82.stosn.net) has joined #python
2014-05-27 21:20:56	greenshirt	cwillu_borken: okey ... what about the others ? ...
2014-05-27 21:21:37	<--	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has quit (Ping timeout: 252 seconds)
2014-05-27 21:22:03	-->	sepero (~none@219.sub-75-202-159.myvzw.com) has joined #python
2014-05-27 21:22:26	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 255 seconds)
2014-05-27 21:22:31	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-27 21:23:38	<--	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has quit
2014-05-27 21:23:57	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 276 seconds)
2014-05-27 21:25:00	-->	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has joined #python
2014-05-27 21:25:53	<--	CorpusCallosum (~CorpusCal@213.74.108.52) has quit (Quit: Computer has gone to sleep.)
2014-05-27 21:27:03	--	oleo is now known as Guest22961
2014-05-27 21:27:29	<--	introom (~introom@wf077-078.ust.hk) has quit (Ping timeout: 252 seconds)
2014-05-27 21:27:35	<--	schemanic (~schemanic@c-24-147-92-164.hsd1.vt.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-27 21:27:50	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-128.dynamic.uwaterloo.ca) has joined #python
2014-05-27 21:28:10	-->	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has joined #python
2014-05-27 21:28:24	-->	oleo__ (~oleo@xdsl-78-35-164-158.netcologne.de) has joined #python
2014-05-27 21:28:58	chance	greenshirt: internet
2014-05-27 21:29:03	<--	LeMike (~Thunderbi@dslb-084-063-151-122.pools.arcor-ip.net) has quit (Ping timeout: 265 seconds)
2014-05-27 21:29:31	chance	the main difference: the prior are almost all implemented in the software, not the OS
2014-05-27 21:29:38	<--	kumarat9pm (~surendra@123.252.231.217) has quit (Ping timeout: 255 seconds)
2014-05-27 21:29:52	<--	Guest22961 (~oleo@xdsl-87-79-194-231.netcologne.de) has quit (Ping timeout: 245 seconds)
2014-05-27 21:30:10	<--	koz (~koz@2601:8:a900:88a:1e6f:65ff:fe31:7fcb) has quit (Quit: koz)
2014-05-27 21:30:32	<--	yedi (~yedi@201.199.88.62) has quit (Remote host closed the connection)
2014-05-27 21:31:03	greenshirt	chance: so, is it just different in scheduled way,  ... ?
2014-05-27 21:31:08	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-27 21:31:40	chance	yeah.
2014-05-27 21:32:07	<--	gremly (~gremly@190.85.36.58) has quit (Quit: WeeChat 0.3.2)
2014-05-27 21:32:14	<--	porco (~porco@218.30.180.178) has quit (Quit: Leaving...)
2014-05-27 21:32:35	-->	SoFLy (~textual@cpe-24-92-241-58.twcny.res.rr.com) has joined #python
2014-05-27 21:32:47	<--	Synthead (~max@c-71-231-120-93.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-27 21:32:59	chance	stackless is kinda like microthreads which uses single or a few threads to run concurrently, same with greenlet except more control over scheduling
2014-05-27 21:33:06	-->	theshit123 (~theshit@217.217.50.206.dyn.user.ono.com) has joined #python
2014-05-27 21:33:39	chance	green threads are more of a terminology, basically threads scheduled by a vm or runtime instead of the OS, usually multiplexed on native threads/processes
2014-05-27 21:34:09	greenshirt	why we call it microthreads ? is it seems likes above, just differ in scheduled way ?
2014-05-27 21:34:36	-->	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has joined #python
2014-05-27 21:34:36	<--	Mellified_Man (~Mellified@eddie.mellified.com) has quit (Quit: ZNC - http://znc.in)
2014-05-27 21:34:44	-->	Synthead (~max@c-71-231-120-93.hsd1.wa.comcast.net) has joined #python
2014-05-27 21:35:03	greenshirt	so, microthreads == green threads ?
2014-05-27 21:35:15	<--	mkenny_laptop (~matt@c-24-18-230-47.hsd1.wa.comcast.net) has quit (Quit: mkenny_laptop)
2014-05-27 21:35:26	chance	mostly they're not actual threads
2014-05-27 21:35:27	<--	yedi (~yedi@201.199.88.62) has quit (Ping timeout: 252 seconds)
2014-05-27 21:35:40	<--	knotti (~knotti@142.196.166.112) has quit (Quit: Leaving)
2014-05-27 21:35:45	chance	but yeah, they're kinda like green threads
2014-05-27 21:35:46	-->	hoot (~hoot@5.140.190.27) has joined #python
2014-05-27 21:35:52	chance	basically the same
2014-05-27 21:35:56	chance	just all about scheduling
2014-05-27 21:36:02	-->	winsoff (~foo@66.205.210.40) has joined #python
2014-05-27 21:36:08	winsoff	Since dictionary items are first-class
2014-05-27 21:36:31	greenshirt	chance: okey ..thanks
2014-05-27 21:36:50	-->	kumarat9pm (~surendra@123.252.231.217) has joined #python
2014-05-27 21:37:10	chance	greenshirt: i suggest using google, and reading about each, they're not terribly different but interesting to read about in any case.
2014-05-27 21:37:28	<--	rotham (~harry@174.32.52.153) has quit (Read error: Connection reset by peer)
2014-05-27 21:37:39	<--	aljohri (~atul@wireless-165-124-129-66.nuwlan.northwestern.edu) has quit (Quit: aljohri)
2014-05-27 21:38:00	winsoff	Say I have a dict "numbers" and it has 4 items. Can I declare another dictionary with the item "numbers" and then use that second dictionary's shorthand reference to refer to a part of "numbers"?
2014-05-27 21:38:05	-->	rotham (~harry@174.32.52.153) has joined #python
2014-05-27 21:38:39	-->	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has joined #python
2014-05-27 21:38:47	chance	so like
2014-05-27 21:38:57	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-27 21:39:22	chance	nums = {"x":1} foo = {"bar":nums} ?
2014-05-27 21:39:30	theshit123	Hi, someone is working with virtualenv in windows? I am trying to use it but have an error when creating my virtualenv: http://oi62.tinypic.com/16jms8.jpg
2014-05-27 21:39:36	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-27 21:39:42	chance	foo["bar"]["x"] == 1
2014-05-27 21:40:12	winsoff	Hold up
2014-05-27 21:40:22	winsoff	So why does it have to be an associated array?
2014-05-27 21:40:29	chance	thats what a dictionary is
2014-05-27 21:40:42	winsoff	Oh, so something like [numbers] would just be...?
2014-05-27 21:40:44	winsoff	see http://hastebin.com/qiherijuco.hs
2014-05-27 21:40:47	winsoff	That is what I cooked up
2014-05-27 21:40:48	infobob	http://paste.pound-python.org/show/eQKNE1dOckfTuMnOnkMY/ (repasted for winsoff)
2014-05-27 21:41:10	chance	oh
2014-05-27 21:41:11	-->	speaker1234 (~Thunderbi@c-50-176-19-86.hsd1.ma.comcast.net) has joined #python
2014-05-27 21:41:17	chance	you want a list of lists?
2014-05-27 21:41:26	winsoff	I just want to be able to refer to the list with a shorter name
2014-05-27 21:41:32	chance	im not sure what your asking. i know haskell, but im still not sure what you want
2014-05-27 21:41:32	winsoff	something like a command alias in linux
2014-05-27 21:41:43	winsoff	It is not a haskell file; they just assume that
2014-05-27 21:41:47	<--	pingbat (~pingbat@f051081019.adsl.alicedsl.de) has quit (Ping timeout: 255 seconds)
2014-05-27 21:41:48	winsoff	hastebin does that by default for some reason
2014-05-27 21:41:53	-->	pingbat_ (~pingbat@g226210041.adsl.alicedsl.de) has joined #python
2014-05-27 21:41:53	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Remote host closed the connection)
2014-05-27 21:42:03	chance	i was wondering why you had weird prints in there
2014-05-27 21:42:10	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-27 21:42:12	chance	didnt even look really
2014-05-27 21:42:16	-->	yellowfish (~yellowfis@unaffiliated/yellowfish) has joined #python
2014-05-27 21:42:27	yellowfish	Can someone suggest a good methodology to do this?
2014-05-27 21:42:30	chance	just do n = numbers
2014-05-27 21:42:44	-->	venomDev (~venomDev@101.113.10.189) has joined #python
2014-05-27 21:42:47	yellowfish	I've a list of strings. Some are empty ones. I want to section this list into blocks of strings, separated by the empty ones
2014-05-27 21:42:48	chance	if you want a short name
2014-05-27 21:43:06	winsoff	If that numbers array is huge, though
2014-05-27 21:43:19	winsoff	I figured a dict lookup with first-class would be less memory intensive
2014-05-27 21:43:35	chance	it's a reference anyways.
2014-05-27 21:43:36	yellowfish	For exampe. ["hello", "yo", "mama", "", "what", "is", "", "your", "name] -> ["hello yo mama", "what is", "your name"]
2014-05-27 21:43:40	winsoff	chance: Oh, it really is?
2014-05-27 21:43:42	yellowfish	Is there an easy way to do that?
2014-05-27 21:43:52	chance	a list isnt copied when assigned
2014-05-27 21:43:59	winsoff	Well, I am stupid.
2014-05-27 21:44:02	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 255 seconds)
2014-05-27 21:44:07	winsoff	Just a pointer set to it, then?
2014-05-27 21:44:15	chance	sort of
2014-05-27 21:44:16	speaker1234	trying to use metaclasses to record creation of subclasses.  example code on top works, the real code fails. http://bpaste.net/show/hPEFt8weZPCZXVMK6mVQ/
2014-05-27 21:44:37	<--	rotham (~harry@174.32.52.153) has quit (Read error: Connection reset by peer)
2014-05-27 21:44:38	<--	johnkevinmbasco (~johnkevin@103.14.62.42) has quit (Ping timeout: 240 seconds)
2014-05-27 21:44:45	winsoff	How would it be done in the dict lookup, just for the understanding of the first-class style?
2014-05-27 21:44:50	winsoff	Or is that only for function calls?
2014-05-27 21:44:50	chance	yellowfish: how are you getting this list of strings?
2014-05-27 21:45:07	yellowfish	from an API
2014-05-27 21:45:08	chance	winsoff: what do you mean
2014-05-27 21:45:18	-->	nanodano (~dtron@99-45-202-166.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-27 21:45:32	chance	yellowfish: well are you creating the list or ?
2014-05-27 21:45:40	winsoff	In the sense of doing a dict lookup to shorten the name.  Is that possible?
2014-05-27 21:45:58	yellowfish	chance, the input list comes from an external function
2014-05-27 21:45:58	<--	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has quit (Quit: Nettalk6 - www.ntalk.de)
2014-05-27 21:46:10	chance	cause if you've got space delimited things you can easily parse it into a list of strings like you want, without having to go from a list with each word in it
2014-05-27 21:46:14	yellowfish	I need to section it into concatenated strings separated by empty elements
2014-05-27 21:46:29	<--	eoss (~e0s@pdpc/supporter/student/eoss) has quit (Remote host closed the connection)
2014-05-27 21:46:30	chance	winsoff: numbers = [1,2,3]; n = numbers; n[0] == 1
2014-05-27 21:46:32	chance	?
2014-05-27 21:46:40	-->	pwh_ (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-27 21:46:51	yellowfish	Well, it doesn't have to be a string
2014-05-27 21:46:52	-->	Eonwe1 (~Eonwe1___@2605:6000:9602:7d00:79ca:f03d:648a:bde9) has joined #python
2014-05-27 21:46:57	yellowfish	I was wondering if there was a general way to do this
2014-05-27 21:47:02	-->	johnkevinmbasco (~johnkevin@203.215.120.123) has joined #python
2014-05-27 21:47:08	yellowfish	Maybe it could be objects. Delimited by otehr objects
2014-05-27 21:47:18	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Leaving)
2014-05-27 21:47:25	<--	mathemancer (~mathemanc@66.85.135.66) has quit (Ping timeout: 265 seconds)
2014-05-27 21:47:52	chance	yellowfish: make an empty list, iterate in your original list appending the values into your new list until you find delimeter
2014-05-27 21:47:57	<--	bkuberek (~bkuberek@74.72.159.31) has quit (Remote host closed the connection)
2014-05-27 21:48:15	<--	Eonwe1 (~Eonwe1___@2605:6000:9602:7d00:79ca:f03d:648a:bde9) has left #python
2014-05-27 21:48:24	chance	then use .join() on the new list when you hit the delimeter
2014-05-27 21:48:29	chance	to join them into a single string
2014-05-27 21:48:31	-->	cewing (~cewing@97-113-30-194.tukw.qwest.net) has joined #python
2014-05-27 21:48:33	winsoff	chance: Yeah, that works, but I was curious as to if it could be done similar to the "pythonic switch statement" where they refer to a dict in order to get a function name.
2014-05-27 21:48:37	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit (Ping timeout: 245 seconds)
2014-05-27 21:48:51	--	TheFakeazneD525 is now known as MonoDenza
2014-05-27 21:49:07	chance	winsoff: can you give an example?
2014-05-27 21:49:48	<--	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has quit (Ping timeout: 258 seconds)
2014-05-27 21:49:48	chance	yellowfish: probably also need a 2nd list for storing the result
2014-05-27 21:50:03	winsoff	http://bytebaker.com/2008/11/03/switch-case-statement-in-python/ This guy does it for a function, so I do not know if a reference to an array is possible that way
2014-05-27 21:50:54	-->	maveneagle (~maveneagl@14.140.219.22) has joined #python
2014-05-27 21:51:04	<--	satyajit (~satyajit@122.169.93.248) has quit (Remote host closed the connection)
2014-05-27 21:51:15	<--	Gamenoob (~Gamenoob@93-136-142-62.adsl.net.t-com.hr) has quit (Ping timeout: 276 seconds)
2014-05-27 21:52:25	<--	johnkevinmbasco (~johnkevin@203.215.120.123) has quit (Ping timeout: 252 seconds)
2014-05-27 21:52:29	<--	kcj (~kcj@unaffiliated/kcj) has quit (Ping timeout: 258 seconds)
2014-05-27 21:52:29	<--	Debnet (~marc@smtp2.sa-cim.fr) has quit (Ping timeout: 258 seconds)
2014-05-27 21:52:43	-->	Debnet (~marc@smtp2.sa-cim.fr) has joined #python
2014-05-27 21:53:24	<--	warsh (~warsh@cpe-67-243-161-13.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-27 21:53:40	speaker1234	that switch case by dict works well
2014-05-27 21:54:01	<--	giampaolo (~giampaolo@ppp-149-239.32-151.iol.it) has quit (Ping timeout: 258 seconds)
2014-05-27 21:54:03	-->	henry- (~pulla@cs78233017.pp.htv.fi) has joined #python
2014-05-27 21:54:07	<--	semigloss (~semigloss@d192-24-132-200.try.wideopenwest.com) has quit (Quit: leaving)
2014-05-27 21:54:25	speaker1234	I believe it works for anything with a __call__ in it
2014-05-27 21:54:34	<--	mattallmill (1000@129.130.175.80) has quit (Quit: Konversation terminated!)
2014-05-27 21:54:53	winsoff	speaker1234, can you clarify what __call__ is?
2014-05-27 21:54:58	<--	SoFLy (~textual@cpe-24-92-241-58.twcny.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 21:55:07	speaker1234	k let me find a reference
2014-05-27 21:55:56	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-27 21:56:05	speaker1234	https://docs.python.org/2/reference/datamodel.html
2014-05-27 21:56:27	speaker1234	 Class instances are callable only when the class has a __call__() method; x(arguments) is a shorthand for x.__call__(arguments).
2014-05-27 21:56:41	-->	evanz_ (~evanz@cpe-74-138-17-188.swo.res.rr.com) has joined #python
2014-05-27 21:56:51	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-27 21:56:53	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-27 21:56:57	-->	norn (~norn@cgn-pool-83-219-138-135.tis-dialog.ru) has joined #python
2014-05-27 21:57:02	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Max SendQ exceeded)
2014-05-27 21:57:05	<--	greenshirt (~byte@118.97.22.161) has quit (Ping timeout: 265 seconds)
2014-05-27 21:57:07	<--	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has quit (Remote host closed the connection)
2014-05-27 21:57:09	Avaris	yellowfish: i'd do something like this: http://codepad.org/2aeuCH2i
2014-05-27 21:57:24	<--	knapper_tech (~knapper_t@p6115-ipngn4801marunouchi.tokyo.ocn.ne.jp) has quit (Ping timeout: 240 seconds)
2014-05-27 21:57:43	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-27 21:57:51	<--	Palantiri (~Palantiri@216.207.42.140) has quit (Ping timeout: 258 seconds)
2014-05-27 21:57:59	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Max SendQ exceeded)
2014-05-27 21:58:07	yellowfish	Avaris, thanks
2014-05-27 21:58:12	-->	kcj (~casey@unaffiliated/kcj) has joined #python
2014-05-27 21:58:16	yellowfish	I think you maybe have forgotten to reset new_list
2014-05-27 21:58:21	yellowfish	after each loop
2014-05-27 21:58:26	<--	BillyZane (~Billy@unaffiliated/billyzane) has quit (Quit: Leaving)
2014-05-27 21:58:40	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-27 21:58:40	<--	wjimenez5271 (~wjimenez5@108-222-64-6.lightspeed.sntcca.sbcglobal.net) has quit (Quit: Leaving.)
2014-05-27 21:58:48	Avaris	yellowfish: nope, new_lst collects the final result
2014-05-27 21:58:48	-->	BillyZane (~Billy@unaffiliated/billyzane) has joined #python
2014-05-27 21:58:52	<--	josuebrunel (~josuebrun@cho94-3-82-227-125-5.fbx.proxad.net) has quit (Quit: Leaving)
2014-05-27 21:59:01	speaker1234	are we starting yo mama jokes or is that just a bad choice of test data
2014-05-27 21:59:32	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-27 21:59:43	-->	firecat53 (~firecat53@c-98-225-17-95.hsd1.wa.comcast.net) has joined #python
2014-05-27 22:00:22	-->	josuebrunel (~josuebrun@cho94-3-82-227-125-5.fbx.proxad.net) has joined #python
2014-05-27 22:00:27	-->	johnkevinmbasco (~johnkevin@203.215.120.123) has joined #python
2014-05-27 22:01:22	-->	porco (~porco@218.30.180.178) has joined #python
2014-05-27 22:01:35	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-27 22:02:08	-->	jiku (~jiku@182.71.136.242) has joined #python
2014-05-27 22:03:15	-->	pr3d4t0r (~zhenya01@varenka.cime.net) has joined #python
2014-05-27 22:03:20	-->	snevets (~snevets@CPE788df721f4e1-CM788df721f4e0.cpe.net.cable.rogers.com) has joined #python
2014-05-27 22:03:43	<--	Muzer (~muzer@cpc1-sotn13-2-0-cust331.15-1.cable.virginm.net) has quit (Quit: ZNC - http://znc.sourceforge.net)
2014-05-27 22:03:56	<--	cgrage (cgrage@prizon.net) has quit (Quit: Lost terminal)
2014-05-27 22:04:16	-->	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has joined #python
2014-05-27 22:04:57	-->	thebearbear (~iamthebem@adsl-69-105-10-60.dsl.chic01.pacbell.net) has joined #python
2014-05-27 22:05:26	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-27 22:05:31	<--	johnkevinmbasco (~johnkevin@203.215.120.123) has quit (Ping timeout: 258 seconds)
2014-05-27 22:05:59	<--	pretty_function (~pretty_fu@61.12.96.10) has quit (Ping timeout: 252 seconds)
2014-05-27 22:06:17	yellowfish	"yo mama" is the new "hello world" speaker1234
2014-05-27 22:06:18	<--	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has quit (Quit: This computer has gone to sleep)
2014-05-27 22:06:25	-->	cyphase (~cyphase@unaffiliated/cyphase) has joined #python
2014-05-27 22:06:43	<--	kosh (~kosh@aesaeion.com) has quit (Ping timeout: 240 seconds)
2014-05-27 22:06:52	speaker1234	not "you code is so fat it encapsulates the house"
2014-05-27 22:06:54	-->	pretty_function (~pretty_fu@115.252.136.3) has joined #python
2014-05-27 22:07:23	yellowfish	"you code so fat it broke the horizontal scroll bar"
2014-05-27 22:07:27	<--	jt__ (caaf8f8f@gateway/web/freenode/ip.202.175.143.143) has quit
2014-05-27 22:07:59	<--	oleo__ (~oleo@xdsl-78-35-164-158.netcologne.de) has quit (Quit: Verlassend)
2014-05-27 22:08:03	speaker1234	you code is so fat the IDE became the ide
2014-05-27 22:08:21	<--	Arctico (~Arctico@12.175.218.87.dynamic.jazztel.es) has quit (Quit: Saliendo)
2014-05-27 22:08:48	-->	sxn (~sxn@mnch-5d86c12d.pool.mediaWays.net) has joined #python
2014-05-27 22:09:04	-->	lony (~user@183.82.3.32) has joined #python
2014-05-27 22:09:21	-->	gbaconnier (~gbaconnie@c2cpc3.camptocamp.com) has joined #python
2014-05-27 22:09:31	<--	josuebrunel (~josuebrun@cho94-3-82-227-125-5.fbx.proxad.net) has quit (Ping timeout: 240 seconds)
2014-05-27 22:09:45	-->	imsc (~chatzilla@unaffiliated/imsc) has joined #python
2014-05-27 22:09:51	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-27 22:10:38	-->	johnkevinmbasco (~johnkevin@203.215.120.123) has joined #python
2014-05-27 22:10:54	speaker1234	so, any chance for some metaclass help?
2014-05-27 22:11:10	<--	bitcraft (~bitcraft@66.254.199.125) has quit (Quit: Leaving)
2014-05-27 22:11:10	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-27 22:11:30	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-27 22:11:34	-->	Muzer (~muzer@cpc1-sotn13-2-0-cust331.15-1.cable.virginm.net) has joined #python
2014-05-27 22:12:45	-->	deciph3r (~deciph3r@unaffiliated/deciph3r) has joined #python
2014-05-27 22:13:13	-->	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has joined #python
2014-05-27 22:13:32	-->	scriptThis (~scriptThi@174-29-92-146.hlrn.qwest.net) has joined #python
2014-05-27 22:15:03	-->	plutonic (~plutonic@42.253.69.111.dynamic.snap.net.nz) has joined #python
2014-05-27 22:15:10	<--	yellowfish (~yellowfis@unaffiliated/yellowfish) has quit (Quit: Leaving)
2014-05-27 22:15:38	<--	naught101 (~naught101@uniwide-pat-pool-129-94-8-80.gw.unsw.edu.au) has quit (Ping timeout: 240 seconds)
2014-05-27 22:15:45	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-128.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-27 22:15:47	imsc	folks.. how do i handle this in python"CRITICAL - [Errno 116] Stale NFS file handle: '<directory in nsf path>'"
2014-05-27 22:15:53	-->	olskolirc (~olskolirc@gateway/tor-sasl/olskolirc) has joined #python
2014-05-27 22:16:39	imsc	https://docs.python.org/2/library/errno.html#errno.ESTALE?
2014-05-27 22:17:22	<--	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has quit (Ping timeout: 245 seconds)
2014-05-27 22:17:28	<--	robvdl (~robvdl@2404:130:0:1000:ad86:8370:f02a:68e) has quit (Quit: Leaving)
2014-05-27 22:17:33	-->	CorpusCallosum (~CorpusCal@92.45.22.236) has joined #python
2014-05-27 22:17:42	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 22:19:05	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-27 22:19:27	<--	olskolirc (~olskolirc@gateway/tor-sasl/olskolirc) has left #python
2014-05-27 22:20:19	<--	Siberian_Tiger (~Nicholas@67-210-183-162.fidnet.com) has quit (Ping timeout: 240 seconds)
2014-05-27 22:21:00	-->	Quashie (~boingredd@216.2.50.205) has joined #python
2014-05-27 22:21:15	-->	jabbott (~axel@c-71-228-56-7.hsd1.il.comcast.net) has joined #python
2014-05-27 22:21:57	-->	Arbo (~Arbo@94.107.244.58) has joined #python
2014-05-27 22:22:23	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-27 22:22:28	-->	bocaneri (~bocaneri_@about/linux/staff/sauvin) has joined #python
2014-05-27 22:22:58	-->	macieks (~macieks@ip-222-135.ists.pl) has joined #python
2014-05-27 22:24:57	<--	tjayh913 (~chatzilla@64-136-199-84.dyn.everestkc.net) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 29.0.1/20140506152807])
2014-05-27 22:26:32	<--	jjmojojjmojo (~jjmojojjm@cpe-174-099-118-115.nc.res.rr.com) has quit (Ping timeout: 245 seconds)
2014-05-27 22:27:02	<--	arescorpio (~arescorpi@204-27-245-190.fibertel.com.ar) has quit (Excess Flood)
2014-05-27 22:28:47	<--	badon (~badon@pdpc/supporter/active/badon) has quit (Ping timeout: 255 seconds)
2014-05-27 22:29:10	-->	badon (~badon@pdpc/supporter/active/badon) has joined #python
2014-05-27 22:29:17	-->	jjmojojjmojo (~jjmojojjm@cpe-174-099-118-115.nc.res.rr.com) has joined #python
2014-05-27 22:29:24	<--	johnkevinmbasco (~johnkevin@203.215.120.123) has quit (Ping timeout: 240 seconds)
2014-05-27 22:29:37	-->	jalaziz (~jalaziz@76-217-208-122.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-27 22:31:21	-->	timkofu (~timkofu@196.200.18.30) has joined #python
2014-05-27 22:31:31	<--	speaker1234 (~Thunderbi@c-50-176-19-86.hsd1.ma.comcast.net) has quit (Quit: speaker1234)
2014-05-27 22:32:22	jr3_	offby1: around?
2014-05-27 22:32:26	timkofu	Hello
2014-05-27 22:33:31	<--	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has quit (Quit: Leaving)
2014-05-27 22:33:48	<--	Back2Basics (~jeremy@cpe-173-175-53-12.hot.res.rr.com) has left #python
2014-05-27 22:36:09	<--	jr3_ (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has quit (Quit: jr3_)
2014-05-27 22:36:13	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-27 22:36:38	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Max SendQ exceeded)
2014-05-27 22:36:39	-->	eternnoir (quassel@2400:8900::f03c:91ff:fe70:b8b2) has joined #python
2014-05-27 22:36:56	<--	studmuf (~studmuf@2601:9:6700:bf:d0dd:856c:5848:82e5) has quit
2014-05-27 22:37:01	-->	weuolululu (~zhouwe@118.228.153.194) has joined #python
2014-05-27 22:37:18	-->	bluecat (~anonymous@CPE68b6fc4f1693-CM68b6fc4f1690.cpe.net.cable.rogers.com) has joined #python
2014-05-27 22:39:34	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-27 22:41:41	-->	dymv (~dymv@unaffiliated/dymv) has joined #python
2014-05-27 22:42:02	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Konversation terminated!)
2014-05-27 22:42:24	<--	dymv (~dymv@unaffiliated/dymv) has quit (Client Quit)
2014-05-27 22:43:47	<--	snevets (~snevets@CPE788df721f4e1-CM788df721f4e0.cpe.net.cable.rogers.com) has quit (Quit: leaving)
2014-05-27 22:44:05	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 255 seconds)
2014-05-27 22:45:08	<--	satyajit (~satyajit@122.169.93.248) has quit (Remote host closed the connection)
2014-05-27 22:45:27	<--	nseger (uid3777@gateway/web/irccloud.com/x-lvurkaecpbzkcepq) has quit (Quit: Connection closed for inactivity)
2014-05-27 22:45:52	<--	TripTastic (~Trip@72.25.52.143) has left #python ("Leaving")
2014-05-27 22:46:52	<--	amstan (~alex@aichallenge/admin/amstan) has quit (Quit: Konversation terminated!)
2014-05-27 22:50:01	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-27 22:50:07	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-27 22:50:09	<--	wkmanire (~wkmanire@wsip-24-234-189-66.lv.lv.cox.net) has quit (Quit: Leaving.)
2014-05-27 22:50:11	-->	skynxnex (~skynxnex@c83-248-146-127.bredband.comhem.se) has joined #python
2014-05-27 22:51:47	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-27 22:51:55	<--	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has quit (Ping timeout: 240 seconds)
2014-05-27 22:52:04	-->	CodePulsar (~code@unaffiliated/shiningthrough) has joined #python
2014-05-27 22:52:10	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-27 22:52:13	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Remote host closed the connection)
2014-05-27 22:52:52	-->	phatina (phatina@nat/redhat/x-tpotdxxkltxwnicw) has joined #python
2014-05-27 22:53:00	<--	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has quit (Ping timeout: 240 seconds)
2014-05-27 22:53:14	-->	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has joined #python
2014-05-27 22:53:17	-->	johnkevinmbasco (~johnkevin@203.215.120.123) has joined #python
2014-05-27 22:53:42	-->	bal (~Thunderbi@86.125.63.66) has joined #python
2014-05-27 22:53:42	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-27 22:55:20	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 255 seconds)
2014-05-27 22:57:51	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-27 22:58:58	-->	intuxicated (~dani@unaffiliated/hidensoft) has joined #python
2014-05-27 22:59:05	-->	lrgraham (~lrgraham@162.219.5.239) has joined #python
2014-05-27 22:59:05	<--	johnkevinmbasco (~johnkevin@203.215.120.123) has quit (Ping timeout: 264 seconds)
2014-05-27 22:59:53	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 252 seconds)
2014-05-27 23:00:42	<--	le_tropico (~le_tropic@194.44.71.236) has quit (Ping timeout: 245 seconds)
2014-05-27 23:00:59	--	lrgraham is now known as LRgraham
2014-05-27 23:01:59	-->	Augment (~IceChat77@host-2-99-212-63.as13285.net) has joined #python
2014-05-27 23:02:09	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-27 23:02:59	<--	JanC (~janc@lugwv/member/JanC) has quit (Ping timeout: 252 seconds)
2014-05-27 23:03:54	-->	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has joined #python
2014-05-27 23:04:00	-->	lamar (~Adium@AAnnecy-158-1-172-235.w86-209.abo.wanadoo.fr) has joined #python
2014-05-27 23:04:59	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Leaving)
2014-05-27 23:05:25	-->	Vivekananda (~Vivekanan@69.251.189.107) has joined #python
2014-05-27 23:06:51	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-27 23:06:57	<--	shackra (~shackra@186.32.192.206) has quit (Read error: Connection reset by peer)
2014-05-27 23:07:13	-->	livestrong (~liestrong@188.24.18.202) has joined #python
2014-05-27 23:07:22	-->	jorrit (~jorrit@bluecoat2.uzleuven.be) has joined #python
2014-05-27 23:07:23	-->	le_tropico (~le_tropic@194.44.19.252) has joined #python
2014-05-27 23:07:33	-->	naught101 (~naught101@129.94.8.80) has joined #python
2014-05-27 23:07:41	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-27 23:07:41	jorrit	Hi
2014-05-27 23:08:06	<--	naught101 (~naught101@129.94.8.80) has quit (Client Quit)
2014-05-27 23:08:18	-->	naught101 (~naught101@uniwide-pat-pool-129-94-8-80.gw.unsw.edu.au) has joined #python
2014-05-27 23:08:23	<--	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-27 23:08:40	livestrong	Hello, I have the HTML source of a page and I want to output the content of the page as PLAIN TEXT (so I want everything that is displayed on that page but without HTML tags), how can I do this?
2014-05-27 23:09:21	<--	Debnet (~marc@smtp2.sa-cim.fr) has quit (Quit: Leaving)
2014-05-27 23:12:37	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-27 23:12:46	-->	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has joined #python
2014-05-27 23:13:07	<--	satyajit (~satyajit@122.169.93.248) has quit
2014-05-27 23:13:14	<--	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has quit (Client Quit)
2014-05-27 23:13:21	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-27 23:13:22	-->	vvoody (~vvoody@216.113.168.141) has joined #python
2014-05-27 23:13:49	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-27 23:14:21	timkofu	livestrong: use beautifulsoup
2014-05-27 23:14:46	timkofu	jorrit: nobody responds to greetings in here anymore
2014-05-27 23:15:17	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-27 23:15:40	<--	le_tropico (~le_tropic@194.44.19.252) has quit (Read error: Connection reset by peer)
2014-05-27 23:15:43	jorrit	timkofu, doesn't matter. I'm using /amsg anyway
2014-05-27 23:16:18	livestrong	timkofu: I have tested it (on google search) and beautifulsoup's .get_text() method return a lot of "garbage" like some css stuff, not just what you can see on google in your browser :)
2014-05-27 23:16:48	<--	mrj (~textual@unaffiliated/vty) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 23:16:49	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined #python
2014-05-27 23:16:57	<--	sepero (~none@219.sub-75-202-159.myvzw.com) has quit (Disconnected by services)
2014-05-27 23:17:01	<--	ncthom91 (~ncthom91@mpk-nat-6.thefacebook.com) has quit (Ping timeout: 252 seconds)
2014-05-27 23:17:02	-->	keepguessing (18063218@gateway/web/freenode/ip.24.6.50.24) has joined #python
2014-05-27 23:17:13	-->	sepero (~none@115.sub-75-199-93.myvzw.com) has joined #python
2014-05-27 23:17:34	timkofu	livestrong: hold on ..
2014-05-27 23:17:35	-->	xnox (~xnox@ubuntu/member/xnox) has joined #python
2014-05-27 23:17:44	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 23:17:48	<--	venomDev (~venomDev@101.113.10.189) has quit (Read error: Connection reset by peer)
2014-05-27 23:18:46	-->	teasherm (~teasherm@99.127.229.224) has joined #python
2014-05-27 23:18:55	livestrong	timkofu: to be more clear what I want to achieve: it's like you are going on a google search page, hit ctrl+a then ctrl+c and paste it into a text. file
2014-05-27 23:19:11	timkofu	livestrong: http://www.aaronsw.com/2002/html2text/
2014-05-27 23:19:45	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-27 23:19:53	<--	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has quit (Ping timeout: 258 seconds)
2014-05-27 23:20:09	livestrong	timkofu: I think this will do the work, I will try it :) Thank you
2014-05-27 23:20:54	timkofu	livestrong: there is also this xml.etree.ElementTree.fromstring(raw_html).itertext()
2014-05-27 23:21:32	-->	thmcmahon (ca0e5133@gateway/web/freenode/ip.202.14.81.51) has joined #python
2014-05-27 23:21:48	-->	elff (~elff@5.35.78.115) has joined #python
2014-05-27 23:21:57	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 245 seconds)
2014-05-27 23:22:31	thmcmahon	Hi all, I need to create a task queue with celery that executes thousands of api requests at a certain rate, asynchronously within a certain time period. I can see the rate limit, asynchronous part. But how would I ensure that it only operates between the hours of 9:00am to 11:00am?
2014-05-27 23:22:39	livestrong	timkofu, ok, thank you :)
2014-05-27 23:23:33	<--	uon (~zjqu@116.226.75.137) has left #python
2014-05-27 23:23:55	-->	wwnnbb (~wwnnbb@85.112.113.2) has joined #python
2014-05-27 23:24:43	<--	sxn (~sxn@mnch-5d86c12d.pool.mediaWays.net) has quit (Remote host closed the connection)
2014-05-27 23:25:01	<--	teasherm (~teasherm@99.127.229.224) has quit
2014-05-27 23:25:15	-->	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has joined #python
2014-05-27 23:26:16	-->	LakeSolon (~LakeSolon@c-75-73-127-70.hsd1.mn.comcast.net) has joined #python
2014-05-27 23:26:30	<--	LakeSolon (~LakeSolon@c-75-73-127-70.hsd1.mn.comcast.net) has quit (Remote host closed the connection)
2014-05-27 23:27:11	-->	thomi (quassel@conference/canonical/x-kyhkukeydfdwvevq) has joined #python
2014-05-27 23:27:19	-->	shackra (~shackra@186.32.192.206) has joined #python
2014-05-27 23:27:19	<--	lamar (~Adium@AAnnecy-158-1-172-235.w86-209.abo.wanadoo.fr) has quit (Quit: Leaving.)
2014-05-27 23:27:56	-->	Itkovian (~Itkovian@188.189.87.112) has joined #python
2014-05-27 23:28:23	-->	kiri (~kiri@zambezi.kiri.co.zw) has joined #python
2014-05-27 23:29:09	-->	introom (~introom@wf077-083.ust.hk) has joined #python
2014-05-27 23:29:56	-->	cofi (~user@ip-95-223-13-237.unitymediagroup.de) has joined #python
2014-05-27 23:30:39	-->	fenre (~fenre@79.160.132.214.static.lyse.net) has joined #python
2014-05-27 23:32:48	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-27 23:35:03	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined #python
2014-05-27 23:35:43	-->	danny_824 (~danny@49.15.136.158) has joined #python
2014-05-27 23:36:59	<--	plutonic (~plutonic@42.253.69.111.dynamic.snap.net.nz) has quit (Quit: plutonic)
2014-05-27 23:37:11	<--	danny_824 (~danny@49.15.136.158) has left #python ("Leaving")
2014-05-27 23:37:23	-->	pragma- (~chaos@unaffiliated/pragmatic-chaos) has joined #python
2014-05-27 23:38:15	<--	cesar_bo (uid17588@gateway/web/irccloud.com/x-yogarlvtxaqoytdj) has quit (Quit: Connection closed for inactivity)
2014-05-27 23:38:15	-->	tobixx (~tobixx@194.97.106.98) has joined #python
2014-05-27 23:38:39	-->	shadok (~muaddib@unaffiliated/shadok) has joined #python
2014-05-27 23:39:02	<--	MonoDenza (~denza252@unaffiliated/denza252) has quit (Ping timeout: 245 seconds)
2014-05-27 23:39:28	-->	mdegura (~mdegura@134.117.39.62.rev.sfr.net) has joined #python
2014-05-27 23:39:35	-->	LeMike (~Thunderbi@firewall.code-x.de) has joined #python
2014-05-27 23:39:39	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-27 23:39:59	<--	bgs100 (~bgs@unaffiliated/bgs100) has quit (Quit: bgs100)
2014-05-27 23:40:39	<--	Zigtalk (~Zigtalk@cpe-72-182-60-182.austin.res.rr.com) has quit (Remote host closed the connection)
2014-05-27 23:40:51	-->	jackneill (~jackneill@unaffiliated/jackneill) has joined #python
2014-05-27 23:42:26	-->	harobed (~harobed@37.163.132.28) has joined #python
2014-05-27 23:43:54	<--	Itkovian (~Itkovian@188.189.87.112) has quit (Remote host closed the connection)
2014-05-27 23:43:56	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 255 seconds)
2014-05-27 23:44:21	-->	Itkovian (~Itkovian@vpna198.ugent.be) has joined #python
2014-05-27 23:49:22	-->	asoliman_ (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has joined #python
2014-05-27 23:49:28	<--	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-27 23:49:31	-->	pld (~pld@unaffiliated/pld) has joined #python
2014-05-27 23:50:05	--	regebro|afk is now known as regebro
2014-05-27 23:51:04	<--	Nahra (~user@unaffiliated/nahra) has quit (Remote host closed the connection)
2014-05-27 23:51:12	<--	kushal2 (~kushal3@2002:a5ea:bc37::a5ea:bc37) has quit (Quit: Leaving)
2014-05-27 23:51:12	<--	satyajit (~satyajit@122.169.93.248) has quit (Read error: Connection reset by peer)
2014-05-27 23:51:37	-->	Nahra (~user@unaffiliated/nahra) has joined #python
2014-05-27 23:51:48	-->	thanatos_hu (~thanatos_@51B7988E.dsl.pool.telekom.hu) has joined #python
2014-05-27 23:52:53	-->	jgeek (~janith@fsf/member/jgeek) has joined #python
2014-05-27 23:53:21	-->	SDr|SF (~SDr@unaffiliated/sdr) has joined #python
2014-05-27 23:53:58	<--	SushiDude (~SushiDude@unaffiliated/sushidude) has quit (Quit: Quit)
2014-05-27 23:54:34	-->	falafel (~falafel@pool-72-95-230-92.pitbpa.east.verizon.net) has joined #python
2014-05-27 23:54:34	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-27 23:54:45	jgeek	I'm using the same regex for both re.search() and re.findall() but their results are difference. re.findall() give something unexpected. and my string has only one match.
2014-05-27 23:55:29	Lacriatch	jgeek: They're different functions, they do different things
2014-05-27 23:55:31	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Remote host closed the connection)
2014-05-27 23:55:50	thmcmahon	Hi all, I need to create a task queue with celery that executes thousands of api requests at a certain rate, asynchronously within a certain time period. I can see the rate limit, asynchronous part. But how would I ensure that it only operates between the hours of 9:00am to 11:00am?
2014-05-27 23:56:04	<--	harobed (~harobed@37.163.132.28) has quit
2014-05-27 23:56:09	<--	Nahra (~user@unaffiliated/nahra) has quit (Remote host closed the connection)
2014-05-27 23:56:38	jgeek	Lacriatch: yeah, but my requirement is, to capture multiple matchings iteratively. re.search() does as I expected but can't use for iteratively. any suggestions ?
2014-05-27 23:56:40	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-27 23:56:45	<--	mordonez (~mordonez@190.43.190.13) has quit (Quit: Computer has gone to sleep.)
2014-05-27 23:56:51	Lacriatch	thmcmahon: Only put them in the queue between those hours. Or schedule them for the time you want them to run. That's my best guess
2014-05-27 23:56:54	<--	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has quit (Ping timeout: 272 seconds)
2014-05-27 23:56:56	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-27 23:57:17	-->	SushiDude (~SushiDude@unaffiliated/sushidude) has joined #python
2014-05-27 23:57:21	-->	mordonez (~mordonez@190.43.190.13) has joined #python
2014-05-27 23:57:24	Lacriatch	jgeek: So you're not using findall, you're using finditer?
2014-05-27 23:57:25	-->	harobed (~harobed@37.163.132.28) has joined #python
2014-05-27 23:57:46	-->	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has joined #python
2014-05-27 23:57:59	<--	epitron (~epitron@unaffiliated/epitron) has quit (Ping timeout: 252 seconds)
2014-05-27 23:58:11	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-27 23:59:17	<--	satyajit (~satyajit@122.169.93.248) has quit (Read error: Connection reset by peer)
2014-05-27 23:59:18	-->	satyajit_ (~satyajit@122.169.93.248) has joined #python
2014-05-27 23:59:22	-->	vnagpal (cba1b303@gateway/web/freenode/ip.203.161.179.3) has joined #python
2014-05-27 23:59:22	jgeek	Lacriatch: I tried findall, but it capture something else. not as I expected. re.search() does it well. will finditer act as re.search() ?
2014-05-27 23:59:23	thmcmahon	Lacriatch: so celery doesn't have a way to only run between times x and y, best just to do an if time > x and < y: run tasks
2014-05-28 00:00:09	-->	epitron (~epitron@unaffiliated/epitron) has joined #python
2014-05-28 00:00:38	-->	Dharmit (shahdharmi@nat/redhat/x-acccurofilaojvkc) has joined #python
2014-05-28 00:00:41	-->	mishok13 (~mishok13@092-111-145-057.static.chello.nl) has joined #python
2014-05-28 00:00:42	Lacriatch	jgeek: You can iterate with re.search
2014-05-28 00:00:53	<--	emma (~em@unaffiliated/emma) has quit (Ping timeout: 264 seconds)
2014-05-28 00:00:55	Lacriatch	jgeek: If search does what you need just use it
2014-05-28 00:01:00	<--	eggsmiao (~cat@121.237.100.25) has quit (Quit: Leaving.)
2014-05-28 00:01:03	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-28 00:01:07	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 240 seconds)
2014-05-28 00:01:13	-->	picca (~picca@86.188.222.130) has joined #python
2014-05-28 00:01:16	Lacriatch	thmcmahon: Not that I'm aware of, no. But I'm not particularly expert in celery
2014-05-28 00:01:23	<--	theshit123 (~theshit@217.217.50.206.dyn.user.ono.com) has quit (Quit: Leaving)
2014-05-28 00:01:29	<--	Moor (~Moor@73.189.94.25) has quit (Ping timeout: 252 seconds)
2014-05-28 00:01:43	thmcmahon	Lacriatch: all good, that seems like a sensible thing anyway.
2014-05-28 00:01:51	-->	carebeer_ (~snxt@gateway/tor-sasl/carebeer) has joined #python
2014-05-28 00:01:51	<--	mordonez (~mordonez@190.43.190.13) has quit (Ping timeout: 252 seconds)
2014-05-28 00:01:53	jgeek	Lacriatch: TypeError: '_sre.SRE_Match' object is not iterable
2014-05-28 00:02:25	jgeek	Lacriatch: for r in pattern.search(query_t):
2014-05-28 00:02:32	Lacriatch	jgeek: No, it's not iterable. You'll have to write your own iterator.
2014-05-28 00:02:35	Lacriatch	But you can still iterate.
2014-05-28 00:02:44	Lacriatch	thmcmahon: http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html is the best I can do
2014-05-28 00:02:50	<--	jeffisabelle (~jeffisabe@85.110.126.115) has quit (Ping timeout: 255 seconds)
2014-05-28 00:02:55	-->	mahmoudimus_ (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-28 00:03:01	-->	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has joined #python
2014-05-28 00:03:04	Lacriatch	thmcmahon: Maybe you could make a Celery task to add the first job at <start time>
2014-05-28 00:03:14	<--	carebeer (~snxt@gateway/tor-sasl/carebeer) has quit (Ping timeout: 272 seconds)
2014-05-28 00:03:17	<--	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-28 00:03:29	thmcmahon	Lacriatch: yeah saw that but that seems more like I only want to run this task once every x increments. This is more like do all of these thousands of task between times x and y.
2014-05-28 00:03:37	<--	satyajit_ (~satyajit@122.169.93.248) has quit (Ping timeout: 245 seconds)
2014-05-28 00:03:39	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-28 00:03:40	-->	en_zyme (d10680be@gateway/web/freenode/ip.209.6.128.190) has joined #python
2014-05-28 00:03:47	Lacriatch	thmcmahon: Do you want to run them repetitively?
2014-05-28 00:04:27	-->	august_first (~Adium@cpe-70-117-109-120.austin.res.rr.com) has joined #python
2014-05-28 00:04:30	<--	august_first (~Adium@cpe-70-117-109-120.austin.res.rr.com) has left #python
2014-05-28 00:05:19	<--	ivan\ (~ivan@unaffiliated/ivan/x-000001) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-05-28 00:05:31	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 252 seconds)
2014-05-28 00:05:59	-->	ivan\ (~ivan@unaffiliated/ivan/x-000001) has joined #python
2014-05-28 00:06:15	thmcmahon	Lacriatch: basically I need to send somewhere between 5 - 10 http API requests per second, within a three hour window
2014-05-28 00:06:16	<--	picca (~picca@86.188.222.130) has quit (Quit: Lingo - http://lingoirc.com)
2014-05-28 00:06:24	<--	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has quit (Ping timeout: 272 seconds)
2014-05-28 00:06:30	thmcmahon	Lacriatch: without them blocking each other while they wait to hear back from the server.
2014-05-28 00:06:45	-->	picca (~picca@86.188.222.130) has joined #python
2014-05-28 00:06:47	<--	epitron (~epitron@unaffiliated/epitron) has quit (Ping timeout: 252 seconds)
2014-05-28 00:07:15	<--	mahmoudimus_ (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 252 seconds)
2014-05-28 00:07:20	Lacriatch	thmcmahon: I don't think Celery is what you want for this
2014-05-28 00:07:31	thmcmahon	Lacriatch: what would you use?
2014-05-28 00:07:35	-->	avoinea (~avoinea@85.9.55.194) has joined #python
2014-05-28 00:07:38	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-28 00:07:48	<--	chowmeined (~chowmeine@unaffiliated/chowmeined) has quit (Ping timeout: 258 seconds)
2014-05-28 00:08:15	Lacriatch	thmcmahon: Something much more basic. Just a thread pool with multiprocessing maybe.
2014-05-28 00:08:32	Lacriatch	thmcmahon: Do you actually need this distributed across multiple hosts?
2014-05-28 00:08:43	-->	edofso (~edofso@a80-100-189-109.adsl.xs4all.nl) has joined #python
2014-05-28 00:09:04	en_zyme	 /WHO #Twilight_Zone
2014-05-28 00:09:27	-->	lad1337 (~Adium@212.12.46.3) has joined #python
2014-05-28 00:09:29	-->	jargon (~jargon@unaffiliated/jargon-) has joined #python
2014-05-28 00:10:15	-->	Soham (~Soham@202.78.233.60) has joined #python
2014-05-28 00:10:15	thmcmahon	Lacriatch: and that would be enough to ensure that there's not more than x requests per second and that they're done asynchronously?
2014-05-28 00:10:26	thmcmahon	Lacriatch: not at this stage, and if i do i'm happy to refactor
2014-05-28 00:10:48	<--	lad1337 (~Adium@212.12.46.3) has quit (Client Quit)
2014-05-28 00:11:01	Lacriatch	jgeek: https://gist.github.com/anonymous/fdb654e213673d87479d should do what you want. You can just do 'for match in itersearch(expression, string)'
2014-05-28 00:11:23	Lacriatch	thmcmahon: You don't need to do them asynchronously if you use multiprocessing
2014-05-28 00:11:32	<--	drawks (~drawks@spatula.twistflip.com) has quit (Ping timeout: 245 seconds)
2014-05-28 00:11:36	Lacriatch	Since they won't block each other
2014-05-28 00:11:57	<--	Gio^ (~bugz@dti-rtr.wtc.aerioconnect.net) has quit (Ping timeout: 245 seconds)
2014-05-28 00:11:59	thmcmahon	Lacriatch: but do I need 5 processor cores in order to have 5 workers running at a time?
2014-05-28 00:12:09	Lacriatch	thmcmahon: Of course not
2014-05-28 00:12:16	Lacriatch	Well technically
2014-05-28 00:12:31	jgeek	Lacriatch, I'll try. Thanks :)
2014-05-28 00:12:34	Lacriatch	But as far as you're concerned, no
2014-05-28 00:12:36	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 240 seconds)
2014-05-28 00:12:48	Lacriatch	jgeek: I didn't actually test it but hope it works :)
2014-05-28 00:12:59	Lacriatch	jgeek: Note that it needs a compiled expression, not just r'ashdl'
2014-05-28 00:13:31	jgeek	Lacriatch: previously I used a compiled regex
2014-05-28 00:13:37	-->	skaflem (~skaflem@ti0099a430-0965.bb.online.no) has joined #python
2014-05-28 00:13:44	thmcmahon	Lacriatch: OK - so I don't need that many cores and what about rate limiting? Is this it https://docs.python.org/2/library/multiprocessing.html
2014-05-28 00:14:07	-->	czapla (~czapla@2a02:8109:8380:1298:95a1:e43f:e5d6:a033) has joined #python
2014-05-28 00:14:09	Lacriatch	jgeek: I'm just saying the code I gave you won't work with anything but a compiled expression.
2014-05-28 00:14:24	Lacriatch	thmcmahon: About the rate limiting, all I can think is manage the pool yourself.
2014-05-28 00:14:45	Lacriatch	thmcmahon: Yes, that's the module/docs you need
2014-05-28 00:14:47	jgeek	Yeah I understand. I can use the same thing, so no problem :)
2014-05-28 00:14:59	Lacriatch	I'm off though, good luck!
2014-05-28 00:15:00	-->	Elek101 (~textual@diagenode.socext.ulg.ac.be) has joined #python
2014-05-28 00:15:19	--	underyx is now known as Underyx
2014-05-28 00:15:21	-->	thanatos_hu_ (~thanatos_@51B7988E.dsl.pool.telekom.hu) has joined #python
2014-05-28 00:15:30	-->	tanja84dk_ (~tanja84dk@unaffiliated/tanja84dk) has joined #python
2014-05-28 00:15:51	-->	jeffisabelle (~jeffisabe@193.140.108.147) has joined #python
2014-05-28 00:16:02	-->	Infant (~thomas@78-56-194-78.static.zebra.lt) has joined #python
2014-05-28 00:16:03	-->	emma (~em@unaffiliated/emma) has joined #python
2014-05-28 00:16:25	-->	drawks (~drawks@spatula.twistflip.com) has joined #python
2014-05-28 00:17:09	-->	lettzmi (~lettzmi@64.149.140.196) has joined #python
2014-05-28 00:17:15	<--	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has quit (Ping timeout: 265 seconds)
2014-05-28 00:17:38	-->	wwnnbb_ (~wwnnbb@trancom-gw.anders.ru) has joined #python
2014-05-28 00:17:41	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 00:17:45	-->	r0x0rZ (~r0x0rZ@90.183.77.40) has joined #python
2014-05-28 00:18:09	<--	naught101 (~naught101@uniwide-pat-pool-129-94-8-80.gw.unsw.edu.au) has quit (Ping timeout: 258 seconds)
2014-05-28 00:18:09	-->	johnraz (~johnraz@unaffiliated/johnraz) has joined #python
2014-05-28 00:18:23	<--	cewing (~cewing@97-113-30-194.tukw.qwest.net) has quit (Quit: Hasta lumbago...)
2014-05-28 00:18:32	<--	thanatos_hu (~thanatos_@51B7988E.dsl.pool.telekom.hu) has quit (Ping timeout: 258 seconds)
2014-05-28 00:18:32	<--	tanja84dk (~tanja84dk@unaffiliated/tanja84dk) has quit (Ping timeout: 258 seconds)
2014-05-28 00:18:34	-->	tom94 (~tom@152.78.171.10) has joined #python
2014-05-28 00:18:42	<--	czapla (~czapla@2a02:8109:8380:1298:95a1:e43f:e5d6:a033) has quit (Ping timeout: 265 seconds)
2014-05-28 00:18:53	<--	wwnnbb (~wwnnbb@85.112.113.2) has quit (Ping timeout: 264 seconds)
2014-05-28 00:18:53	--	wwnnbb_ is now known as wwnnbb
2014-05-28 00:19:02	-->	koell (~tauron@91.141.0.34.wireless.dyn.drei.com) has joined #python
2014-05-28 00:19:06	-->	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has joined #python
2014-05-28 00:19:15	<--	picca (~picca@86.188.222.130) has quit (Remote host closed the connection)
2014-05-28 00:19:17	<--	harobed (~harobed@37.163.132.28) has quit
2014-05-28 00:19:31	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 240 seconds)
2014-05-28 00:20:17	<--	satyajit (~satyajit@122.169.93.248) has quit (Remote host closed the connection)
2014-05-28 00:20:33	<--	umair (~umair@182.178.39.168) has quit (Ping timeout: 252 seconds)
2014-05-28 00:20:37	-->	picca (~picca@86.188.222.130) has joined #python
2014-05-28 00:21:19	-->	OOPMan (~adamj@105-236-104-101.access.mtnbusiness.co.za) has joined #python
2014-05-28 00:21:21	-->	evil_gordita (robert@ip70-188-56-12.rn.hr.cox.net) has joined #python
2014-05-28 00:21:23	-->	MonoDenza (~denza252@unaffiliated/denza252) has joined #python
2014-05-28 00:21:42	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 00:22:03	-->	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has joined #python
2014-05-28 00:22:17	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-28 00:22:38	<--	thomi (quassel@conference/canonical/x-kyhkukeydfdwvevq) has quit (Ping timeout: 240 seconds)
2014-05-28 00:22:55	cdunklau	thmcmahon: do you have to do the async stuff through celery?
2014-05-28 00:22:59	<--	jleclanche (~adys@unaffiliated/adys) has quit (Read error: Connection reset by peer)
2014-05-28 00:23:09	--	nsfw is now known as xnrand
2014-05-28 00:23:38	-->	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has joined #python
2014-05-28 00:24:22	cdunklau	thmcmahon: i'm not really familiar with celery, so forgive me if that's covered... twisted is probably the best thing for async network stuff.
2014-05-28 00:24:35	--	defane_ is now known as defane
2014-05-28 00:24:37	<--	Elek101 (~textual@diagenode.socext.ulg.ac.be) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2014-05-28 00:24:45	<--	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-05-28 00:24:58	thmcmahon	cdunklau: yeah cheers, it seems like both twisted and celery would work, but cleery just seems easier to me.
2014-05-28 00:25:22	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-28 00:25:40	-->	jleclanche (~adys@unaffiliated/adys) has joined #python
2014-05-28 00:25:48	<--	Itkovian (~Itkovian@vpna198.ugent.be) has quit (Ping timeout: 240 seconds)
2014-05-28 00:26:45	cdunklau	thmcmahon: I'm betting you'll get better concurrency with twisted than running a syncronous client with multiprocessing
2014-05-28 00:26:50	<--	livestrong (~liestrong@188.24.18.202) has left #python
2014-05-28 00:26:56	cdunklau	dunno if request rate is super important
2014-05-28 00:28:23	<--	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has quit (Remote host closed the connection)
2014-05-28 00:28:33	<--	az_ (~az@unaffiliated/devix) has quit (Ping timeout: 276 seconds)
2014-05-28 00:29:42	en_zyme	quit
2014-05-28 00:29:46	<--	bluecat (~anonymous@CPE68b6fc4f1693-CM68b6fc4f1690.cpe.net.cable.rogers.com) has quit (Quit: bluecat)
2014-05-28 00:29:58	<--	en_zyme (d10680be@gateway/web/freenode/ip.209.6.128.190) has quit
2014-05-28 00:30:07	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 00:30:59	<--	r0x0rZ (~r0x0rZ@90.183.77.40) has quit (Remote host closed the connection)
2014-05-28 00:31:27	-->	johnkevinmbasco (~johnkevin@203.215.120.123) has joined #python
2014-05-28 00:31:50	<--	kumarat9pm (~surendra@123.252.231.217) has left #python
2014-05-28 00:31:51	-->	benoitbb (~benoitbb@token.novapost.net) has joined #python
2014-05-28 00:31:54	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Quit: Lämnar)
2014-05-28 00:31:56	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-28 00:32:25	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 00:32:30	-->	josuebrunel (~josuebrun@ppp-42.net-188-130-104.static.magiconline.fr) has joined #python
2014-05-28 00:32:33	<--	iAmerikan (~foo@c-76-120-120-77.hsd1.co.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-28 00:32:41	-->	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has joined #python
2014-05-28 00:32:56	<--	albel727 (~albel727@unaffiliated/albel727) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-05-28 00:33:18	-->	Elek101 (~textual@diagenode.socext.ulg.ac.be) has joined #python
2014-05-28 00:33:40	<--	CodePulsar (~code@unaffiliated/shiningthrough) has quit (Quit: Konversation terminated!)
2014-05-28 00:34:35	-->	epitron (~epitron@unaffiliated/epitron) has joined #python
2014-05-28 00:34:38	<--	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Remote host closed the connection)
2014-05-28 00:34:41	-->	jnhghy (~jalexandr@86.125.114.50) has joined #python
2014-05-28 00:35:13	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-28 00:35:16	-->	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has joined #python
2014-05-28 00:35:44	-->	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has joined #python
2014-05-28 00:36:15	<--	jgeek (~janith@fsf/member/jgeek) has quit (Quit: Leaving)
2014-05-28 00:36:16	-->	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has joined #python
2014-05-28 00:36:16	jnhghy	on one server I have a python script that makes a http request in another server lets say server1.com/?id=1&auth=azd what should I do in server1.com so that I can read the request link and to respond to it from another python script? is there a tutorial for this?
2014-05-28 00:36:50	<--	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has quit (Quit: Going AFK...)
2014-05-28 00:37:15	-->	albel727 (~albel727@unaffiliated/albel727) has joined #python
2014-05-28 00:37:21	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-28 00:37:24	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 240 seconds)
2014-05-28 00:38:03	-->	diverdude (4fa1036e@gateway/web/freenode/ip.79.161.3.110) has joined #python
2014-05-28 00:38:11	cdunklau	jnhghy: you should probably use a framework. django or flask or pyramid
2014-05-28 00:38:34	-->	umair (~umair@182.178.19.227) has joined #python
2014-05-28 00:39:12	jnhghy	cdunklau: thanks for the resonse, I thought so, do you know which is the lightest? as the scripts are quite small ...
2014-05-28 00:40:28	<--	asoliman_ (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has quit (Remote host closed the connection)
2014-05-28 00:40:58	diverdude	Hello, when i run p = subprocess.Popen(['pdflatex /home/argo/www/zweb/reportoutput/main.tex'], stdout=subprocess.PIPE) i get an error saying [Errno 2] No such file or directory. Why is it giving that error? i am in ipython executing the command, and the file exists and have 777 permissions. What am I doing wrong?
2014-05-28 00:41:03	-->	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has joined #python
2014-05-28 00:41:27	<--	maveneagle (~maveneagl@14.140.219.22) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 00:41:39	<--	vvoody (~vvoody@216.113.168.141) has quit (Remote host closed the connection)
2014-05-28 00:41:41	-->	JotaK (~ZzZz@unaffiliated/jotak) has joined #python
2014-05-28 00:41:48	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-28 00:42:23	<--	fuzeman|away (~fuzeman@unaffiliated/fuzeman) has quit (Ping timeout: 265 seconds)
2014-05-28 00:42:32	diverdude	nevermind
2014-05-28 00:42:51	-->	ezdookie (~ezdookie@190.113.213.122) has joined #python
2014-05-28 00:46:06	<--	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has quit (Ping timeout: 276 seconds)
2014-05-28 00:46:14	-->	andi- (~andi@unaffiliated/andi-) has joined #python
2014-05-28 00:46:19	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Remote host closed the connection)
2014-05-28 00:47:29	-->	oubiga (~oubiga@120.100.165.83.dynamic.mundo-r.com) has joined #python
2014-05-28 00:47:45	<--	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has quit (Quit: WeeChat 0.4.3)
2014-05-28 00:48:03	-->	Nahra (~user@unaffiliated/nahra) has joined #python
2014-05-28 00:48:31	-->	harobed (~harobed@ANancy-652-1-518-32.w86-197.abo.wanadoo.fr) has joined #python
2014-05-28 00:48:41	<--	regebro (~regebro@31.172.179.174) has quit (Remote host closed the connection)
2014-05-28 00:49:29	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Read error: Connection reset by peer)
2014-05-28 00:49:31	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-28 00:49:32	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 00:49:33	-->	mijicd (~mijicd@cable-188-246-40-9.dynamic.kdsinter.net) has joined #python
2014-05-28 00:50:02	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-28 00:50:04	-->	[diablo] (~bmi@unaffiliated/miles/x-000000001) has joined #python
2014-05-28 00:50:34	-->	mn3monic (~xxwa@unaffiliated/mn3monic) has joined #python
2014-05-28 00:50:34	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-28 00:51:07	-->	quetzakubica (~redsky@94.42.194.58) has joined #python
2014-05-28 00:51:11	-->	scar00t (Anemos@cpe-98-157-152-53.ma.res.rr.com) has joined #python
2014-05-28 00:51:58	--	Underyx is now known as underyx
2014-05-28 00:52:00	-->	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has joined #python
2014-05-28 00:52:06	-->	Rizzit (4e8dbb56@gateway/web/freenode/ip.78.141.187.86) has joined #python
2014-05-28 00:52:26	-->	Itkovian (~Itkovian@nata200.ugent.be) has joined #python
2014-05-28 00:52:38	<--	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has quit (Ping timeout: 272 seconds)
2014-05-28 00:53:00	<--	JerryT (~jerryt@ip24-252-42-26.om.om.cox.net) has quit (Remote host closed the connection)
2014-05-28 00:54:11	<--	Azulinho (~weechat@cpc14-cwma7-2-0-cust817.7-3.cable.virginm.net) has quit (Ping timeout: 252 seconds)
2014-05-28 00:55:13	Rizzit	Hello pythonians, yesterday I "finished" my first program in python after 2 months of work and although being a total noob it works like a charm. I use cx_freeze to compile and now I'm facing a problem that some people have no java installed or no flash etc and then my program is not working. What is the best approach to make an install package with all the programs that the user needs in order to run my program?
2014-05-28 00:55:31	<--	cxz (~cxz@unaffiliated/cxz) has quit (Remote host closed the connection)
2014-05-28 00:55:35	-->	freeman_u (~freeman_u@gw.quart-soft.net) has joined #python
2014-05-28 00:56:01	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 252 seconds)
2014-05-28 00:56:04	-->	Balliad (~textual@80.79.35.95) has joined #python
2014-05-28 00:56:36	-->	bmispelon (~bmispelon@django/committer/bmispelon) has joined #python
2014-05-28 00:58:18	<--	reference (~reference@122.172.198.131) has quit (Remote host closed the connection)
2014-05-28 00:58:25	-->	lad1337 (~Adium@212.12.46.3) has joined #python
2014-05-28 00:58:54	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 01:03:35	<--	reference (~reference@122.172.198.131) has quit (Ping timeout: 255 seconds)
2014-05-28 01:04:37	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Read error: Connection reset by peer)
2014-05-28 01:05:10	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 01:05:11	<--	harobed (~harobed@ANancy-652-1-518-32.w86-197.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2014-05-28 01:05:45	<--	Elek101 (~textual@diagenode.socext.ulg.ac.be) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 01:06:27	<--	Fusxfaranto (~quassel@c-69-181-236-33.hsd1.ca.comcast.net) has quit (Ping timeout: 258 seconds)
2014-05-28 01:06:53	-->	maveneagle (~maveneagl@14.140.219.22) has joined #python
2014-05-28 01:07:05	<--	maveneagle (~maveneagl@14.140.219.22) has quit (Max SendQ exceeded)
2014-05-28 01:08:29	<--	cyphase (~cyphase@unaffiliated/cyphase) has quit (Ping timeout: 252 seconds)
2014-05-28 01:08:29	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-28 01:10:11	winsoff	Rizzit: Flash and Java are both plugins that should not be bundled.  Provide a check at installation, and then direct them to the appropriate websites to download and install the package.
2014-05-28 01:10:55	<--	picca (~picca@86.188.222.130) has quit (Quit: Computer has gone to sleep.)
2014-05-28 01:11:23	-->	picca (~picca@86.188.222.130) has joined #python
2014-05-28 01:11:24	timkofu	Rizzit: just out of interest, why does it need java?
2014-05-28 01:11:45	-->	fuzeman|away (~fuzeman@unaffiliated/fuzeman) has joined #python
2014-05-28 01:12:05	-->	harobed (~harobed@ANancy-652-1-518-32.w86-197.abo.wanadoo.fr) has joined #python
2014-05-28 01:12:06	forgot	why does wsgiref exist in a brand new virtualenv?
2014-05-28 01:12:08	<--	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has quit (Ping timeout: 255 seconds)
2014-05-28 01:12:21	nanonyme	Java very much is often a bundled thing these days
2014-05-28 01:12:51	nanonyme	Especially on Windows since installing JRE means you get browser plugin which is something people should *not* install
2014-05-28 01:12:58	Rizzit	timkofu: because it automates a java program if certain conditions are met
2014-05-28 01:13:16	timkofu	Rizzit: I see
2014-05-28 01:13:19	Rizzit	winsoff: ok sounds reasonable
2014-05-28 01:14:16	Rizzit	winsoff: if i want to include a program however, what would be your suggestion?
2014-05-28 01:14:29	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Quit: Lämnar)
2014-05-28 01:14:30	<--	umair (~umair@182.178.19.227) has quit (Ping timeout: 258 seconds)
2014-05-28 01:15:00	nanonyme	Eg PyCharm bundles its own Java
2014-05-28 01:15:38	<--	picca (~picca@86.188.222.130) has quit (Ping timeout: 240 seconds)
2014-05-28 01:15:54	--	johnraz is now known as johnraz|away
2014-05-28 01:16:05	-->	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has joined #python
2014-05-28 01:16:43	-->	Guest47349 (~az@unaffiliated/devix) has joined #python
2014-05-28 01:17:07	--	Guest47349 is now known as az_
2014-05-28 01:17:41	<--	Sergobe (~sergobe@33.146.216.201.dsl.intelnet.net.gt) has quit (Ping timeout: 264 seconds)
2014-05-28 01:18:07	-->	Sergobe (~sergobe@33.146.216.201.dsl.intelnet.net.gt) has joined #python
2014-05-28 01:18:27	--	johnraz|away is now known as johnraz
2014-05-28 01:18:39	--	jholden_away is now known as jholden
2014-05-28 01:19:27	<--	mishok13 (~mishok13@092-111-145-057.static.chello.nl) has quit (Ping timeout: 245 seconds)
2014-05-28 01:19:47	<--	huza (~My@153.119.220.145) has quit (Ping timeout: 255 seconds)
2014-05-28 01:19:51	<--	mFacenet (~mFacenet@unaffiliated/mfacenet) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 01:20:23	[diablo]	Morning #python ... guys I wondered if anyone can recommend the best method to search and replace in a plain text file. I've got a bunch of BIND zone files that badly need a clean up
2014-05-28 01:20:46	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined #python
2014-05-28 01:21:17	-->	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has joined #python
2014-05-28 01:21:21	<--	Lemony (~textual@cpc50-slam6-2-0-cust27.2-4.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 01:21:31	-->	phuh (~phuh@cp66-203-194-42.cp.telus.net) has joined #python
2014-05-28 01:21:39	-->	mishok13 (~mishok13@092-111-145-057.static.chello.nl) has joined #python
2014-05-28 01:21:42	-->	umair (~umair@39.44.22.61) has joined #python
2014-05-28 01:22:56	Rizzit	[diablo]: can you bpaste the code?
2014-05-28 01:23:15	-->	r0x0rZ (~r0x0rZ@90.183.77.40) has joined #python
2014-05-28 01:23:33	-->	le0 (~l30@unaffiliated/le0) has joined #python
2014-05-28 01:23:33	-->	Ariel_Calzada (~aricalso@201.216.0.73) has joined #python
2014-05-28 01:23:43	<--	rockyrock (~rockyrock@unaffiliated/rockyrock) has quit (Quit: rockyrock)
2014-05-28 01:23:50	[diablo]	hi Rizzit no code currently I am about to start writing a script today, but just wanted to know if there is a module I can use to simplify things
2014-05-28 01:24:05	<--	elff (~elff@5.35.78.115) has quit (Remote host closed the connection)
2014-05-28 01:24:26	-->	visualshock (~visualsho@host-37-191-204-89.lynet.no) has joined #python
2014-05-28 01:24:30	-->	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has joined #python
2014-05-28 01:24:46	-->	elff (~elff@5.35.78.115) has joined #python
2014-05-28 01:24:47	Terminus-	[diablo]: if it's just a basic search and replace, why not just use sed or perl?
2014-05-28 01:24:50	Rizzit	[diablo]: I usually go with .replace('stuff i dislike','')
2014-05-28 01:25:51	-->	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has joined #python
2014-05-28 01:26:13	nanonyme	Hmm, there could also be a bind parser so you could parse, modify and unparse the zone files
2014-05-28 01:26:33	[diablo]	ah nice
2014-05-28 01:26:51	[diablo]	I will google around
2014-05-28 01:27:05	<--	satyajit (~satyajit@122.169.93.248) has quit (Remote host closed the connection)
2014-05-28 01:27:20	-->	picca (~picca@86.188.222.130) has joined #python
2014-05-28 01:27:28	-->	marr (~ccc@dynamic-78-8-53-223.ssp.dialog.net.pl) has joined #python
2014-05-28 01:27:50	-->	mulander (uid1766@gateway/web/irccloud.com/x-tgqmbazeczaovhff) has joined #python
2014-05-28 01:28:21	nanonyme	That seems at least to me a more solid approach than just replacing strings and hoping nothing important gets replaced
2014-05-28 01:28:58	<--	elff (~elff@5.35.78.115) has quit (Ping timeout: 240 seconds)
2014-05-28 01:28:59	<--	le0 (~l30@unaffiliated/le0) has quit (Quit: Leaving)
2014-05-28 01:29:51	<--	shackra (~shackra@186.32.192.206) has quit (Remote host closed the connection)
2014-05-28 01:30:38	<--	umair (~umair@39.44.22.61) has quit (Ping timeout: 240 seconds)
2014-05-28 01:31:02	-->	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has joined #python
2014-05-28 01:31:09	-->	thomi (quassel@conference/canonical/x-baqkyvkkxcajygsy) has joined #python
2014-05-28 01:32:16	<--	koell (~tauron@91.141.0.34.wireless.dyn.drei.com) has quit (Read error: Connection reset by peer)
2014-05-28 01:32:50	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 255 seconds)
2014-05-28 01:33:13	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined #python
2014-05-28 01:33:17	<--	evanz_ (~evanz@cpe-74-138-17-188.swo.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-05-28 01:33:47	-->	flub (~flub@host217-41-56-26.in-addr.btopenworld.com) has joined #python
2014-05-28 01:34:02	<--	ezdookie (~ezdookie@190.113.213.122) has quit (Quit: Leaving)
2014-05-28 01:34:53	<--	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-05-28 01:35:16	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-28 01:35:52	cdunklau	nanonyme: bah, coward
2014-05-28 01:36:23	cdunklau	real programmers know overzealous search and replace is a sales issue, not a bug
2014-05-28 01:37:17	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 01:37:19	-->	geri (~anonymous@089144226137.atnat0035.highway.a1.net) has joined #python
2014-05-28 01:37:35	-->	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has joined #python
2014-05-28 01:38:05	<--	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has quit (Ping timeout: 264 seconds)
2014-05-28 01:38:10	<--	JotaK (~ZzZz@unaffiliated/jotak) has quit (Quit: ChatZilla 0.9.90.1-rdmsoft [XULRunner 1.9.2.19/20110707195905])
2014-05-28 01:38:14	<--	stdDoubt (~ptiago@193-126-23-159.static.optimus.net.pt) has quit (Remote host closed the connection)
2014-05-28 01:38:20	-->	greg_f (~greg@altlinux/developer/greg) has joined #python
2014-05-28 01:38:43	-->	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has joined #python
2014-05-28 01:39:10	<--	Tranzorro (~shiekadam@cpe-69-205-156-118.stny.res.rr.com) has quit (Quit: jIRCii - http://www.oldschoolirc.com)
2014-05-28 01:39:24	<--	LeMike (~Thunderbi@firewall.code-x.de) has quit (Ping timeout: 240 seconds)
2014-05-28 01:40:29	-->	LeMike (~Thunderbi@firewall.code-x.de) has joined #python
2014-05-28 01:40:34	-->	koell (~tauron@91.141.1.26.wireless.dyn.drei.com) has joined #python
2014-05-28 01:40:35	-->	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined #python
2014-05-28 01:41:47	<--	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Client Quit)
2014-05-28 01:42:17	<--	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has quit (Client Quit)
2014-05-28 01:42:26	-->	chrismed (~chrismed@abjr214.neoplus.adsl.tpnet.pl) has joined #python
2014-05-28 01:42:36	<--	introom (~introom@wf077-083.ust.hk) has quit (Ping timeout: 240 seconds)
2014-05-28 01:42:50	-->	durut (~root@71-94-128-82.static.mtpk.ca.charter.com) has joined #python
2014-05-28 01:42:53	<--	cardboard (~cardboard@DHCP-159-220.caltech.edu) has quit (Read error: Connection reset by peer)
2014-05-28 01:43:00	-->	dumdedum (~dumdedum@85.251.33.42.dyn.user.ono.com) has joined #python
2014-05-28 01:43:40	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 01:43:51	-->	hypha (~hypha@cpc1-sgyl30-2-0-cust752.sgyl.cable.virginm.net) has joined #python
2014-05-28 01:43:51	-->	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has joined #python
2014-05-28 01:43:57	--	johnraz is now known as johnraz|away
2014-05-28 01:44:00	-->	ddsl (~kvirc@5.254.239.119) has joined #python
2014-05-28 01:45:00	<--	nsh (~unf@wikipedia/nsh) has quit (Quit: Leaving)
2014-05-28 01:45:20	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 01:45:49	-->	umair (~umair@182.178.25.84) has joined #python
2014-05-28 01:47:16	<--	lvh (~lvh@python/psf/lvh) has left #python
2014-05-28 01:47:20	<--	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has quit (Client Quit)
2014-05-28 01:49:31	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-28 01:49:37	-->	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has joined #python
2014-05-28 01:49:41	-->	rockyrock (~rockyrock@unaffiliated/rockyrock) has joined #python
2014-05-28 01:50:18	<--	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has quit (Ping timeout: 240 seconds)
2014-05-28 01:50:31	-->	Azulinho (~weechat@62.254.184.134) has joined #python
2014-05-28 01:50:41	<--	picca (~picca@86.188.222.130) has left #python
2014-05-28 01:51:45	-->	andtorg (~andtorg@ppp-242-158.98-62.inwind.it) has joined #python
2014-05-28 01:51:46	-->	ivonunes (~ivonunes@194.65.5.235) has joined #python
2014-05-28 01:52:06	-->	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has joined #python
2014-05-28 01:52:20	<--	codeitloadit (~codeitloa@ip68-106-222-103.oc.oc.cox.net) has quit
2014-05-28 01:53:00	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 240 seconds)
2014-05-28 01:53:13	-->	yaw (~yaw@41.215.170.55) has joined #python
2014-05-28 01:53:37	<--	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has quit (Ping timeout: 245 seconds)
2014-05-28 01:54:12	<--	thebearbear (~iamthebem@adsl-69-105-10-60.dsl.chic01.pacbell.net) has quit
2014-05-28 01:55:37	-->	Eisenhorn (~juan@unaffiliated/eisenhorn) has joined #python
2014-05-28 01:56:53	-->	lucian (~lucian@194.74.244.130) has joined #python
2014-05-28 01:57:56	-->	zooz (~zooz@87.85.173.82) has joined #python
2014-05-28 01:58:21	<--	intuxicated (~dani@unaffiliated/hidensoft) has quit (Ping timeout: 252 seconds)
2014-05-28 01:58:23	-->	introom (~introom@wf077-083.ust.hk) has joined #python
2014-05-28 01:58:26	<--	brodul (~brodul@brodul.org) has quit (Ping timeout: 252 seconds)
2014-05-28 01:58:59	-->	jpj (~jpj@101.63.222.87) has joined #python
2014-05-28 01:58:59	<--	jpj (~jpj@101.63.222.87) has quit (Client Quit)
2014-05-28 01:59:33	<--	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 01:59:37	-->	jpj (~jpj@101.63.222.87) has joined #python
2014-05-28 01:59:44	<--	r0x0rZ (~r0x0rZ@90.183.77.40) has quit (Remote host closed the connection)
2014-05-28 02:00:27	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-28 02:00:55	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 252 seconds)
2014-05-28 02:01:21	<--	ivonunes (~ivonunes@194.65.5.235) has quit (Read error: Connection reset by peer)
2014-05-28 02:01:26	-->	mdunc_ (~mdunc@j124244.ppp.asahi-net.or.jp) has joined #python
2014-05-28 02:01:41	-->	EPG (~EPG@pC19EA6D1.dip0.t-ipconnect.de) has joined #python
2014-05-28 02:01:54	cdunklau	jnhghy: flask is good for simple stuff
2014-05-28 02:02:01	<--	mdunc_ (~mdunc@j124244.ppp.asahi-net.or.jp) has left #python
2014-05-28 02:02:01	<--	thomi (quassel@conference/canonical/x-baqkyvkkxcajygsy) has quit (Ping timeout: 252 seconds)
2014-05-28 02:02:10	jnhghy	thanks cdunklau
2014-05-28 02:02:54	-->	crucl0 (~alekzp@78.165.95.41) has joined #python
2014-05-28 02:02:57	-->	kpal (~kpal@janus-nat-128-240-225-120.ncl.ac.uk) has joined #python
2014-05-28 02:03:20	<--	eggsmiao (~cat@121.237.100.25) has quit (Read error: Connection reset by peer)
2014-05-28 02:03:30	-->	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has joined #python
2014-05-28 02:03:42	<--	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has quit (Max SendQ exceeded)
2014-05-28 02:04:03	-->	ivonunes (~ivonunes@194.65.5.235) has joined #python
2014-05-28 02:04:25	-->	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has joined #python
2014-05-28 02:04:29	<--	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has quit (Ping timeout: 264 seconds)
2014-05-28 02:04:57	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 252 seconds)
2014-05-28 02:05:20	-->	huza (~My@153.119.220.11) has joined #python
2014-05-28 02:05:52	-->	CodePulsar (~code@unaffiliated/shiningthrough) has joined #python
2014-05-28 02:06:18	<--	kpal (~kpal@janus-nat-128-240-225-120.ncl.ac.uk) has quit (Read error: Connection reset by peer)
2014-05-28 02:06:37	cdunklau	hmm... how do i assert that a method in a twisted protocol was called
2014-05-28 02:06:48	<--	jackneill (~jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2014-05-28 02:07:19	<--	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has quit (Remote host closed the connection)
2014-05-28 02:08:00	-->	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has joined #python
2014-05-28 02:08:52	<--	ghostlines (~ghostline@095-097-139-090.static.chello.nl) has quit (Read error: Connection reset by peer)
2014-05-28 02:09:18	-->	renierdebruyn (~chatzilla@41.162.43.179) has joined #python
2014-05-28 02:10:12	-->	deniska (~denis@unaffiliated/deniska) has joined #python
2014-05-28 02:10:14	<--	deniska (~denis@unaffiliated/deniska) has quit (Max SendQ exceeded)
2014-05-28 02:10:15	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Quit: aljohri)
2014-05-28 02:10:52	-->	intuxicated (~dani@unaffiliated/hidensoft) has joined #python
2014-05-28 02:11:01	-->	deniska (~denis@unaffiliated/deniska) has joined #python
2014-05-28 02:11:18	<--	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has quit (Quit: Leaving.)
2014-05-28 02:11:27	-->	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has joined #python
2014-05-28 02:11:32	-->	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has joined #python
2014-05-28 02:12:14	-->	kingplusplus (~kingplusp@41.58.96.7) has joined #python
2014-05-28 02:12:52	-->	kpal (~kpal@janus-nat-128-240-225-121.ncl.ac.uk) has joined #python
2014-05-28 02:13:05	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 02:13:10	-->	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has joined #python
2014-05-28 02:13:15	-->	witchdoc (~witchdoc@unaffiliated/witchdoc) has joined #python
2014-05-28 02:13:18	witchdoc	hi all
2014-05-28 02:13:23	<--	nihilista (~nihilista@141-138-25-88.dsl.iskon.hr) has quit (Ping timeout: 252 seconds)
2014-05-28 02:13:25	diverdude	Hello, why is python -c "import subprocess;p = subprocess.Popen(['pdflatex', '-jobname abilda','main.tex'], stdout=subprocess.PIPE);print p.communicate()" not working when pdflatex -jobname abilda main.tex is working great?
2014-05-28 02:14:17	kingplusplus	please am having decode or encode error with this code i have included the full traceback
2014-05-28 02:14:18	kingplusplus	http://pastebin.com/YbWe5wWZ
2014-05-28 02:14:19	cdunklau	diverdude: because you've tokenized it wrong
2014-05-28 02:14:20	infobob	http://paste.pound-python.org/show/3igauYHAjk0CaL3xmxWf/ (repasted for kingplusplus)
2014-05-28 02:14:25	kingplusplus	please am having decode or encode error with this code i have included the full traceback  -- http://pastebin.com/YbWe5wWZ
2014-05-28 02:14:29	diverdude	cdunklau: how so?
2014-05-28 02:14:34	cdunklau	diverdude: '-jobname', 'abilda'
2014-05-28 02:14:38	witchdoc	diverdude: did you try  subprocess.Popen(['pdflatex', '-jobname', 'abilda','main.tex'] ?
2014-05-28 02:15:01	witchdoc	diverdude: more args need to be single elements of a list
2014-05-28 02:15:26	diverdude	witchdoc: yes then i just get error: OSError: [Errno 2] No such file or directory
2014-05-28 02:15:55	<--	Vialas (~Vialas@14-203-235-228.static.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2014-05-28 02:16:11	<--	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has quit (Client Quit)
2014-05-28 02:16:11	cdunklau	kingplusplus: python 2 or 3
2014-05-28 02:16:20	kingplusplus	cdunklau, python 2
2014-05-28 02:16:37	-->	nihilista (~nihilista@89-164-126-48.dsl.iskon.hr) has joined #python
2014-05-28 02:17:11	diverdude	witchdoc: cdunklau ah sry my bad...now its working :) thanks
2014-05-28 02:17:38	kingplusplus	i have tried both decode and encode --- i want to print errors to text file and also to stderr
2014-05-28 02:18:26	-->	emorrow (~Thunderbi@86.44.238.42) has joined #python
2014-05-28 02:18:31	<--	fenre (~fenre@79.160.132.214.static.lyse.net) has quit (Remote host closed the connection)
2014-05-28 02:18:40	witchdoc	kingplusplus: logging module with file handler and stderr?
2014-05-28 02:18:41	cdunklau	kingplusplus: oh this is windows
2014-05-28 02:18:52	cdunklau	kingplusplus: open('bread.txt', 'wb')
2014-05-28 02:18:53	-->	chowmeined (~chowmeine@unaffiliated/chowmeined) has joined #python
2014-05-28 02:19:10	cdunklau	kingplusplus: oh wait
2014-05-28 02:19:26	<--	magicflakes (~cellopin@202.78.127.130) has quit (Quit: Sleeping)
2014-05-28 02:19:52	<--	thanatos_hu_ (~thanatos_@51B7988E.dsl.pool.telekom.hu) has quit (Ping timeout: 245 seconds)
2014-05-28 02:20:25	-->	le_tropico (~le_tropic@nat/cisco/x-fpfhgfjhnzohktgp) has joined #python
2014-05-28 02:20:26	cdunklau	kingplusplus: your bytes are already utf-8. so you can either just write them to the file (opened with 'wb') without decoding, or open the file in text mode with the proper encoding
2014-05-28 02:20:30	<--	huza (~My@153.119.220.11) has quit (Ping timeout: 265 seconds)
2014-05-28 02:20:55	cdunklau	kingplusplus: io.open('bread.txt', 'w', encoding='utf-8') and then give it unicode instead of bytes
2014-05-28 02:21:18	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-28 02:22:22	-->	uon (~zjqu@116.226.75.137) has joined #python
2014-05-28 02:22:31	--	johnraz|away is now known as johnraz
2014-05-28 02:22:35	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-28 02:23:15	kingplusplus	cdunklau, comenting         #message = message.encode('utf-8').lower().strip()
2014-05-28 02:23:16	kingplusplus	 and doen io.open('bread.txt', 'wb')
2014-05-28 02:23:23	kingplusplus	did the trick thats interesting
2014-05-28 02:23:25	cdunklau	kingplusplus: no
2014-05-28 02:23:41	-->	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has joined #python
2014-05-28 02:23:45	cdunklau	kingplusplus: if you're using io.open, don't use binary mode
2014-05-28 02:23:49	cdunklau	there's no point
2014-05-28 02:24:08	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 255 seconds)
2014-05-28 02:24:25	<--	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 02:24:47	cdunklau	kingplusplus: io.open(filename, 'wb') gives you a file object that accepts bytes. io.open(filename, 'w') gives you a file object that accepts unicode
2014-05-28 02:24:53	<--	emorrow (~Thunderbi@86.44.238.42) has quit (Ping timeout: 264 seconds)
2014-05-28 02:25:19	<--	cofi (~user@ip-95-223-13-237.unitymediagroup.de) has quit (Remote host closed the connection)
2014-05-28 02:25:32	cdunklau	kingplusplus: meditate on http://bit.ly/unipain again
2014-05-28 02:25:39	-->	cofi (~user@ip-95-223-13-237.unitymediagroup.de) has joined #python
2014-05-28 02:26:05	kingplusplus	cdunklau, ok thanks for your help
2014-05-28 02:26:08	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-28 02:27:08	kingplusplus	i will look into this because i have to deal with other character types as am scrapping thousands of websites and at a tume i had this same unicode error before i included the message = message.encode('utf-8').lower().strip()
2014-05-28 02:27:10	-->	fenre (~fenre@79.160.132.214.static.lyse.net) has joined #python
2014-05-28 02:27:16	kingplusplus	to get pass the error
2014-05-28 02:27:16	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 265 seconds)
2014-05-28 02:27:23	cdunklau	kingplusplus: yes don't do that
2014-05-28 02:27:31	cdunklau	kingplusplus: unicode sandwich
2014-05-28 02:27:44	cdunklau	kingplusplus: what are you using for the scraping
2014-05-28 02:27:53	kingplusplus	am using lxml
2014-05-28 02:28:06	kingplusplus	and requests
2014-05-28 02:28:27	cdunklau	kingplusplus: hmm you should probably be using scrapy
2014-05-28 02:28:41	cdunklau	but pastebin your code for the request processing and xml parsing
2014-05-28 02:28:50	kingplusplus	ok
2014-05-28 02:29:09	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 02:29:10	-->	saily (~saily@146.108.200.10) has joined #python
2014-05-28 02:30:12	-->	mission (~mission@unaffiliated/mission) has joined #python
2014-05-28 02:30:36	kingplusplus	cdunklau, this is the code http://pastebin.com/7enTQ8GE -- I just learn't python and wanted to do something challenging and ended up doing this
2014-05-28 02:30:37	infobob	http://paste.pound-python.org/show/o7sJob3U9sfl6y1ldKMe/ (repasted for kingplusplus)
2014-05-28 02:31:20	cdunklau	kingplusplus: ok, your logging stuff is pretty strange
2014-05-28 02:31:26	kingplusplus	cdunklau, btw am just around 3months old, with google, so, and you and #python i did something i 1 week with enough reading
2014-05-28 02:31:28	cdunklau	kingplusplus: better to use the logging module
2014-05-28 02:31:36	cdunklau	kingplusplus: https://docs.python.org/2/howto/logging.html
2014-05-28 02:31:41	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-28 02:31:49	<--	ojdo (~ojdo@unaffiliated/ojdo) has left #python ("WeeChat 0.4.2")
2014-05-28 02:32:00	-->	decoponio (~decoponio@pon059-128.kcn.ne.jp) has joined #python
2014-05-28 02:33:29	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Client Quit)
2014-05-28 02:33:30	kingplusplus	cdunklau, between, from what u see, do you think scrapy could have been better? am asking because my knowledge is that scraps one site but in this case am doing thousands based on search result
2014-05-28 02:33:46	cdunklau	kingplusplus: scrapy is intended for scraping
2014-05-28 02:33:58	cdunklau	but it might be difficult to learn for you. i'd say give it a try
2014-05-28 02:34:22	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 02:34:29	-->	Centime (~centime@a6000.insa-lyon.fr) has joined #python
2014-05-28 02:34:54	kingplusplus	cdunklau, i will re-write another using it for another site --- however this has given me intro the lxml and requests which is cool
2014-05-28 02:35:04	cdunklau	kingplusplus: sure, definitely worthwhile
2014-05-28 02:35:28	<--	satyajit (~satyajit@122.169.93.248) has quit (Remote host closed the connection)
2014-05-28 02:36:05	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 255 seconds)
2014-05-28 02:36:32	<--	cofi (~user@ip-95-223-13-237.unitymediagroup.de) has quit (Ping timeout: 255 seconds)
2014-05-28 02:36:58	-->	Vialas (~Vialas@14-203-235-228.static.tpgi.com.au) has joined #python
2014-05-28 02:37:18	<--	chowmeined (~chowmeine@unaffiliated/chowmeined) has quit (Ping timeout: 258 seconds)
2014-05-28 02:37:31	<--	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2014-05-28 02:37:51	Centime	I have 3 classes : Parent, Child1, Child2. How do I do so I can call Parent(something) and and test something to see if the returned object should be Child1 or Child2 ?
2014-05-28 02:38:13	-->	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has joined #python
2014-05-28 02:38:14	<--	SevenWolf (~SevenWolf@unaffiliated/sevenwolf) has quit (Quit: SevenWolf)
2014-05-28 02:38:54	cdunklau	ugh my brain hurts. dammit twisted
2014-05-28 02:39:05	cdunklau	Centime: it's not really clear what you mean
2014-05-28 02:39:17	cdunklau	Centime: could you pastebin some code that demonstrates your situation?
2014-05-28 02:39:30	Centime	Sure
2014-05-28 02:39:56	Centime	http://sprunge.us/iUcW
2014-05-28 02:40:32	cdunklau	Centime: oh lawd, you were a java dev before you started python, weren't you
2014-05-28 02:40:55	Centime	Nope, I'm having classes by a Java teacher :S
2014-05-28 02:41:01	cdunklau	uuuuugh
2014-05-28 02:41:05	cdunklau	Centime: what's this for?
2014-05-28 02:41:31	-->	emorrow (~Thunderbi@176.12.107.139) has joined #python
2014-05-28 02:41:42	Centime	Messing around with design patterns
2014-05-28 02:41:48	-->	Cuppa_coffee (~Beast@5ED4E499.cm-7-5d.dynamic.ziggo.nl) has joined #python
2014-05-28 02:41:52	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2014-05-28 02:41:58	<--	OOPMan (~adamj@105-236-104-101.access.mtnbusiness.co.za) has quit (Ping timeout: 240 seconds)
2014-05-28 02:42:05	cdunklau	Centime: is it an assignment?
2014-05-28 02:42:15	<--	deniska (~denis@unaffiliated/deniska) has quit (Ping timeout: 265 seconds)
2014-05-28 02:42:32	Centime	Nope, it's free exercices. That's why I'm free to use python
2014-05-28 02:42:42	cdunklau	Centime: ok, what pattern is this
2014-05-28 02:42:45	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-28 02:42:54	Centime	Adapter
2014-05-28 02:42:57	cdunklau	Centime: and i still don't see what your original question has to do with this
2014-05-28 02:43:04	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-28 02:43:23	-->	OOPMan (~adamj@196-215-27-12.dynamic.isadsl.co.za) has joined #python
2014-05-28 02:43:42	-->	brodul (~brodul@brodul.org) has joined #python
2014-05-28 02:43:47	Centime	cdunklau: I am currently doing it using this nasty Adapter(thing).adapt()
2014-05-28 02:44:15	Centime	cdunklau: I should be able to use obly Adapter(thing), right ?
2014-05-28 02:44:34	cdunklau	ok, i see, you're trying to adapt the NonConform and Zob objects to this "hello" interface
2014-05-28 02:44:39	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 02:44:47	Centime	cdunklau: Exactly.
2014-05-28 02:44:52	cdunklau	I don't get what the adapt method is supposed to do though
2014-05-28 02:45:12	Centime	It shouldn't be there in the first place
2014-05-28 02:45:27	cdunklau	Centime: so get rid of it
2014-05-28 02:45:30	-->	rotham (~harry@174.32.52.153) has joined #python
2014-05-28 02:45:31	Centime	But I use it to find out which specific adapter to use
2014-05-28 02:45:38	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 240 seconds)
2014-05-28 02:45:44	<--	johnkevinmbasco (~johnkevin@203.215.120.123) has quit
2014-05-28 02:45:47	cdunklau	Centime: oh, that's something to use a function for
2014-05-28 02:45:50	<--	rotham (~harry@174.32.52.153) has quit (Read error: Connection reset by peer)
2014-05-28 02:46:11	wleslie	you don't normally figure that out, the interface does
2014-05-28 02:46:11	wleslie	IFoo(value)
2014-05-28 02:46:11	wleslie	is this zope.interface ?
2014-05-28 02:46:28	cdunklau	Centime: keep that dict global, and use a function to make the "adapted" object
2014-05-28 02:46:33	cdunklau	wleslie: humm?
2014-05-28 02:46:42	cdunklau	wleslie: maybe
2014-05-28 02:46:42	wleslie	no? ok, nevermind.
2014-05-28 02:46:45	Centime	cdunklau: My prof is a java addict :D
2014-05-28 02:46:55	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 02:47:07	Centime	But wait, I'll try to talk him into this
2014-05-28 02:47:45	cdunklau	Centime: another point: the dict should just map the classes to the adapter classes directly
2014-05-28 02:47:48	<--	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has quit (Ping timeout: 240 seconds)
2014-05-28 02:48:00	<--	uidzer0 (uidzer0@2604:180:1::7fae:9b8) has quit (K-Lined)
2014-05-28 02:48:00	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (K-Lined)
2014-05-28 02:48:00	<--	stal[GL] (sss@unaffiliated/stal) has quit (K-Lined)
2014-05-28 02:48:00	<--	MOSCOW (vladivosto@unaffiliated/vladivostok) has quit (K-Lined)
2014-05-28 02:48:00	<--	Xe (xe@unaffiliated/xe) has quit (K-Lined)
2014-05-28 02:48:00	<--	ultrashag (ultrashag@ipv6.firrre.com) has quit (K-Lined)
2014-05-28 02:48:01	<--	Dabo (dabo@dabo.us) has quit (K-Lined)
2014-05-28 02:48:03	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 02:48:11	<--	porco (~porco@218.30.180.178) has quit (Quit: Leaving...)
2014-05-28 02:48:25	cdunklau	err wait, types aren't hashable, are they
2014-05-28 02:48:31	-->	jooools (~ejulfit@194.237.142.17) has joined #python
2014-05-28 02:49:02	cdunklau	ah, yes they are
2014-05-28 02:49:17	Centime	Yes they are
2014-05-28 02:49:19	Centime	>>> {type('uu'):'y'}
2014-05-28 02:49:21	-->	stal (sss@unaffiliated/stal) has joined #python
2014-05-28 02:49:21	Centime	{<type 'str'>: 'y'}
2014-05-28 02:49:34	-->	vladivostok (vladivosto@unaffiliated/vladivostok) has joined #python
2014-05-28 02:49:48	-->	Dabo (dabo@dabo.us) has joined #python
2014-05-28 02:50:05	<--	jalaziz (~jalaziz@76-217-208-122.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2014-05-28 02:50:14	cdunklau	Centime: heck you could make just one adapter class. make it dispatch to a method named in the init
2014-05-28 02:50:14	--	vladivostok is now known as MOSCOW
2014-05-28 02:50:24	-->	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has joined #python
2014-05-28 02:51:09	cdunklau	Centime: so you'd use it like a = Adapter(nonconf, 'bonjour')
2014-05-28 02:51:39	cdunklau	Centime: or use the dict to map adapt-ee types to the method name
2014-05-28 02:51:45	-->	chowmeined (~chowmeine@unaffiliated/chowmeined) has joined #python
2014-05-28 02:51:47	Centime	cdunklau: Yup, I thought about it also
2014-05-28 02:51:52	cdunklau	really though, this is pretty much useless
2014-05-28 02:52:04	cdunklau	design patterns are crap without real application practice
2014-05-28 02:52:05	-->	maveneagle (~maveneagl@14.140.219.22) has joined #python
2014-05-28 02:52:12	<--	maveneagle (~maveneagl@14.140.219.22) has quit (Max SendQ exceeded)
2014-05-28 02:52:15	<--	lad1337 (~Adium@212.12.46.3) has quit (Quit: Leaving.)
2014-05-28 02:52:19	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined #python
2014-05-28 02:52:26	cdunklau	Centime: btw if you haven't read this you should http://me.veekun.com/blog/2013/03/03/the-controller-pattern-is-awful-and-other-oo-heresy/
2014-05-28 02:52:49	-->	ultrashag (ultrashag@ipv6.firrre.com) has joined #python
2014-05-28 02:52:55	-->	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has joined #python
2014-05-28 02:53:19	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 02:53:26	<--	Eisenhorn (~juan@unaffiliated/eisenhorn) has quit (Quit: leaving)
2014-05-28 02:53:47	<--	jiku (~jiku@182.71.136.242) has quit (Ping timeout: 258 seconds)
2014-05-28 02:54:18	-->	iLiFo (~david@41.13.4.46) has joined #python
2014-05-28 02:54:31	-->	Xe (xe@unaffiliated/xe) has joined #python
2014-05-28 02:54:43	<--	introom (~introom@wf077-083.ust.hk) has quit (Ping timeout: 240 seconds)
2014-05-28 02:54:54	cdunklau	Centime: and if you want to piss off your prof, show it to him :)
2014-05-28 02:55:00	Centime	Sry, I was talking with the prof
2014-05-28 02:55:09	Centime	cdunklau: And I showed it to him ;)
2014-05-28 02:55:21	cdunklau	Centime: and if he agrees with it, you may have a good prof
2014-05-28 02:55:31	Centime	But he's a cool guy, no offense meant, none taken
2014-05-28 02:55:38	Centime	He's a good prof
2014-05-28 02:55:57	cdunklau	Centime: what class is it, specifically
2014-05-28 02:56:26	Centime	We finally agreed that it is just something that couldn't be done (resonably) in python the way it would have been in java
2014-05-28 02:56:37	cdunklau	Centime: also it's probably not necessary
2014-05-28 02:56:41	cdunklau	(in python)
2014-05-28 02:56:42	-->	redeemed (m@nat/ibm/x-yllnccxwhydapfzh) has joined #python
2014-05-28 02:56:59	-->	porco (~porco@218.30.180.178) has joined #python
2014-05-28 02:57:01	Centime	But that it's not really the point, since cs has been evolving since the first time of design patterns
2014-05-28 02:57:14	cdunklau	Centime: but still, it could. the main problem is python doesn't have interfaces. but you can add them with zope.interface, which is a Good Thing(tm)
2014-05-28 02:57:15	Centime	Yup
2014-05-28 02:57:17	Cuppa_coffee	https://praw.readthedocs.org/en/v2.1.16/index.html < can anybody tell me why the " [str(x) for x in submissions]" isnt displaying anything in the quick peek example?
2014-05-28 02:57:54	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 02:58:02	Centime	cdunklau: It's a course called Modelisation & Genie Logiciel
2014-05-28 02:58:20	Centime	which basically is software design & modelization
2014-05-28 02:58:23	cdunklau	Cuppa_coffee: i suspect it didn't get any results
2014-05-28 02:58:47	-->	includex (~includex@194.65.5.235) has joined #python
2014-05-28 02:59:00	<--	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2014-05-28 02:59:16	-->	david89 (~david89@unaffiliated/david89) has joined #python
2014-05-28 02:59:23	Cuppa_coffee	feared as much, what can i change to make it get results?
2014-05-28 02:59:30	Cuppa_coffee	try another subreddit?
2014-05-28 03:00:24	david89	Hello. A script I'm working on spits out "'ascii' codec can't decode byte [...]". Is there an exception I can try catching to better understand where this is happening?
2014-05-28 03:00:41	-->	elff (~elff@5.35.78.115) has joined #python
2014-05-28 03:00:48	cdunklau	Cuppa_coffee: probably. it works for me on 'all'
2014-05-28 03:01:18	cdunklau	david89: you're trapping errors too broadly
2014-05-28 03:01:24	Cuppa_coffee	nothing...
2014-05-28 03:01:26	-->	airos (~airos@lbg31-1-78-245-85-24.fbx.proxad.net) has joined #python
2014-05-28 03:01:36	cdunklau	Cuppa_coffee: show the complete code
2014-05-28 03:01:42	-->	Burgundy (~burgundy@188.25.126.27) has joined #python
2014-05-28 03:01:56	cdunklau	david89: the output is only that? or does it give you a stack trace
2014-05-28 03:02:16	Cuppa_coffee	import praw
2014-05-28 03:02:16	Cuppa_coffee	r = praw.Reddit(user_agent='test_application')
2014-05-28 03:02:17	Cuppa_coffee	submissions = r.get_subreddit('all').get_hot(limit=5)
2014-05-28 03:02:17	Cuppa_coffee	[str(x) for x in submissions]
2014-05-28 03:02:52	<--	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 03:03:01	jorrit	Cuppa_coffee, that last line doesn't do anything. It builds a list and throws it away.
2014-05-28 03:03:24	cdunklau	Cuppa_coffee: are you doing that in the interpreter or in a file
2014-05-28 03:03:33	cdunklau	Cuppa_coffee: if it's in a file, jorrit is correct
2014-05-28 03:03:36	Cuppa_coffee	doing that in geany
2014-05-28 03:03:47	cdunklau	dunno what geany is
2014-05-28 03:03:50	Cuppa_coffee	and i saved it to a test.py
2014-05-28 03:03:53	Centime	just add a print
2014-05-28 03:04:03	cdunklau	yeah just print [str(x) for x in submissions]
2014-05-28 03:04:04	david89	cdunklau: I trap UnicodeDecodeError on xlwt.workbook.save()
2014-05-28 03:04:14	Centime	geany is a text editor
2014-05-28 03:04:17	cdunklau	david89: so stop doing that, or at least log the traceback
2014-05-28 03:04:20	cdunklau	Centime: ah
2014-05-28 03:04:22	-->	maveneag_ (~maveneagl@14.140.219.22) has joined #python
2014-05-28 03:04:24	<--	maveneag_ (~maveneagl@14.140.219.22) has quit (Remote host closed the connection)
2014-05-28 03:04:42	david89	cdunklau: the error arises in save, I would like to know the error when inserting the data in the workbook
2014-05-28 03:04:42	cdunklau	david89: logging.exception() will do it for you
2014-05-28 03:04:43	<--	oubiga (~oubiga@120.100.165.83.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-28 03:04:58	<--	CatKiller (~catkiller@unaffiliated/catkiller) has quit (Read error: No route to host)
2014-05-28 03:05:01	cdunklau	david89: so stop trapping it, and it will bubble up and give you a traceback so you can find out where the problem is
2014-05-28 03:06:13	Cuppa_coffee	jorrit, cdunklau thank you both! I feel like an idiot
2014-05-28 03:06:24	Cuppa_coffee	this isnt the first time I forgot some print statement
2014-05-28 03:06:43	david89	cdunklau: I already know where the problem happens, I would like to intercept it before. The error happens when saving the file, not when inserting the "unsaveable" data into the file
2014-05-28 03:07:10	-->	jiku (~jiku@182.73.253.194) has joined #python
2014-05-28 03:07:10	cdunklau	david89: ...
2014-05-28 03:07:15	cdunklau	david89: show us the traceback
2014-05-28 03:07:31	-->	deniska (~denis@unaffiliated/deniska) has joined #python
2014-05-28 03:07:52	david89	cdunklau: http://pastebin.com/JVX3Jw58
2014-05-28 03:07:53	infobob	http://paste.pound-python.org/show/qm2EKailnY6pDShr4rRg/ (repasted for david89)
2014-05-28 03:08:13	-->	lad1337 (~Adium@212.12.46.3) has joined #python
2014-05-28 03:08:36	<--	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has quit (Quit: Wychodzi)
2014-05-28 03:08:40	-->	samphippen (~textual@37.157.33.78) has joined #python
2014-05-28 03:08:53	<--	weuolululu (~zhouwe@118.228.153.194) has quit (Remote host closed the connection)
2014-05-28 03:09:29	<--	Centime (~centime@a6000.insa-lyon.fr) has quit (Ping timeout: 252 seconds)
2014-05-28 03:09:30	<--	reference (~reference@122.172.198.131) has quit (Remote host closed the connection)
2014-05-28 03:09:30	-->	eka (~eka@190.237.10.159) has joined #python
2014-05-28 03:10:06	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 03:10:29	cdunklau	david89: so encoding there is ascii. where did s come from?
2014-05-28 03:10:30	-->	lad13371 (~Adium@212.12.46.3) has joined #python
2014-05-28 03:10:53	cdunklau	david89: i'd suggest setting a breakpoint at workbook.save (in extractor.py)
2014-05-28 03:10:58	<--	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has quit (Ping timeout: 240 seconds)
2014-05-28 03:11:10	cdunklau	david89: and then at the last line shown in the traceback, and find out what `s` is
2014-05-28 03:11:17	cdunklau	david89: pdb will let you set breakpoints
2014-05-28 03:12:09	-->	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has joined #python
2014-05-28 03:12:14	cdunklau	david89: oh, it looks like xlwt.Workbook will let you set the encoding
2014-05-28 03:12:20	<--	lad13371 (~Adium@212.12.46.3) has quit (Client Quit)
2014-05-28 03:12:42	<--	lad1337 (~Adium@212.12.46.3) has quit (Ping timeout: 265 seconds)
2014-05-28 03:13:01	cdunklau	david89: do that. or you might be able to just use unicode objects instead of bytes
2014-05-28 03:13:15	david89	cdunklau: just out of curiosity, where are you getting docs for xlwt?
2014-05-28 03:13:25	david89	I am having a terrible time navigating the official ones
2014-05-28 03:13:36	cdunklau	david89: if you're not comfortable with unicode/decoding/etc, http://bit.ly/unipain is a great thing
2014-05-28 03:13:50	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-28 03:13:57	cdunklau	david89: https://mail.python.org/pipermail/python-list/2010-October/589405.html was the first hit on google for "xlwt decode error"
2014-05-28 03:14:12	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 240 seconds)
2014-05-28 03:14:13	--	vbabiy_ is now known as vbabiy
2014-05-28 03:14:14	-->	rotham (~harry@174.32.52.153) has joined #python
2014-05-28 03:14:23	<--	airos (~airos@lbg31-1-78-245-85-24.fbx.proxad.net) has quit (Quit: Leaving)
2014-05-28 03:14:37	<--	reference (~reference@122.172.198.131) has quit (Ping timeout: 252 seconds)
2014-05-28 03:15:20	david89	I'll try setting the encoding
2014-05-28 03:15:24	david89	my mysql table has utf8
2014-05-28 03:15:36	cdunklau	david89: hmm. what driver are you using
2014-05-28 03:15:48	david89	MySQLdb
2014-05-28 03:15:49	cdunklau	david89: any good one will give you unicode for text fields, not bytes
2014-05-28 03:16:02	cdunklau	pretty sure MySQLdb will too. not that it's actually good
2014-05-28 03:16:28	cdunklau	david89: check the type() of the things mysqldb gives you
2014-05-28 03:16:32	<--	koell (~tauron@91.141.1.26.wireless.dyn.drei.com) has quit (Ping timeout: 245 seconds)
2014-05-28 03:16:36	david89	cdunklau: setting the encoding fixed the problem apparently
2014-05-28 03:16:52	cdunklau	david89: right, but you should make sure you're dealing with unicode objects as much as possible
2014-05-28 03:17:14	cdunklau	david89: "unicode sandwich" like nedbat says in that talk
2014-05-28 03:17:19	david89	cdunklau: true haha
2014-05-28 03:17:27	david89	I will read that talk, seems very interesting
2014-05-28 03:17:35	cdunklau	watch it. it's better that way :)
2014-05-28 03:17:58	<--	wleslie (~verte@python/site-packages/verte) has quit (Ping timeout: 240 seconds)
2014-05-28 03:18:04	cdunklau	david89: oh and by "check the type()" i don't mean always
2014-05-28 03:18:13	cdunklau	just make sure it's giving you unicode with a quick test
2014-05-28 03:18:18	-->	bkuberek (~bkuberek@74.72.159.31) has joined #python
2014-05-28 03:18:19	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-28 03:18:37	<--	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has quit (Quit: kikimeter)
2014-05-28 03:18:48	<--	keepguessing (18063218@gateway/web/freenode/ip.24.6.50.24) has quit (Ping timeout: 240 seconds)
2014-05-28 03:18:59	-->	Jucato (~jucato@kde/developer/jucato) has joined #python
2014-05-28 03:19:24	<--	Browser (~browser@81.108.31.101) has quit (Ping timeout: 240 seconds)
2014-05-28 03:19:46	--	Rev|SleepingFox is now known as TheReverend403
2014-05-28 03:20:09	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2014-05-28 03:20:12	<--	le_tropico (~le_tropic@nat/cisco/x-fpfhgfjhnzohktgp) has quit (Ping timeout: 240 seconds)
2014-05-28 03:20:24	-->	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has joined #python
2014-05-28 03:20:35	-->	mangekyo (~mangekyo@c211-30-60-1.frank3.vic.optusnet.com.au) has joined #python
2014-05-28 03:20:42	<--	porco (~porco@218.30.180.178) has quit (Quit: Linkinus - http://linkinus.com)
2014-05-28 03:20:43	-->	lad1337 (~Adium@212.12.46.3) has joined #python
2014-05-28 03:20:49	-->	ams (ams@gnu/inetutils/ams) has joined #python
2014-05-28 03:21:23	-->	pdx (~pdx@adsl-dyn185.78-98-95.t-com.sk) has joined #python
2014-05-28 03:21:38	david89	cdunklau: btw, thanks
2014-05-28 03:22:20	-->	Browser (~browser@81.108.31.101) has joined #python
2014-05-28 03:22:41	<--	bkuberek (~bkuberek@74.72.159.31) has quit (Ping timeout: 252 seconds)
2014-05-28 03:22:57	-->	lad13371 (~Adium@212.12.46.3) has joined #python
2014-05-28 03:23:03	<--	jpj (~jpj@101.63.222.87) has quit (Ping timeout: 252 seconds)
2014-05-28 03:23:15	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-28 03:23:16	<--	elff (~elff@5.35.78.115) has quit (Remote host closed the connection)
2014-05-28 03:23:17	-->	le_tropico (~le_tropic@nat/cisco/x-gphypqqgsvmjumcf) has joined #python
2014-05-28 03:24:30	<--	edofso (~edofso@a80-100-189-109.adsl.xs4all.nl) has quit (Remote host closed the connection)
2014-05-28 03:24:53	<--	geri (~anonymous@089144226137.atnat0035.highway.a1.net) has quit (Ping timeout: 264 seconds)
2014-05-28 03:25:07	<--	lad1337 (~Adium@212.12.46.3) has quit (Ping timeout: 240 seconds)
2014-05-28 03:25:10	-->	geri (~anonymous@089144226137.atnat0035.highway.a1.net) has joined #python
2014-05-28 03:25:49	-->	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has joined #python
2014-05-28 03:26:10	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 03:27:05	<--	Browser (~browser@81.108.31.101) has quit (Ping timeout: 252 seconds)
2014-05-28 03:27:17	-->	Browser (~browser@81.108.31.101) has joined #python
2014-05-28 03:27:24	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Ping timeout: 240 seconds)
2014-05-28 03:27:39	<--	wleslie (~verte@python/site-packages/verte) has quit (Quit: ~~~ Crash in JIT!)
2014-05-28 03:28:14	<--	iLiFo (~david@41.13.4.46) has quit (Quit: Last in Frist out)
2014-05-28 03:29:20	-->	Squarepy (~Squarepy@unaffiliated/squarepy) has joined #python
2014-05-28 03:30:57	-->	frostschutz (~frostschu@pD9E50F97.dip0.t-ipconnect.de) has joined #python
2014-05-28 03:31:22	<--	fenre (~fenre@79.160.132.214.static.lyse.net) has quit (Remote host closed the connection)
2014-05-28 03:31:29	<--	emorrow (~Thunderbi@176.12.107.139) has quit (Ping timeout: 264 seconds)
2014-05-28 03:31:31	<--	freggles (~hi@unaffiliated/ext0) has quit (Ping timeout: 240 seconds)
2014-05-28 03:31:51	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 252 seconds)
2014-05-28 03:33:17	-->	galactic_pretty_ (~aaa@210.223.154.133) has joined #python
2014-05-28 03:34:04	<--	Itkovian (~Itkovian@nata200.ugent.be) has quit (Quit: Zzzzz ...)
2014-05-28 03:35:41	galactic_pretty_	d
2014-05-28 03:36:11	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined #python
2014-05-28 03:36:41	-->	the_rat (~the_rat@217.200.185.218) has joined #python
2014-05-28 03:37:15	-->	CatKiller (~catkiller@unaffiliated/catkiller) has joined #python
2014-05-28 03:37:28	<--	luanpab (sid7548@gateway/web/irccloud.com/x-hrytcpnmcuyxklnx) has quit (Ping timeout: 252 seconds)
2014-05-28 03:37:38	-->	umquant (~umquant@wsip-98-174-160-33.ok.ok.cox.net) has joined #python
2014-05-28 03:38:15	-->	spec_ed (~spec_ed@c-98-203-32-130.hsd1.fl.comcast.net) has joined #python
2014-05-28 03:38:18	<--	mescalinum (97643bc2@gateway/web/freenode/ip.151.100.59.194) has quit (Quit: Page closed)
2014-05-28 03:38:19	-->	Joost (~Joost@unaffiliated/joost) has joined #python
2014-05-28 03:39:00	Joost	Does python support some sort of ternary '=='? When I assign 'foo' to both a and b and then evaluate a == b == 'foo', I get True
2014-05-28 03:39:02	-->	fenre (~fenre@79.160.132.214.static.lyse.net) has joined #python
2014-05-28 03:39:16	Joost	This is not a case of associativity, as a == b or b == 'foo' would return True, which would be unequal to 'foo'
2014-05-28 03:39:18	<--	jaboles (uid33521@gateway/web/irccloud.com/x-eiztniskrimsedub) has quit (Ping timeout: 252 seconds)
2014-05-28 03:39:27	<--	nodern (bs@gateway/shell/bouncerstation/x-jlqtuuklsfzjxxcl) has quit (Ping timeout: 245 seconds)
2014-05-28 03:39:37	jorrit	joost, a == b and b == c
2014-05-28 03:39:47	<--	chrismed (~chrismed@abjr214.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 258 seconds)
2014-05-28 03:39:56	cdunklau	Joost: https://docs.python.org/2/reference/expressions.html#not-in
2014-05-28 03:40:10	-->	badon_ (~badon@pdpc/supporter/active/badon) has joined #python
2014-05-28 03:40:11	<--	badon (~badon@pdpc/supporter/active/badon) has quit (Disconnected by services)
2014-05-28 03:40:15	-->	vy (58fff5fc@gateway/web/freenode/ip.88.255.245.252) has joined #python
2014-05-28 03:40:25	--	badon_ is now known as badon
2014-05-28 03:40:29	-->	garethdaine (~garethdai@82-69-76-1.dsl.in-addr.zen.co.uk) has joined #python
2014-05-28 03:40:38	cdunklau	Joost: Formally, if a, b, c, ..., y, z are expressions and op1, op2, ..., opN are comparison operators, then a op1 b op2 c ... y opN z is equivalent to a op1 b and b op2 c and ... y opN z, except that each expression is evaluated at most once.
2014-05-28 03:40:46	vy	How can I get the relevant error message when epoll returns an event of type EPOLLERR?
2014-05-28 03:40:55	-->	luanpab (sid7548@gateway/web/irccloud.com/x-xphkdyyledcspdiv) has joined #python
2014-05-28 03:41:16	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 03:41:17	<--	epitron (~epitron@unaffiliated/epitron) has quit (Ping timeout: 252 seconds)
2014-05-28 03:41:30	-->	jaboles (uid33521@gateway/web/irccloud.com/x-bhnlufgktavcppkn) has joined #python
2014-05-28 03:41:55	<--	Eyess (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Remote host closed the connection)
2014-05-28 03:41:58	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-28 03:42:07	-->	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has joined #python
2014-05-28 03:42:20	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-28 03:43:07	-->	Narsilou (~nicolas@APuteaux-651-1-68-193.w81-249.abo.wanadoo.fr) has joined #python
2014-05-28 03:43:49	<--	Narsilou (~nicolas@APuteaux-651-1-68-193.w81-249.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2014-05-28 03:44:40	<--	Xiti (~Xiti-@c-50-134-127-54.hsd1.va.comcast.net) has quit (Quit: Leaving)
2014-05-28 03:44:54	<--	andkenneth (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has quit (Quit: Leaving)
2014-05-28 03:45:37	-->	BlaXpirit (~blaxpirit@29-118-132-95.pool.ukrtel.net) has joined #python
2014-05-28 03:45:39	nedbat	Joost: not sure if you got your answer from those:   a == b == "foo" checks that both a and b are "foo"
2014-05-28 03:45:49	marienz	vy: if memory serves: by doing something with the fd epoll says is in that state
2014-05-28 03:46:05	Joost	thanks guys :)
2014-05-28 03:46:15	Joost	That definitely answered my question
2014-05-28 03:46:20	<--	actel (uid48@gateway/web/irccloud.com/x-ftgieelruoseuchg) has quit (Quit: Connection closed for inactivity)
2014-05-28 03:46:23	Joost	thanks for the 'formal' approach, cdunklau !
2014-05-28 03:46:26	-->	Stavros (~stavros@178.59.2.177) has joined #python
2014-05-28 03:46:27	cdunklau	nedbat: um, not quite, if i read the expressions ref correctly
2014-05-28 03:46:27	Stavros	hello
2014-05-28 03:46:41	-->	edofso (~edofso@a80-100-189-109.adsl.xs4all.nl) has joined #python
2014-05-28 03:46:44	cdunklau	nedbat: i mean, for sane types, it should be equivalent
2014-05-28 03:46:49	marienz	vy: (I don't know if there's a generally appropriate value for "something", but see http://stackoverflow.com/questions/13150377/how-to-get-errno-when-epoll-wait-returns-epollerr for example)
2014-05-28 03:46:49	nedbat	cdunklau: ok, yes.
2014-05-28 03:46:59	-->	DaneoShiga (~drshiga@201.23.92.102.dedicated.neoviatelecom.com.br) has joined #python
2014-05-28 03:47:22	cdunklau	sorry to be pedantic :)
2014-05-28 03:47:39	-->	epitron (~epitron@unaffiliated/epitron) has joined #python
2014-05-28 03:47:45	cdunklau	Joost: i should point out that i just cribbed that from the expressions ref
2014-05-28 03:47:47	Stavros	why doesn't this work? http://dpaste.com/0GYE8N9/
2014-05-28 03:47:58	cdunklau	Stavros: "doesn't work"?
2014-05-28 03:48:13	Stavros	unbound method my_method() must be called with A instance as first argument (got nothing instead)
2014-05-28 03:48:28	<--	david89 (~david89@unaffiliated/david89) has quit (Quit: Leaving)
2014-05-28 03:48:36	cdunklau	Stavros: methods are "bound" to their class
2014-05-28 03:48:52	Stavros	how does that mechanism work?
2014-05-28 03:49:13	cdunklau	Stavros: descriptors, i think
2014-05-28 03:49:17	Stavros	ah, http://stackoverflow.com/a/114267
2014-05-28 03:49:20	cdunklau	not sure about with old-style classes
2014-05-28 03:49:32	-->	jezdez (~jezdez@django/committer/jezdez) has joined #python
2014-05-28 03:49:37	cdunklau	Stavros: that's kind of a strange thing to want though. what's your situation
2014-05-28 03:49:37	cdunklau	?
2014-05-28 03:49:45	<--	jezdez (~jezdez@django/committer/jezdez) has left #python ("Leaving...")
2014-05-28 03:49:49	vy	marienz: I see. I think what I need is sth like socket.getsockopt(SOL_SOCKET, SO_ERROR). Thanks.
2014-05-28 03:49:53	Stavros	i just have two django forms that use the same verification code, so i don't want to duplicate it, i just want to use the same function
2014-05-28 03:50:08	nedbat	Stavros: have them both inherit the verification from a mixin.
2014-05-28 03:50:16	cdunklau	damn you nedbat ;)
2014-05-28 03:50:21	marienz	vy: you should check, but it's likely that if you try to do a (non-blocking) read from the socket you'll also find out why it's in that state
2014-05-28 03:50:22	Stavros	nedbat, that would be the best thing to do, but they're just 4 lines of code
2014-05-28 03:50:24	<--	Squarepy (~Squarepy@unaffiliated/squarepy) has quit (Quit: Leaving)
2014-05-28 03:50:28	cdunklau	the first time i realized that a mixin would be useful
2014-05-28 03:50:34	-->	alem0lars (~alem0lars@mail.spot.it) has joined #python
2014-05-28 03:50:49	<--	Augment (~IceChat77@host-2-99-212-63.as13285.net) has quit (Read error: Connection reset by peer)
2014-05-28 03:50:59	Yhg1s	Stavros: define the function outside of the class.
2014-05-28 03:51:03	cdunklau	MAN
2014-05-28 03:51:05	Stavros	Yhg1s, then i can assign it?
2014-05-28 03:51:05	<--	alem0lars (~alem0lars@mail.spot.it) has quit (Read error: Connection reset by peer)
2014-05-28 03:51:08	Yhg1s	Stavros: yes.
2014-05-28 03:51:08	Stavros	that's what i was thinking
2014-05-28 03:51:11	-->	yanbo (~quassel@cable-188-2-7-44.dynamic.sbb.rs) has joined #python
2014-05-28 03:51:12	Stavros	right, thanks
2014-05-28 03:51:14	cdunklau	everyone keeps sniping me :)
2014-05-28 03:51:17	Stavros	obviously it still needs to have a self
2014-05-28 03:51:22	Yhg1s	Stavros: yes.
2014-05-28 03:51:44	nedbat	Stavros: if you're willing to go to the trouble to define a function to avoid duplicating four lines of code, why not make a mixin?
2014-05-28 03:51:58	Stavros	nedbat, fair enough
2014-05-28 03:52:06	Stavros	at this point, i am more interested in understanding why my way didn't work
2014-05-28 03:52:13	-->	kuramanga (~Kura@unaffiliated/kuramanga) has joined #python
2014-05-28 03:52:15	Stavros	there's a stackoverflow answer that might elucidate
2014-05-28 03:52:29	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 264 seconds)
2014-05-28 03:52:31	<--	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Remote host closed the connection)
2014-05-28 03:52:50	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-28 03:53:03	-->	txomon|home (~txomon@unaffiliated/txomon) has joined #python
2014-05-28 03:53:13	cdunklau	Stavros: this is a python 2 thing
2014-05-28 03:53:13	<--	pybokeh (~pyb0k3h@2605:a000:1104:aa:a060:5268:d58e:64b2) has quit (Quit: Leaving)
2014-05-28 03:53:24	Stavros	cdunklau, is it different in python3?
2014-05-28 03:53:45	<--	kushal (~kdas@fedora/kushal) has quit (Quit: Leaving)
2014-05-28 03:53:48	cdunklau	yep. unbound methods don't exist in python 3
2014-05-28 03:53:52	cdunklau	Stavros: http://bpaste.net/show/JNjJWNuEpmsJeDBP3cSB/
2014-05-28 03:53:57	-->	nodern (bs@gateway/shell/bouncerstation/x-bpxootgwgjcedewt) has joined #python
2014-05-28 03:54:12	-->	alem0lars (~alem0lars@mail.spot.it) has joined #python
2014-05-28 03:54:25	cdunklau	Stavros: in python 2, when you do SomeClass.some_method, you get the unbound method. it's a wrapper around the function object that ties it to the class
2014-05-28 03:54:27	<--	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Ping timeout: 245 seconds)
2014-05-28 03:54:29	Stavros	ah, vindication! thanks
2014-05-28 03:54:38	Stavros	ah, i see
2014-05-28 03:54:40	-->	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has joined #python
2014-05-28 03:54:40	<--	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has quit (Client Quit)
2014-05-28 03:54:42	cdunklau	Stavros: in python 3, SomeClass.some_method will give you the function object directly
2014-05-28 03:54:50	Stavros	right, that's how i thought it worked
2014-05-28 03:54:51	Stavros	i'll read more about binding behavior, thanks
2014-05-28 03:54:51	ikanobori	In Python 3 gives you ... hi cdunklau.
2014-05-28 03:54:58	cdunklau	ikanobori: :)
2014-05-28 03:55:19	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 252 seconds)
2014-05-28 03:55:55	<--	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2014-05-28 03:56:24	-->	czapla (~czapla@2a02:8109:8380:1298:959e:844b:8fd0:dbdc) has joined #python
2014-05-28 03:56:25	<--	Gaan (~textual@12-141.207-68.elmore.res.rr.com) has quit (Ping timeout: 252 seconds)
2014-05-28 03:57:09	cdunklau	Stavros: remember to use new-style classes though :)\
2014-05-28 03:57:25	<--	symptom (~symptom@unaffiliated/symptom) has quit (Quit: Ex-Chat)
2014-05-28 03:57:26	Stavros	for the mixin? django forms are already new-style, i believe
2014-05-28 03:57:59	<--	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has quit (Ping timeout: 255 seconds)
2014-05-28 03:58:26	-->	rodfersou (~RoADRuNNE@177.16.92.35) has joined #python
2014-05-28 03:58:51	-->	cesar_bo (uid17588@gateway/web/irccloud.com/x-fkzgndrazzicetqj) has joined #python
2014-05-28 03:59:03	<--	nedbat (~nedbat@python/psf/nedbat) has quit
2014-05-28 03:59:08	<--	EntropyArchive (~Thunderbi@cpe-071-071-210-252.carolina.res.rr.com) has quit (Quit: EntropyArchive)
2014-05-28 03:59:37	-->	commandocoding (~commandoc@223.176.238.86) has joined #python
2014-05-28 03:59:53	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Remote host closed the connection)
2014-05-28 04:00:06	<--	commandocoding (~commandoc@223.176.238.86) has left #python
2014-05-28 04:00:32	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-28 04:00:43	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Ping timeout: 240 seconds)
2014-05-28 04:00:48	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-28 04:01:00	-->	emorrow (~Thunderbi@185.7.185.250) has joined #python
2014-05-28 04:01:15	-->	SuperRoach (~SuperRoac@ppp118-209-163-30.lns20.mel6.internode.on.net) has joined #python
2014-05-28 04:01:52	SuperRoach	Evening all, is anyone a user of Pycharm (intellij)? If so, I was wondering how you have found it?
2014-05-28 04:02:12	<--	yaw (~yaw@41.215.170.55) has quit (Ping timeout: 240 seconds)
2014-05-28 04:02:23	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 04:02:46	<--	eeriegeek (~eeriegeek@c-98-244-112-229.hsd1.va.comcast.net) has quit (Quit: Leaving.)
2014-05-28 04:03:03	deed02392	might someone help me understand this line in the docs: Note that on Windows, since there is a current directory for each drive, os.path.join("c:", "foo") represents a path relative to the current directory on drive C: (c:foo), not c:\foo.
2014-05-28 04:03:23	-->	amigo (~amigo@unaffiliated/amigo) has joined #python
2014-05-28 04:03:24	--	Eyes is now known as Eyess
2014-05-28 04:03:29	nedbat	deed02392: do you have a windows machine with two drives?
2014-05-28 04:03:35	deed02392	nedbat, yes
2014-05-28 04:04:02	nedbat	deed02392: if you use a command prompt, you can try this:  cd c: ;  cd \foo ;  cd d: ;  cd \bar
2014-05-28 04:04:18	nedbat	deed02392: now if you use "cd c:"  you will be in c:\foo.  each drive has a current directory
2014-05-28 04:04:22	-->	thomi (quassel@conference/canonical/x-tkhwmlqzzdqkfpgg) has joined #python
2014-05-28 04:04:31	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-28 04:04:32	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 04:04:47	nedbat	deed02392: this is the way windows works.  Python on windows follows that lead.
2014-05-28 04:04:50	-->	shunya_chakra (~shunya@117.212.103.216) has joined #python
2014-05-28 04:05:05	<--	Vialas (~Vialas@14-203-235-228.static.tpgi.com.au) has quit (Ping timeout: 258 seconds)
2014-05-28 04:05:26	cdunklau	Stavros: right, i meant for your testing
2014-05-28 04:05:34	<--	Ariel_Calzada (~aricalso@201.216.0.73) has quit (Quit: Bye all)
2014-05-28 04:05:39	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Ping timeout: 276 seconds)
2014-05-28 04:05:41	<--	mikemac (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Ping timeout: 252 seconds)
2014-05-28 04:05:45	-->	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has joined #python
2014-05-28 04:05:45	-->	Vialas (~Vialas@14-203-235-228.static.tpgi.com.au) has joined #python
2014-05-28 04:05:45	deed02392	nedbat, I still don't understand what it means that a 'drive' has a 'current directory'
2014-05-28 04:05:48	Stavros	cdunklau, right, i did that, thank you
2014-05-28 04:05:49	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 04:05:49	-->	Wooble (8231f2c5@gateway/web/freenode/ip.130.49.242.197) has joined #python
2014-05-28 04:06:00	-->	yaw (~yaw@41.215.169.63) has joined #python
2014-05-28 04:06:08	<--	czapla (~czapla@2a02:8109:8380:1298:959e:844b:8fd0:dbdc) has quit (Remote host closed the connection)
2014-05-28 04:06:15	nedbat	deed02392: did you try the experiment I showed?
2014-05-28 04:07:01	deed02392	nedbat, yes, I don't think it worked as you intended
2014-05-28 04:07:21	<--	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has quit (Remote host closed the connection)
2014-05-28 04:08:14	<--	pretty_function (~pretty_fu@115.252.136.3) has quit (Remote host closed the connection)
2014-05-28 04:08:37	<--	brammator (~brammator@109.111.13.170) has quit (Ping timeout: 252 seconds)
2014-05-28 04:08:58	nedbat	deed02392: hmm, sorry.  Can you pastebin the terminal session?
2014-05-28 04:09:12	deed02392	I think I get it
2014-05-28 04:09:19	deed02392	c:foo could refer to c:\bar\foo
2014-05-28 04:09:23	-->	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has joined #python
2014-05-28 04:09:30	nedbat	deed02392: yes
2014-05-28 04:09:32	deed02392	because 'foo' is relative to some arbitrary 'current directory' that is assigned to a drive
2014-05-28 04:09:35	<--	Stavros (~stavros@178.59.2.177) has quit (Quit: Ex-Chat)
2014-05-28 04:09:43	deed02392	and not necessarily the root of that drive letter
2014-05-28 04:09:45	-->	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has joined #python
2014-05-28 04:09:53	<--	shunya_chakra (~shunya@117.212.103.216) has quit (Ping timeout: 255 seconds)
2014-05-28 04:09:56	deed02392	so how do I refer to the root of a drive in os.path.join() ?
2014-05-28 04:09:58	jorrit	deed02392, on unix/linux there is just one current dir.
2014-05-28 04:10:08	nedbat	deed02392: with a backslash (or slash)
2014-05-28 04:10:09	jorrit	deed02392, on windows there is a separate current dir for every drive.
2014-05-28 04:10:22	<--	harobed (~harobed@ANancy-652-1-518-32.w86-197.abo.wanadoo.fr) has quit
2014-05-28 04:10:34	deed02392	got it
2014-05-28 04:10:36	deed02392	thanks guys
2014-05-28 04:10:36	<--	atolani (Arpit@nat/redhat/x-sjhwhegkinxlvnfn) has quit (Ping timeout: 240 seconds)
2014-05-28 04:10:42	<--	dray3 (~daaray@cpe-173-095-178-019.nc.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-05-28 04:10:46	-->	EntropyArchive (~Thunderbi@cpe-071-071-210-252.carolina.res.rr.com) has joined #python
2014-05-28 04:11:23	-->	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has joined #python
2014-05-28 04:11:28	-->	jamphat (~jamphat@66-44-29-175.c3-0.129-ubr1.lnh-129.md.cable.rcn.com) has joined #python
2014-05-28 04:11:48	<--	vy (58fff5fc@gateway/web/freenode/ip.88.255.245.252) has quit (Ping timeout: 240 seconds)
2014-05-28 04:11:51	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-28 04:11:53	<--	andtorg (~andtorg@ppp-242-158.98-62.inwind.it) has quit (Quit: WeeChat 0.4.3)
2014-05-28 04:13:22	<--	plutoniix (~plutoniix@210.213.57.70) has quit (Quit: จรลี จรลา)
2014-05-28 04:14:10	-->	brammator (~brammator@80.80.205.51) has joined #python
2014-05-28 04:14:12	<--	hashfail (~noone@unaffiliated/gimps) has quit (Ping timeout: 240 seconds)
2014-05-28 04:14:14	<--	Eyess (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Quit: Leaving)
2014-05-28 04:14:41	-->	pawroman (~pawroman@2dd734f4c2.rev.snt.net.pl) has joined #python
2014-05-28 04:14:45	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-28 04:15:24	<--	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has quit (Ping timeout: 240 seconds)
2014-05-28 04:15:41	-->	introom (~introom@202.125.228.4) has joined #python
2014-05-28 04:15:42	-->	randomshop (~Random@220-244-125-22.static.tpgi.com.au) has joined #python
2014-05-28 04:15:58	-->	ixti (~ixti@77.226.194.200) has joined #python
2014-05-28 04:16:24	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Quit: Computer has gone to sleep.)
2014-05-28 04:16:32	-->	thmcmahon_ (cbad0cda@gateway/web/freenode/ip.203.173.12.218) has joined #python
2014-05-28 04:16:59	-->	nemesit|znc (~nemesit|z@84.200.7.95) has joined #python
2014-05-28 04:17:05	<--	Jucato (~jucato@kde/developer/jucato) has quit (Ping timeout: 255 seconds)
2014-05-28 04:17:07	iron_houzi	I'd like to check that my program is ran on python 3, but what should I put as the lowest version number? Is > 3.0 fine?
2014-05-28 04:17:11	-->	kl0_ (~void@unaffiliated/rf14) has joined #python
2014-05-28 04:17:19	<--	kuramanga (~Kura@unaffiliated/kuramanga) has quit (Ping timeout: 252 seconds)
2014-05-28 04:17:21	iron_houzi	* >= 3.0
2014-05-28 04:17:33	nedbat	iron_houzi: where are you putting the version number?  You should test it on some version, and use that number.
2014-05-28 04:17:47	nedbat	iron_houzi: 3.0 doesn't count, there's no need to use it.
2014-05-28 04:17:59	pawroman	remember that 3.1 and 3.2 introduced new features
2014-05-28 04:18:01	Yhg1s	iron_houzi: it depends on what version of Python 3 you consider suitable, of course.
2014-05-28 04:18:18	pawroman	so it might just happen that your code won't work on 3.0
2014-05-28 04:18:21	-->	czapla (~czapla@2a02:8109:8380:1298:4cdd:e184:7fa0:b6b2) has joined #python
2014-05-28 04:18:39	Yhg1s	iron_houzi: so you probably want something like 'sys.version_info > (3, 3)'
2014-05-28 04:19:27	<--	EPG (~EPG@pC19EA6D1.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2014-05-28 04:19:33	iron_houzi	I don't think I'm using anything out of the ordinary. I started developing on 3.3 and have now moved to 3.4. I'm relying heavily on unicode data.
2014-05-28 04:19:39	<--	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Remote host closed the connection)
2014-05-28 04:19:58	iron_houzi	Yhg1s: You mean >= to (3, 3) ?
2014-05-28 04:20:02	<--	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 255 seconds)
2014-05-28 04:20:06	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-28 04:20:08	thmcmahon_	Hi guys, I've got a webapp that needs to make thousands of requests to a third party api at a rate of around 5-10 per second. I need them to run asynchronously, at a steady rate (say stably 5 per second) and between certain times. Would you recommend twisted, a celery queue, or multiprocessing?
2014-05-28 04:20:25	cdunklau	thmcmahon_: twisted
2014-05-28 04:20:31	cdunklau	oh, we talked about this a little
2014-05-28 04:20:40	<--	le_tropico (~le_tropic@nat/cisco/x-gphypqqgsvmjumcf) has quit (Read error: Connection reset by peer)
2014-05-28 04:20:46	pawroman	thmcmahon_: try this one https://github.com/ross/requests-futures
2014-05-28 04:20:46	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Remote host closed the connection)
2014-05-28 04:20:50	thmcmahon_	cdunklau: yeah we did a few hours ago
2014-05-28 04:20:54	-->	abinmathew1986 (~root@115.115.169.6) has joined #python
2014-05-28 04:21:04	-->	le_tropico (~le_tropic@nat/cisco/x-johmhmyxekynuoao) has joined #python
2014-05-28 04:21:07	thmcmahon_	cdunklau: just wanted to get some more views
2014-05-28 04:21:15	thmcmahon_	cdunklau: why would you recommend twisted
2014-05-28 04:21:17	-->	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined #python
2014-05-28 04:21:43	Yhg1s	iron_houzi: no, sys.version_info will never be just (3, 3)
2014-05-28 04:21:45	cdunklau	thmcmahon_: because async is the name of the game
2014-05-28 04:22:04	<--	nedbat (~nedbat@python/psf/nedbat) has left #python
2014-05-28 04:22:15	<--	le_tropico (~le_tropic@nat/cisco/x-johmhmyxekynuoao) has quit (Remote host closed the connection)
2014-05-28 04:22:17	thmcmahon_	pawroman: have you used that? what was your experience like? I wish requests had this baked in.
2014-05-28 04:22:17	Yhg1s	thmcmahon_: because it ticks all your boxes, is easiest to deal with, easiest to debug and most efficient.
2014-05-28 04:22:29	iron_houzi	Yhg1s: Would it be nicer to use sys.hexversion perhaps?
2014-05-28 04:22:29	thmcmahon_	Yhg1s: you agree with twisted?
2014-05-28 04:22:32	Yhg1s	thmcmahon_: yes.
2014-05-28 04:22:36	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 04:22:36	Yhg1s	iron_houzi: no.
2014-05-28 04:22:39	-->	le_tropico (~le_tropic@nat/cisco/x-xmoynbihresecnpr) has joined #python
2014-05-28 04:22:42	pawroman	thmcmahon_: yep, used it and it was pretty much as speedy as gevent
2014-05-28 04:22:43	iron_houzi	Yhg1s: Why not?
2014-05-28 04:22:53	--	lorenzosu_ is now known as lorenzosu
2014-05-28 04:23:01	Yhg1s	iron_houzi: because then you have to remember how many zeroes to add, and what hexversion means. Just use sys.version_info. It's the most convenient way to test versions.
2014-05-28 04:23:02	thmcmahon_	Yhg1s: should I get the book or is it something I can pick up with web materials?
2014-05-28 04:23:11	iron_houzi	OK
2014-05-28 04:23:23	<--	le_tropico (~le_tropic@nat/cisco/x-xmoynbihresecnpr) has quit (Client Quit)
2014-05-28 04:23:29	-->	Andyrez (~andyrez@41.58.211.112) has joined #python
2014-05-28 04:23:34	Yhg1s	thmcmahon_: http://krondo.com/?page_id=1327 is good.
2014-05-28 04:23:45	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2014-05-28 04:23:47	-->	kevinb (~europa-zn@99.166.106.52) has joined #python
2014-05-28 04:23:47	abinmathew1986	hi... i m getting the following error on monkey patching socket lib
2014-05-28 04:23:49	abinmathew1986	/lib/python2.7/site-packages/gevent/hub.py", line 331, in switch
2014-05-28 04:23:50	abinmathew1986	    return greenlet.switch(self)
2014-05-28 04:23:50	abinmathew1986	LoopExit: This operation would block forever
2014-05-28 04:23:52	cdunklau	Yhg1s: the meaning of `sys.version_info < (3, 3)` is not really obvious though, is it?
2014-05-28 04:24:03	Yhg1s	cdunklau: isn't it?
2014-05-28 04:24:08	-->	mateNz (~mateNz@unaffiliated/matenz) has joined #python
2014-05-28 04:24:19	thmcmahon_	Yhg1s: cheers - i've seen this before and this is one of the things that turned me off. it just seems so huge.
2014-05-28 04:24:25	cdunklau	Yhg1s: it looks like it means greater than 3.3, but it would still pass on 3.3.0
2014-05-28 04:24:32	cdunklau	i may be wrong
2014-05-28 04:24:41	-->	Eisenhorn (~juan@unaffiliated/eisenhorn) has joined #python
2014-05-28 04:24:58	cdunklau	ah, i'm wrong
2014-05-28 04:25:18	cdunklau	uh
2014-05-28 04:25:26	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 04:25:28	moldy	trying to setup pypi-server. it works fine standalone, but behind apache2, i always get a 403 when trying to upload a package. any hints on how to debug this?
2014-05-28 04:25:41	moldy	e.g. how to turn on some kind of logging?
2014-05-28 04:25:58	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 04:26:40	<--	z0ran (~z0ran@gateway/tor-sasl/z0ran) has quit (Remote host closed the connection)
2014-05-28 04:26:43	<--	Porkepix (~Porkepix@159.175.24.109.rev.sfr.net) has quit (Ping timeout: 240 seconds)
2014-05-28 04:27:01	<--	Macuser (~textual@unaffiliated/macuser) has quit (Client Quit)
2014-05-28 04:27:06	-->	z0ran (~z0ran@gateway/tor-sasl/z0ran) has joined #python
2014-05-28 04:27:19	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 258 seconds)
2014-05-28 04:27:30	cdunklau	wow i had that backwards. so, (3, 3, 0) > (3, 3) == True... so `sys.version_info > (3, 3)` actually means "version is 3.3.0 or higher", even though it looks like it means "version greater than 3.3"
2014-05-28 04:27:39	abinmathew1986	anybody knows what this means? "LoopExit: This operation would block forever"
2014-05-28 04:27:40	cdunklau	maybe i'm splitting hairs... but it seems nonobvious to me
2014-05-28 04:27:41	<--	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has quit (Ping timeout: 255 seconds)
2014-05-28 04:29:04	cdunklau	sys.version_info >= (3, 3) is equivalent to that since sys.version_info is never just 2 numbers... right?
2014-05-28 04:29:21	-->	lacrymology (~lacrymolo@112.215.44.4) has joined #python
2014-05-28 04:29:53	lacrymology	will PIL.Image.save() overwrite an existing file, or fail, by default?
2014-05-28 04:30:20	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 04:30:27	<--	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has quit (Remote host closed the connection)
2014-05-28 04:30:29	cdunklau	lacrymology: you should probably test for yourself
2014-05-28 04:30:38	<--	davividal (~davi.vida@187.59.6.154) has quit (Quit: Ex-Chat)
2014-05-28 04:30:40	-->	dray3 (~daaray@cpe-066-057-017-201.nc.res.rr.com) has joined #python
2014-05-28 04:30:50	-->	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has joined #python
2014-05-28 04:30:59	-->	actel (uid48@gateway/web/irccloud.com/x-vdqcpyiuhpokktiz) has joined #python
2014-05-28 04:31:21	-->	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has joined #python
2014-05-28 04:31:41	-->	zemanel (~hanzo@31.6.78.131) has joined #python
2014-05-28 04:32:00	<--	SuperRoach (~SuperRoac@ppp118-209-163-30.lns20.mel6.internode.on.net) has left #python ("Leaving")
2014-05-28 04:32:23	<--	the_rat (~the_rat@217.200.185.218) has quit (Ping timeout: 255 seconds)
2014-05-28 04:32:25	-->	Deseaus (~Deseaus@wpa175.guwlan.gu.se) has joined #python
2014-05-28 04:32:30	fionnan	Anyone know an easy way of making a barplot of something like this: http://bpaste.net/show/s0toAEQ4NWa12voM9AoR/ ?
2014-05-28 04:32:33	<--	thomi (quassel@conference/canonical/x-tkhwmlqzzdqkfpgg) has quit (Remote host closed the connection)
2014-05-28 04:33:02	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 04:33:17	--	Joost is now known as Joost`away
2014-05-28 04:33:25	<--	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has quit (Remote host closed the connection)
2014-05-28 04:33:25	 *	rivarun is excited to use for-else
2014-05-28 04:33:48	<--	thmcmahon_ (cbad0cda@gateway/web/freenode/ip.203.173.12.218) has quit (Ping timeout: 240 seconds)
2014-05-28 04:34:07	lacrymology	cdunklau: probably, but it's so freaking boilerplaty..
2014-05-28 04:34:28	cdunklau	lacrymology: uh.. no i mean you should test the behavior
2014-05-28 04:34:35	cdunklau	instead of trusting random people on the internet
2014-05-28 04:34:36	cdunklau	:)
2014-05-28 04:34:58	lacrymology	cdunklau: I know, but again, just creating a blank image (say solid black background) is very boilerplaty
2014-05-28 04:34:59	<--	dray3 (~daaray@cpe-066-057-017-201.nc.res.rr.com) has quit (Client Quit)
2014-05-28 04:35:16	<--	josuebrunel (~josuebrun@ppp-42.net-188-130-104.static.magiconline.fr) has quit (Quit: Leaving)
2014-05-28 04:35:31	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 240 seconds)
2014-05-28 04:35:35	<--	araujo (~araujo@gentoo/developer/araujo) has quit (Read error: Connection reset by peer)
2014-05-28 04:35:56	lacrymology	cdunklau: I just really don't like PIL
2014-05-28 04:36:01	lacrymology	but yes, I'm testing
2014-05-28 04:36:13	cdunklau	lacrymology: well pillow is the thing to use
2014-05-28 04:36:19	cdunklau	i believe it's got a similar api though
2014-05-28 04:36:25	cdunklau	if not the same api
2014-05-28 04:36:27	Yhg1s	it's a fork.
2014-05-28 04:36:29	Yhg1s	so, yes.
2014-05-28 04:36:33	lacrymology	cdunklau: AFAIK pillow is just PIL with better packaging
2014-05-28 04:36:37	lacrymology	that's actually what I use
2014-05-28 04:36:40	cdunklau	and actual maintenance
2014-05-28 04:37:22	cdunklau	lacrymology: i'm betting im.save overwrites
2014-05-28 04:37:32	-->	dray3 (~daaray@cpe-066-057-017-201.nc.res.rr.com) has joined #python
2014-05-28 04:38:18	lacrymology	wait
2014-05-28 04:38:24	lacrymology	it's easier than I thought
2014-05-28 04:38:26	lacrymology	way easier
2014-05-28 04:38:30	lacrymology	yeah, it overwrites
2014-05-28 04:38:56	<--	ekem (~ekem@c-24-22-82-13.hsd1.or.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-28 04:39:18	-->	hroi (~hroi@hitabylgja.vedur.is) has joined #python
2014-05-28 04:39:37	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-28 04:40:03	<--	yaw (~yaw@41.215.169.63) has quit (Ping timeout: 252 seconds)
2014-05-28 04:40:24	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Client Quit)
2014-05-28 04:40:28	-->	wet88 (~wet1988@buntes058.wohnheim.uni-kl.de) has joined #python
2014-05-28 04:40:35	hroi	Im interested in know what people think about "ask forgiveness not permission" programming pattern,
2014-05-28 04:40:46	hroi	when applied to file format recognition.
2014-05-28 04:40:48	Yhg1s	hroi: it's a sensible appraoch.
2014-05-28 04:41:09	Yhg1s	hroi: I'm not sure how 'permission' relates to file format recognition though.
2014-05-28 04:41:09	hroi	Yhg1s: yeah, I know it is very useful part of duck typing
2014-05-28 04:41:28	-->	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has joined #python
2014-05-28 04:41:38	hroi	Yhg1s:  I have two options for file recognition.  I can program a validator, that validates if file is a particular format.
2014-05-28 04:42:05	hroi	Yhg1s: or I can simply try to open it with format driver A, then format driver B... until something works... "ask forgiveness"
2014-05-28 04:42:33	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-28 04:42:45	Yhg1s	hroi: I don't really understand the difference between the two, sorry.
2014-05-28 04:43:26	talanor	Yhg1s: he asks which one is better : determine the file format, then input it to the right driver, or test each driver with this file until one works
2014-05-28 04:43:35	talanor	am I right hroi ?
2014-05-28 04:43:40	hroi	Yhg1s: ok, well the first one will not throw an exception (ideally) but run a test on the file.. to check if particular fingerprints in the file are in their correct place.
2014-05-28 04:43:56	Yhg1s	Yes, and I don't understand how 'determine the file format' is any different from 'let a parser for the file format parse the file' :)
2014-05-28 04:43:59	hroi	talanor: you are right!
2014-05-28 04:44:21	talanor	Yhg1s: determination is usually done by some kind of magic byte somewhere in the file
2014-05-28 04:44:23	hroi	Yhg1s: nice point!
2014-05-28 04:44:34	talanor	which takes, imo, less time than trying to parse a whole header structure
2014-05-28 04:44:42	Yhg1s	talanor: that depends entirely on the format. You can't do that with, for example, HTML vs XML :)
2014-05-28 04:44:43	hroi	Yhg1s: I can see your thought... the entire file processor is already parsing the file...
2014-05-28 04:44:50	Yhg1s	hroi: yes.
2014-05-28 04:44:58	talanor	Yhg1s: good point
2014-05-28 04:45:07	hroi	Yhg1s: why do it again... only cost is an exception.
2014-05-28 04:45:08	-->	BeholdMyGlory (~behold@unaffiliated/beholdmyglory) has joined #python
2014-05-28 04:45:17	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 04:45:44	<--	NightTrain (~coffee@unaffiliated/ridout) has quit (Quit: Lost terminal)
2014-05-28 04:45:59	<--	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has quit (Ping timeout: 265 seconds)
2014-05-28 04:46:20	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #python
2014-05-28 04:46:23	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 252 seconds)
2014-05-28 04:46:39	-->	IchEsseDichAuf (~grek@blfd-4db0e36f.pool.mediaWays.net) has joined #python
2014-05-28 04:46:59	-->	Itkovian (~Itkovian@nata200.ugent.be) has joined #python
2014-05-28 04:47:27	<--	durut (~root@71-94-128-82.static.mtpk.ca.charter.com) has quit (Quit: Leaving)
2014-05-28 04:47:29	-->	BlaXpirit-UA (~blaxpirit@175-179-132-95.pool.ukrtel.net) has joined #python
2014-05-28 04:47:50	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Quit: Busying myself...)
2014-05-28 04:48:01	<--	intuxicated (~dani@unaffiliated/hidensoft) has quit (Ping timeout: 258 seconds)
2014-05-28 04:48:11	<--	kiri (~kiri@zambezi.kiri.co.zw) has quit (Read error: Connection reset by peer)
2014-05-28 04:48:53	-->	joshfinnie (~joshfinni@192.241.179.87) has joined #python
2014-05-28 04:49:00	<--	BlaXpirit (~blaxpirit@29-118-132-95.pool.ukrtel.net) has quit (Ping timeout: 240 seconds)
2014-05-28 04:49:22	<--	airtonix (~quassel@unaffiliated/airtonix) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2014-05-28 04:49:29	<--	davor (~davor@unaffiliated/davor) has quit (Ping timeout: 264 seconds)
2014-05-28 04:49:35	<--	reference (~reference@122.172.198.131) has quit (Ping timeout: 252 seconds)
2014-05-28 04:50:19	<--	wong2 (~wong2@124.205.66.195) has quit (Ping timeout: 252 seconds)
2014-05-28 04:50:25	-->	scampbell (~scampbell@mail.scampbell.net) has joined #python
2014-05-28 04:50:39	<--	rcombs (~rcombs@rcombs.me) has quit (Read error: Connection reset by peer)
2014-05-28 04:50:58	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 04:51:07	-->	txtsd (txtsd@27.0.52.42) has joined #python
2014-05-28 04:51:16	-->	[mda] (~daniel@bas1-newmarket85-3096616480.dsl.bell.ca) has joined #python
2014-05-28 04:51:36	-->	thomi (quassel@conference/canonical/x-cbndhyvwytzttqnh) has joined #python
2014-05-28 04:52:05	-->	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has joined #python
2014-05-28 04:52:05	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 04:52:34	-->	blipped (~blipped@14.18.147.237) has joined #python
2014-05-28 04:52:48	<--	nsh (~unf@wikipedia/nsh) has quit (Max SendQ exceeded)
2014-05-28 04:52:49	<--	kpal (~kpal@janus-nat-128-240-225-121.ncl.ac.uk) has quit (Quit: leaving)
2014-05-28 04:53:19	<--	pdx (~pdx@adsl-dyn185.78-98-95.t-com.sk) has quit (Quit: pdx)
2014-05-28 04:53:20	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 04:53:27	-->	Lemony (~textual@80.168.151.198) has joined #python
2014-05-28 04:53:52	-->	rcombs (~rcombs@rcombs.me) has joined #python
2014-05-28 04:54:09	<--	k_sze[work] (~kvirc@unaffiliated/kira) has quit (Ping timeout: 258 seconds)
2014-05-28 04:55:17	<--	nsh (~unf@wikipedia/nsh) has quit (Max SendQ exceeded)
2014-05-28 04:55:27	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 04:55:38	-->	davor (~davor@unaffiliated/davor) has joined #python
2014-05-28 04:55:52	-->	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has joined #python
2014-05-28 04:55:57	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-28 04:56:12	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 04:56:12	<--	Macuser (~textual@unaffiliated/macuser) has quit (Client Quit)
2014-05-28 04:56:26	quetzakubica	Is to ok to use try: except: for control flow?
2014-05-28 04:56:26	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 04:57:12	-->	karthee (~karthik@unaffiliated/karthee) has joined #python
2014-05-28 04:57:15	-->	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has joined #python
2014-05-28 04:57:16	--	lad13371 is now known as lad1337
2014-05-28 04:57:16	Yhg1s	quetzakubica: as long as it's not 'except:' but catching a specific exception, sure.
2014-05-28 04:57:36	quetzakubica	in example function add_post_to_blog(blog_id, user_id, post) can raise few exceptions: NoBlog, NoUser
2014-05-28 04:57:44	-->	blz (~blz@89-156-3-59.rev.numericable.fr) has joined #python
2014-05-28 04:57:55	<--	Burgundy (~burgundy@188.25.126.27) has quit (Ping timeout: 240 seconds)
2014-05-28 04:58:02	quetzakubica	so I would catch it instead of returning some complicated result object with errors
2014-05-28 04:58:06	-->	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has joined #python
2014-05-28 04:58:14	Yhg1s	sure.
2014-05-28 04:58:18	Yhg1s	that's what exceptions are for.
2014-05-28 04:58:34	quetzakubica	becuase in javascript it's not a good way to do it
2014-05-28 04:58:44	quetzakubica	There I shouldn't do that
2014-05-28 04:58:48	-->	Siberian_Tiger (~Nicholas@67-210-183-162.fidnet.com) has joined #python
2014-05-28 04:58:53	quetzakubica	at least I was told that
2014-05-28 04:58:56	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 04:59:27	-->	shello (~shello@bl14-187-207.dsl.telepac.pt) has joined #python
2014-05-28 04:59:30	quetzakubica	that I should return some object {success: true, errors: [], data: foo }
2014-05-28 04:59:35	quetzakubica	I hate that :p
2014-05-28 04:59:36	<--	kcj (~casey@unaffiliated/kcj) has quit (Ping timeout: 276 seconds)
2014-05-28 05:00:26	avu	there are several languages were using exceptions has some subtle and complicated side effects that make people not use them. Not sure about JS but at least that's the case for C++ and Objective C. Python, as usual, is much more straight forward
2014-05-28 05:00:35	<--	Typo (~Typomatic@unaffiliated/typo) has quit (Ping timeout: 252 seconds)
2014-05-28 05:00:44	<--	claptor (~avarice@107-134-134-100.lightspeed.irvnca.sbcglobal.net) has quit (Quit: this channel is bakas)
2014-05-28 05:01:09	<--	mijicd (~mijicd@cable-188-246-40-9.dynamic.kdsinter.net) has quit (Remote host closed the connection)
2014-05-28 05:01:20	-->	Typo (~Typomatic@unaffiliated/typo) has joined #python
2014-05-28 05:01:34	<--	blz (~blz@89-156-3-59.rev.numericable.fr) has quit (Client Quit)
2014-05-28 05:01:50	-->	cmheisel (cmheisel@rs2.risingnet.net) has joined #python
2014-05-28 05:02:09	iron_houzi	Does anybody know what the difference is between using u'\u0f33' and '\u0f33' is in python 3.3/3.4 ?
2014-05-28 05:02:22	-->	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has joined #python
2014-05-28 05:02:33	-->	mikeybisbo (~mikeybisb@host86-171-32-109.range86-171.btcentralplus.com) has joined #python
2014-05-28 05:03:08	-->	JotaK (~Bihotz@unaffiliated/jotak) has joined #python
2014-05-28 05:03:17	iron_houzi	In python 3.4, they both seem to work..
2014-05-28 05:03:30	quetzakubica	iron_houzi: It's the same I think
2014-05-28 05:03:34	-->	aerocarbine (~aero@49.205.55.68) has joined #python
2014-05-28 05:03:46	quetzakubica	in Python 3.x every string by default is unicode
2014-05-28 05:03:50	iron_houzi	quetzakubica: Then why even have it?
2014-05-28 05:04:01	quetzakubica	to backwards compatibility IO think
2014-05-28 05:04:03	-->	paullik (~paullik@unaffiliated/paullik) has joined #python
2014-05-28 05:04:07	quetzakubica	with python 2.7
2014-05-28 05:04:11	iron_houzi	OK
2014-05-28 05:04:21	-->	rquid (~sashka@94.41.177.225) has joined #python
2014-05-28 05:04:37	cdunklau	iron_houzi: yes, it's to assist people writing polyglot code
2014-05-28 05:05:06	-->	Frosh (uid4206@gateway/web/irccloud.com/x-ijigjateaulxlvnh) has joined #python
2014-05-28 05:05:10	iron_houzi	polyglot = mixed language, i.e python 2/3 ?
2014-05-28 05:05:14	cdunklau	right
2014-05-28 05:05:19	iron_houzi	Thanks
2014-05-28 05:07:17	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 05:07:31	<--	fluter (~fluter@fedora/fluter) has quit (Remote host closed the connection)
2014-05-28 05:07:49	cdunklau	hmm i'm starting to think that twisted/trial isn't the right choice for writing these functional tests
2014-05-28 05:08:24	<--	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has quit (Quit: Leaving.)
2014-05-28 05:08:32	<--	benoitbb (~benoitbb@token.novapost.net) has quit (Quit: Quitte)
2014-05-28 05:08:47	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 05:09:02	-->	benoitbb (~benoitbb@token.novapost.net) has joined #python
2014-05-28 05:09:43	-->	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has joined #python
2014-05-28 05:10:03	-->	Stormhawk (~Stormhawk@unaffiliated/stormhawk) has joined #python
2014-05-28 05:10:20	<--	Stormhawk (~Stormhawk@unaffiliated/stormhawk) has left #python
2014-05-28 05:10:29	<--	vnagpal (cba1b303@gateway/web/freenode/ip.203.161.179.3) has quit (Quit: Page closed)
2014-05-28 05:13:14	-->	gremly (~gremly@190.85.36.58) has joined #python
2014-05-28 05:13:19	-->	harobed (~harobed@ANancy-652-1-518-32.w86-197.abo.wanadoo.fr) has joined #python
2014-05-28 05:13:55	cdunklau	maybe the problem is that i suck at twisted still
2014-05-28 05:14:16	<--	jarshwah (~jarshwah@ppp118-209-82-15.lns20.mel4.internode.on.net) has quit
2014-05-28 05:14:30	<--	untitaker (~untitaker@178-191-140-207.adsl.highway.telekom.at) has quit (Ping timeout: 265 seconds)
2014-05-28 05:14:37	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 05:15:03	mexi_d3_	I don't find twisted's APIs are intuitive. There's nothing wrong with them once trained or practised but it does make it slightly harder to learn (in my opinion)
2014-05-28 05:15:41	<--	imsc (~chatzilla@unaffiliated/imsc) has quit (Quit: [later])
2014-05-28 05:15:50	mexi_d3_	Still, it's in widespread use so there's plenty of people that can advise, which makes it probably not an issue.
2014-05-28 05:15:50	cdunklau	mexi_d3_: i can agree with that. i do think they're well-designed though
2014-05-28 05:15:53	-->	mgrouchy (~mgrouchy@CPE68b6fc44a453-CM68b6fc44a450.cpe.net.cable.rogers.com) has joined #python
2014-05-28 05:15:58	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-28 05:15:59	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 252 seconds)
2014-05-28 05:16:12	cdunklau	the abstraction layers are really nice
2014-05-28 05:16:54	-->	Calle__Lid (~Ailongam@h-111-17.a323.priv.bahnhof.se) has joined #python
2014-05-28 05:17:09	<--	chowmeined (~chowmeine@unaffiliated/chowmeined) has quit (Ping timeout: 258 seconds)
2014-05-28 05:17:26	Yhg1s	mexi_d3_: unfortunately the common problem is that people don't find callback-based API's intuitive in the first place, and yet that's the only way to deal with things.
2014-05-28 05:17:27	-->	chowmeined (~chowmeine@unaffiliated/chowmeined) has joined #python
2014-05-28 05:17:37	cdunklau	good point
2014-05-28 05:17:42	Yhg1s	(Twisted could be a little less abstract in some places, but not so much that it'd matter.)
2014-05-28 05:18:21	-->	intuxicated (~dani@unaffiliated/hidensoft) has joined #python
2014-05-28 05:18:24	-->	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has joined #python
2014-05-28 05:18:33	cdunklau	one does have to think inside-out to deal with the callback stuff
2014-05-28 05:18:34	mexi_d3_	My problem with callbacks is that I find them hard to debug. There's nothing wrong with them though, and I wouldn't tell people not to use them.
2014-05-28 05:19:08	mexi_d3_	We have so much well designed stuff that's counter-intuitive that I consider it a fact of life that the world doesn't work like we humans believe it ought to!
2014-05-28 05:19:12	-->	untitaker (~untitaker@194-118-139-225.adsl.highway.telekom.at) has joined #python
2014-05-28 05:19:18	Yhg1s	mexi_d3_: my point is that you can't avoid callbacks in event-driven code. That's just part and parcel of the event-driven part.
2014-05-28 05:19:27	pawroman	mexi_d3_: :D
2014-05-28 05:20:20	-->	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has joined #python
2014-05-28 05:20:34	-->	Ephexeve_laptop (~Ephexeve_@179.168.144.89) has joined #python
2014-05-28 05:20:41	-->	dowwie (~Dowwie@pool-108-5-114-141.nwrknj.fios.verizon.net) has joined #python
2014-05-28 05:21:16	Ephexeve_laptop	Hey guys, what's up?
2014-05-28 05:21:28	<--	Ephexeve_laptop (~Ephexeve_@179.168.144.89) has quit (Client Quit)
2014-05-28 05:21:43	-->	Ephexeve_laptop (~Ephexeve_@179.168.144.89) has joined #python
2014-05-28 05:21:53	<--	eggsmiao (~cat@121.237.100.25) has quit (Ping timeout: 264 seconds)
2014-05-28 05:21:55	<--	CorpusCallosum (~CorpusCal@92.45.22.236) has quit (Ping timeout: 240 seconds)
2014-05-28 05:22:08	cdunklau	part of my problem is I didn't quite grasp how complex such a simple piece of code would be to test: https://gist.github.com/habnabit/3805075
2014-05-28 05:22:11	<--	Ephexeve_laptop (~Ephexeve_@179.168.144.89) has quit (Client Quit)
2014-05-28 05:23:12	pawroman	cdunklau: wow I didn't think writing such unreadable python is even possible
2014-05-28 05:23:18	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 05:23:40	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 05:23:57	cdunklau	pawroman: i made it more readable! this version passes flake8 validation https://gist.github.com/cdunklau/8447316#file-chatserver_redent-py
2014-05-28 05:24:06	cdunklau	so much better, right?
2014-05-28 05:24:21	mexi_d3_	You don't look like Tiger Woods to me
2014-05-28 05:25:06	-->	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has joined #python
2014-05-28 05:25:22	<--	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has left #python
2014-05-28 05:25:25	cdunklau	i got the idea to write a blog post about refactoring this thing into something reasonable, as kind of a "Don't Panic" message to those of us who have to work with horrible code
2014-05-28 05:25:38	cdunklau	but now i'm starting to panic :)
2014-05-28 05:26:19	mexi_d3_	I'm ambivalent about refactoring inherited code
2014-05-28 05:26:24	pawroman	cdunklau: well, good luck :)
2014-05-28 05:27:08	<--	czapla (~czapla@2a02:8109:8380:1298:4cdd:e184:7fa0:b6b2) has quit (Remote host closed the connection)
2014-05-28 05:27:08	<--	Vornicus (~Vorn@ip98-176-199-87.sd.sd.cox.net) has quit (Quit: Leaving)
2014-05-28 05:27:11	<--	reference (~reference@122.172.198.131) has quit (Remote host closed the connection)
2014-05-28 05:27:16	cdunklau	pawroman: heh, thanks. I have a general idea of what strategy to take for writing a test suite for it, but it's proving hard to actually implement
2014-05-28 05:27:17	mexi_d3_	I'd only do it if I had full ownership otherwise it breaks patches, and sometimes when you refactor it just dies worse. If it was working I'd leave it.
2014-05-28 05:27:19	-->	the_rat (~the_rat@217.200.185.217) has joined #python
2014-05-28 05:27:23	-->	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has joined #python
2014-05-28 05:27:44	cdunklau	mexi_d3_: one of the main points of this post will be "don't touch it until you have full test coverage"
2014-05-28 05:27:46	mexi_d3_	Sometimes with code like that, unit tests might not be the best thing
2014-05-28 05:27:59	-->	Narsilou (~nicolas@APuteaux-652-1-11-163.w82-124.abo.wanadoo.fr) has joined #python
2014-05-28 05:28:00	-->	Ephexeve_laptop (~Ephexeve_@179.168.144.89) has joined #python
2014-05-28 05:28:04	cdunklau	mexi_d3_: sure, this is obviously an extreme example
2014-05-28 05:28:06	mexi_d3_	Units tests imply that you have units to start with :-)
2014-05-28 05:28:11	cdunklau	indeed
2014-05-28 05:28:20	cdunklau	i'm trying to write functional tests for it
2014-05-28 05:28:28	<--	tsumego_ (~anuzismic@FL1-133-202-111-59.tky.mesh.ad.jp) has quit (Quit: tsumego_)
2014-05-28 05:28:52	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 05:29:41	<--	MonoDenza (~denza252@unaffiliated/denza252) has quit (Quit: Off to do something more interestinger.)
2014-05-28 05:29:48	-->	gocho1 (~Icedove@105.53.128.219) has joined #python
2014-05-28 05:30:28	-->	FabTG (~ftg@AAnnecy-651-1-66-213.w86-209.abo.wanadoo.fr) has joined #python
2014-05-28 05:30:47	-->	mission_ (~mission@unaffiliated/mission) has joined #python
2014-05-28 05:30:54	-->	Madison (~Madison@unaffiliated/phalanxia) has joined #python
2014-05-28 05:31:02	<--	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has left #python
2014-05-28 05:31:16	mexi_d3_	Testing individual aspects of it, like clients connecting, etc?
2014-05-28 05:31:20	<--	Lemony (~textual@80.168.151.198) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 05:31:28	-->	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has joined #python
2014-05-28 05:32:08	<--	geri (~anonymous@089144226137.atnat0035.highway.a1.net) has quit (Remote host closed the connection)
2014-05-28 05:32:41	mexi_d3_	Could just throw chat bots at it too until they broke it.
2014-05-28 05:32:57	mexi_d3_	You'll probably have to do that for load testing anyway.
2014-05-28 05:33:02	<--	nagev (~nagev@5d605f0e.skybroadband.com) has quit (Quit: Leaving)
2014-05-28 05:33:04	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-28 05:33:12	<--	Narsilou (~nicolas@APuteaux-652-1-11-163.w82-124.abo.wanadoo.fr) has quit (Ping timeout: 245 seconds)
2014-05-28 05:33:24	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 276 seconds)
2014-05-28 05:33:31	cdunklau	mexi_d3_: yeah, i want to have reasonable coverage over the functionality. i don't really care about load
2014-05-28 05:33:43	<--	deranged_user (~mep@unaffiliated/deranged-user/x-2475585) has quit (Quit: Lost terminal)
2014-05-28 05:33:51	cdunklau	mexi_d3_: here's the (broken) test suite so far, super minimal http://bpaste.net/show/mjzoWnKKFZmWTUZfROS2/
2014-05-28 05:33:56	mexi_d3_	Hrm looking at that code, I'd probably just use the "thousand bots" method. That would be easy to implement and wouldn't need me to integrate with that code.
2014-05-28 05:34:19	<--	mission (~mission@unaffiliated/mission) has quit (Ping timeout: 240 seconds)
2014-05-28 05:34:25	<--	satyajit (~satyajit@122.169.93.248) has quit (Remote host closed the connection)
2014-05-28 05:34:32	cdunklau	mexi_d3_: the main stuff i want to test is shown in the string after the imports
2014-05-28 05:34:52	<--	the_rat (~the_rat@217.200.185.217) has quit (Ping timeout: 245 seconds)
2014-05-28 05:35:07	<--	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has quit (Ping timeout: 240 seconds)
2014-05-28 05:35:13	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-128.dynamic.uwaterloo.ca) has joined #python
2014-05-28 05:35:51	-->	satyajit (~satyajit@122.169.93.248) has joined #python
2014-05-28 05:36:35	-->	Swastik (3b63fe09@gateway/web/freenode/ip.59.99.254.9) has joined #python
2014-05-28 05:36:49	Swastik	hello
2014-05-28 05:37:08	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-28 05:37:12	mexi_d3_	Later on when >1 connecting, might want to add /nick for an already used nick
2014-05-28 05:37:21	-->	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has joined #python
2014-05-28 05:38:28	-->	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has joined #python
2014-05-28 05:38:29	Swastik	i wanted to know the fastest way of searching files in a computer with the same extension
2014-05-28 05:38:58	mexi_d3_	Swastik, Well python has os.walk which can recursively walk a directory structure
2014-05-28 05:39:03	-->	satyajit_ (~satyajit@122.169.93.248) has joined #python
2014-05-28 05:39:30	mexi_d3_	Swastik, As for speed, I can't comment if that's faster than unix `find`
2014-05-28 05:39:45	mexi_d3_	Swastik, My error. os.path.walk()
2014-05-28 05:39:56	cdunklau	mexi_d3_: sure, lower in the gist i did some investigation into those base64 blobs
2014-05-28 05:40:11	<--	satyajit (~satyajit@122.169.93.248) has quit (Ping timeout: 252 seconds)
2014-05-28 05:40:11	-->	InfinityL (~nak123@130.37.56.251) has joined #python
2014-05-28 05:40:41	Swastik	mexi_d3_: i am working on windows and os.walk works
2014-05-28 05:40:49	cdunklau	mexi_d3_: nope. os.path.walk is the old one
2014-05-28 05:40:53	InfinityL	hey! can someone tell me a simple way to convert a 1D numpy array 'x' to a pandas dataframe?!
2014-05-28 05:41:03	-->	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has joined #python
2014-05-28 05:41:03	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 05:41:16	cdunklau	InfinityL: ...aren't numpy arrays iterable?
2014-05-28 05:41:18	pawroman	InfinityL: 1D array is rather a pandas.Series
2014-05-28 05:41:36	-->	iamayam (~yamiam@192.3.160.145) has joined #python
2014-05-28 05:41:48	Swastik	cdunklau: yes, you are right
2014-05-28 05:42:03	--	zz_whg is now known as whg
2014-05-28 05:42:16	-->	Gaan (~textual@12-141.207-68.elmore.res.rr.com) has joined #python
2014-05-28 05:42:24	InfinityL	aha! i just wan to do this because I get a value error
2014-05-28 05:42:56	Swastik	does anyone have a faster way of searching for files as compared to os.walk() ??
2014-05-28 05:43:07	Swastik	using scipy or something perhaps??
2014-05-28 05:43:10	pawroman	InfinityL: with newest pandas, DataFrame(array) works for me, where array is numpy.arange(10)
2014-05-28 05:43:10	InfinityL	when i calculate the mean square error with the training array
2014-05-28 05:43:12	mexi_d3_	Swastik, Well if you're on windows, you might try powershell.
2014-05-28 05:43:29	mexi_d3_	Swastik, But this task should be IO bound, right?
2014-05-28 05:43:37	<--	LysergicDreams (~Lysergia@208-46-125-98.dia.static.qwest.net) has quit (Ping timeout: 245 seconds)
2014-05-28 05:44:09	mexi_d3_	Swastik, Maybe the question to ask is how you are matching the filenames
2014-05-28 05:44:11	-->	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 05:44:19	dowwie	does anyone have a working example of dynamic object construction using map(..) , such as map(namedtuple._make, iterable) ?  I'm looking to create my own _make, essentially
2014-05-28 05:44:26	InfinityL	pawroman: I will try that! Thanks , hope i can eliminate the value error but i doubt it, because i assume it automatically converts it to dataframe when I calculate the mse as mse = mean_squared_error(y_test, gbm.predict(x_test))
2014-05-28 05:44:27	<--	firecat53 (~firecat53@c-98-225-17-95.hsd1.wa.comcast.net) has quit (Ping timeout: 276 seconds)
2014-05-28 05:44:41	<--	_bradk (~Brad@unaffiliated/-bradk/x-9249860) has quit (Ping timeout: 264 seconds)
2014-05-28 05:44:51	InfinityL	where y_test is dataframe and gbm.predict(x_test) is the numpy array
2014-05-28 05:45:31	<--	eggsmiao (~cat@121.237.100.25) has quit (Ping timeout: 258 seconds)
2014-05-28 05:45:40	Swastik	mexi_d3_: look what i exactly want is that a python script should run on my machine and search for all .xls or all .txt files and place them in a .zip file so that i can send that file over the internet
2014-05-28 05:45:48	pawroman	InfinityL: maybe you want to extract numpy data from pandas? predict smells like some machine learning, scikit-learn maybe?
2014-05-28 05:45:55	InfinityL	The only problem i have here is that I get a value error saying array is too large :( Is there some workaround for this besides getting a bigger RAM :P
2014-05-28 05:46:07	<--	rotham (~harry@174.32.52.153) has quit (Read error: Connection reset by peer)
2014-05-28 05:46:13	InfinityL	pawroman: perfect guess
2014-05-28 05:46:27	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-28 05:46:31	Swastik	mexi_d3_: os.walk() takes a lot of time so i was looking for a workaround
2014-05-28 05:46:38	<--	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has quit (Ping timeout: 255 seconds)
2014-05-28 05:46:54	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 05:47:09	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 05:47:21	pawroman	Swastik: recursively walking a whole filesystem takes time... regardless of language
2014-05-28 05:47:27	mexi_d3_	Swastik, I'm sure the speed of the file system is the determining factor.
2014-05-28 05:47:33	nosklo	Swastik: you can build a index of the directory tree and then search it, instead of searching live in the filesystem. If you search the same files multiple times, you'll save time
2014-05-28 05:48:07	nosklo	Swastik: You'll spend a long time once building the index, and then searching it will be really fast
2014-05-28 05:48:21	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 276 seconds)
2014-05-28 05:48:38	mexi_d3_	Swastik, Doesn't windows already have a file indexing service you could hook into with a microsoft API (I dont know the winapi)
2014-05-28 05:48:40	<--	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 05:48:45	-->	airtonix (~quassel@unaffiliated/airtonix) has joined #python
2014-05-28 05:48:56	pawroman	InfinityL: maybe you should fine-grain the computations somehow... dunno, I don't know the specifics of scikit-learn
2014-05-28 05:49:14	-->	n3bul4 (c9163b56@gateway/web/freenode/ip.201.22.59.86) has joined #python
2014-05-28 05:49:18	<--	satyajit_ (~satyajit@122.169.93.248) has quit
2014-05-28 05:49:39	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Client Quit)
2014-05-28 05:49:41	Swastik	nosklo: i don't think os.walk() encounters the same file more than once, does it???
2014-05-28 05:49:45	<--	Samb2 (~Sammysama@2.121.203.77) has quit (Quit: WeeChat 0.4.3)
2014-05-28 05:50:07	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 05:50:11	-->	Samb2 (~Sammysama@2.121.203.77) has joined #python
2014-05-28 05:50:21	-->	alexsnake (~alexsnake@200.79.231.98) has joined #python
2014-05-28 05:50:22	Swastik	mexi_d3_: It has but i guess that would require 3rd party modules
2014-05-28 05:50:26	Ephexeve_laptop	Yes it does
2014-05-28 05:50:30	mexi_d3_	Swastik, he means search once and hold the structure in memory, which means subsequent searches aren't capped by the speed of the file system. However in your case I dont think you need to do hat?
2014-05-28 05:50:30	Ephexeve_laptop	It encounters the same file
2014-05-28 05:50:33	-->	Xiti (~Xiti-@c-50-134-127-54.hsd1.va.comcast.net) has joined #python
2014-05-28 05:50:39	CatKiller	Swastik: Depending on your platform, you could maybe leverage the data from "updatedb" (GNU locate) which already keeps an index of files
2014-05-28 05:50:45	nosklo	Swastik: it doesn't. What I mean is: If you're going to search the same set of files for different filenames, you'll speed up subsequent searches
2014-05-28 05:50:59	-->	lduros (~user@fsf/member/lduros) has joined #python
2014-05-28 05:51:39	CatKiller	or simply call "locate" if on Linux
2014-05-28 05:51:47	nosklo	Swastik: you search for 'foo', so your code builds a index. When you search for 'bar' the index is already built so the search is instantaneous
2014-05-28 05:52:15	mexi_d3_	Swastik, If you do need to use the Windows API or 3rd party libs on Windows, I believe the commercial python distros (activestate etc) have them all packaged up so it runs out of the box.
2014-05-28 05:52:16	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Client Quit)
2014-05-28 05:52:18	<--	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has quit (Remote host closed the connection)
2014-05-28 05:52:22	Swastik	Ephexeve_laptop: how can a search function encounter the same file twice because if that happens, it might end up into an infinite loop
2014-05-28 05:52:25	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 258 seconds)
2014-05-28 05:52:37	pawroman	Swastik: symlinks?
2014-05-28 05:52:40	InfinityL	pawroman: what i think it originally does is automatically extract the numpy array from datafram and calculate the mse....I want to try to see if both my objects are dataframes maybe it has less strain on my memory
2014-05-28 05:52:55	Swastik	pawroman: whats that?
2014-05-28 05:52:56	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 05:53:04	InfinityL	anyways thanks for the help...will be back if the problem persists ;)
2014-05-28 05:53:09	Ephexeve_laptop	Swastik, what pawroman said.
2014-05-28 05:53:16	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 05:53:24	CatKiller	Swastik: Shortcuts
2014-05-28 05:53:30	Ephexeve_laptop	Symlink is like a shoercut of a file on window
2014-05-28 05:53:30	CatKiller	quote that up
2014-05-28 05:53:32	pawroman	InfinityL: you won't get much better memory efficiency than numpy arrays... pandas keeps numeric data internally as numpy arrays
2014-05-28 05:53:44	Swastik	nosklo: look i just want a particular extension to be searched so indexing would not be necessary perhaps. what do you say now?
2014-05-28 05:53:58	<--	Hix (~Hix@97e01324.skybroadband.com) has quit (Remote host closed the connection)
2014-05-28 05:54:30	pawroman	Swastik: it doesn't matter, you have to walk the filesystem anyway
2014-05-28 05:54:31	Pici	IIRC, NTFS supports symlinking, but I've never seen it really used in the wild.
2014-05-28 05:54:32	CatKiller	Swastik: Searching is very time consuming. If you're searching filesystem wide I would recommend leveraging the OS search feature which makes use of an index and is orders of magnitude faster
2014-05-28 05:54:35	mexi_d3_	Swastik, We say in Python, use os.walk() and deal with the fact that file systems are slow, or you might leverage the Windows API
2014-05-28 05:54:36	<--	alexsnake (~alexsnake@200.79.231.98) has quit (Ping timeout: 240 seconds)
2014-05-28 05:54:47	CatKiller	or build your own index but be prepared to spend a bit of time doing it wel
2014-05-28 05:54:47	Swastik	Ephexeve_laptop: and how is that going to help my search??
2014-05-28 05:54:47	InfinityL	pawroman: damn it! I have to make this work soon.....but the data is not tht big. The csv file is like (100,000 * 54)
2014-05-28 05:54:48	Ephexeve_laptop	Am i just being fully grumpy,  who people who write python without know anything about unix are just silly? Or write code in general
2014-05-28 05:54:59	<--	aerocarbine (~aero@49.205.55.68) has quit (Remote host closed the connection)
2014-05-28 05:55:08	-->	airos (~airos@lbg31-1-78-245-85-24.fbx.proxad.net) has joined #python
2014-05-28 05:55:09	CatKiller	Swastik: By making it much faster.
2014-05-28 05:55:14	CatKiller	Speed is an issue here right?
2014-05-28 05:55:20	InfinityL	will try to look for a work-around before I ask more :/
2014-05-28 05:55:24	CatKiller	Searching my filesystem on a slow drive can take upwards 15 minutes
2014-05-28 05:55:42	-->	sardok (~sinan@94.122.11.254) has joined #python
2014-05-28 05:55:49	mexi_d3_	Ephexeve_laptop, He's on windows. Windows shortcuts aren't really the same as symlinks. I believe you have to install some kind of power user kit to symlink on windows.
2014-05-28 05:56:19	Swastik	CatKiller: ya speed is the major issue but i did not understand about this symlinks. could anybody elaborate or provide a link
2014-05-28 05:56:23	-->	kai_w (~kai@global-1-27.nat.csx.cam.ac.uk) has joined #python
2014-05-28 05:56:29	CatKiller	Ephexeve_laptop: You can write Python and only know about Windows
2014-05-28 05:56:30	Ephexeve_laptop	Swastik, it won't, i just rold you that perhaps you can find the same file again and not enter an infinite loop. Anyway,  os.walk is what you are looking for, perhaps use memcache for caching and faster searching in the future,  or another way
2014-05-28 05:56:33	mexi_d3_	Swastik, He was answering your question on how a search can visit the same file twice, that's all. (Symlinks is the answer)
2014-05-28 05:56:42	CatKiller	Swastik: Ignore the symlinks issue if you're on Windows
2014-05-28 05:56:47	pawroman	InfinityL: you could try converting numeric data types to use smaller types, at cost of precision (assuming they are float)
2014-05-28 05:56:48	<--	eggsmiao (~cat@121.237.100.25) has quit (Ping timeout: 276 seconds)
2014-05-28 05:57:10	-->	Lauxley (~rtissot@149.6.166.70) has joined #python
2014-05-28 05:57:14	Ephexeve_laptop	Mexi_id, yes you are right, i just said shortcut so i wouldn't have to explain exactly what a symlink is
2014-05-28 05:57:17	diverdude	Hi, i am trying  to find out if python has some clever way of removing all lines from a file which starts with a %. Further more if there is a % halfway in a line, the part behind the % should be removed. Is that possible somehow?
2014-05-28 05:57:22	<--	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Quit: Lost terminal)
2014-05-28 05:57:24	<--	hroi (~hroi@hitabylgja.vedur.is) has left #python ("Konversation terminated!")
2014-05-28 05:57:31	<--	kai_w (~kai@global-1-27.nat.csx.cam.ac.uk) has quit (Quit: WeeChat 0.4.3)
2014-05-28 05:57:34	<--	uon (~zjqu@116.226.75.137) has left #python
2014-05-28 05:57:52	Swastik	mexi_d3_: Ephexeve_laptop: alright, i got it
2014-05-28 05:57:53	CatKiller	diverdude: Iterate over the file like "for line in file:"
2014-05-28 05:57:55	pawroman	diverdude: do you know regular expressions? :)
2014-05-28 05:57:58	CatKiller	match the "%" sign
2014-05-28 05:58:04	Ephexeve_laptop	CatKiller, yes, I just find it silly, unix implements good patterns,  easier to learn
2014-05-28 05:58:10	CatKiller	write a temporary file with same line if there wasn't a % found
2014-05-28 05:58:10	timkofu	diverdude: first, regexes
2014-05-28 05:58:16	-->	al34n1x (~al34n1x@186.19.211.131) has joined #python
2014-05-28 05:58:35	Swastik	so the best and probably the only option is os.walk(), right??
2014-05-28 05:58:38	CatKiller	Ephexeve_laptop: True but some people have not yet converted ;)
2014-05-28 05:58:46	-->	Watball (~Watball@f124242.upc-f.chello.nl) has joined #python
2014-05-28 05:58:48	CatKiller	The slowest option is indeed os.walk, yes
2014-05-28 05:58:49	-->	shunya_chakra (~shunya@117.200.70.69) has joined #python
2014-05-28 05:58:56	-->	Burgundy (~burgundy@188.25.126.27) has joined #python
2014-05-28 05:58:57	-->	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-28 05:58:58	timkofu	diverdude: second, iterate over the lines and remove the line if starts_with("%") or contains("%")
2014-05-28 05:59:00	mexi_d3_	Swastik, That's the sane, pure Python, portable way.
2014-05-28 05:59:04	CatKiller	You can speed it up by caching results so that the next request is faster
2014-05-28 05:59:19	CatKiller	or you can speed it up even more by using your OS's search feature (access through your program)
2014-05-28 05:59:27	--	sqrrl is now known as sq
2014-05-28 05:59:31	-->	paranoidi (~paranoidi@91-157-144-53.elisa-laajakaista.fi) has joined #python
2014-05-28 06:00:02	mexi_d3_	I just learned how to symlink on windows
2014-05-28 06:00:13	Swastik	CatKiller: is there a way to use windows' search feature using pure python??
2014-05-28 06:00:15	timkofu	lets party
2014-05-28 06:00:21	Ephexeve_laptop	Swastik, perhaps there is a 3rd party module where it implements os.walk faster and perhaps they also implementat caching or some sort. Check that out. But os.walk is not that slow if u compare to other ways of doing it
2014-05-28 06:00:22	mexi_d3_	mklink -option linkpath filepath
2014-05-28 06:00:38	pawroman	mexi_d3_: I once did symlink on win7, in order to place temp dir on different drive (because battlefield 3 wouldn't install with 900MB free on disk C:)
2014-05-28 06:00:43	mexi_d3_	Swastik, You will need to use the Windows API
2014-05-28 06:00:43	CatKiller	Swastik: Hopefully. there is on Linux.
2014-05-28 06:00:47	<--	Andyrez (~andyrez@41.58.211.112) has quit (Remote host closed the connection)
2014-05-28 06:00:48	paranoidi	"requests.exceptions.SSLError: [Errno 8] _ssl.c:504: EOF occurred in violation of protocol" .. any tips for that? Seems like our servers are somehow bugged and we're unable to find reason why some servers cause this and some do not. We have tried recompiling python with latest openssl with no help.
2014-05-28 06:00:55	-->	Andyrez (~andyrez@41.58.211.112) has joined #python
2014-05-28 06:00:59	Ephexeve_laptop	Check is there is any module where u can talk to windows index api or whatever
2014-05-28 06:00:59	-->	nseger (uid3777@gateway/web/irccloud.com/x-qqecfmjadxgkgyxg) has joined #python
2014-05-28 06:01:14	<--	emorrow (~Thunderbi@185.7.185.250) has quit (Quit: emorrow)
2014-05-28 06:01:34	Ephexeve_laptop	Basically,  follow every step CatKiller said, his opinion looka pro to me
2014-05-28 06:01:57	-->	AaronMT (~AaronMT@CPE0088654f39bd-CM602ad0738a5c.cpe.net.cable.rogers.com) has joined #python
2014-05-28 06:02:02	mexi_d3_	Just to throw a spanner in the works, many windows users turn off file indexing as it adds considerable overhead to their machines
2014-05-28 06:02:08	-->	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has joined #python
2014-05-28 06:02:13	-->	admin0 (~admin0@77.95.99.166) has joined #python
2014-05-28 06:02:16	<--	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2014-05-28 06:02:39	-->	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-28 06:03:03	CatKiller	Ephexeve_laptop: Not a pro, but Windows has a WMI interface that can be accessed over Python, you can use it
2014-05-28 06:03:06	Ephexeve_laptop	Mexi_d3, yes, indeed they do, so in other words, memcache or another thing is his only way hehe
2014-05-28 06:03:27	janelleb	Is nose (nosetests) no longer under development?
2014-05-28 06:03:31	Ephexeve_laptop	Or move to linux, parse locate db and Bah!
2014-05-28 06:03:42	-->	regebro (~regebro@31.172.179.174) has joined #python
2014-05-28 06:03:51	mexi_d3_	Swastik, Maybe you can intelligently search by changing the order? If it's .excel you want, look in mydocs first.
2014-05-28 06:03:54	-->	thinkxl (~Adium@207-91-184-235.nstci.net) has joined #python
2014-05-28 06:04:02	Ephexeve_laptop	CatKiller, yes, I just meant that the ideia you offered seemed good and fast
2014-05-28 06:04:13	therealfakemoot	janelleb: I'd be surprised. Why do you think that?
2014-05-28 06:04:18	<--	Swastik (3b63fe09@gateway/web/freenode/ip.59.99.254.9) has quit (Ping timeout: 240 seconds)
2014-05-28 06:04:21	mexi_d3_	Swastik, I mean are you really going to look in c:\windows\system32 for excel docs?
2014-05-28 06:04:23	CatKiller	It was the same that was proposed earlier by other people, just a summary ;)
2014-05-28 06:04:26	<--	legless399 (~samtur@195.81.28.46) has left #python
2014-05-28 06:04:43	-->	legless399 (~samtur@195.81.28.46) has joined #python
2014-05-28 06:05:18	-->	geri (~anonymous@089144226137.atnat0035.highway.a1.net) has joined #python
2014-05-28 06:05:18	-->	Na3iL (~Naeil@unaffiliated/na3il) has joined #python
2014-05-28 06:05:19	-->	Swastik (3b63fe09@gateway/web/freenode/ip.59.99.254.9) has joined #python
2014-05-28 06:05:20	-->	kilianv (~kilian@5468702A.cm-12-1b.dynamic.ziggo.nl) has joined #python
2014-05-28 06:05:32	mexi_d3_	Swastik, I would also look in excels' MRU list (recent files) and search those folder as a priority
2014-05-28 06:05:45	kilianv	I have a weird problem, one of my virtualenvs uses the pip of a different virtualenv. How can i change this?
2014-05-28 06:05:50	-->	thoolihan (~thoolihan@2605:a000:f4e1:8d01:ac86:5464:b5b9:913) has joined #python
2014-05-28 06:05:55	Swastik	mexi_d3_: awesome idea
2014-05-28 06:06:13	<--	darkf (~darkf___@unaffiliated/darkf) has quit (Quit: Leaving)
2014-05-28 06:06:13	<--	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-28 06:06:15	kilianv	(so pip --version refers to a different virtualenv's site-packages)
2014-05-28 06:06:18	Swastik	mexi_d3_: but how can i access that??
2014-05-28 06:06:25	mexi_d3_	Access what?
2014-05-28 06:06:29	-->	mikemac (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined #python
2014-05-28 06:06:30	mexi_d3_	Excels mru list?
2014-05-28 06:06:37	Swastik	mexi_d3_: ya
2014-05-28 06:06:37	Yhg1s	kilianv: are you running 'pip' or 'path/to/virtualenv/bin/pip'?
2014-05-28 06:06:43	kilianv	'pip'
2014-05-28 06:06:49	pawroman	kilianv: did you relocate/copy the virtualenv?
2014-05-28 06:06:49	mexi_d3_	That's platform specific, I donno. Maybe ask windows dev guys.
2014-05-28 06:06:57	Yhg1s	kilianv: so how do you know it's the pip from the right virtualenv?
2014-05-28 06:07:05	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 06:07:06	janelleb	therealfakemoot: whoops I saw a page on pypi.python.org showing the last changes on nose were months/or-years ago... I've just seen the github though
2014-05-28 06:07:09	mexi_d3_	they'll probably get you to use c# for your code too :-)
2014-05-28 06:07:35	<--	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has quit (Remote host closed the connection)
2014-05-28 06:07:51	kilianv	Yhg1s,  created using cpvirtualenv so that might be it. workon virtualenv1 && pip --version >> virtualenv2/.../site-packages/pip...
2014-05-28 06:08:07	Yhg1s	kilianv: and if you run virtualenv2/bin/pip --version?
2014-05-28 06:08:24	Swastik	mexi_d3_: alright, i will look into it
2014-05-28 06:08:33	<--	thinkxl (~Adium@207-91-184-235.nstci.net) has quit (Client Quit)
2014-05-28 06:08:41	Pici	Swastik: probably a way via the win32 extensions, you'd need to look at them and msdn to figure out what exactly to use.
2014-05-28 06:09:21	Swastik	Pici: win32 libraries for python??
2014-05-28 06:09:40	CatKiller	Swastik: WMI...
2014-05-28 06:09:56	CatKiller	Prepare to enter a really complex world
2014-05-28 06:10:05	CatKiller	Swastik: What is this for anyways?
2014-05-28 06:10:27	Swastik	CatKiller: well its kind of a client requirement
2014-05-28 06:10:28	Pici	Swastik: http://sourceforge.net/projects/pywin32/files/
2014-05-28 06:10:43	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Ping timeout: 240 seconds)
2014-05-28 06:10:49	CatKiller	OK, but what is it for?
2014-05-28 06:10:51	Swastik	Pici: thanks. will look into it
2014-05-28 06:10:54	-->	mcanes (~mcanes@251.Red-88-12-41.staticIP.rima-tde.net) has joined #python
2014-05-28 06:10:58	-->	yorick (~yorick@oftn/member/yorick) has joined #python
2014-05-28 06:11:18	mexi_d3_	Swastik,  ActiveState python is free for non-commerical and includes the windows api plus windows versions of a lot of common 3rd party python libraries
2014-05-28 06:11:19	<--	il (~not_mike@unaffiliated/not-mike/x-4399907) has quit (Read error: Connection reset by peer)
2014-05-28 06:11:40	pawroman	mexi_d3_: +1, it's really got it all
2014-05-28 06:11:46	-->	il (~not_mike@unaffiliated/not-mike/x-4399907) has joined #python
2014-05-28 06:11:48	-->	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has joined #python
2014-05-28 06:11:57	-->	theshadow (~theshadow@24.8.4.50) has joined #python
2014-05-28 06:11:59	Swastik	CatKiller: look, client needs to run this script on a remote system and fetch all the excel files without having to look into all folders manually
2014-05-28 06:12:23	kilianv	Yhg1s, I decided to rebuild the virtualenv instead, works now. Thanks for your help :)
2014-05-28 06:12:26	Swastik	mexi_d3_: can you provide a link please??
2014-05-28 06:12:26	-->	FortySix2 (~FortySix2@h75-100-88-125.mdtnwi.broadband.dynamic.tds.net) has joined #python
2014-05-28 06:12:35	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 06:12:36	CatKiller	Swastik: and why not using a command line search tool?
2014-05-28 06:12:36	<--	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-05-28 06:12:49	Lauxley	Hi, i have an instance of A that contains a list of instances of B, knowing that B present some kind of API, i would like to proxy the calls to this API from A to all instances of B, is there an elegant way to do this ? a.foo("bar") would do 'for b in a.bs: b.foo("bar")'
2014-05-28 06:12:58	Swastik	CatKiller: like??
2014-05-28 06:12:58	CatKiller	Swastik: Dealing with the win32 API is quite complex
2014-05-28 06:13:04	<--	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has quit (Quit: Leaving)
2014-05-28 06:13:10	-->	natur (natur@linuxcube.pl) has joined #python
2014-05-28 06:13:15	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 06:13:21	mexi_d3_	Swastik, http://www.activestate.com/activepython ... But i don't see why speed is the issue here. If it takes an hour, so what?
2014-05-28 06:13:26	therealfakemoot	Lauxley: Yes. Write a method on A that does exactly that
2014-05-28 06:13:27	Swastik	CatKiller: but if it gives me a better speed then its worth the labour and time
2014-05-28 06:13:36	pawroman	Lauxley: try operator.methodcaller
2014-05-28 06:13:37	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-28 06:13:58	CatKiller	Swastik: There seem to be many ways to find files on Windows from the command line
2014-05-28 06:14:03	<--	mcanes (~mcanes@251.Red-88-12-41.staticIP.rima-tde.net) has quit (Remote host closed the connection)
2014-05-28 06:14:10	therealfakemoot	Lauxley: `def foo(self, whatever): for i in self.things: i.foo(whatever)`
2014-05-28 06:14:12	<--	skynxnex (~skynxnex@c83-248-146-127.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-28 06:14:13	Lauxley	therealfakemoot: :) problem is the i don't want to do it in A.__getattr__ because i can't implement the whole APi
2014-05-28 06:14:17	-->	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has joined #python
2014-05-28 06:14:18	therealfakemoot	Lauxley: You don't.
2014-05-28 06:14:21	Lauxley	(and it's also dynamic)
2014-05-28 06:14:32	<--	Burgundy (~burgundy@188.25.126.27) has quit (Ping timeout: 255 seconds)
2014-05-28 06:14:34	Lauxley	pawroman: ill check it out
2014-05-28 06:14:48	pawroman	Lauxley: https://docs.python.org/2/library/operator.html#operator.methodcaller
2014-05-28 06:14:49	Swastik	mexi_d3_: speed is an issue because os.walk() consumes a lot of resources and takes a lot of time as well, so client can't invest both resources and time, anyone should be reduced
2014-05-28 06:15:06	-->	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has joined #python
2014-05-28 06:15:06	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 06:15:11	-->	ELFrederich (~ELFrederi@12.54.94.26) has joined #python
2014-05-28 06:15:13	CatKiller	Swastik: Simplest one being "dir". Not sure if it uses the index
2014-05-28 06:15:23	pawroman	operator module is so overlooked...
2014-05-28 06:15:38	mexi_d3_	There is indeed a recursive 'dir' but I don't see how it's faster than os.walk
2014-05-28 06:15:44	<--	eka (~eka@190.237.10.159) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2014-05-28 06:16:11	-->	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has joined #python
2014-05-28 06:16:22	<--	Na3iL (~Naeil@unaffiliated/na3il) has quit (Remote host closed the connection)
2014-05-28 06:16:34	<--	R0b0t1 (~dev@unaffiliated/r0b0t1) has quit (Ping timeout: 258 seconds)
2014-05-28 06:16:43	mexi_d3_	Swastik, In windows, you could set  your program to run in the background under a lower priority. You could also code it to sleep if you were worried about cpu usage. It would take longer of course, but impact the user less.
2014-05-28 06:16:56	--	elyezer|out is now known as elyezer
2014-05-28 06:17:05	<--	Madison (~Madison@unaffiliated/phalanxia) has quit (Ping timeout: 264 seconds)
2014-05-28 06:17:50	Lauxley	pawroman: looks interesting, i was going in that direction but then i decided to come here because it looked weird, ill try if it works
2014-05-28 06:18:48	pawroman	Lauxley: for me it's a very nice way to do what you're trying to achieve
2014-05-28 06:18:51	mexi_d3_	Swastik,  This isn't one of those james bond things that you sneak in and run during lunch hour to steal the secret plans? :-)
2014-05-28 06:19:23	pawroman	Lauxley: but of course, everyone has a different opinion on what's "nice", "elegant" and what not ;)
2014-05-28 06:19:49	therealfakemoot	Elegance is an illusion
2014-05-28 06:19:58	therealfakemoot	There are only passing tests
2014-05-28 06:20:00	--	johnraz is now known as johnraz|away
2014-05-28 06:20:01	-->	solidus-river (~solidus-r@207.170.224.131) has joined #python
2014-05-28 06:20:06	-->	vandrew (~vandrew@86.122.229.114) has joined #python
2014-05-28 06:20:06	-->	woodgiraffe (~wee@109.201.152.249) has joined #python
2014-05-28 06:20:14	therealfakemoot	Take it to heart, grasshoppers
2014-05-28 06:20:18	Lauxley	pawroman: it's hidden complexity so i guess it's ok if it's not instantaneously understandable
2014-05-28 06:20:23	cdunklau	therealfakemoot: *correct* passing tests
2014-05-28 06:20:29	<--	mikeybisbo (~mikeybisb@host86-171-32-109.range86-171.btcentralplus.com) has quit
2014-05-28 06:21:00	-->	FinboySlick (~shark@74.117.40.10) has joined #python
2014-05-28 06:21:03	therealfakemoot	Those too!
2014-05-28 06:21:10	mexi_d3_	correct passing useful tests
2014-05-28 06:21:23	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-28 06:21:25	mexi_d3_	"Program fits on single sheet of A4". passed!
2014-05-28 06:21:32	pawroman	therealfakemoot: I take pleasure in writing nice, understandable code, that's up to my "standards"
2014-05-28 06:21:57	pawroman	therealfakemoot: but of course, I know in professional world things aren't always as nice
2014-05-28 06:21:57	<--	paullik (~paullik@unaffiliated/paullik) has quit (Remote host closed the connection)
2014-05-28 06:22:02	therealfakemoot	ain't that the truth
2014-05-28 06:22:03	woodgiraffe	What would be the most performant way to replacing words in a list of strings according to some mapping?
2014-05-28 06:22:08	nido	def testFunction(): assertTrue(True)
2014-05-28 06:22:16	-->	jwhisnant (~jwhisnant@unaffiliated/jwhisnant) has joined #python
2014-05-28 06:22:24	therealfakemoot	woodgiraffe: Depends on the complexity of the mappings
2014-05-28 06:22:28	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 06:22:31	cdunklau	...and on what a word is
2014-05-28 06:22:40	<--	Doug__ (~quassel@c-76-104-27-79.hsd1.va.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-28 06:22:47	galactic_pretty_	and i don't know...
2014-05-28 06:23:08	woodgiraffe	e.g. "cat->dog","apple->banana", about 50 such "transformations" on 10000 lines
2014-05-28 06:23:09	-->	kosh (~kosh@aesaeion.com) has joined #python
2014-05-28 06:23:09	-->	Mkster (~Mkster@i577B68DB.versanet.de) has joined #python
2014-05-28 06:23:20	therealfakemoot	woodgiraffe: So just static substring replacement
2014-05-28 06:23:21	-->	strawm4n (~Hellvis@216.227.128.66) has joined #python
2014-05-28 06:23:24	therealfakemoot	woodgiraffe: strings have a .replace method
2014-05-28 06:23:38	therealfakemoot	woodgiraffe: So iterate over your strings, then over your replacements and use .replace
2014-05-28 06:23:49	woodgiraffe	Thats performant?
2014-05-28 06:24:08	woodgiraffe	Don't I have to run replace for every "transformation" ?
2014-05-28 06:24:18	therealfakemoot	woodgiraffe: Only if you want to do all the replacements
2014-05-28 06:24:43	therealfakemoot	woodgiraffe: It's quadratic time. You have two sets of objects to iterate over completely. No getting around it.
2014-05-28 06:25:09	-->	khagler (~khagler@gateway/tor-sasl/khagler) has joined #python
2014-05-28 06:25:10	woodgiraffe	Sure, that's the point, besides replace wouldn't achieve this in one step so "cat->sword","word->apple" on "cat" would turn into "sapple" right
2014-05-28 06:25:17	FinboySlick	In 2.7, is "for line in fileobject:"  the most efficient way to parse a file line by line?  I'm trying to optimize as these are fairly large files.
2014-05-28 06:25:20	-->	plex0r (~plex0r@173-160-70-101-atlanta.hfc.comcastbusiness.net) has joined #python
2014-05-28 06:25:21	woodgiraffe	Right, would want to do this with a dict?
2014-05-28 06:25:27	therealfakemoot	woodgiraffe: No, it wouldn't. That's why you iterate over the replacements too
2014-05-28 06:25:36	[diablo]	afternoon guys Im doing a with open(fn, 'r') as fh and in the loop I call a function, that function may at times need to read some additional lines before returning to the main loop. Im getting a ValueError: Mixing iteration and read methods would lose data
2014-05-28 06:26:02	[diablo]	should I really create a class to handle all this an have the filehandle avaiable to the class please?
2014-05-28 06:26:13	<--	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-05-28 06:26:19	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Ping timeout: 240 seconds)
2014-05-28 06:26:22	mexi_d3_	woodgiraffe, You might do some fancy stuff before hand if you notice your replacements are substrings of other replacements.
2014-05-28 06:26:24	pawroman	[diablo]: there's a module for that, https://docs.python.org/2/library/linecache.html
2014-05-28 06:26:25	-->	mcsontos (mcsontos@nat/redhat/x-sdfxtnnihzfgrlvd) has joined #python
2014-05-28 06:26:40	therealfakemoot	woodgiraffe: https://gist.github.com/anonymous/66dff2b9ba3c6bdf2754
2014-05-28 06:26:41	pawroman	[diablo]: you might want to give it a try ;)
2014-05-28 06:26:43	[diablo]	hi pawroman ok thank u i will check that now
2014-05-28 06:26:48	mexi_d3_	woodgiraffe, I think it's a lot of effort for little gain but huge disclaimer, i dont know your data set
2014-05-28 06:26:48	therealfakemoot	woodgiraffe: that's the absolute simplest it can get.
2014-05-28 06:26:55	<--	abinmathew1986 (~root@115.115.169.6) has left #python
2014-05-28 06:27:02	therealfakemoot	woodgiraffe: Your only optimisation is changing to writing something in C or leveraging grep/sed maybe.
2014-05-28 06:27:47	-->	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has joined #python
2014-05-28 06:27:59	woodgiraffe	Can't I simply parse words inside the string, look them up in a dict and append them to a tempstring in a StringBuilder fashion or something like that?
2014-05-28 06:28:17	woodgiraffe	To me that would sound like a performant way to do this
2014-05-28 06:28:28	<--	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has quit (Quit: wwnnbb)
2014-05-28 06:28:30	Yhg1s	woodgiraffe: sure. The 'StringBuilder fashion' would be 'a list'.
2014-05-28 06:29:04	<--	kilianv (~kilian@5468702A.cm-12-1b.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-05-28 06:29:06	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 06:29:21	-->	the_rat (~the_rat@217.200.185.249) has joined #python
2014-05-28 06:29:56	<--	amigo (~amigo@unaffiliated/amigo) has quit (Quit: Lost terminal)
2014-05-28 06:30:13	mexi_d3_	I've never looked at the implementation of str.replace(). How do we know it doesn't do that already?
2014-05-28 06:30:15	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 06:30:20	Yhg1s	mexi_d3_: doesn't do what?
2014-05-28 06:30:25	woodgiraffe	Well It's probably around 20-30 tops such replacements over, let's say 20.000 lines
2014-05-28 06:30:31	therealfakemoot	woodgiraffe: Trivial
2014-05-28 06:30:35	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 06:30:52	therealfakemoot	my little snippet will handle that just fine
2014-05-28 06:30:55	Justin	woodgiraffe: how often? once a week? 100 times a second?
2014-05-28 06:31:05	woodgiraffe	once a week
2014-05-28 06:31:08	-->	Deithrian (~Deithrian@unaffiliated/deithrian) has joined #python
2014-05-28 06:31:09	therealfakemoot	hahaha
2014-05-28 06:31:17	Justin	helps to ask the right questions :)
2014-05-28 06:31:18	therealfakemoot	okay yes, you're worrying WAAAAAAAAAAAAAY too much about this
2014-05-28 06:31:55	mexi_d3_	wow
2014-05-28 06:32:07	woodgiraffe	But my point was to use a dict instead of using two for loops with constant lookup that obviously would be more performant
2014-05-28 06:32:17	woodgiraffe	If that's somehow conveniently possible
2014-05-28 06:32:40	-->	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has joined #python
2014-05-28 06:32:41	-->	amigo (~amigo@unaffiliated/amigo) has joined #python
2014-05-28 06:33:16	<--	reference (~reference@122.172.198.131) has quit (Remote host closed the connection)
2014-05-28 06:33:36	rivarun	i keep having this problem where i'm working on code that uses some data structure i came up with not long ago and have no idea what it contains
2014-05-28 06:33:43	pawroman	woodgiraffe: it's perfectly possible, how do you define a "word"?
2014-05-28 06:33:50	therealfakemoot	woodgiraffe: Yes, but then you have to iterate over every word in every string
2014-05-28 06:33:53	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 06:34:12	therealfakemoot	woodgiraffe: instead of letting the C code in the string type do the replacement for you
2014-05-28 06:34:40	woodgiraffe	pawroman: yes that is a bit tricky, it should match substrings, like "pear->apple" in "var fruit = pear;" should replace pear into apple
2014-05-28 06:34:42	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-28 06:34:50	woodgiraffe	therealfakemoot: very true
2014-05-28 06:35:13	<--	badon (~badon@pdpc/supporter/active/badon) has quit (Ping timeout: 265 seconds)
2014-05-28 06:35:23	therealfakemoot	My snippet will be easy to understand six months or a year from now, and it will run sufficiently fast
2014-05-28 06:35:23	-->	isomer (~textual@unaffiliated/isomer) has joined #python
2014-05-28 06:35:24	<--	fcodiaz (~fcodiaz@adsl-184-47-230-90.asm.bellsouth.net) has quit (Remote host closed the connection)
2014-05-28 06:35:31	therealfakemoot	especially for a once-a-week thing
2014-05-28 06:35:44	pawroman	woodgiraffe: then you should use plain replace, because tokenizing the damn thing would also take time
2014-05-28 06:35:57	woodgiraffe	guess so
2014-05-28 06:36:00	mexi_d3_	woodgiraffe, If that's a programming language you are parsing, I really want to know how you define and delimit words
2014-05-28 06:36:02	therealfakemoot	Yeah. What do you think .replace() does? Exactly what you're trying to implement
2014-05-28 06:36:17	-->	skynxnex (~skynxnex@c83-248-146-127.bredband.comhem.se) has joined #python
2014-05-28 06:36:24	-->	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has joined #python
2014-05-28 06:36:26	woodgiraffe	it's not a programming language, it's simple variable substitution in any plaintext
2014-05-28 06:36:32	Yhg1s	(except str.replace does substring replacement. it has no concept of 'words'.)
2014-05-28 06:36:54	nido	http://xkcd.com/1205/ might be relevant
2014-05-28 06:37:06	<--	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has quit (Ping timeout: 276 seconds)
2014-05-28 06:37:08	pawroman	woodgiraffe: to me looks like it's javascript ;)
2014-05-28 06:37:10	<--	Rizzit (4e8dbb56@gateway/web/freenode/ip.78.141.187.86) has quit (Quit: Page closed)
2014-05-28 06:37:14	<--	Jezzz (jezzz@unaffiliated/jezzz) has quit (Excess Flood)
2014-05-28 06:37:34	<--	edofso (~edofso@a80-100-189-109.adsl.xs4all.nl) has quit (Read error: Connection reset by peer)
2014-05-28 06:37:39	woodgiraffe	I just used it as an example that the replace part should infact match substrings and not merely whitespace delimited words
2014-05-28 06:37:59	woodgiraffe	Thanks anyway, I'll try therealfakemoots thing
2014-05-28 06:38:12	Yhg1s	woodgiraffe: then you really want to use str.replace.
2014-05-28 06:38:12	<--	reference (~reference@122.172.198.131) has quit (Ping timeout: 245 seconds)
2014-05-28 06:38:18	-->	r0x0rZ (~r0x0rZ@90.183.77.40) has joined #python
2014-05-28 06:38:18	<--	r0x0rZ (~r0x0rZ@90.183.77.40) has quit (Client Quit)
2014-05-28 06:38:27	-->	AnYaDi (~AnYaDi@eduroam-169-222.dyn.carleton.edu) has joined #python
2014-05-28 06:38:37	Yhg1s	(or perhaps re.sub, but it might not be faster, and it's probably not worth the effort.)
2014-05-28 06:38:38	pawroman	woodgiraffe: then therealfakemoot has got it right - you should use replace and don't worry about performance.
2014-05-28 06:38:47	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 06:39:02	pawroman	woodgiraffe: if it's too slow, then worry about optimization
2014-05-28 06:39:02	-->	Jezzz (jezzz@unaffiliated/jezzz) has joined #python
2014-05-28 06:39:18	<--	Swastik (3b63fe09@gateway/web/freenode/ip.59.99.254.9) has quit (Ping timeout: 240 seconds)
2014-05-28 06:39:40	therealfakemoot	It's waaaaay easier to write a program that does what you want than to write one that's fast
2014-05-28 06:39:55	pawroman	woodgiraffe: but for a task like this, you won't get much options of optimization...
2014-05-28 06:39:56	-->	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has joined #python
2014-05-28 06:40:06	<--	vandrew (~vandrew@86.122.229.114) has quit (Quit: Leaving)
2014-05-28 06:40:07	veloutin	therealfakemoot: sys.exit(0) is like, super fast
2014-05-28 06:40:09	revolve	What's the best way to determine if a variable is a list or a string?
2014-05-28 06:40:13	therealfakemoot	Yeah. It's an inherently quadratic time operation
2014-05-28 06:40:17	therealfakemoot	revolve: Why don't you know?
2014-05-28 06:40:23	woodgiraffe	The main problem I have is not being able to use a dict but to have to use two for-loops, I don't think this is just some pedantic implementation-detail optimization hackage, it's quite basic algo
2014-05-28 06:40:25	revolve	I might be passing either in
2014-05-28 06:40:25	Yhg1s	revolve: the best way is to not pretend they're different.
2014-05-28 06:40:30	-->	Sorunome (Sorunome@withg.org) has joined #python
2014-05-28 06:40:30	therealfakemoot	revolve: Don't do that
2014-05-28 06:40:31	<--	blipped (~blipped@14.18.147.237) has quit
2014-05-28 06:40:31	pawroman	revolve: isinstance(variable, class)
2014-05-28 06:40:31	revolve	I do know but I want to make a flexible function
2014-05-28 06:40:36	Yhg1s	pawroman: yeah, really not.
2014-05-28 06:40:42	therealfakemoot	revolve: Do you know what's more flexible?
2014-05-28 06:40:44	revolve	thanks pawroman
2014-05-28 06:40:45	Yhg1s	revolve: make it flexible by not guessing what the caller meant.
2014-05-28 06:40:51	revolve	wat
2014-05-28 06:40:54	therealfakemoot	revolve: Writing a consistent API. `def foo(list_of_strings):`
2014-05-28 06:40:55	-->	bikeshedder (~bikeshedd@dslb-088-069-140-254.pools.arcor-ip.net) has joined #python
2014-05-28 06:41:04	revolve	I can just treat the list as is or .split the string
2014-05-28 06:41:05	<--	skynxnex (~skynxnex@c83-248-146-127.bredband.comhem.se) has quit (Ping timeout: 255 seconds)
2014-05-28 06:41:07	therealfakemoot	revolve: Thta way, the caller can pass in zero, one, or more strings
2014-05-28 06:41:07	Yhg1s	revolve: it's a mistake to treat lists and strings differently, because in many ways they aren't differently. Use two different functions or different parameters.
2014-05-28 06:41:22	therealfakemoot	revolve: And you will ALWAYS know that it's a list. What varies is how many strings it contains
2014-05-28 06:41:27	-->	sbuettner (Scott@2600:3c00::f03c:91ff:feae:9b3a) has joined #python
2014-05-28 06:41:37	revolve	I'm also checking for five items
2014-05-28 06:41:39	-->	faldridge (~faldridge@172.56.7.29) has joined #python
2014-05-28 06:41:42	revolve	in fact that's all it does right now.
2014-05-28 06:41:46	<--	faldridge (~faldridge@172.56.7.29) has left #python
2014-05-28 06:42:06	pawroman	revolve: all the guys are right, doing too much type checking is not the Python way... you could also use *args to pass a list of strings
2014-05-28 06:42:11	revolve	isinstance. thanks.
2014-05-28 06:42:14	<--	InfinityL (~nak123@130.37.56.251) has quit (Ping timeout: 255 seconds)
2014-05-28 06:42:15	<--	Andyrez (~andyrez@41.58.211.112) has quit (Ping timeout: 258 seconds)
2014-05-28 06:42:15	therealfakemoot	gross
2014-05-28 06:42:23	revolve	lol
2014-05-28 06:42:25	Yhg1s	revolve: as long as you realize it's a horrible mistake to do this.
2014-05-28 06:42:43	Sorunome	Hay, i got a problem with unicode chars in strings (python 2.7): i have something like '\xAD**Now speeking in channel ' which runs fine in the console but once i place it in my prog i get "UnicodeDecodeError: 'ascii' codec can't decode byte 0xad in position 0: ordinal not in range(128)"
2014-05-28 06:42:48	revolve	yeah I think I'm going to pass them in uniformly as a list.
2014-05-28 06:42:49	<--	Deithrian (~Deithrian@unaffiliated/deithrian) has quit (Read error: Connection reset by peer)
2014-05-28 06:43:07	Yhg1s	Sorunome: it means you're passing that bytestring to something that expects a unicode string.
2014-05-28 06:43:15	Yhg1s	Sorunome: bit.ly/unipain may shed some light on the problem.
2014-05-28 06:43:29	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 264 seconds)
2014-05-28 06:43:42	--	Deesl is now known as bsdboy
2014-05-28 06:44:19	--	bsdboy is now known as Deesl
2014-05-28 06:44:36	Sorunome	I'll check it out, thanks
2014-05-28 06:45:31	pawroman	guys, I'm trying to mock requests library for unit testing my client that's using them
2014-05-28 06:45:45	-->	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has joined #python
2014-05-28 06:45:50	pawroman	and somehow requests is not mocked... any idea?
2014-05-28 06:46:01	Yhg1s	pawroman: not without seeing how you're trying to mock it.
2014-05-28 06:46:23	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 06:46:25	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 06:46:26	-->	dennisw (~dennis@nat-168-7-222-60.rice.edu) has joined #python
2014-05-28 06:46:33	<--	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has quit (Ping timeout: 252 seconds)
2014-05-28 06:46:41	pawroman	I have this "responses" library, and I'm decorating a test method with "responses.activate"
2014-05-28 06:46:42	pawroman	https://pypi.python.org/pypi/responses/0.2.0
2014-05-28 06:46:49	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 06:46:52	<--	Auv (~jack@unaffiliated/auv5) has quit (Client Quit)
2014-05-28 06:47:12	pawroman	the thing is, it doesn't seem to affect my instantiated client, which is importing requests in its module
2014-05-28 06:47:29	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 06:47:33	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Remote host closed the connection)
2014-05-28 06:47:34	-->	freggles (~hi@unaffiliated/ext0) has joined #python
2014-05-28 06:47:50	--	johnraz|away is now known as johnraz
2014-05-28 06:47:56	-->	plutoniix (~plutoniix@node-4fd.pool-125-25.dynamic.totbb.net) has joined #python
2014-05-28 06:48:06	pawroman	could this be a problem with the way I import stuff?
2014-05-28 06:48:13	[Tritium]	wouldn't it be easier to just mock requests.get instead of using a yet another mocking library
2014-05-28 06:48:21	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 06:48:44	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 06:48:56	[Tritium]	import requests; requests.get = lambda foo: 'bar'
2014-05-28 06:49:09	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Client Quit)
2014-05-28 06:49:14	<--	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has quit (Ping timeout: 265 seconds)
2014-05-28 06:49:32	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 06:49:43	[Tritium]	or import requests, mock; requests.get = mock.MagicMock()
2014-05-28 06:49:44	-->	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has joined #python
2014-05-28 06:49:46	-->	n1x (~n1x@unaffiliated/n1xnc0d3) has joined #python
2014-05-28 06:49:46	Yhg1s	pawroman: it could be, but it's hard to say without seeing the actual code. The 'responses' module just mocks requests.Session.send, so if you do anything to, for example, make requests use a different session object that would make it ineffective.
2014-05-28 06:50:06	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Read error: Connection reset by peer)
2014-05-28 06:50:06	-->	donspaulding (~donspauld@71.201.172.43) has joined #python
2014-05-28 06:50:08	Sorunome	Yhg1s: I already knew of u'' but I can't use it as i'm sending low-level socket stuff, all i litterly want is bytes \xAD there, not representing any char or something.
2014-05-28 06:50:27	Yhg1s	Sorunome: ok? And yet you're passing it to something that's decoding it to Unicode.
2014-05-28 06:50:35	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-28 06:50:50	-->	wwnnbb (~wwnnbb@85.112.113.2) has joined #python
2014-05-28 06:50:54	-->	kozko2001 (~user@137.Red-80-34-181.staticIP.rima-tde.net) has joined #python
2014-05-28 06:51:04	-->	jarshwah (~jarshwah@ppp118-209-82-15.lns20.mel4.internode.on.net) has joined #python
2014-05-28 06:51:07	-->	koz (~koz@2601:8:a900:88a:1e6f:65ff:fe31:7fcb) has joined #python
2014-05-28 06:51:23	Sorunome	I'm not using decode at all
2014-05-28 06:51:39	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 06:51:40	Yhg1s	Sorunome: ... no, I'm not saying you are. But look at the traceback you got
2014-05-28 06:51:46	[Tritium]	Sorunome: python 2?
2014-05-28 06:51:50	Yhg1s	Sorunome: something is decoding it.
2014-05-28 06:51:55	DammitJim	is there a special way of checking a log file for an event to happen every hour and if it is not found, to do something about it?
2014-05-28 06:52:11	DammitJim	meaning, how could I keep track of what has already been looked at
2014-05-28 06:52:12	Sorunome	it is something like this: 		handle.sendToOther(self.calcName,'',t,m,self.chan,2)
2014-05-28 06:52:12	Sorunome		def send(self,message):
2014-05-28 06:52:12	Sorunome			message = "\xFF\x89\x00\x00\x00\x00\x00Omnom"+struct.pack('<H',len(message))+message
2014-05-28 06:52:12	Sorunome			message = struct.pack('<H',len(message)+1)+'b'+message+'*'
2014-05-28 06:52:12	Sorunome			self.request.sendall(message)
2014-05-28 06:52:14	Sorunome	gah
2014-05-28 06:52:18	Sorunome	http://pastebin.com/3epzCKTX
2014-05-28 06:52:19	-->	mFacenet (~mFacenet@unaffiliated/mfacenet) has joined #python
2014-05-28 06:52:20	DammitJim	whoa dude, pastebin
2014-05-28 06:52:20	infobob	http://paste.pound-python.org/show/hRbM1pXWPUPuY7vR1imR/ (repasted for Sorunome)
2014-05-28 06:52:22	Sorunome	i hate clipbaords acting ujp
2014-05-28 06:52:22	Yhg1s	Sorunome: no, look at the *traceback*.
2014-05-28 06:52:35	Sorunome	it is at the self.send line
2014-05-28 06:52:36	galactic_pretty_	hmm
2014-05-28 06:52:37	revolve	DammitJim: are there timestamps on each logged line?
2014-05-28 06:52:44	Sorunome	and yes, python2.7
2014-05-28 06:52:46	Yhg1s	Sorunome: please, pastebin the whole traceback.
2014-05-28 06:52:47	-->	FasTTo (~FasTTo@bl16-177-118.dsl.telepac.pt) has joined #python
2014-05-28 06:52:51	DammitJim	revolve, yes sir
2014-05-28 06:53:01	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-28 06:53:10	Sorunome	http://pastebin.com/T2xNxAsn
2014-05-28 06:53:11	infobob	http://paste.pound-python.org/show/xZnJ4G9A1mtHIocnrmI5/ (repasted for Sorunome)
2014-05-28 06:53:15	revolve	then that's much easier, you only need to keep track of the last timestamp you saw up to
2014-05-28 06:53:21	revolve	then look at everything past that
2014-05-28 06:53:22	Yhg1s	Sorunome: 'self.chan' is unicode.
2014-05-28 06:53:23	DammitJim	I just didn't know if one copies the log file every time it's looked at and then one just does a diff?
2014-05-28 06:53:26	DammitJim	or something like that
2014-05-28 06:53:27	[Tritium]	DammitJim: iterate the logfile and...yeah
2014-05-28 06:53:34	-->	iogg (~rpolli@93-41-225-218.ip83.fastwebnet.it) has joined #python
2014-05-28 06:53:37	Yhg1s	Sorunome: so you're mixing bytes and unicode. Don't mix bytes and unicode. (bit.ly/unipain explains in greater detail.)
2014-05-28 06:53:38	pawroman	ok guys, I've wronged you... turns out it's mocking requests but I f**ked up something with the urls... anyway, thanks for help :)
2014-05-28 06:54:19	Sorunome	Yhg1s: but if i seperate with s = '<stuff>'  \    self.send(s) then it errors on the defining
2014-05-28 06:54:29	-->	Jucato (~jucato@kde/developer/jucato) has joined #python
2014-05-28 06:54:46	Yhg1s	Sorunome: ... yes? I don't understand the confusion, sorry. You're mixing bytes and unicode. Like bit.ly/unipain explains, don't mix bytes and unicode.
2014-05-28 06:54:59	[Tritium]	I never will understand why someone would mock something deep into another library.  mock the entire library out.  You are not testing someone elses code, unless you are testing for the presence of a known bug in their code
2014-05-28 06:55:05	<--	mateNz (~mateNz@unaffiliated/matenz) has quit (Ping timeout: 252 seconds)
2014-05-28 06:55:36	<--	Ephexeve_laptop (~Ephexeve_@179.168.144.89) has quit (Read error: Connection reset by peer)
2014-05-28 06:55:48	-->	juantwo (~juantwo@50.56.228.65) has joined #python
2014-05-28 06:55:50	-->	Andyrez (~andyrez@184.164.149.234) has joined #python
2014-05-28 06:55:52	pawroman	yeah, but the problem is I want a response object
2014-05-28 06:55:58	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 06:56:05	pawroman	with headers, json parsing, status code etc etc
2014-05-28 06:56:17	DammitJim	how do I do that in python? (I guess I ignore any line before a particular time stamp?
2014-05-28 06:56:22	<--	phatina (phatina@nat/redhat/x-tpotdxxkltxwnicw) has quit (Quit: Leaving)
2014-05-28 06:56:42	pawroman	and requests already has all that so why write a custom mock with all that
2014-05-28 06:56:42	revolve	experiment with fseek and re
2014-05-28 06:56:47	[Tritium]	DammitJim: you will have to iterate the entire log no matter the language.  You could iterate it backwards though
2014-05-28 06:56:49	Sorunome	Yhg1s: gotcha now, took some time, it's working now, thanks
2014-05-28 06:56:49	DammitJim	fseek
2014-05-28 06:56:50	DammitJim	got it
2014-05-28 06:56:59	-->	winegoddess (~winegodde@64.58.240.210) has joined #python
2014-05-28 06:57:02	-->	mikeybisbo (~mikeybisb@host86-171-32-109.range86-171.btcentralplus.com) has joined #python
2014-05-28 06:57:05	DammitJim	ohhhh... backwards iteration sounds like a good idea
2014-05-28 06:57:10	revolve	^
2014-05-28 06:57:20	-->	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has joined #python
2014-05-28 06:57:23	winegoddess	i have a question on this code. http://pastebin.com/qggXFNTy     does this mean it skips sys.argv[0] ?
2014-05-28 06:57:23	infobob	http://paste.pound-python.org/show/wCyMpeBF1eOqaFMJsOeC/ (repasted for winegoddess)
2014-05-28 06:57:24	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 240 seconds)
2014-05-28 06:57:24	DammitJim	what module does one use for that?
2014-05-28 06:57:27	<--	gocho1 (~Icedove@105.53.128.219) has quit (Ping timeout: 265 seconds)
2014-05-28 06:57:35	sproingie	[Tritium]: the worst is when you have to mock part of your own library.  i've got a bunch of inherited code where that's the first step in getting it to testability
2014-05-28 06:57:46	DammitJim	and I guess I just have to compare timestamps (I'd have to format it exactly like it is logged)
2014-05-28 06:58:01	-->	mateNz (~mateNz@unaffiliated/matenz) has joined #python
2014-05-28 06:58:05	DammitJim	sorry for rambling... it helps me to talk stuff out as I understand how something would be implemented
2014-05-28 06:58:17	[Tritium]	DammitJim: backwards iteration?  prototype with fseek and such
2014-05-28 06:58:35	<--	evil_gordita (robert@ip70-188-56-12.rn.hr.cox.net) has quit
2014-05-28 06:58:42	[Tritium]	sproingie: At least its not in java
2014-05-28 06:58:50	-->	Burrito (~Burrito@unaffiliated/burrito) has joined #python
2014-05-28 06:59:06	<--	Sorunome (Sorunome@withg.org) has left #python ("Leaving")
2014-05-28 06:59:13	sproingie	[Tritium]: i'd rather it were java, at least i'd have static types
2014-05-28 06:59:17	-->	Balliad_ (~textual@80.79.35.95) has joined #python
2014-05-28 06:59:23	pawroman	sproingie: true, sometimes the code is not well-split into independent parts
2014-05-28 06:59:37	[Tritium]	sproingie: but everything is such a pain...
2014-05-28 06:59:37	pawroman	sproingie: and things rely on each other
2014-05-28 06:59:38	<--	lupfantomo (~lupfantom@137.119.162.151) has quit (Ping timeout: 240 seconds)
2014-05-28 06:59:38	<--	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has quit (Quit: away)
2014-05-28 07:00:10	sproingie	[Tritium]: naw, powermock makes it pretty easy.  i don't like having to use mocks in general tho.
2014-05-28 07:00:12	DammitJim	reversed()
2014-05-28 07:00:12	-->	quake_guy (~brett@gos-bketter-d3.uwm.edu) has joined #python
2014-05-28 07:00:15	DammitJim	got it
2014-05-28 07:00:15	DammitJim	thanks
2014-05-28 07:00:17	<--	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 264 seconds)
2014-05-28 07:00:17	shunya_chakra	Is QPython is for android?
2014-05-28 07:00:23	sproingie	mocks are handy tools, but *needing* them is a sign of a bad design
2014-05-28 07:00:42	-->	kyheo (~kyheo@54-152-231-201.fibertel.com.ar) has joined #python
2014-05-28 07:00:48	pawroman	+100 to that
2014-05-28 07:00:50	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 265 seconds)
2014-05-28 07:01:11	 *	[Tritium] gives an accusitory glance at znc, and says nothing
2014-05-28 07:01:33	[Tritium]	(I must be the only person to unittest python znc modules)
2014-05-28 07:01:47	<--	FortySix2 (~FortySix2@h75-100-88-125.mdtnwi.broadband.dynamic.tds.net) has quit (Remote host closed the connection)
2014-05-28 07:02:05	sbuettner	sproingie: Because it indicates too much coupling, or? Proper testing is something I'm trying to learn about
2014-05-28 07:02:08	winegoddess	hi anyone, just wondering the example i posted, does it skip the first element - the script name?
2014-05-28 07:02:34	<--	mateNz (~mateNz@unaffiliated/matenz) has quit (Ping timeout: 258 seconds)
2014-05-28 07:02:34	Yhg1s	winegoddess: I'm not sure what part you think should be skipping the script name.
2014-05-28 07:02:36	-->	mk3548208 (chatzilla@122.241.80.169) has joined #python
2014-05-28 07:02:39	sproingie	sbuettner: sometimes coupling, sometimes too much reliance on state
2014-05-28 07:02:44	<--	Arbo (~Arbo@94.107.244.58) has quit (Quit: This computer has gone to sleep)
2014-05-28 07:02:53	<--	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has quit (Remote host closed the connection)
2014-05-28 07:03:00	<--	Balliad (~textual@80.79.35.95) has quit (Ping timeout: 240 seconds)
2014-05-28 07:03:11	sbuettner	sproingie: Ah, ok. Thanks.
2014-05-28 07:03:12	-->	cparlette (~chris.par@static-108-48-124-82.washdc.fios.verizon.net) has joined #python
2014-05-28 07:03:15	[Tritium]	winegoddess: sys.argv[0] is your script name.  you do nothing in your application to skip it
2014-05-28 07:03:16	<--	kozko2001 (~user@137.Red-80-34-181.staticIP.rima-tde.net) has left #python ("ERC Version 5.3 (IRC client for Emacs)")
2014-05-28 07:03:17	sproingie	there's probably a few things that need mocks to test elegantly.  i just haven't run into 'em
2014-05-28 07:03:18	-->	treehug88 (~treehug88@static-96-239-100-47.nycmny.fios.verizon.net) has joined #python
2014-05-28 07:03:21	-->	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has joined #python
2014-05-28 07:03:36	[Tritium]	winegoddess: you may want to look into the fileinput module in the standard library
2014-05-28 07:03:37	<--	Balliad_ (~textual@80.79.35.95) has quit (Ping timeout: 245 seconds)
2014-05-28 07:03:40	winegoddess	its supposed to work by opening the file that is passed in as an argument. i assumed it work, and se now it does not. it was a solution to an exercise, and i think now it is wrong
2014-05-28 07:03:41	sproingie	sometimes your data generating stub is as good as a mock i suppose
2014-05-28 07:03:48	<--	donspaulding (~donspauld@71.201.172.43) has quit (Ping timeout: 240 seconds)
2014-05-28 07:04:03	[Tritium]	winegoddess: is this homework?
2014-05-28 07:04:18	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 07:04:43	-->	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has joined #python
2014-05-28 07:04:48	-->	oleo (~oleo@xdsl-78-35-164-158.netcologne.de) has joined #python
2014-05-28 07:04:59	<--	nsh (~unf@wikipedia/nsh) has quit (Max SendQ exceeded)
2014-05-28 07:04:59	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Ping timeout: 252 seconds)
2014-05-28 07:05:30	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-28 07:05:31	sbuettner	sproingie: Any good resources on TDD/testing you can recommend, with a Python focus probably? I've never really found much that explains methodology for how to create tests/what to test/etc. I understand how to use testing modules, just not what to do with them :(
2014-05-28 07:05:39	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 07:05:41	-->	R0b0t1 (~dev@unaffiliated/r0b0t1) has joined #python
2014-05-28 07:05:46	-->	amargherio (~MarioEIU@69.197.156.7) has joined #python
2014-05-28 07:05:53	-->	badon (~badon@pdpc/supporter/active/badon) has joined #python
2014-05-28 07:05:59	<--	mcsontos (mcsontos@nat/redhat/x-sdfxtnnihzfgrlvd) has quit (Ping timeout: 252 seconds)
2014-05-28 07:06:07	[Tritium]	sbuettner: http://pyvideo.org/video/2674/getting-started-testing
2014-05-28 07:06:12	<--	Alina-malina (Alina-mali@unaffiliated/alina-malina) has quit (Read error: Connection reset by peer)
2014-05-28 07:06:25	<--	karthee (~karthik@unaffiliated/karthee) has quit (Quit: Computer has gone to sleep.)
2014-05-28 07:06:37	<--	nsh (~unf@wikipedia/nsh) has quit (Max SendQ exceeded)
2014-05-28 07:06:40	sbuettner	[Tritium], Thanks!
2014-05-28 07:06:46	<--	_jack_ (~jack@141.218.143.78) has quit (Read error: Connection reset by peer)
2014-05-28 07:06:48	-->	rthat (~rthat@159.140.254.99) has joined #python
2014-05-28 07:07:07	[Tritium]	...i am sure there is a bit.ly of that somewhere
2014-05-28 07:07:09	-->	chiui (~chiui@2001:5c0:1400:a::87) has joined #python
2014-05-28 07:07:13	-->	nsh (~unf@wikipedia/nsh) has joined #python
2014-05-28 07:07:16	-->	armlesshobo (~ahobo@unaffiliated/armlesshobo) has joined #python
2014-05-28 07:07:27	-->	wong2 (~wong2@117.79.232.207) has joined #python
2014-05-28 07:07:30	Yhg1s	bit.ly/pytest0
2014-05-28 07:07:34	-->	eka (~eka@190.117.247.36) has joined #python
2014-05-28 07:07:39	[Tritium]	sbuettner: http://nedbatchelder.com/text/test0.html is the slides and text
2014-05-28 07:07:50	<--	wwnnbb (~wwnnbb@85.112.113.2) has quit (Read error: Connection reset by peer)
2014-05-28 07:07:58	[Tritium]	thanks, Yhg1s
2014-05-28 07:08:03	-->	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 07:08:07	sproingie	sbuettner: i've sort of accreted my test philosophy from various sources before there was much overall documentation on it
2014-05-28 07:08:18	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 07:08:52	-->	donspaulding (~donspauld@71.201.172.43) has joined #python
2014-05-28 07:09:06	<--	jorrit (~jorrit@bluecoat2.uzleuven.be) has left #python ("Gone")
2014-05-28 07:09:57	sproingie	sbuettner: best advice i can give is aim for full coverage while only testing public APIs.  test functionality, not implementation.
2014-05-28 07:09:58	winegoddess	Tritium no - training material i am going thru
2014-05-28 07:10:09	-->	taloszerg (~taloszerg@c62e6602.cst.lightpath.net) has joined #python
2014-05-28 07:10:27	[Tritium]	sbuettner: TL:DR version: unittest TestCases, even though they are a little... not normal python style....  are what you use to write tests at first since every test runner can run them.  Once you get used to test, go look to see if there is something you like better
2014-05-28 07:10:30	sproingie	i've seen "tests" where they literally copy the implementation from the source and make sure that the implementation continues to conform to the test's copy
2014-05-28 07:10:56	sproingie	the analogy i made was "Ok, our rescue procedure starts with shooting the hostages.  We tested this, and each time we shot the hostages, so our tests pass."
2014-05-28 07:11:25	<--	gbaconnier (~gbaconnie@c2cpc3.camptocamp.com) has quit (Quit: Leaving...)
2014-05-28 07:11:29	[Tritium]	sproingie: I... have done this...
2014-05-28 07:11:34	<--	CodePulsar (~code@unaffiliated/shiningthrough) has quit (Quit: Konversation terminated!)
2014-05-28 07:11:52	<--	geri (~anonymous@089144226137.atnat0035.highway.a1.net) has quit (Remote host closed the connection)
2014-05-28 07:11:54	-->	mmikeym (~mikeym@184.70.65.118) has joined #python
2014-05-28 07:12:04	-->	eliezerfot123 (~Thunderbi@200.11.230.242) has joined #python
2014-05-28 07:12:16	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-28 07:12:35	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Ping timeout: 252 seconds)
2014-05-28 07:12:39	-->	rdorgueil (~rd@symfony/developer/hartym) has joined #python
2014-05-28 07:12:40	[Tritium]	https://github.com/FortunesFavor/mindydice/blob/master/dice/tests/test_dice.py#L90 to test https://github.com/FortunesFavor/mindydice/blob/master/dice/__init__.py#L57 ...i was not proud
2014-05-28 07:12:48	sproingie	[Tritium]: we all have.  what made this one heinous is that it admitted it in a comment: "# All this test does is ensure that if the source changes, this test must change too"
2014-05-28 07:12:56	sproingie	i deleted the test as useless
2014-05-28 07:13:01	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 07:13:14	winegoddess	ah, Tritium....it does work. it just reads the actual source as input. got me there. not as written but i can see how it works now
2014-05-28 07:13:22	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 07:13:26	mexi_d3_	More importantly, did you fix the root cause - the people who wrote and accepted it?
2014-05-28 07:13:54	mexi_d3_	Or are they still around trying to secure my personal data on some server? ;-)
2014-05-28 07:13:55	-->	cyborg-one (~cyborg-on@62.16.23.192) has joined #python
2014-05-28 07:13:56	sproingie	mexi_d3_: i'm working on it.  i'm presenting the bad test and rewritten as examples
2014-05-28 07:14:02	sproingie	(the first one being a bad example of course)
2014-05-28 07:15:24	sproingie	there's about 1200 source files with test quality that ranges from so-so to nonexistent to better-if-it-were-nonexistent, so i have my work cut out for me
2014-05-28 07:15:31	 *	[Tritium] ...just had an epiphany
2014-05-28 07:15:33	-->	satyajit (~satyajit@114.143.157.171) has joined #python
2014-05-28 07:15:53	-->	hartym (~rd@symfony/developer/hartym) has joined #python
2014-05-28 07:15:58	<--	AnYaDi (~AnYaDi@eduroam-169-222.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 07:15:58	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 07:16:46	-->	mathemancer (~mathemanc@66.85.135.66) has joined #python
2014-05-28 07:16:50	sproingie	[Tritium]: care to share? :)
2014-05-28 07:17:05	DammitJim	if I am importing another my_file.py, does it have to be in the same directory as my script?
2014-05-28 07:17:16	Yhg1s	DammitJim: it has to be in the module search path.
2014-05-28 07:17:35	Yhg1s	DammitJim: it can be alongside the main program, or you can install it in various locations that Python looks for modules.
2014-05-28 07:17:36	DammitJim	thanks
2014-05-28 07:17:37	-->	acmehandle (~acmehandl@ool-457c769b.dyn.optonline.net) has joined #python
2014-05-28 07:17:55	<--	rdorgueil (~rd@symfony/developer/hartym) has quit (Ping timeout: 240 seconds)
2014-05-28 07:18:40	-->	mcsontos (mcsontos@nat/redhat/x-szhdqfwmmkwahzhs) has joined #python
2014-05-28 07:18:54	-->	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has joined #python
2014-05-28 07:18:58	-->	pvt_petey (~pvt_petey@cpc11-colc6-2-0-cust131.7-4.cable.virginm.net) has joined #python
2014-05-28 07:19:07	<--	brilliant_beast (fake@c-71-231-197-211.hsd1.wa.comcast.net) has quit
2014-05-28 07:19:24	<--	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has quit (Ping timeout: 240 seconds)
2014-05-28 07:19:28	<--	\marrub (marrub@madison.bouncerstation.com) has quit (Quit: Quit)
2014-05-28 07:19:28	<--	nodern (bs@gateway/shell/bouncerstation/x-bpxootgwgjcedewt) has quit (Quit: :D)
2014-05-28 07:19:33	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Ping timeout: 252 seconds)
2014-05-28 07:19:34	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-128.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 07:19:35	acmehandle	Why does the first class supercede any other classes in an ineheritence.  Like class ClassA(MixinSome, ClassB):  So the MixinSome will supercede ClassB but when it comes to variables like:  a = "ahaha" a = "nonesense"  it will be "nonesense" that will be printed rather than "ahaha"
2014-05-28 07:20:03	sproingie	[Tritium]: there's nothing actually wrong with a test that's a regression from a previous known working version, but it pretty much always tests the wrong thing.  plus, see the hostage example :)
2014-05-28 07:20:03	Yhg1s	acmehandle: because that's how subclassing and attribute lookup works.
2014-05-28 07:20:30	<--	Deseaus (~Deseaus@wpa175.guwlan.gu.se) has quit (Quit: Computer has gone to sleep.)
2014-05-28 07:20:41	-->	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has joined #python
2014-05-28 07:20:58	-->	__lgw4__ (~lgw4@rrcs-67-52-237-74.west.biz.rr.com) has joined #python
2014-05-28 07:21:30	acmehandle	Yhg1s: Thats a crappy answer.
2014-05-28 07:21:32	cdunklau	acmehandle: mixins usually go after the main parent
2014-05-28 07:21:38	-->	EPG (~EPG@pC19EA0F5.dip0.t-ipconnect.de) has joined #python
2014-05-28 07:21:50	[Tritium]	sproingie: I am creating formatted text with a third party library, and testing that a method on an API is called with each line of the formatted text.  Why am I building that A: whenever my method is called, and B: why am i building that with my tests too?  it never changes, it should be an attribute on my class (the string), or even a module level constant
2014-05-28 07:21:52	acmehandle	'because thats how something works' is a stupid way to help someone understand
2014-05-28 07:21:55	acmehandle	how something works.
2014-05-28 07:22:02	CatKiller	acmehandle: This might help
2014-05-28 07:22:02	<--	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has quit (Ping timeout: 255 seconds)
2014-05-28 07:22:02	CatKiller	https://www.python.org/download/releases/2.3/mro/
2014-05-28 07:22:05	-->	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-28 07:22:08	-->	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has joined #python
2014-05-28 07:22:25	sproingie	i'm with acmehandle here, if you say that's the way it is, pointers to more detailed docs are in order
2014-05-28 07:22:26	Yhg1s	acmehandle: you didn't ask _how_ it works. You asked _why_ it works that way. It works that way because it was defined that way. Because *one* of the two classes has to come first, and it made the most sense to make the one that came first to be first.
2014-05-28 07:22:26	CatKiller	Or just google for Python "MRO"
2014-05-28 07:22:27	cdunklau	acmehandle: to be fair, you asked "why"
2014-05-28 07:22:33	Yhg1s	sproingie: pfft.
2014-05-28 07:22:55	-->	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has joined #python
2014-05-28 07:22:58	<--	mathemancer (~mathemanc@66.85.135.66) has quit (Quit: leaving)
2014-05-28 07:22:59	-->	Ephexeve (~benmezger@187.65.231.51) has joined #python
2014-05-28 07:23:09	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 07:23:14	sproingie	acmehandle: python doesn't have "mixins" the same as ruby or scala traits, it has multiple inheritance.  it's well-behaved, but mixins do have to be declared in a pretty specific order.
2014-05-28 07:23:25	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 07:23:38	acmehandle	Oh...so that makes the 'thats how things are.' answer ok.
2014-05-28 07:23:42	-->	fcodiaz (~fcodiaz@208.71.232.130) has joined #python
2014-05-28 07:23:43	acmehandle	Got it.
2014-05-28 07:23:44	Yhg1s	acmehandle: no.
2014-05-28 07:23:52	Yhg1s	acmehandle: it means *the only answer* is 'that's how things are'.
2014-05-28 07:24:03	acmehandle	Right, I'll just not ask anymore questions then and be programming drone like the rest of the monkeys in silicon valley
2014-05-28 07:24:08	Yhg1s	acmehandle: ...
2014-05-28 07:24:09	-->	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has joined #python
2014-05-28 07:24:23	Yhg1s	acmehandle: we can have a meaningful discussion if you want, but you'll have to elaborate as to what you actually want to know.
2014-05-28 07:24:23	sproingie	acmehandle: specific enough that it's not really worth dealing with MI if you have any potential conflicts
2014-05-28 07:24:27	CatKiller	acmehandle: That's funnily didn't make much sense :)
2014-05-28 07:24:45	DammitJim	in what part of a script does one define a filepath?
2014-05-28 07:24:52	acmehandle	I understand what an MRO is.
2014-05-28 07:24:53	Yhg1s	DammitJim: what do you mean by 'define a filepath'?
2014-05-28 07:24:53	CatKiller	I did provide you with a link explaining in really really fine details how it exactly works (multiple inheritance)_
2014-05-28 07:25:00	<--	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Read error: No route to host)
2014-05-28 07:25:02	acmehandle	Ok, I'll elaborate.
2014-05-28 07:25:03	DammitJim	like I'm reading a file and I have a def for reading it
2014-05-28 07:25:14	sproingie	CatKiller: i dont think it was your answer he took issue with
2014-05-28 07:25:26	acmehandle	If everything is presumabely an object in python, and by that measure both classes and variables are objects
2014-05-28 07:25:29	iron_houzi	Can somebody please have a look at my code and tell me if my string appending is fine? (search for 'join') https://github.com/ironhouzi/pytib/blob/master/wylie2uni.py
2014-05-28 07:25:31	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-130.dynamic.uwaterloo.ca) has joined #python
2014-05-28 07:25:33	kingplusplus	http://pastebin.com/R7PVLL1V please i am having problem --- i only want links that has words compiled in the re.compile() module the output if you check line, 79, 82, and 89 to 93 has what i do\ not include in the regiex
2014-05-28 07:25:34	infobob	http://paste.pound-python.org/show/j2sTLPKw4WeQXi37DWEB/ (repasted for kingplusplus)
2014-05-28 07:25:37	-->	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-28 07:25:38	acmehandle	Why are classes treated differently that objects?
2014-05-28 07:25:41	DammitJim	like, do I specify that within the "function" like: for line in reversed(open("/var/log/syslog").readLines()):
2014-05-28 07:25:42	-->	Alina-malina (Alina-mali@unaffiliated/alina-malina) has joined #python
2014-05-28 07:25:44	CatKiller	Yes but he said that basically he shouldn't ask questions (I assume he implied that it was pointless as he got no answer)
2014-05-28 07:25:47	<--	dray3 (~daaray@cpe-066-057-017-201.nc.res.rr.com) has quit (Ping timeout: 252 seconds)
2014-05-28 07:25:51	-->	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has joined #python
2014-05-28 07:25:58	Yhg1s	acmehandle: in what way do you think they are treated differently?
2014-05-28 07:26:02	sproingie	anyway, i was about to say the same, i just intuited what the specific problem was (why don't python MI mixins behave like ruby mixins)
2014-05-28 07:26:06	DammitJim	or do I say log_file_path = "/var/log/syslog" somewhere else in the code?
2014-05-28 07:26:09	<--	OOPMan (~adamj@196-215-27-12.dynamic.isadsl.co.za) has quit (Ping timeout: 252 seconds)
2014-05-28 07:26:16	Ephexeve	Question about Mechanize, I have this code -> http://bpaste.net/show/SY0G8wtgbTLWgk5NYw5y/, but I am not sure how to tell machanize that I want to fill that form
2014-05-28 07:26:16	sproingie	perl mixins have the same problems (same MRO too)
2014-05-28 07:26:17	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-130.dynamic.uwaterloo.ca) has quit (Client Quit)
2014-05-28 07:26:20	Ephexeve	ANy idea?
2014-05-28 07:26:45	Yhg1s	DammitJim: either works. It sometimes makes sense to pull out the filename like that if you want to change it later, or make it configurable or based on command-line arguments later.
2014-05-28 07:27:01	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-28 07:27:17	<--	ambossen (ambossen@freenode.pw) has quit (Remote host closed the connection)
2014-05-28 07:27:50	DammitJim	I am thinking I might use this later
2014-05-28 07:27:54	DammitJim	but with another path
2014-05-28 07:27:56	Ephexeve	using form.name returns me None, what does that mean? Mechanize didn't find anything?
2014-05-28 07:28:00	-->	DaEvil1 (~DaEvil1@ti0004a400-0098.bb.online.no) has joined #python
2014-05-28 07:28:04	Yhg1s	DammitJim: then you'll want to make the filename an argument to the function.
2014-05-28 07:28:04	-->	saedelaere (~quassel@unaffiliated/saedelaere) has joined #python
2014-05-28 07:28:04	DammitJim	then where would I define that? just at the beginning of the script?
2014-05-28 07:28:23	sproingie	Ephexeve: a form doesn't have to have a name
2014-05-28 07:28:28	DammitJim	oh, gotcha... so it gets defined where it the function gets called
2014-05-28 07:28:35	Ephexeve	sproingie: But then how do I select that form?
2014-05-28 07:28:38	 *	offby1 wishes he were a doctor, not a computer programmer
2014-05-28 07:28:43	<--	eggsmiao (~cat@121.237.100.25) has quit (Remote host closed the connection)
2014-05-28 07:28:45	sproingie	Ephexeve: by index.  or check its action.
2014-05-28 07:28:48	<--	tobixx (~tobixx@194.97.106.98) has quit (Quit: Leaving.)
2014-05-28 07:28:49	sproingie	possibly both
2014-05-28 07:29:02	sproingie	offby1: like paperwork, do you?
2014-05-28 07:29:03	Ephexeve	sproingie: Aha, Will check it
2014-05-28 07:29:18	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-28 07:29:26	offby1	sproingie: no, I'd announce my profession to DammitJim
2014-05-28 07:29:32	offby1	as I'm sure was his intent
2014-05-28 07:29:38	sproingie	offby1: gotcha :)
2014-05-28 07:29:42	<--	nottheoilrig (~nottheoil@S0106c8fb26402908.ek.shawcable.net) has left #python
2014-05-28 07:29:46	DammitJim	yes, sir
2014-05-28 07:30:09	offby1	DammitJim: there's something really ugly about your problem.  Is grovelling a log file really the only way you can get the information you want?
2014-05-28 07:30:15	-->	alexsnake (~alexsnake@187.153.20.128) has joined #python
2014-05-28 07:30:17	pawroman	hey guys, do you know anything about EuroPython schedule?
2014-05-28 07:30:33	pawroman	I'm trying to find some info with no luck :(
2014-05-28 07:31:06	-->	The-Compiler (~compiler@unaffiliated/the-compiler) has joined #python
2014-05-28 07:31:09	<--	plex0r (~plex0r@173-160-70-101-atlanta.hfc.comcastbusiness.net) has quit (Read error: Connection reset by peer)
2014-05-28 07:31:17	DammitJim	offby1, I can ask the developer to do something else
2014-05-28 07:31:26	Yhg1s	pawroman: well, the list of talks is here: https://ep2014.europython.eu/en/event/talks/
2014-05-28 07:31:36	<--	Auv (~jack@unaffiliated/auv5) has quit (Quit: WeeChat 1.0-dev)
2014-05-28 07:31:38	offby1	DammitJim: if that developer is willing to cooperate, then you two can surely come up with something easier.
2014-05-28 07:31:38	DammitJim	I was going to ask him to just set a bit on a file or something
2014-05-28 07:31:44	-->	snyp (~snyp@223.29.204.2) has joined #python
2014-05-28 07:31:52	pawroman	yup, but I'd like to see a schedule, what's going to be on when
2014-05-28 07:32:01	<--	marr (~ccc@dynamic-78-8-53-223.ssp.dialog.net.pl) has quit (Ping timeout: 252 seconds)
2014-05-28 07:32:19	offby1	DammitJim: perhaps have a file that contains a timestamp of the last time he did whatever.  He could overwrite that file each time, so it never gets big.  You'd read the file occasionally.
2014-05-28 07:32:20	-->	zhost_ (~zhost@host-178.215.192.230-internet.zabrze.debacom.pl) has joined #python
2014-05-28 07:32:30	sproingie	analyzing logs is actually a pretty great way to go, as long as they're logs meant for humans
2014-05-28 07:32:34	sproingie	json is nice for that
2014-05-28 07:32:42	sproingie	er long as they're NOT logs meant for humans
2014-05-28 07:32:46	DammitJim	yeah, I don't see why he couldn't do that
2014-05-28 07:32:51	Yhg1s	pawroman: it hasn't been finalized yet, as far as I know.
2014-05-28 07:32:54	<--	zhost (~zhost@host-178.215.195.107-internet.zabrze.debacom.pl) has quit (Ping timeout: 240 seconds)
2014-05-28 07:33:02	DammitJim	brb... let me see what he says... the bottom line is he doesn't know why his job is getting blocked
2014-05-28 07:33:06	-->	gimps (~noone@unaffiliated/gimps) has joined #python
2014-05-28 07:33:09	DammitJim	so, we need to monitor the stupid job
2014-05-28 07:33:12	offby1	sproingie: really?  But then there's the problem of the large and ever-growing log; DammitJim would have to either re-read the whole thing every time, or else keep track of where he last read it
2014-05-28 07:33:16	sproingie	i change my human-readable logs on a whim
2014-05-28 07:33:39	DammitJim	offby1, at least the log rolls over
2014-05-28 07:33:43	winegoddess	when opening a file - using with - that just makes sure close gets called?
2014-05-28 07:33:44	sproingie	offby1: most machine-readable logs also operate on some notion of a checkpoint where anything prior to it is moot
2014-05-28 07:33:47	offby1	DammitJim: that actually makes it _harder_
2014-05-28 07:33:56	offby1	winegoddess: yep
2014-05-28 07:33:59	sproingie	offby1: if things aren't bounded like that, then log analysis isn't the best idea
2014-05-28 07:34:04	DammitJim	I only need to look at the last hour of "stuff"
2014-05-28 07:34:07	kingplusplus	http://pastebin.com/R7PVLL1V please i am having problem --- i only want links that has words compiled in the re.compile() module the output if you check line, 79, 82, and 89 to 93 has what i do\ not include in the regiex
2014-05-28 07:34:07	infobob	http://paste.pound-python.org/show/j2sTLPKw4WeQXi37DWEB/ (repasted for kingplusplus)
2014-05-28 07:34:13	<--	kosh (~kosh@aesaeion.com) has quit (Ping timeout: 252 seconds)
2014-05-28 07:34:18	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-28 07:34:22	offby1	aaah, "only the last hour" has made it easier again :)
2014-05-28 07:34:33	pawroman	I was asking hoping that someone is involved in organizing EuroPython ;)
2014-05-28 07:34:39	-->	xelra (~quassel@unaffiliated/xelra) has joined #python
2014-05-28 07:34:41	acmehandle	You know what I'm asking.  I cited the differences in the example I laid out.
2014-05-28 07:34:43	winegoddess	thanks offby1 :)
2014-05-28 07:34:52	offby1	DammitJim: and I also get the impression that this log-reading code you're writing is meant to be temporary: until you figure out why the producer is blocked.  If so, then reading the log sounds better.
2014-05-28 07:34:54	acmehandle	And the only answer I got was look up the MRO.
2014-05-28 07:34:56	<--	saily (~saily@146.108.200.10) has quit (Quit: saily)
2014-05-28 07:35:29	Yhg1s	acmehandle: I'm sorry, I must have missed it. I only saw a question about the order of attribute lookup in baseclasses. How is that related to objects?
2014-05-28 07:35:31	-->	smccully (~smccully@192.65.45.20) has joined #python
2014-05-28 07:35:33	offby1	winegoddess: my general rule is: if I _can_ use "with", I will.  It's not just for file handles any more!
2014-05-28 07:35:36	acmehandle	Nothing about why the designers of python require that classes be loaded in order as listed whereas variables over write the previous one in the list.
2014-05-28 07:35:51	acmehandle	Because presumably everything is an object in python.
2014-05-28 07:35:52	Yhg1s	acmehandle: I don't understand what you mean by 'the previous one in the list'.
2014-05-28 07:35:59	-->	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has joined #python
2014-05-28 07:36:15	Yhg1s	acmehandle: ah, you're talking about *assigning* to *instance attributes*, and how instance attributes shadow class attributes?
2014-05-28 07:36:15	<--	donspaulding (~donspauld@71.201.172.43) has quit (Ping timeout: 276 seconds)
2014-05-28 07:36:20	-->	echevemaster (~echevemas@fedora/echevemaster) has joined #python
2014-05-28 07:36:36	<--	lmpyspaceprncs (~noone@unaffiliated/gimps) has quit (Ping timeout: 240 seconds)
2014-05-28 07:36:50	acmehandle	Ah.  Ok.
2014-05-28 07:37:10	Yhg1s	acmehandle: well, that design grew organically. See, for example, http://python-history.blogspot.nl/2009/02/adding-support-for-user-defined-classes.html
2014-05-28 07:37:12	-->	jkyle1 (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-28 07:37:24	Yhg1s	acmehandle: there's also discussions on the need for explicit 'self', and alternatives to it, that touch on it.
2014-05-28 07:37:25	<--	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has quit (Quit: kikimeter)
2014-05-28 07:37:31	<--	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has quit (Ping timeout: 252 seconds)
2014-05-28 07:37:34	<--	nsh (~unf@wikipedia/nsh) has quit (Ping timeout: 265 seconds)
2014-05-28 07:37:47	-->	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has joined #python
2014-05-28 07:37:59	<--	mcsontos (mcsontos@nat/redhat/x-szhdqfwmmkwahzhs) has quit (Quit: Leaving)
2014-05-28 07:38:03	<--	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has quit (Ping timeout: 265 seconds)
2014-05-28 07:38:08	acmehandle	I'm glad we were able to get through the haze of misunderstanding Yhg1
2014-05-28 07:38:08	sproingie	acmehandle: one thing to keep in mind is the C3 MRO was designed for old-school MI, not so much mixins
2014-05-28 07:38:09	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-137.dynamic.uwaterloo.ca) has joined #python
2014-05-28 07:38:17	<--	lacrymology (~lacrymolo@112.215.44.4) has quit (Read error: Connection reset by peer)
2014-05-28 07:38:37	-->	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has joined #python
2014-05-28 07:38:45	-->	getxsick (~skfarek@unaffiliated/getxsick) has joined #python
2014-05-28 07:38:53	-->	plex0r (~plex0r@173-160-70-101-atlanta.hfc.comcastbusiness.net) has joined #python
2014-05-28 07:39:06	-->	skinux (~skinux@68-113-7-47.dhcp.wlwl.wa.charter.com) has joined #python
2014-05-28 07:39:14	getxsick	is it possible to make it simpler: x in z or y in z ?
2014-05-28 07:39:26	acmehandle	Anyone familiar with how Perl implements regexp?  Or how it used to?
2014-05-28 07:39:29	-->	Deseaus (~Deseaus@wpa175.guwlan.gu.se) has joined #python
2014-05-28 07:39:30	sproingie	attributes participate in method lookup only insofar as they might invoke methods to get at them.  the data itself lives on the instance.
2014-05-28 07:39:30	<--	mven (~textual@ip68-104-38-84.lv.lv.cox.net) has quit (Ping timeout: 265 seconds)
2014-05-28 07:39:36	acmehandle	I was wondering if Python does that the same way
2014-05-28 07:39:44	therealfakemoot	acmehandle: It does not.
2014-05-28 07:39:55	skinux	How can I print to same line in console, but not in same 'print' statement?
2014-05-28 07:40:03	sproingie	acmehandle: perl's regex engine is intimately tied to perl's code evaluator.  python's is compatible with a subset of perl regexes
2014-05-28 07:40:04	-->	CB4 (~cb4@50.7.31.18) has joined #python
2014-05-28 07:40:10	therealfakemoot	skinux: You need a terminal interface library like urwid.
2014-05-28 07:40:16	-->	prrskr (~sirk@p5DDC573B.dip0.t-ipconnect.de) has joined #python
2014-05-28 07:40:23	acmehandle	As soon as I read that second paragraph in the history of python link I thought about how perl implemented regexp as a seperate 'engine'.
2014-05-28 07:40:25	<--	prrskr (~sirk@p5DDC573B.dip0.t-ipconnect.de) has quit (Client Quit)
2014-05-28 07:40:30	<--	vbabiy (~vbabiy@cpe-098-024-041-201.carolina.res.rr.com) has quit (Excess Flood)
2014-05-28 07:40:47	sproingie	perl lets you replace the regex engine, but the default one is very deeply tied to perl optrees
2014-05-28 07:40:48	<--	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-28 07:40:49	-->	mordonez (~mordonez@190.102.132.14) has joined #python
2014-05-28 07:40:58	sproingie	(optrees being perl's rough equivalent of bytecode)
2014-05-28 07:41:11	acmehandle	I understand.
2014-05-28 07:41:15	-->	vbabiy (~vbabiy@cpe-098-024-041-201.carolina.res.rr.com) has joined #python
2014-05-28 07:41:16	-->	fabricio_org (~fabricio@189.16.167.220) has joined #python
2014-05-28 07:41:16	offby1	skinux: you might be able to do print (something, end='') ; print (something_else)
2014-05-28 07:41:27	skinux	Goal here is to make somewhat of a progress bar using '.' characters.
2014-05-28 07:41:27	--	Eyes is now known as Eyess
2014-05-28 07:41:30	rivarun	skinux: which python version?
2014-05-28 07:41:40	skinux	print(something, end='') doesn't work in 2.7
2014-05-28 07:41:49	<--	kikimeter (~kikimeter@81-65-156-199.rev.numericable.fr) has quit (Client Quit)
2014-05-28 07:41:52	getxsick	is it possible to make it simpler: x in z or y in z ?
2014-05-28 07:41:58	-->	AnYaDi (~AnYaDi@eduroam-169-222.dyn.carleton.edu) has joined #python
2014-05-28 07:42:17	<--	ragsagar (~ragsagar@unaffiliated/ragsagar) has quit (Ping timeout: 264 seconds)
2014-05-28 07:42:17	<--	sardok (~sinan@94.122.11.254) has quit (Ping timeout: 252 seconds)
2014-05-28 07:42:25	acmehandle	Why do most 'startups' want me to absorb their 'culture'.  Why cant I be a programmer who comes in for work, enjoys what he does, hangs out once in a while with my coworkers and go on about my life.
2014-05-28 07:42:31	-->	wachpwnski (~wachpwnsk@c-98-215-176-240.hsd1.in.comcast.net) has joined #python
2014-05-28 07:42:33	rivarun	skinux: if that's all you're doing then you could just http://sprunge.us/gNgX
2014-05-28 07:42:38	-->	bgs100 (~bgs@unaffiliated/bgs100) has joined #python
2014-05-28 07:42:54	-->	Edifice7 (a7073701@gateway/web/freenode/ip.167.7.55.1) has joined #python
2014-05-28 07:42:59	sproingie	getxsick: that's pretty simple by itself.  if you're looking to generalize it to any set of (x,y,xx,yy...) then look into any() and all()
2014-05-28 07:43:09	gugah	i'm getting a UnicodeDecodeError when an exception is raised by mysql.connector in python2. Any suggestions on how to handle it?
2014-05-28 07:43:23	skinux	I"m using Python 2.7, I'd be using 3.0 if I knew how to install PIP for 3.0 without removing 2.7.
2014-05-28 07:43:24	CatKiller	acmehandle: Do they?
2014-05-28 07:43:24	<--	eggsmiao (~cat@121.237.100.25) has quit (Ping timeout: 240 seconds)
2014-05-28 07:43:27	sproingie	getxsick: specifically any(foo in z for foo in mylist)
2014-05-28 07:43:41	-->	Ankhers (~user@gateway/tor-sasl/ankhers) has joined #python
2014-05-28 07:43:43	-->	Zigtalk (~Zigtalk@cpe-72-182-60-182.austin.res.rr.com) has joined #python
2014-05-28 07:43:44	sproingie	getxsick: but for just two i wouldn't bother with any()
2014-05-28 07:43:49	offby1	skinux: try "from __future__ import print_function" at the top of your file; that should make the "print" function work on 2.7
2014-05-28 07:43:49	acmehandle	Thats what it seems like when I read their websites.
2014-05-28 07:43:51	Yhg1s	gugah: bit.ly/unipain is probably some help. Or, you could show us the code and the traceback.
2014-05-28 07:43:52	pawroman	acmehandle: aren't startups supposed to work that way? "dedicated" programmers coding over nights trying to get some thing up and running ASAP? :)
2014-05-28 07:43:59	mexi_d3_	skinux, which distro?
2014-05-28 07:44:00	offby1	'course it'll break all your other print statements in that file :)
2014-05-28 07:44:02	<--	fenre (~fenre@79.160.132.214.static.lyse.net) has quit
2014-05-28 07:44:03	<--	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has quit (Read error: Connection reset by peer)
2014-05-28 07:44:11	Yhg1s	skinux: you may be interested in, say, pypi.python.org/pypi/fish
2014-05-28 07:44:30	<--	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has quit (Quit: Page closed)
2014-05-28 07:44:40	-->	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has joined #python
2014-05-28 07:44:40	acmehandle	pwroman: youre right.  Because their backers (worth billions) need to make sure their money is being put to good use.
2014-05-28 07:44:51	acmehandle	The piddly 250k that is.
2014-05-28 07:44:58	getxsick	sproingie: thx
2014-05-28 07:44:58	acmehandle	Sorry, thats wrong of me.
2014-05-28 07:45:11	acmehandle	I'll be back later.
2014-05-28 07:45:17	acmehandle	Thanks all
2014-05-28 07:45:20	[Tritium]	my tests no longer have a wart.  I am contented
2014-05-28 07:45:20	<--	acmehandle (~acmehandl@ool-457c769b.dyn.optonline.net) has quit (Quit: Leaving)
2014-05-28 07:45:33	Edifice7	So I have a working while statement but added a L.append(xyz) in it and it broke. is appending to a list within a while statement incorrect?
2014-05-28 07:45:38	gugah	Yhg1s: thx ill read it.
2014-05-28 07:46:01	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 07:46:19	Yhg1s	Edifice7: not as such, but it may not do what you want, of course. You'd have to show us the code, explain what error you're getting and what you wanted it to do instead.
2014-05-28 07:46:27	Edifice7	oh and Hi, sorry to just drop this on the room. I havn't used IRC since I was a teen, so not sure of proper way to go about it.
2014-05-28 07:46:37	Yhg1s	Edifice7: what you did is fine.
2014-05-28 07:46:42	Edifice7	count = 1 cellNum = 4 rangeNum = 1 L = list() #Empty list print "Running Script" sys.stdout.flush() sys.stdout.write("\r 25%%Done") # step through workbooks   while Cell(2, rangeNum).value != None:    active_cell(2, rangeNum)   # L.append(active_cell(2, rangeNum)    rangeNum = rangeNum + 1    count = count + 1
2014-05-28 07:46:47	Edifice7	well that didnt work
2014-05-28 07:46:53	<--	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has quit (Quit: AkashicLegend)
2014-05-28 07:46:56	Edifice7	better way to paste code in IRC?
2014-05-28 07:46:57	<--	snyp (~snyp@223.29.204.2) has quit (Quit: "bbl")
2014-05-28 07:46:58	pawroman	oh damn, try pasting it
2014-05-28 07:46:59	Yhg1s	Edifice7: don't paste on IRC, no.
2014-05-28 07:47:00	-->	kjn (~kjn@168.93.96.5) has joined #python
2014-05-28 07:47:04	pawroman	somewhere
2014-05-28 07:47:04	mexi_d3_	Edifice7, mismatched brackets
2014-05-28 07:47:06	Yhg1s	Edifice7: see the channel topic: bpaste.net/+python
2014-05-28 07:47:07	sproingie	Edifice7: see the /topic for a pastebin
2014-05-28 07:47:18	<--	strawm4n (~Hellvis@216.227.128.66) has quit (Ping timeout: 240 seconds)
2014-05-28 07:47:20	Edifice7	rgr thxs
2014-05-28 07:47:21	sbuettner	So I finished that testing talk video, thanks again guys for linking that. Quite helpful.
2014-05-28 07:47:38	mexi_d3_	Edifice7, I can see an extra ( in your L.append line, for starters
2014-05-28 07:47:47	<--	Deseaus (~Deseaus@wpa175.guwlan.gu.se) has quit (Quit: Computer has gone to sleep.)
2014-05-28 07:48:09	Edifice7	http://bpaste.net/show/cq4I3Y56WQkVSTOZmrHf/
2014-05-28 07:48:14	<--	AnYaDi (~AnYaDi@eduroam-169-222.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 07:48:17	Edifice7	^^ proper way?
2014-05-28 07:48:19	--	swebb is now known as zz_swebb
2014-05-28 07:48:25	-->	thedodd (~Anthony@rrcs-67-78-97-126.sw.biz.rr.com) has joined #python
2014-05-28 07:48:36	<--	amargherio (~MarioEIU@69.197.156.7) has quit (Remote host closed the connection)
2014-05-28 07:48:49	-->	workingcats (~workingca@212.122.48.77) has joined #python
2014-05-28 07:49:19	Edifice7	I'm writing within a py for excel if the active_cell is throwing anyone off
2014-05-28 07:49:24	mexi_d3_	Edifice7, I can't see how that while loop terminates - but your snippet is not complete
2014-05-28 07:49:28	-->	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has joined #python
2014-05-28 07:49:31	<--	kevinb (~europa-zn@99.166.106.52) has quit (Ping timeout: 240 seconds)
2014-05-28 07:49:32	pawroman	Edifice7: missing brace
2014-05-28 07:49:41	CatKiller	line 12
2014-05-28 07:49:42	mexi_d3_	Edifice7, And as stated, your brackets are mismatched
2014-05-28 07:49:52	Yhg1s	(parentheses.)
2014-05-28 07:50:01	pawroman	missing )
2014-05-28 07:50:18	Edifice7	brace was it
2014-05-28 07:50:23	CatKiller	paren
2014-05-28 07:50:25	Edifice7	thank you been beating my head for awhile
2014-05-28 07:50:41	skinux	Ubuntu Trusty. And, print does work on 2.7, using "end=''" doesn't
2014-05-28 07:51:05	<--	FasTTo (~FasTTo@bl16-177-118.dsl.telepac.pt) has quit (Quit: Inactive)
2014-05-28 07:51:06	sproingie	should work if you do from __future__ import print_function
2014-05-28 07:51:07	Yhg1s	skinux: not unless you use 'from __future__ import print_function', no.
2014-05-28 07:51:07	-->	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-28 07:51:10	<--	ari-_-e (~ari-_-e@unaffiliated/atrigent) has quit (Quit: Leaving)
2014-05-28 07:51:21	mexi_d3_	skinux, trusty i think has pip3-4 already installed. if not then apt-get install it.
2014-05-28 07:51:23	<--	timkofu (~timkofu@196.200.18.30) has quit (Quit: Lost terminal)
2014-05-28 07:51:27	Yhg1s	skinux: however, that will break all other uses of 'print' as a statement. You may just want to use, for example, pypi.python.org/pypi/fish.
2014-05-28 07:51:39	Edifice7	Is my while not correct syntax in regards to closing the statement?
2014-05-28 07:51:57	mexi_d3_	skinux, Ah, on trusty it is called 'pip3' and it's installed.
2014-05-28 07:51:58	Yhg1s	Edifice7: it's fine.
2014-05-28 07:52:06	Edifice7	thanks
2014-05-28 07:52:20	DammitJim	ok, I got the developer to check if the job has gotten blocked. if it does, then touch a file (I know, silly)
2014-05-28 07:52:30	-->	mijicd (~mijicd@cable-188-246-37-245.dynamic.kdsinter.net) has joined #python
2014-05-28 07:52:41	-->	eiyalx (~U@anon-36-148.vpn.ipredator.se) has joined #python
2014-05-28 07:52:46	DammitJim	now I just need to monitor this file and fire an event if it gets written
2014-05-28 07:52:55	<--	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has quit (Ping timeout: 252 seconds)
2014-05-28 07:52:59	--	Joost`away is now known as Joost
2014-05-28 07:53:05	<--	thedodd (~Anthony@rrcs-67-78-97-126.sw.biz.rr.com) has quit (Ping timeout: 264 seconds)
2014-05-28 07:53:35	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 07:53:36	<--	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has quit (Quit: ArcTanSusan)
2014-05-28 07:53:38	-->	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has joined #python
2014-05-28 07:53:41	-->	thedodd (~Anthony@rrcs-67-78-97-126.sw.biz.rr.com) has joined #python
2014-05-28 07:53:43	pawroman	DammitJim: watch for filesystem change, using some inotify wrapper: https://github.com/seb-m/pyinotify
2014-05-28 07:53:50	mexi_d3_	Where does the terminating conditon (Cell) come from?
2014-05-28 07:53:51	DammitJim	yup, inotify!
2014-05-28 07:54:00	-->	eggsmiao (~cat@121.237.100.25) has joined #python
2014-05-28 07:54:03	-->	keypusher (~tmeagher@209.6.175.46) has joined #python
2014-05-28 07:54:07	-->	firecat53 (~firecat53@108.170.1.2) has joined #python
2014-05-28 07:54:13	-->	eriko (~eriko@50-192-202-145-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 07:54:16	-->	chrismed (~chrismed@abjr214.neoplus.adsl.tpnet.pl) has joined #python
2014-05-28 07:54:51	DammitJim	pawroman, I guess with pynotify one just has this application running all the time, right? I should almost make it a service
2014-05-28 07:54:53	offby1	I was thinking about inotify earlier too ...
2014-05-28 07:54:57	<--	rquid (~sashka@94.41.177.225) has quit (Remote host closed the connection)
2014-05-28 07:55:09	pawroman	DammitJim: correct
2014-05-28 07:55:22	offby1	DammitJim: I use pynotify at work, and it's good
2014-05-28 07:55:39	pawroman	DammitJim: but if it just sits there and waits for an event, it won't eat up CPU
2014-05-28 07:55:51	offby1	basically you write some hooks: if the file is opened for writing, call this function; if it gets closed, call this, etc.
2014-05-28 07:55:53	-->	rquid (~sashka@94.41.177.225) has joined #python
2014-05-28 07:56:08	<--	satyajit (~satyajit@114.143.157.171) has quit (Remote host closed the connection)
2014-05-28 07:56:09	-->	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has joined #python
2014-05-28 07:56:10	<--	mangekyo (~mangekyo@c211-30-60-1.frank3.vic.optusnet.com.au) has quit
2014-05-28 07:56:11	-->	EcoGiko (~EcoGiko@unaffiliated/ecogiko) has joined #python
2014-05-28 07:56:29	-->	FasTTo (~FasTTo@bl16-177-118.dsl.telepac.pt) has joined #python
2014-05-28 07:56:29	<--	renierdebruyn (~chatzilla@41.162.43.179) has quit (Remote host closed the connection)
2014-05-28 07:56:39	-->	ZombieFe_ (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has joined #python
2014-05-28 07:56:42	-->	sdamashek (sdamashek@gentoo/developer/sdamashek) has joined #python
2014-05-28 07:56:49	-->	adorver (~adorver@58.125.237.138) has joined #python
2014-05-28 07:57:03	--	jjmojojjmojo is now known as jjmojo^away
2014-05-28 07:57:22	-->	Morpheus (bsdboy@redhat/deesl) has joined #python
2014-05-28 07:57:23	-->	bosie (~bosie@unaffiliated/bosie) has joined #python
2014-05-28 07:57:35	<--	Morpheus (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-28 07:57:42	<--	ZombieFeynman (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has quit (Ping timeout: 276 seconds)
2014-05-28 07:57:46	-->	jeffreylevesque (~jeffreyle@70-33-147-5.unassigned.ntelos.net) has joined #python
2014-05-28 07:57:48	<--	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has quit (Quit: Leaving.)
2014-05-28 07:57:56	<--	Itkovian (~Itkovian@nata200.ugent.be) has quit (Quit: Zzzzz ...)
2014-05-28 07:58:01	-->	lamar (~Adium@2001:1458:202:81::101:ce78) has joined #python
2014-05-28 07:58:12	-->	dvx (~dvx@igw.obsm.cz) has joined #python
2014-05-28 07:58:14	hypha	hi guys, i am a beginner in programming and i have a question that might be pretty silly. I hope you can bear with me. So I have 10 lists of intergers named a0, a1, a2, ..., a9. is there a simple way to loop through every list rather than looping every list separately?
2014-05-28 07:58:14	bosie	i have a problem: i need to split N arrays into two parts each. and i want to return it in two lists. e.g.
2014-05-28 07:58:17	-->	Morpheus (~bsdboy@redhat/deesl) has joined #python
2014-05-28 07:58:29	bosie	N=3; [[A,B,C],[A,B,C]]
2014-05-28 07:58:39	bosie	the left side alays contains 80% of the whole thing
2014-05-28 07:58:41	--	Morpheus is now known as Guest45057
2014-05-28 07:58:45	<--	eggsmiao (~cat@121.237.100.25) has quit (Read error: Connection reset by peer)
2014-05-28 07:58:47	adorver	Hello, Good evening.
2014-05-28 07:58:51	Yhg1s	hypha: well, the easy way would be to have a list of lists, instead of having three lists.
2014-05-28 07:58:51	bosie	80% of A is on the left side
2014-05-28 07:58:52	bosie	etc
2014-05-28 07:58:53	pawroman	hypha: you can create a nested for loop
2014-05-28 07:58:56	-->	Zzeiss (~wsy@68.245.162.128) has joined #python
2014-05-28 07:58:57	<--	jeffisabelle (~jeffisabe@193.140.108.147) has quit (Read error: Connection reset by peer)
2014-05-28 07:59:10	Yhg1s	hypha: but you can also do 'for L in a0, a1, a2, a3, a4, ...: for item in L: ...'
2014-05-28 07:59:25	kingplusplus	http://paste.pound-python.org/show/j2sTLPKw4WeQXi37DWEB/  i dont know is my regex bad?  please i am having problem --- i only want links that has words compiled in the re.compile() module the output if you check line, 79, 82, and 89 to 93 has what i do\ not include in the regiex
2014-05-28 07:59:28	<--	lamar (~Adium@2001:1458:202:81::101:ce78) has quit (Client Quit)
2014-05-28 07:59:42	-->	le_tropico (~le_tropic@nat/cisco/x-mqqeqdhtptsobcjt) has joined #python
2014-05-28 07:59:52	<--	jiku (~jiku@182.73.253.194) has quit (Ping timeout: 245 seconds)
2014-05-28 08:00:03	pawroman	hypha: but if you want to iterate through every element of all the lists combined, you might want to join them, or use something like itertools.chain.from_iterable
2014-05-28 08:00:13	hypha	Yhg1s: yeah I see what you mean. but i thought since the names of my lists are very regular, maybe there is a way to refer to them smartly instead of having to typing in every one of them
2014-05-28 08:00:17	<--	introom (~introom@202.125.228.4) has quit (Ping timeout: 265 seconds)
2014-05-28 08:00:18	<--	aquinas (~aquinas_@unaffiliated/aquinas) has quit (Read error: Connection reset by peer)
2014-05-28 08:00:19	<--	Deesl (bsdboy@redhat/deesl) has quit (Ping timeout: 240 seconds)
2014-05-28 08:00:24	-->	Yage (~emurphy@107-0-85-186-ip-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 08:00:35	<--	shunya_chakra (~shunya@117.200.70.69) has quit (Quit: Leaving)
2014-05-28 08:00:38	pawroman	you can have a list of lists :)
2014-05-28 08:00:43	--	Joost is now known as Joost`away
2014-05-28 08:00:43	<--	ddsl (~kvirc@5.254.239.119) has quit (Read error: Connection reset by peer)
2014-05-28 08:00:46	Yhg1s	hypha: not really, no. The smart thing to do would be to not use ten separate variables for them, but using a list of them, or perhaps a dict.
2014-05-28 08:00:50	<--	bal (~Thunderbi@86.125.63.66) has quit (Quit: bal)
2014-05-28 08:00:55	skinux	I downloaded the FISH library, but the setup.py included has an error.
2014-05-28 08:01:16	-->	aquinas (~aquinas_@unaffiliated/aquinas) has joined #python
2014-05-28 08:01:21	hypha	Yhg1s: I see.
2014-05-28 08:01:29	Yhg1s	skinux: what are you donwloading, how are you downloading it, how are you determining setup.py has an error?
2014-05-28 08:01:30	hypha	pawroman: thanks! i will give it a go
2014-05-28 08:01:34	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 08:01:54	<--	le_tropico (~le_tropic@nat/cisco/x-mqqeqdhtptsobcjt) has quit (Remote host closed the connection)
2014-05-28 08:01:59	<--	Ephexeve (~benmezger@187.65.231.51) has quit (Ping timeout: 258 seconds)
2014-05-28 08:02:08	<--	Quashie (~boingredd@216.2.50.205) has quit (Quit: Leaving)
2014-05-28 08:02:15	mexi_d3_	skinux, I don't know what you are doing. I thought the question was about installing pip into Python 3 on Ubuntu Trusty? It's already there, named pip3.
2014-05-28 08:02:17	-->	le_tropico (~le_tropic@nat/cisco/x-vvdwvajdrbwpwojm) has joined #python
2014-05-28 08:02:29	-->	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has joined #python
2014-05-28 08:02:33	pawroman	Yhg1s is right, keeping them separate is not the smart thing to do (especially in Python)
2014-05-28 08:02:35	<--	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has quit (Quit: away)
2014-05-28 08:02:49	skinux	Downloaded: https://pypi.python.org/pypi/fish, unpacked tarball, 'python ./setup.py'
2014-05-28 08:02:49	<--	Guest45057 (~bsdboy@redhat/deesl) has quit (Ping timeout: 252 seconds)
2014-05-28 08:02:58	adorver	Is there a file manager based on GUI?
2014-05-28 08:03:00	pawroman	hypha: you might want to familiarize yourself with list comprehensions
2014-05-28 08:03:01	Yhg1s	skinux: and what does 'python -V' say?
2014-05-28 08:03:13	adorver	created by Python?
2014-05-28 08:03:28	-->	mrj (~textual@unaffiliated/vty) has joined #python
2014-05-28 08:03:33	<--	chiui (~chiui@2001:5c0:1400:a::87) has quit (Ping timeout: 252 seconds)
2014-05-28 08:03:33	skinux	2.7.6
2014-05-28 08:03:34	Kwpolska	adorver: ranger?
2014-05-28 08:03:40	<--	jargon (~jargon@unaffiliated/jargon-) has quit (Ping timeout: 265 seconds)
2014-05-28 08:03:40	Yhg1s	skinux: and what is the actual output of 'python setup.py'?
2014-05-28 08:03:48	<--	tech-desk (~tech@nat5.broadband.bnmedia.ru) has quit (Read error: Connection reset by peer)
2014-05-28 08:03:55	adorver	Kwpolska: That's CUI, right?
2014-05-28 08:03:58	<--	galactic_pretty_ (~aaa@210.223.154.133) has quit (Ping timeout: 240 seconds)
2014-05-28 08:04:00	skinux	from: too many arguments
2014-05-28 08:04:01	skinux	from: too many arguments
2014-05-28 08:04:01	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 08:04:01	skinux	./setup.py: line 4: syntax error near unexpected token `('
2014-05-28 08:04:01	skinux	./setup.py: line 4: `long_desc = open(path.join(path.dirname(__file__), "README.rst"), "U").read()'
2014-05-28 08:04:10	Kwpolska	adorver: actually, yes.  you want real graphical stuff?
2014-05-28 08:04:28	-->	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 08:04:33	adorver	Kwpolska: yes, because I try to make a file manager based on GUI with Python.
2014-05-28 08:04:38	<--	macieks (~macieks@ip-222-135.ists.pl) has quit (Ping timeout: 240 seconds)
2014-05-28 08:04:57	Yhg1s	skinux: sounds like you're actually doing './setup.py', not 'python setup.py'
2014-05-28 08:05:01	kingplusplus	http://paste.pound-python.org/show/j2sTLPKw4WeQXi37DWEB/  i dont know is my regex bad?  please i am having problem --- i only want links that has words compiled in the re.compile() module the output if you check line, 79, 82, and 89 to 93 has what i do\ not include in the regiex
2014-05-28 08:05:03	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 08:05:44	skinux	Ahh, yes. Oops! It worked doing it the right way
2014-05-28 08:06:29	<--	airos (~airos@lbg31-1-78-245-85-24.fbx.proxad.net) has quit (Quit: Leaving)
2014-05-28 08:06:34	-->	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has joined #python
2014-05-28 08:06:38	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #python
2014-05-28 08:06:41	<--	EcoGiko (~EcoGiko@unaffiliated/ecogiko) has quit (Remote host closed the connection)
2014-05-28 08:06:52	-->	masci (~masci@dynamic-adsl-94-37-173-189.clienti.tiscali.it) has joined #python
2014-05-28 08:06:53	<--	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has quit (Ping timeout: 264 seconds)
2014-05-28 08:06:59	[diablo]	anyone advise on where I am stuffing this up please while not (self.fh.readline().endswith('*/')): pass
2014-05-28 08:07:12	[diablo]	I am trying to ignore any lines until I hit the */
2014-05-28 08:07:24	adorver	split()?
2014-05-28 08:07:33	[diablo]	ah shit
2014-05-28 08:07:36	[diablo]	of course
2014-05-28 08:07:41	eiyalx	[diablo], What happens if the line ends with '/* ' ?
2014-05-28 08:07:42	[diablo]	never stripped it
2014-05-28 08:07:49	eiyalx	Uh, '*/
2014-05-28 08:07:50	pawroman	[diablo]: try itertools.dropwhile
2014-05-28 08:07:50	 *	[diablo] spanks himself
2014-05-28 08:07:53	<--	Jucato (~jucato@kde/developer/jucato) has quit (Quit: Konversation terminated!)
2014-05-28 08:07:55	-->	cjwilburn (~cjwilburn@2607:f470:a:5:3060:26a8:2d9b:73bc) has joined #python
2014-05-28 08:08:00	-->	kazagistar (~kazagista@host-174-45-72-127.bzm-mt.client.bresnan.net) has joined #python
2014-05-28 08:08:05	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Remote host closed the connection)
2014-05-28 08:08:05	<--	juantwo (~juantwo@50.56.228.65) has quit (Ping timeout: 264 seconds)
2014-05-28 08:08:19	Kwpolska	adorver: I personally haven’t heard of any.  Why not build it from scratch?  You can also try basing yourself on some lightweight C/C++ file manager (like pcmanfm in both C/GTK and C++/Qt flavors) — for the actual GUI, PyQt/PySide are more-or-less using the same code as Qt itself in C++.
2014-05-28 08:08:20	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-28 08:08:56	-->	pretty_function (~pretty_fu@115.252.136.3) has joined #python
2014-05-28 08:09:07	adorver	Kwpolska: I will from scratch.
2014-05-28 08:09:15	-->	dlman (~dlman@c-24-61-47-4.hsd1.ma.comcast.net) has joined #python
2014-05-28 08:09:16	-->	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has joined #python
2014-05-28 08:09:17	-->	venomDev (~venomDev@101.113.9.242) has joined #python
2014-05-28 08:09:18	adorver	but why not with python?
2014-05-28 08:09:26	jwhisnant	kingplusplus: you may want to use urlparse.urlparse instead; https://docs.python.org/2/library/urlparse.html - I would not do this with a regexp, personally
2014-05-28 08:09:29	Kwpolska	adorver: you can use python
2014-05-28 08:09:31	<--	iogg (~rpolli@93-41-225-218.ip83.fastwebnet.it) has quit (Ping timeout: 252 seconds)
2014-05-28 08:09:44	cdunklau	kingplusplus: your regex is wrong, it has a bunch of whitespace in it
2014-05-28 08:09:45	-->	mkster_ (~Mkster@i577B58DB.versanet.de) has joined #python
2014-05-28 08:09:53	<--	jkyle1 (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 264 seconds)
2014-05-28 08:10:01	Kwpolska	adorver: I just meant that (a) there are C/C++ things you can base yourself on and (b) C/C++ code for the GUI is often similar to what you would do in Python
2014-05-28 08:10:01	[Tritium]	adorver: you can use python, but all the gui libraries for python are wrappers of c(++) gui libraries
2014-05-28 08:10:08	-->	ncthom91 (~ncthom91@173.252.71.129) has joined #python
2014-05-28 08:10:28	[Tritium]	usually pretty thin wrappers at that
2014-05-28 08:10:38	kingplusplus	cdunklau, in the regex i am trying to stay under 80 lines
2014-05-28 08:10:58	Edifice7	two questions for y'all. 1) if there a repository with available functions that allows for somewhat idiot-proof searching of terms (Such as to look for my next question) 2) Is there a step through function within python for 'list'... Out of habit I find myself writing allot of whiles and for statements, I suspect there are built in functions that would reduce the number of statements I have to write.
2014-05-28 08:10:59	<--	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 08:10:59	adorver	Kwpolska: I need source code of file manager to read and understand structure, algorithm, logic etc.
2014-05-28 08:10:59	jwhisnant	kingplusplus: lines are free
2014-05-28 08:11:19	cdunklau	kingplusplus: compare this http://bpaste.net/show/foQuckJv0uodxysJKnxY/
2014-05-28 08:11:32	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 255 seconds)
2014-05-28 08:11:36	cdunklau	kingplusplus: python implicitly concatenates strings inside parens
2014-05-28 08:11:38	adorver	Okay, i got it.
2014-05-28 08:11:42	Kwpolska	adorver: read ranger for file management logic then
2014-05-28 08:11:45	-->	oozbooz (~ocherno@172-13-187-218.lightspeed.cicril.sbcglobal.net) has joined #python
2014-05-28 08:11:47	-->	Josse (3eeba09e@gateway/web/freenode/ip.62.235.160.158) has joined #python
2014-05-28 08:11:51	Yhg1s	Edifice7: well, there's docs.python.org/library, but I'm not sure if that's what you meant. As for your second question, what kind of 'stepping through' do you want? What is the code you're trying to simplify?
2014-05-28 08:11:56	cdunklau	kingplusplus: alternately, you could put all those words in a list, then use '
2014-05-28 08:12:00	<--	knigitz (~knigitz@pool-108-40-3-35.bltmmd.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2014-05-28 08:12:06	-->	eggsmiao (~cat@117.136.35.18) has joined #python
2014-05-28 08:12:07	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 08:12:12	cdunklau	kingplusplus: alternately, you could put all those words in a list, then use '|'.join(thelist) to make the pattern
2014-05-28 08:12:27	pawroman	guys, how do I parse form-encoded POST data?
2014-05-28 08:12:34	cdunklau	kingplusplus: but anyway, jwhisnant is right, use urlparse
2014-05-28 08:12:37	-->	jiku (~jiku@182.71.136.242) has joined #python
2014-05-28 08:12:38	adorver	Kwpolska: Like Nemo on linux mint is uses icon for files.
2014-05-28 08:12:44	kingplusplus	cdunklau, wonderful idea there
2014-05-28 08:12:48	cdunklau	pawroman: your framework doesn't do that for you?
2014-05-28 08:12:51	Edifice7	Yhgls I just want to step through to the end of the list, nothing fancy. If len = 29 I was hoping there was a way to step through 0-29 without having to write the statement for myself
2014-05-28 08:13:02	kingplusplus	jwhisnant, i will followup with urlparse
2014-05-28 08:13:03	[Tritium]	pawroman: are...you writing CGI?
2014-05-28 08:13:06	pawroman	cdunklau: nope, it's outside a framework
2014-05-28 08:13:06	adorver	ranger is just display file names in color.
2014-05-28 08:13:10	cdunklau	pawroman: why?
2014-05-28 08:13:18	<--	Mkster (~Mkster@i577B68DB.versanet.de) has quit (Ping timeout: 276 seconds)
2014-05-28 08:13:28	<--	Zzeiss (~wsy@68.245.162.128) has quit (Quit: Leaving.)
2014-05-28 08:13:29	<--	pretty_function (~pretty_fu@115.252.136.3) has quit (Ping timeout: 258 seconds)
2014-05-28 08:13:32	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 08:13:32	<--	frostschutz (~frostschu@pD9E50F97.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2014-05-28 08:13:39	-->	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-28 08:13:54	pawroman	cdunklau: I'm writing an API client and I want to test if it correctly includes stuff in POST body
2014-05-28 08:13:58	-->	Qantourisc (~Qantouris@78-20-80-220.access.telenet.be) has joined #python
2014-05-28 08:14:09	Yhg1s	Edifice7: I don't understand what you mean by 'step through', sorry. Do you want to do something with each item in the list?
2014-05-28 08:14:15	Edifice7	http://bpaste.net/show/he3DaF6Lc69edGQz74YK/
2014-05-28 08:14:19	-->	pikaren (~ren@unaffiliated/pikaren) has joined #python
2014-05-28 08:14:20	Kwpolska	adorver: you may also want to read some other lightweight file manager, preferably written in the same GUI toolkit as you are using (PCManFM for pygtk/pygobject?/pyqt/pyside)
2014-05-28 08:14:27	kingplusplus	jwhisnant, what a wonderful module...
2014-05-28 08:14:43	adorver	Kwpolska: I'm learning Tkinter.
2014-05-28 08:14:45	Edifice7	so I build my list in 1 I was hoping there would be a 1 liner to step through teh list from 0, targetting each tuple and applying the corosponding color
2014-05-28 08:14:55	<--	nemesit|znc (~nemesit|z@84.200.7.95) has quit (Ping timeout: 252 seconds)
2014-05-28 08:14:55	pawroman	so, I have mocked requests library using responses and now I've ended up in having raw POST body, wondering how to parse it ;)
2014-05-28 08:14:57	Kwpolska	adorver: tkinter is shit
2014-05-28 08:14:59	Yhg1s	Edifice7: 'for item in L: ...'
2014-05-28 08:15:04	Yhg1s	Kwpolska: language, language.
2014-05-28 08:15:06	Qantourisc	I'm looking at getting the input-field of another application (in Windows). Any suggestions what libs/api's to use  ?
2014-05-28 08:15:06	adorver	is shit? oh...
2014-05-28 08:15:10	adorver	why?
2014-05-28 08:15:15	Edifice7	that's it
2014-05-28 08:15:18	Yhg1s	adorver: some people think it doesn't look pretty.
2014-05-28 08:15:20	Edifice7	thank you Yhgls
2014-05-28 08:15:27	-->	oubiga (~oubiga@109.225.20.95.dynamic.jazztel.es) has joined #python
2014-05-28 08:15:31	Yhg1s	Edifice7: ok, well, 'for' statements are covered in any tutorial, so that's where you could've found it.
2014-05-28 08:15:33	MentalAtrophy	I used tkinter a few times just to make a simple database tool so I didn't have to input crap manually all of the time.
2014-05-28 08:15:45	 *	adorver have shock.
2014-05-28 08:15:48	skinux	I see on Ubuntu installation of PIP isn't Python version specific. So, how can I use PIP for 3.0 in addition to 2.7?
2014-05-28 08:15:53	<--	dlman (~dlman@c-24-61-47-4.hsd1.ma.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-28 08:15:56	Edifice7	the differance between while and for kind of confuse me, but I prolly can figure it out if I write more
2014-05-28 08:15:56	pawroman	tkinter has this advantage it's included in stdlib ;)
2014-05-28 08:16:16	adorver	yes, it's standard.
2014-05-28 08:16:18	cdunklau	pawroman: uh... that sounds like you're testing requests, not your code
2014-05-28 08:16:19	-->	Macacity (~Macacity@cpe-001a4f1e9770.ip-pool.rftonline.net) has joined #python
2014-05-28 08:16:30	kingplusplus	thanks cdunklau and jwhisnant ...am loving this python modules... so they may have from human import current user print current(user) and it would say my full name if am the one in from of pc and yours if you are
2014-05-28 08:16:36	<--	johnraz (~johnraz@unaffiliated/johnraz) has quit (Read error: Connection reset by peer)
2014-05-28 08:16:36	cdunklau	ooohh i think i get it
2014-05-28 08:16:37	[Tritium]	skinux: uh, it is version specific.  Its 2.7.  python-pip3 is for python3
2014-05-28 08:16:42	<--	eiyalx (~U@anon-36-148.vpn.ipredator.se) has quit (Quit: Leaving)
2014-05-28 08:16:48	<--	jeffreylevesque (~jeffreyle@70-33-147-5.unassigned.ntelos.net) has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
2014-05-28 08:16:53	-->	johnraz (~johnraz@unaffiliated/johnraz) has joined #python
2014-05-28 08:17:01	-->	nemesit|znc (~nemesit|z@84.200.7.95) has joined #python
2014-05-28 08:17:23	cdunklau	kingplusplus: also i strongly recommend you stop using tab characters in your source code
2014-05-28 08:17:26	adorver	Kwpolska: Thank you for your advice. then I use another toolkit.
2014-05-28 08:17:28	[Tritium]	skinux: and either way, the pips shipped with ubuntu are dangerously out of date.  Install pip yourself with the get-pip.py script, calling it with --user
2014-05-28 08:17:38	adorver	like pygtk
2014-05-28 08:17:41	Yhg1s	Or better yet, don't use pip outside of virtualenvs.
2014-05-28 08:17:41	<--	randomshop (~Random@220-244-125-22.static.tpgi.com.au) has quit (Ping timeout: 265 seconds)
2014-05-28 08:17:45	<--	johnraz (~johnraz@unaffiliated/johnraz) has quit (Read error: Connection reset by peer)
2014-05-28 08:17:49	kingplusplus	cdunklau, ok noted, i just mix it
2014-05-28 08:18:01	adorver	Nemo also created by C and GTK.
2014-05-28 08:18:11	-->	juantwo (juantwo@nat/rackspace/x-rafwjcvotxaynavq) has joined #python
2014-05-28 08:18:13	skinux	Thank You!! Grr...could have been using 3.0 specifically.
2014-05-28 08:18:15	pawroman	cdunklau: so, would it be wiser to test only things responsible for preparing POST data and not the whole thing, with requests underlying?
2014-05-28 08:18:19	-->	jvasallo (~Adium@199.195.244.30) has joined #python
2014-05-28 08:18:27	-->	jeffreylevesque (~jeffreyle@70-33-147-5.unassigned.ntelos.net) has joined #python
2014-05-28 08:18:36	[Tritium]	Yhg1s: still a good idea to have --user installs of both, so virtualenvs are created with reasonably up to date versions
2014-05-28 08:18:48	<--	benoitbb (~benoitbb@token.novapost.net) has quit (Quit: Quitte)
2014-05-28 08:18:50	-->	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has joined #python
2014-05-28 08:18:51	cdunklau	pawroman: yes
2014-05-28 08:19:09	Kwpolska	adorver: I was gone for some time, here comes the rationale: tkinter is ugly, and is not interoperating with anything.  Tk is considered ancient by most.
2014-05-28 08:19:14	-->	bnmalcabis (~benjy@190.233.117.65) has joined #python
2014-05-28 08:19:31	-->	satyajit (~satyajit@114.143.157.171) has joined #python
2014-05-28 08:19:35	<--	hartym (~rd@symfony/developer/hartym) has quit (Quit: This computer has gone to sleep)
2014-05-28 08:19:39	[Tritium]	Tk is for really simple one off things
2014-05-28 08:19:41	adorver	Thank you.
2014-05-28 08:19:57	<--	eggsmiao (~cat@117.136.35.18) has quit (Remote host closed the connection)
2014-05-28 08:19:59	Yhg1s	[Tritium]: I'm not sure what you mean. The virtualenv won't use the system version of pip anyway.
2014-05-28 08:20:04	--	diverdude is now known as Guest69177
2014-05-28 08:20:06	pawroman	cdunklau: thanks
2014-05-28 08:20:10	adorver	But I don't know TK is so ugly.
2014-05-28 08:20:10	<--	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has quit (Quit: WeeChat 0.4.2)
2014-05-28 08:20:15	<--	Edifice7 (a7073701@gateway/web/freenode/ip.167.7.55.1) has quit (Quit: Page closed)
2014-05-28 08:20:26	Kwpolska	adorver: So you haven’t done any “hello world” yet?
2014-05-28 08:20:26	 *	pawroman has problems figuring out what "unit" is in unittests
2014-05-28 08:20:38	Yhg1s	pawroman: 'small self-contained portion'.
2014-05-28 08:20:39	-->	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has joined #python
2014-05-28 08:20:40	adorver	I haven't been programming with TK.
2014-05-28 08:20:48	CatKiller	paroman: unit of code I think
2014-05-28 08:20:54	CatKiller	pawroman sorry
2014-05-28 08:21:00	-->	tedoc2000 (~tedoc2000@nat/yahoo/x-nvniwaoccleepumf) has joined #python
2014-05-28 08:21:09	adorver	Kwpolska: Solved problem.
2014-05-28 08:21:14	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-28 08:21:24	pawroman	I've been doing Python for 3+ years now and I still have problems with this
2014-05-28 08:21:34	pawroman	It's a shame to admit...
2014-05-28 08:22:45	CatKiller	not really, lots of (bad) companies don't use unittests
2014-05-28 08:22:57	CatKiller	or any tests at all
2014-05-28 08:23:05	<--	le_tropico (~le_tropic@nat/cisco/x-vvdwvajdrbwpwojm) has quit (Ping timeout: 252 seconds)
2014-05-28 08:23:11	[Tritium]	Yhg1s: calling 'virtualenv foo' does not download a new copy of pip... at least in the versions of virtualenv shipped by ubuntu.  to get recent versions of pip inside your virtualenv, you need recent versions of virtualenv, and that depends on recent versions of pip.  its a vicious cycle.
2014-05-28 08:23:33	-->	mateNz (~mateNz@unaffiliated/matenz) has joined #python
2014-05-28 08:23:37	<--	nanodano (~dtron@99-45-202-166.lightspeed.hstntx.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2014-05-28 08:23:49	[Tritium]	Yhg1s: keeping both in ~/.local solve this cycle
2014-05-28 08:23:54	-->	rippa (~rippa@176.100.246.238) has joined #python
2014-05-28 08:24:09	nido	pawroman: in my case it practically comes down to a test per function. though it can easily be more or less depending on your programming style
2014-05-28 08:24:21	pawroman	hmm, is there a way to create methods out of objects with "__call__"?
2014-05-28 08:24:22	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined #python
2014-05-28 08:24:33	pawroman	I have this client and I want something like:
2014-05-28 08:24:34	<--	Eisenhorn (~juan@unaffiliated/eisenhorn) has quit (Quit: Lost terminal)
2014-05-28 08:24:37	Yhg1s	pawroman: not conveniently.
2014-05-28 08:24:48	Yhg1s	pawroman: the easiest thing to do is just wrap the callables that aren't functions in functions.
2014-05-28 08:24:49	pawroman	payment_start = Endpoint(params=[...], outputs=[...])
2014-05-28 08:25:18	<--	Andyrez (~andyrez@184.164.149.234) has quit (Ping timeout: 240 seconds)
2014-05-28 08:25:21	-->	aberrant (~aberrant@unaffiliated/aberrant) has joined #python
2014-05-28 08:25:31	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-28 08:25:35	pawroman	I see, and why is that?
2014-05-28 08:25:46	pawroman	is that because __call__ cannot be a classmethod?
2014-05-28 08:25:57	FinboySlick	Just to further my understanding.  When I want to use utcfromtimestamp(), I need datetime.datetime.utcfromtimestamp().  I can't seem to be able to do from "datetime import datetime.utcfromtimestamp() as utcfromtimestamp()"  Is that because utcfromtimestamp is a method and not an object?
2014-05-28 08:26:04	--	zz_swebb is now known as swebb
2014-05-28 08:26:07	Yhg1s	pawroman: no, it's because the thing that turns functions into methods, descriptors, is tedious to implement. Much, much easier to just use a function.
2014-05-28 08:26:11	<--	MyMind (~Sembei@unaffiliated/sembei) has quit (Read error: Connection reset by peer)
2014-05-28 08:26:31	Yhg1s	pawroman: see www.python.org/2.2.3/descrintro.html for the description of how it works.
2014-05-28 08:26:40	-->	theshit123 (~theshit@217.217.50.206.dyn.user.ono.com) has joined #python
2014-05-28 08:26:43	pawroman	Yhg1s: thanks man
2014-05-28 08:26:49	-->	eggsmiao (~cat@117.136.19.115) has joined #python
2014-05-28 08:26:51	[Tritium]	pawroman: an object with __call__ is not a function, and therfore is not wrapped on attribute access like a function is.
2014-05-28 08:27:10	Yhg1s	[Tritium]: it can be, if it implements the descriptor protocol like functions do.
2014-05-28 08:27:10	-->	Chaos_Zero (cfc8a313@gateway/web/freenode/ip.207.200.163.19) has joined #python
2014-05-28 08:27:30	 *	[Tritium] ammends
2014-05-28 08:28:01	pawroman	Yhg1s: __get__, __set__ and such?
2014-05-28 08:28:04	[Tritium]	pawroman: an object with __call__ is not a function, and if it lacks __get__, is not wrapped on attribute access like a function is.
2014-05-28 08:28:05	Yhg1s	yes.
2014-05-28 08:28:10	<--	jiku (~jiku@182.71.136.242) has quit (Remote host closed the connection)
2014-05-28 08:28:30	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 08:28:33	Yhg1s	pawroman: implementing it properly means defining a new class that is an 'unbound' or 'bound' version of your class, which remembers the class or the class and the instance it was retrieved for.
2014-05-28 08:28:44	Yhg1s	Just wrapping your callable object in a function is quite a lot easier.
2014-05-28 08:28:45	--	jjmojo^away is now known as jjmojojjmojo
2014-05-28 08:28:46	pawroman	OK, so if I want a very elaborate, statefull "callable" it calls for a descriptor with __call__ method
2014-05-28 08:28:51	Yhg1s	(or just using a closure instead of a class.)
2014-05-28 08:28:57	--	Josse is now known as Josse|eten
2014-05-28 08:29:15	Yhg1s	pawroman: not necessarily. Usually not, even. Just wrapping it in a function is much easier.
2014-05-28 08:29:44	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-137.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 08:29:47	Chaos_Zero	Hello, having an unusual issue. I made a small program to 'ping' a list of network addresses and see which ones are alive using the socket library. I use a simple Thread(target=self.worker(ipaddress) , daemon = False, and started
2014-05-28 08:29:47	<--	rthat (~rthat@159.140.254.99) has quit (Quit: Out for ribs.)
2014-05-28 08:30:02	Chaos_Zero	The problem is that it still seems to do one check at a time
2014-05-28 08:30:16	-->	marscher (~marscher@hawk.imp.fu-berlin.de) has joined #python
2014-05-28 08:30:21	Yhg1s	Chaos_Zero: and what is 'self.worker'?
2014-05-28 08:30:35	Chaos_Zero	at the beginning of the worker thread I print the Ip adress and it just prints one address at a time in the console, instead of printing everything and waiting for all of the returns
2014-05-28 08:30:41	<--	echevemaster (~echevemas@fedora/echevemaster) has quit (Ping timeout: 255 seconds)
2014-05-28 08:30:43	Chaos_Zero	self.worker is the worker method
2014-05-28 08:30:46	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 08:30:53	<--	jeffreylevesque (~jeffreyle@70-33-147-5.unassigned.ntelos.net) has quit (Ping timeout: 264 seconds)
2014-05-28 08:31:00	Yhg1s	Chaos_Zero: so you're calling the worker method, and then starting the thread on the *result* of the worker method. That's probably not what you want.
2014-05-28 08:31:25	-->	amargherio (~MarioEIU@dcfw-a-e021.wnco.com) has joined #python
2014-05-28 08:31:49	marscher	Hi, having a problem to mock out a C-extension for purpose of building sphinx doc on Readthedocs.org. The module is imported relative inside my package and is mocked out by absolute package name and without. But it isn't importable. What is probably wrong?
2014-05-28 08:31:49	<--	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has quit (Quit: Leaving.)
2014-05-28 08:31:58	Chaos_Zero	good point.
2014-05-28 08:31:59	pawroman	Yhg1s: ok, thanks for everything
2014-05-28 08:32:00	Chaos_Zero	heh
2014-05-28 08:32:07	pawroman	g2g now, take care guys
2014-05-28 08:32:07	marscher	btw. I use the mocking pattern from readthedocs faq.#
2014-05-28 08:32:21	Yhg1s	marscher: hard to say without seeing how you're doing the actual mocking.
2014-05-28 08:32:39	theshit123	hi, is anyone using virtualenvwrapper in windows?
2014-05-28 08:32:41	[Tritium]	marscher: are you sure that RTD will compile your c-extension?
2014-05-28 08:33:03	<--	jvasallo (~Adium@199.195.244.30) has quit (Quit: Leaving.)
2014-05-28 08:33:09	deepy	Does anyone know of a python-powered "click here to chat with a person"-ish software?
2014-05-28 08:33:11	[Tritium]	theshit123: not likely, as virtualenvwrapper is a bash script
2014-05-28 08:33:15	marscher	[Tritium], no, thats why i mock it
2014-05-28 08:33:22	marscher	Yhg1s,  http://nopaste.info/37089f3bfa.html
2014-05-28 08:33:34	marscher	thats from my sphinx conf.py
2014-05-28 08:33:50	<--	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Remote host closed the connection)
2014-05-28 08:33:50	marscher	the exception is beeing raised
2014-05-28 08:34:17	[Tritium]	theshit123: you would have to use it in something like cygwin
2014-05-28 08:34:17	<--	Synthead (~max@c-71-231-120-93.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-28 08:34:32	Yhg1s	marscher: and if you just do 'raise' on line 34, so you can see the actual traceback, what does that show?
2014-05-28 08:34:46	[Tritium]	theshit123: at which point your OS is no longer windows, its a posix like layer that happens to run on windows
2014-05-28 08:35:05	<--	dropdrive (~dropdrive@cpe-74-64-106-177.nyc.res.rr.com) has quit (Ping timeout: 264 seconds)
2014-05-28 08:35:12	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-149.dynamic.uwaterloo.ca) has joined #python
2014-05-28 08:35:14	-->	the_rat_ (~the_rat@217.200.185.245) has joined #python
2014-05-28 08:35:22	-->	arosen (~arosen@geni/support/arosen) has joined #python
2014-05-28 08:35:41	arosen	Just curious, why this doesn't return True but 'blah':                 'test' and 'blah'
2014-05-28 08:35:55	-->	dropdrive (~dropdrive@cpe-74-64-106-177.nyc.res.rr.com) has joined #python
2014-05-28 08:35:55	Yhg1s	arosen: because 'and' and 'or' return one of their operands.
2014-05-28 08:36:01	-->	muffer (d849f9f6@gateway/web/freenode/ip.216.73.249.246) has joined #python
2014-05-28 08:36:17	<--	the_rat (~the_rat@217.200.185.249) has quit (Ping timeout: 252 seconds)
2014-05-28 08:36:19	arosen	Yhg1s: ah thanks!
2014-05-28 08:36:20	-->	jvasallo (~Adium@199.195.244.30) has joined #python
2014-05-28 08:36:33	theshit123	[Tritium], ok, i will look all this, thx
2014-05-28 08:36:37	marscher	Yhg1s, that produces non sense
2014-05-28 08:36:46	-->	snyp (~snyp@223.29.204.2) has joined #python
2014-05-28 08:37:09	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 08:37:12	-->	deranged_user (~deranged_@unaffiliated/deranged-user/x-2475585) has joined #python
2014-05-28 08:37:15	marscher	Yhg1s, http://nopaste.info/d6cf325141.html
2014-05-28 08:37:23	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-28 08:37:25	[Tritium]	theshit123: look into cygwin?  ...this is not likely what you want
2014-05-28 08:37:52	marscher	Yhg1s, sorry. I'am doing it wrong, you wanted me to reraise the ImportError
2014-05-28 08:37:53	-->	Banditoo (~xxx@67-0-22-44.albq.qwest.net) has joined #python
2014-05-28 08:37:57	Yhg1s	marscher: yes.
2014-05-28 08:38:10	<--	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has quit (Quit: away)
2014-05-28 08:38:16	[Tritium]	theshit123: it would be far less painful to use a virtual machine than cygwin.
2014-05-28 08:38:29	-->	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has joined #python
2014-05-28 08:39:07	<--	eggsmiao (~cat@117.136.19.115) has quit (Remote host closed the connection)
2014-05-28 08:39:08	muffer	can someone help me with a global variable scope issue? i keep getting an error that my auth variable has not been definedi'm not sure where i need to declare the global variable "auth" in my script... http://pastebin.com/2ThCcY4j
2014-05-28 08:39:09	infobob	http://paste.pound-python.org/show/PUPy5h6tFpeddVC8kXNh/ (repasted for muffer)
2014-05-28 08:39:13	deranged_user	anyone here able to point me to something that will allow me to request an ssl cert from the client without automatically trying to validate it? the std lib will only ask the client for one if you specify CERT_OPTIONAL or CERT_REQUIRED, both of which will automatically try to validate the cert and will exception on failed validation
2014-05-28 08:39:26	marscher	Yhg1s, http://nopaste.info/f5c364d5d6.html
2014-05-28 08:39:28	-->	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 08:39:34	cdunklau	muffer: full traceback please
2014-05-28 08:39:57	<--	redeemed (m@nat/ibm/x-yllnccxwhydapfzh) has quit (Ping timeout: 276 seconds)
2014-05-28 08:40:00	[Tritium]	deranged_user: ...to what end do you wish to request a cert?
2014-05-28 08:40:28	-->	the_rat (~the_rat@217.200.185.229) has joined #python
2014-05-28 08:40:28	deranged_user	[Tritium]: what do you mean? I want the server to request a cert from the client
2014-05-28 08:40:30	cdunklau	muffer: but just by looking at it, i can see that auth won't be defined if confirm == "YES"
2014-05-28 08:40:38	<--	mordonez (~mordonez@190.102.132.14) has quit (Quit: Computer has gone to sleep.)
2014-05-28 08:40:56	[Tritium]	deranged_user: I understand what you are asking for, but I am asking why this is something you want to do
2014-05-28 08:41:05	-->	mordonez (~mordonez@190.102.132.13) has joined #python
2014-05-28 08:41:10	cdunklau	muffer: you'll need to move the `global auth` statment to the top of the function
2014-05-28 08:41:16	deranged_user	[Tritium]: I know what I'm doing, don't you worry about why I want to :)
2014-05-28 08:41:21	cdunklau	muffer: or better yet, don't use global at all
2014-05-28 08:41:23	--	Josse|eten is now known as Josse
2014-05-28 08:41:25	--	Joost`away is now known as Joost
2014-05-28 08:41:36	-->	kahtahs_ (~kahtahs@unaffiliated/shathak) has joined #python
2014-05-28 08:41:39	marscher	both absolute and relative names are mocked out, so I do not have any clue, why this does not work :(
2014-05-28 08:41:39	-->	introom (~introom@dmf124.resnet.ust.hk) has joined #python
2014-05-28 08:41:52	<--	rockyrock (~rockyrock@unaffiliated/rockyrock) has quit (Quit: rockyrock)
2014-05-28 08:41:53	[Tritium]	deranged_user: ... alrighty then.
2014-05-28 08:42:11	<--	mordonez (~mordonez@190.102.132.13) has quit (Client Quit)
2014-05-28 08:42:14	Yhg1s	marscher: hmm. It looks like the import on line 18 of your traceback ('import coordinates') is being treated like an absolute import. Can you make emma2/coordinates/__init__.py do, say, 'print __name__' before the 'from . import tica'? What name does that print?
2014-05-28 08:42:29	<--	Joost (~Joost@unaffiliated/joost) has left #python
2014-05-28 08:42:30	<--	mijicd (~mijicd@cable-188-246-37-245.dynamic.kdsinter.net) has quit (Remote host closed the connection)
2014-05-28 08:42:38	-->	mordonez (~mordonez@190.102.132.14) has joined #python
2014-05-28 08:42:58	-->	lauracr (~lauracr@199.47.79.34) has joined #python
2014-05-28 08:43:31	<--	the_rat_ (~the_rat@217.200.185.245) has quit (Ping timeout: 252 seconds)
2014-05-28 08:43:45	marscher	Yhg1s, emma2.coordinates
2014-05-28 08:43:47	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 08:44:00	<--	jvasallo (~Adium@199.195.244.30) has quit (Quit: Leaving.)
2014-05-28 08:44:03	<--	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has quit (Remote host closed the connection)
2014-05-28 08:44:19	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 08:44:21	[Tritium]	deranged_user: if this is even possible, and I dont know why it would be possible as it defeats the purpose, you would need deeper hooks into openssl than python's ssl module provides.  look into pyopenssl
2014-05-28 08:44:26	-->	echevemaster (~echevemas@fedora/echevemaster) has joined #python
2014-05-28 08:44:37	muffer	neither declaring the global var at the beinginng of the function and removing the global declaration  worked
2014-05-28 08:44:51	Yhg1s	marscher: hm. Strange. And in the except block, does sys.modules['emma2.coordinates.cocovar'] actually exist?
2014-05-28 08:44:57	muffer	not sure how to use full traceback
2014-05-28 08:45:03	-->	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has joined #python
2014-05-28 08:45:03	muffer	looking into it
2014-05-28 08:45:17	<--	kahtahs (~kahtahs@unaffiliated/shathak) has quit (Ping timeout: 264 seconds)
2014-05-28 08:45:22	deranged_user	[Tritium]: I just find it peculiar that CERT_NONE does not request a certificate and doesn't validate any but CERT_OPTIONAL will not request but will validate and CERT_REQUIRED will request and validate
2014-05-28 08:45:27	deranged_user	[Tritium]: there's no "request but not validate"
2014-05-28 08:45:36	cdunklau	muffer: the full traceback just means the stuff that python dumps at you when you get errors
2014-05-28 08:45:43	<--	thomi (quassel@conference/canonical/x-cbndhyvwytzttqnh) has quit (Ping timeout: 265 seconds)
2014-05-28 08:45:50	cdunklau	muffer: starts with "Traceback: most recent call list" or something similar
2014-05-28 08:45:57	<--	freeman_u (~freeman_u@gw.quart-soft.net) has quit (Quit: Leaving.)
2014-05-28 08:46:13	muffer	ah, ok
2014-05-28 08:46:17	[Tritium]	deranged_user: because an invalid certificate is either a misconfiguration or someone trying something naughty
2014-05-28 08:46:37	deranged_user	[Tritium]: or a personal application who's cert you already know?
2014-05-28 08:46:44	<--	adorver (~adorver@58.125.237.138) has quit (Quit: Leaving)
2014-05-28 08:46:59	[Tritium]	deranged_user: then sign the cert with a common trusted private CA
2014-05-28 08:47:16	aberrant	is there a quick, intuitive way to AND a list of boolean elements?
2014-05-28 08:47:17	-->	araujo (~araujo@gentoo/developer/araujo) has joined #python
2014-05-28 08:47:18	deranged_user	[Tritium]: my understanding is that the client's provided cert is what is used to share the symmetric key with the client, ergo if they don't actually have the related private key, they can't do anything
2014-05-28 08:47:18	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-28 08:47:29	<--	EPG (~EPG@pC19EA0F5.dip0.t-ipconnect.de) has quit (Quit: EPG)
2014-05-28 08:47:30	marscher	Yhg1s, as expected: <Mock object at 0x2ada410>
2014-05-28 08:47:40	deranged_user	[Tritium]: ergo taking a hash of the cert, storing it locally and comparing to a hash of the cert they send you would work fine
2014-05-28 08:47:40	Avaris	aberrant: all()?
2014-05-28 08:47:48	muffer	cdunklau: http://pastebin.com/B7EMiYKv
2014-05-28 08:47:49	infobob	http://paste.pound-python.org/show/m90gKnayYPFAdfDaFsFE/ (repasted for muffer)
2014-05-28 08:47:51	deranged_user	[Tritium]: far less cumbersome than certifcate signing
2014-05-28 08:47:52	aberrant	Avaris: never heard of all() - googling. thanks.
2014-05-28 08:47:55	<--	dropdrive (~dropdrive@cpe-74-64-106-177.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-28 08:47:56	-->	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined #python
2014-05-28 08:47:59	muffer	cdunklau: traceback at top
2014-05-28 08:47:59	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 08:48:12	aberrant	huh.
2014-05-28 08:49:10	-->	jkyle (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-28 08:49:20	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-149.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 08:49:28	aberrant	Avaris: cool. thank you,.
2014-05-28 08:49:38	<--	garethdaine (~garethdai@82-69-76-1.dsl.in-addr.zen.co.uk) has quit (Ping timeout: 240 seconds)
2014-05-28 08:49:45	<--	LeMike (~Thunderbi@firewall.code-x.de) has quit (Ping timeout: 252 seconds)
2014-05-28 08:50:05	<--	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-05-28 08:50:07	Yhg1s	marscher: I'm afraid when mocking like this you also have to assign the module to the package it should be part of. So, 'emma2.coordinates.cocovar = sys.modules['emma2.coordinates.cocovar']'. It's because of the explicit-relative import, but it's a good idea regardless.
2014-05-28 08:50:11	<--	quetzakubica (~redsky@94.42.194.58) has quit (Quit: Leaving.)
2014-05-28 08:50:12	<--	dumdedum (~dumdedum@85.251.33.42.dyn.user.ono.com) has quit (Quit: foo)
2014-05-28 08:50:19	-->	lad13371 (~Adium@212.12.46.3) has joined #python
2014-05-28 08:50:39	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Quit: aljohri)
2014-05-28 08:50:41	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-28 08:50:54	[Tritium]	deranged_user: I really dont get what you are trying to do (or rather, I know what you are trying to do and dont understand why), but to do it, you will need to get deeper hooks into openssl.  pyopenssl is the package that does this
2014-05-28 08:51:28	<--	jnoob22 (~jnoob@c-76-25-106-67.hsd1.co.comcast.net) has quit (Remote host closed the connection)
2014-05-28 08:51:28	deranged_user	[Tritium]: alright, cheers
2014-05-28 08:51:31	Yhg1s	marscher: of course you ca'nt do this without importing emma2.coordinates, which imports the thing that tries to import emma2.coordinates.cocovar, which is a bit of a problem. There are some ways around this, but they're not easy, I'm afraid.
2014-05-28 08:51:46	<--	mk3548208 (chatzilla@122.241.80.169) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 29.0.1/20140506152807])
2014-05-28 08:51:48	MentalAtrophy	If anybody finds this sort of stuff interesting, I made a simple viewer window for my work-in-progress random dungeon generator: https://dl.dropboxusercontent.com/u/87770923/DungeonViewer.zip
2014-05-28 08:51:53	<--	mishok13 (~mishok13@092-111-145-057.static.chello.nl) has quit (Ping timeout: 264 seconds)
2014-05-28 08:51:53	Yhg1s	(they involve importing cocovar in emma2.coordiantes, or not using explicit relative imports, or making the imports conditional.)
2014-05-28 08:52:03	Yhg1s	marscher: personally I'm quite fond of not using relative imports at all.
2014-05-28 08:52:03	MentalAtrophy	Windows, because it's been cx_freeze'd.
2014-05-28 08:52:08	<--	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has quit (Remote host closed the connection)
2014-05-28 08:52:12	<--	Deesl (bsdboy@redhat/deesl) has quit (Ping timeout: 240 seconds)
2014-05-28 08:52:26	-->	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has joined #python
2014-05-28 08:52:30	marscher	Yhg1s, so how do you avoid name collisions, when not using relative imports?
2014-05-28 08:52:33	-->	cornfeedhobo (~cornfeedh@unaffiliated/cornfeed) has joined #python
2014-05-28 08:52:47	MentalAtrophy	Arrow keys and middle mouse move the viewport.  Esc returns to the title scene.
2014-05-28 08:52:48	-->	caleb_ (textual@nat/rackspace/x-wvngxuvcklmvpaky) has joined #python
2014-05-28 08:52:57	[Tritium]	marscher: by using the full path to the module
2014-05-28 08:52:57	cornfeedhobo	can someone tell me how i might test if setuptools is installed properly?
2014-05-28 08:53:04	Yhg1s	marscher: I'm not sure how you think relative imports avoid name collisions.
2014-05-28 08:53:11	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Remote host closed the connection)
2014-05-28 08:53:12	Kwpolska	marscher: relative imports = import x.y.z, can’t really do much conflicts
2014-05-28 08:53:13	The-Compiler	I have an argspec from inspect.getfullargspec and want to get a mapping of arguments with a default value to the value. So basically I have args = ['foo', 'bar', 'baz'] and defaults = [1, 2] and want {'bar': 1, 'baz': 2}. How would I do that?
2014-05-28 08:53:13	marscher	Yhg1s, :)
2014-05-28 08:53:20	Kwpolska	marscher: absolute imports*
2014-05-28 08:53:25	<--	satyajit (~satyajit@114.143.157.171) has quit (Remote host closed the connection)
2014-05-28 08:53:37	marscher	should read pep328 again I guess
2014-05-28 08:53:48	<--	Chaos_Zero (cfc8a313@gateway/web/freenode/ip.207.200.163.19) has quit (Ping timeout: 240 seconds)
2014-05-28 08:53:50	The-Compiler	cornfeedhobo: I guess you could just import it and see if it raises ImportError or not?
2014-05-28 08:54:02	-->	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has joined #python
2014-05-28 08:54:09	<--	lad1337 (~Adium@212.12.46.3) has quit (Ping timeout: 252 seconds)
2014-05-28 08:54:12	<--	Azulinho (~weechat@62.254.184.134) has quit (Quit: WeeChat 0.4.3)
2014-05-28 08:54:36	<--	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has quit (Ping timeout: 240 seconds)
2014-05-28 08:54:38	<--	lad13371 (~Adium@212.12.46.3) has quit (Ping timeout: 240 seconds)
2014-05-28 08:54:41	cornfeedhobo	The-Compiler: thats what i thought. is it just called 'setuptools'
2014-05-28 08:54:49	cornfeedhobo	i.e.  `import setuptools`
2014-05-28 08:54:52	The-Compiler	cornfeedhobo: yep
2014-05-28 08:55:00	cornfeedhobo	ok. thanks
2014-05-28 08:55:17	[Tritium]	wont that also import distribute if that is installed instead?
2014-05-28 08:55:21	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 08:55:22	-->	dropdrive (~dropdrive@cpe-74-64-106-177.nyc.res.rr.com) has joined #python
2014-05-28 08:55:23	The-Compiler	hm, I guess I can do dict(zip(reversed(['foo', 'bar', 'baz']), reversed([1,2])))
2014-05-28 08:55:24	marscher	so in python2.7 to use absolute imports I import absolute_import from __future__, right?
2014-05-28 08:55:39	The-Compiler	marscher: from __future__ import absolute_import
2014-05-28 08:55:42	jwhisnant	The-Compiler: how do you know which defaults match with which args (in your two list example)?  inspect maybe fragile, curious what you are are trying to do ...
2014-05-28 08:56:19	muffer	can someone help me with a global variable scope issue? i keep getting an error that my auth variable has not been definedi'm not sure where i need to declare the global variable "auth" in my script... http://pastebin.com/vesb8jdg    traceback at bottom
2014-05-28 08:56:20	infobob	http://paste.pound-python.org/show/DqV2PuGftS0rTP619VAB/ (repasted for muffer)
2014-05-28 08:56:21	[Tritium]	marscher: using the full path to the module has been supported since 1.0 (iirc)
2014-05-28 08:56:22	-->	vandrew (~vandrew@86.122.229.114) has joined #python
2014-05-28 08:56:26	-->	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has joined #python
2014-05-28 08:56:36	The-Compiler	jwhisnant: they just match from the right ("if this tuple has n elements, they correspond to the last n elements listed in args.")
2014-05-28 08:56:38	-->	softwaredoug (~quassel@216.30.179.168) has joined #python
2014-05-28 08:56:38	-->	Mellified_Man (~Mellified@eddie.mellified.com) has joined #python
2014-05-28 08:56:52	cornfeedhobo	The-Compiler: what about python-imaging?  would that be the same deal? `import imaging' ?
2014-05-28 08:56:55	[Tritium]	`import package.subpackage.module.object` has and will always work
2014-05-28 08:56:59	Yhg1s	cornfeedhobo: 'import PIL'.
2014-05-28 08:57:12	Yhg1s	[Tritium]: only if the 'object' at the end is also a module.
2014-05-28 08:57:18	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Ping timeout: 240 seconds)
2014-05-28 08:57:19	cornfeedhobo	Yhg1s:  thanks :)
2014-05-28 08:57:19	Pici	muffer: Why do you need to to be a global? Just make sure that it has a value in case the "while confirm != "YES":" code does not get evaluated.
2014-05-28 08:57:21	jwhisnant	cornfeedhobo: or Pillow, which may be a better maintained fork of PIL (IIUC)
2014-05-28 08:57:30	Yhg1s	jwhisnant: the module it installs is still 'PIL'.
2014-05-28 08:57:43	The-Compiler	jwhisnant: I have special methods marked as command handlers (which I can execute as commands from my application), and want to generate a manpage based on their docstrings
2014-05-28 08:57:47	Yhg1s	[Tritium]: packages weren't added until Python 1.4 or so.
2014-05-28 08:57:51	[Tritium]	Yhg1s: (re: pil) sometimes.
2014-05-28 08:58:05	cornfeedhobo	jwhisnant: yeah, i have to patch opencv because that pillow mixup
2014-05-28 08:58:08	[Tritium]	ahh, but they have been in python for a long time none the less
2014-05-28 08:58:11	-->	codeitloadit (~codeitloa@wsip-68-225-25-202.oc.oc.cox.net) has joined #python
2014-05-28 08:58:55	Yhg1s	[Tritium]: 'sometimes'? It's explicitly documented to be that way: http://pillow.readthedocs.org/en/latest/porting-pil-to-pillow.html
2014-05-28 08:59:00	marscher	well, then the order of importing the submodules really matters, right? because now then I imported cocovar absolutely, I get the error that the subpackage (coordinates) is not yet know.
2014-05-28 08:59:15	muffer	got it, thanks Pici
2014-05-28 08:59:22	Yhg1s	marscher: how did you import it absolutely, and what was the actual traceback you got?
2014-05-28 08:59:24	stack	what is the way to open a tempfile with tempfile.mktemp and then unlink it the python way?
2014-05-28 08:59:37	Yhg1s	stack: tempfile.TemporaryFile()
2014-05-28 08:59:49	marscher	in tica.py: import emma2.coordinates.cocovar as cocovar
2014-05-28 09:00:02	stack	Yhg1s: does that unlinks it after?
2014-05-28 09:00:04	<--	caleb_ (textual@nat/rackspace/x-wvngxuvcklmvpaky) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 09:00:07	marscher	tb:  import emma2.coordinates.cocovar as cocovar \n AttributeError: 'module' object has no attribute 'coordinates'
2014-05-28 09:00:11	stack	maybe I should read the api
2014-05-28 09:00:12	Yhg1s	stack: it doesn't even link it.
2014-05-28 09:00:18	[Tritium]	Yhg1s: sometimes, pil as packaged by distros, the top level package is Image, not PIL.  thus pillow fixing it to always be PIL
2014-05-28 09:00:27	Yhg1s	marscher: 'from emma2.coordinates import cocovar'.
2014-05-28 09:00:52	jwhisnant	stack: StringIO and friends may also be of interest if "a file in memory" is ok for your purposes
2014-05-28 09:00:59	<--	mrj (~textual@unaffiliated/vty) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 09:01:01	-->	shn228 (~json@cpc19-dals19-2-0-cust8.20-2.cable.virginm.net) has joined #python
2014-05-28 09:01:08	-->	mitch-_ (~mitch@173.sub-70-198-68.myvzw.com) has joined #python
2014-05-28 09:01:27	-->	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has joined #python
2014-05-28 09:01:39	stack	I was considering something as with open(mktemp('.ext'),"w+b") as tmp
2014-05-28 09:01:41	<--	rquid (~sashka@94.41.177.225) has quit (Quit: Leaving.)
2014-05-28 09:01:45	mitch-_	Has anyone ever had the error "ImportError: No module named shared.exc" when trying to run a python script that uses openpyxl to read xlsx files??
2014-05-28 09:01:48	<--	Asandari (~Asandari@24-246-55-220.cable.teksavvy.com) has quit (Ping timeout: 240 seconds)
2014-05-28 09:01:51	stack	but then I have to unlink it regarding of open state and exceptions
2014-05-28 09:01:53	Yhg1s	[Tritium]: ... no, that's not what happened. The mistake is that *PIL*, not Pillow, isn't just 'PIL'. By original PIL design, in fact; PIL installs a 'PIL' package and a .pth file that adds the directory of the PIL package to sys.path, so you can import the contents of the PIL package directly (Image, _imaging, etc.) This is a horrible mistake, for many reasons, and Pillow fixed it.
2014-05-28 09:02:02	Yhg1s	[Tritium]: it had nothing to do with distro packaging.
2014-05-28 09:02:06	marscher	Yhg1s, but isn't that like a "relative" import too, in the sense that it would be hard to mock it?
2014-05-28 09:02:12	-->	hidensoft (~dani@unaffiliated/hidensoft) has joined #python
2014-05-28 09:02:22	stack	I was wondering if there was a way more pythonic than checking for tmp state and catching after the with statement
2014-05-28 09:02:23	marscher	now tb is: rom emma2.coordinates import cocovar \n ImportError: cannot import name cocovar
2014-05-28 09:02:30	<--	Mellified_Man (~Mellified@eddie.mellified.com) has quit (Quit: ZNC - http://znc.in)
2014-05-28 09:02:34	-->	jvasallo (~Adium@199.195.244.30) has joined #python
2014-05-28 09:02:35	Yhg1s	marscher: no, it's an absolute import.
2014-05-28 09:02:35	marscher	s/rom/from/
2014-05-28 09:02:52	<--	CB4 (~cb4@50.7.31.18) has quit
2014-05-28 09:02:54	Yhg1s	marscher: as for 'hard to mock', that's the case for anything that doesn't just do 'import emma2.coordinates.cocovar'.
2014-05-28 09:03:05	jwhisnant	muffer: it looks like you are writing deployment scripts - if you have a need for more of these sorts of things; you may want to look at fabric and/or ansible
2014-05-28 09:03:20	Yhg1s	marscher: what's the new code and the full traceback?
2014-05-28 09:03:39	-->	rockyrock (~rockyrock@unaffiliated/rockyrock) has joined #python
2014-05-28 09:03:42	[Tritium]	Yhg1s: I couldn't imagine a world where that was done on purpose
2014-05-28 09:03:52	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 09:04:00	Yhg1s	[Tritium]: welcome to early Python, and effbot's mind.
2014-05-28 09:04:30	-->	tilgovi (~randall@couchdb/committer/tilgovi) has joined #python
2014-05-28 09:04:44	stack	ok ignore me, that was easy
2014-05-28 09:04:48	-->	jeffisabelle (~jeffisabe@85.110.126.115) has joined #python
2014-05-28 09:04:58	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-28 09:05:20	<--	intuxicated (~dani@unaffiliated/hidensoft) has quit (Ping timeout: 255 seconds)
2014-05-28 09:05:29	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 09:05:47	[Tritium]	stack: if, in the future, you are going to use temp files, use the TemporaryFile class in a with statement
2014-05-28 09:05:48	-->	felipeduardo (~felipedua@189.115.4.196) has joined #python
2014-05-28 09:05:48	marscher	Yhg1s, full tb: http://nopaste.info/bc2d309d6b.html, tica.py: from emma2.coordinates import cocovar
2014-05-28 09:06:00	-->	newke (~newke@88-223-71-157.meganet.lt) has joined #python
2014-05-28 09:06:01	Yhg1s	marscher: and the mocking code?
2014-05-28 09:06:07	marscher	Yhg1s, didnt change
2014-05-28 09:06:15	-->	SebSemmi (~SebSemmi@e178193149.adsl.alicedsl.de) has joined #python
2014-05-28 09:06:16	Yhg1s	hmm.
2014-05-28 09:06:17	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 09:06:18	muffer	jwhisnant: thanks for take a look.  will definitely take a look at those.
2014-05-28 09:06:25	<--	jvasallo (~Adium@199.195.244.30) has left #python
2014-05-28 09:06:29	Yhg1s	marscher: and if you just do 'import emma2.coordinates.cocovar' instead?
2014-05-28 09:06:38	Yhg1s	(in tica.py)
2014-05-28 09:06:51	newke	how to define variable in __init__ which is empty at first and changes to integer only after function is called?
2014-05-28 09:06:56	marscher	also tried that, yields attribute error
2014-05-28 09:07:03	-->	shurr (~hibudeva@219.Red-213-98-52.staticIP.rima-tde.net) has joined #python
2014-05-28 09:07:06	shurr	bpython vs ipython
2014-05-28 09:07:07	Yhg1s	marscher: strange.
2014-05-28 09:07:11	-->	kushal (~kdas@fedora/kushal) has joined #python
2014-05-28 09:07:12	stack	[Tritium]: why not mktemp method?
2014-05-28 09:07:23	Yhg1s	stack: tempfile.TemporaryFile does more for you.
2014-05-28 09:07:37	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 09:07:48	<--	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has quit (Ping timeout: 240 seconds)
2014-05-28 09:07:48	Yhg1s	newke: give it some other value before the function is called. Something like None.
2014-05-28 09:07:54	stack	ok
2014-05-28 09:07:56	-->	bwreilly (~bwreilly@66.193.98.226) has joined #python
2014-05-28 09:08:03	newke	oh thanks
2014-05-28 09:08:10	stack	could I give the file an extension?
2014-05-28 09:08:12	<--	dumby_PC (~dumby@204.246.140.162) has quit (Ping timeout: 240 seconds)
2014-05-28 09:08:25	-->	draggie (~drag@wsip-68-225-82-76.hr.hr.cox.net) has joined #python
2014-05-28 09:08:28	[Tritium]	stack: Use of this function may introduce a security hole in your program. By the time you get around to doing anything with the file name it returns, someone else may have beaten you to the punch.
2014-05-28 09:08:35	<--	admin0 (~admin0@77.95.99.166) has left #python
2014-05-28 09:08:38	[Tritium]	stack: thats from the docs
2014-05-28 09:08:38	draggie	I'm trying to print text on the same line in python 3.4.  Reading the docs, I can do this with print('text', end='').  However, if I leave end blank, nothing prints.  Why is that?
2014-05-28 09:08:52	draggie	Is there another way I can accomplish what I want?
2014-05-28 09:08:53	stack	ok thanks
2014-05-28 09:08:59	-->	Asandari (~Asandari@24-246-55-220.cable.teksavvy.com) has joined #python
2014-05-28 09:08:59	-->	Mellified_Man (~Mellified@eddie.mellified.com) has joined #python
2014-05-28 09:09:04	-->	gocho (~Icedove@105.48.61.215) has joined #python
2014-05-28 09:09:14	-->	calvinx (~calvinx@216.131.64.46) has joined #python
2014-05-28 09:09:23	-->	oracleDBA (~oracleDBA@67.sub-70-194-201.myvzw.com) has joined #python
2014-05-28 09:09:32	<--	oracleDBA (~oracleDBA@67.sub-70-194-201.myvzw.com) has quit (Client Quit)
2014-05-28 09:09:51	<--	nemesit|znc (~nemesit|z@84.200.7.95) has quit (Ping timeout: 276 seconds)
2014-05-28 09:10:00	marscher	Yhg1s, i think of an workaround of not importing the extension at the top of the module but on request, when it is used. would be the simplest solution i can think of
2014-05-28 09:10:08	[Tritium]	shurr: bipython (its a thing)
2014-05-28 09:10:17	<--	jooools (~ejulfit@194.237.142.17) has quit (Quit: Leaving.)
2014-05-28 09:10:28	Yhg1s	marscher: yes.
2014-05-28 09:10:46	[Tritium]	shurr: it removes the choice by being both.  it is being developed by the developers of ipython and bpython
2014-05-28 09:10:48	shurr	I think I prefer bpython to ipython.
2014-05-28 09:11:02	-->	marr (~ccc@78.10.73.191) has joined #python
2014-05-28 09:11:15	<--	gocho (~Icedove@105.48.61.215) has quit (Client Quit)
2014-05-28 09:11:34	jwhisnant	[Tritium]: interesting - I did not know there was a bipython, biopython is a thing also :)
2014-05-28 09:11:50	<--	wong2 (~wong2@117.79.232.207) has quit (Quit: wong2)
2014-05-28 09:11:59	[Tritium]	jwhisnant: watch the lightning talks from pycon 2014 :)
2014-05-28 09:12:11	<--	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-28 09:12:19	<--	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 09:12:24	shurr	ah I did not knew
2014-05-28 09:12:29	introom	[Tritium]: so you are referring to bipython?
2014-05-28 09:12:38	shurr	So I guess bipython will be python3 rite?
2014-05-28 09:12:42	--	hidensoft is now known as intuxicated
2014-05-28 09:12:47	-->	averagecase (~av@cl-3825.cgn-01.de.sixxs.net) has joined #python
2014-05-28 09:12:56	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 09:13:03	KingInTheNorth	Guys this might be stupid but...I know the basics of python(Been learning for a month or two), but I don't know what to do now. Should I work on Django? I honestly have no idea
2014-05-28 09:13:14	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 09:13:16	Leeds	KingInTheNorth: why are you learning it?
2014-05-28 09:13:19	-->	EPG (~EPG@pC19EA0F5.dip0.t-ipconnect.de) has joined #python
2014-05-28 09:13:42	-->	cewing (~cewing@97-113-30-194.tukw.qwest.net) has joined #python
2014-05-28 09:14:01	KingInTheNorth	That's a good question. Huh.
2014-05-28 09:14:14	[Tritium]	introom: Its... not ready for production yet.  But it is now my stock answer to "bpython or ipython?".  I want more people interested so I get a ready-for-production version heh
2014-05-28 09:14:20	--	cmheisel is now known as cmheisel|away
2014-05-28 09:14:29	newke	question. if i change __init__ variable and i have 1 variable which is set to same class function which calculates using other __init__ variables, will calculation change after i change variables?
2014-05-28 09:14:31	-->	jorgev (~jorgev@rrcs-67-52-158-66.west.biz.rr.com) has joined #python
2014-05-28 09:14:35	[Tritium]	shurr: I dont know, that is not a requirement for me
2014-05-28 09:14:45	Pici	__init__ is not a variable...
2014-05-28 09:14:59	Yhg1s	newke: it would probably help if you showed us the code you were talking about.
2014-05-28 09:15:06	newke	oh i should set inside variables :D
2014-05-28 09:15:10	-->	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has joined #python
2014-05-28 09:15:17	-->	chhantyal (~neo@175.100.142.207) has joined #python
2014-05-28 09:15:19	Leeds	KingInTheNorth: I didn't mean that as a trick question - but it sounds like you think you're far enough to do something real, so the question is what do you want to do
2014-05-28 09:15:24	<--	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2014-05-28 09:15:28	-->	hellhound (~hellhound@unaffiliated/hellhound) has joined #python
2014-05-28 09:15:41	-->	nemesit|znc (~nemesit|z@84.200.7.95) has joined #python
2014-05-28 09:15:42	-->	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has joined #python
2014-05-28 09:15:50	introom	[Tritium]: heh. it's yours?
2014-05-28 09:15:51	newke	http://paste.org/72648 will this work?
2014-05-28 09:15:54	chhantyal	well, this is may be naive question -- I know dict, but what doesn this means <dict_itemiterator object at 0x1018e3908>? how to inspect this object?
2014-05-28 09:15:57	-->	jorbas (~jorbas@cpc1-gill14-2-0-cust377.basl.cable.virginm.net) has joined #python
2014-05-28 09:16:08	[Tritium]	introom: no. its by the makers of ipython and bpython
2014-05-28 09:16:59	[Tritium]	introom: interest brings motivation, motivation brings progress, progress brings releases, releases bring happy isotopes (Tritium is an isotope)
2014-05-28 09:17:02	Yhg1s	chhantyal: it's an iterator over the items of the dict. You can iterate over it, like any iterable object.
2014-05-28 09:17:07	<--	draggie (~drag@wsip-68-225-82-76.hr.hr.cox.net) has quit (Quit: Leaving)
2014-05-28 09:17:08	hellhound	hey guys, I was wondering if there was a way to mock base implementations on mixins that inherit directly from "object", heres the code snippet http://bpaste.net/show/hEnsiMdNPPJ1aXkZRf6o/
2014-05-28 09:17:12	-->	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has joined #python
2014-05-28 09:17:13	--	cmheisel|away is now known as cmheisel
2014-05-28 09:17:24	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 09:17:30	-->	Edifice7 (a7073701@gateway/web/freenode/ip.167.7.55.1) has joined #python
2014-05-28 09:17:30	hellhound	I want to mock the call to super() on save()
2014-05-28 09:17:46	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 09:17:47	KingInTheNorth	Leeds: Im reading up on what Python is able to do. I've tried doing pygame before, but it just is too different atm for me.
2014-05-28 09:17:48	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Quit: Computer has gone to sleep.)
2014-05-28 09:17:54	[Tritium]	hellhound: there is, but its a really, really bad idea
2014-05-28 09:17:55	chhantyal	Yhg1s: I see thanks.
2014-05-28 09:17:59	Edifice7	can someone look at my nested loop and tell me why my whiles don't work.. http://bpaste.net/show/VdNylaGdvTryHQqI5lIM/
2014-05-28 09:18:20	hellhound	[Tritium]: how come?
2014-05-28 09:18:23	<--	lauracr (~lauracr@199.47.79.34) has quit (Quit: lauracr)
2014-05-28 09:18:32	 *	introom looks up the dict and find tritium is really a basic element.
2014-05-28 09:18:43	<--	LACP (clm@unaffiliated/acpe) has quit (Ping timeout: 240 seconds)
2014-05-28 09:18:46	[Tritium]	hellhound: for one, your mocking out a built in that could be used by the test frameworks themselves.
2014-05-28 09:18:53	Pici	newke: Are you asking if the value of self.targetx will change if you change the vlaue of self.vector automatically?
2014-05-28 09:19:04	newke	yes
2014-05-28 09:19:30	<--	rockyrock (~rockyrock@unaffiliated/rockyrock) has quit (Quit: rockyrock)
2014-05-28 09:19:31	hellhound	[Tritium]: did you look at my code?
2014-05-28 09:19:33	hellhound	[Tritium]: http://bpaste.net/show/hEnsiMdNPPJ1aXkZRf6o/
2014-05-28 09:19:33	<--	bsmt (~i@209.141.41.20) has quit (Ping timeout: 265 seconds)
2014-05-28 09:19:48	-->	gandalfcome (~gandalfco@184.175.4.178) has joined #python
2014-05-28 09:19:48	<--	oubiga (~oubiga@109.225.20.95.dynamic.jazztel.es) has quit (Ping timeout: 258 seconds)
2014-05-28 09:20:02	<--	anddam (~weechat@199.19.224.42) has quit (Ping timeout: 265 seconds)
2014-05-28 09:20:03	<--	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has quit (Read error: Connection reset by peer)
2014-05-28 09:20:12	<--	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has quit (Quit: away)
2014-05-28 09:20:18	[Tritium]	hellhound: mocking out super, no matter what your code looks like, is not a good idea.
2014-05-28 09:20:36	-->	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has joined #python
2014-05-28 09:20:38	<--	sivoais (~zaki@unaffiliated/sivoais) has quit (Ping timeout: 240 seconds)
2014-05-28 09:20:38	hellhound	[Tritium]: not super() per sé
2014-05-28 09:20:38	<--	indigo (~indigo@nullo.me) has quit (Ping timeout: 252 seconds)
2014-05-28 09:20:39	<--	syrius (~syrius@dead.stormtek.net) has quit (Ping timeout: 255 seconds)
2014-05-28 09:20:41	<--	AE7IK (~cyborg@209.141.49.215) has quit (Ping timeout: 264 seconds)
2014-05-28 09:20:42	Pici	newke: If you create an instance of SeekersNest called I, and then later change I.vector, the value of I.targetx will not change.
2014-05-28 09:20:43	<--	bandroidx (~bandroidx@unaffiliated/bandroid) has quit (Ping timeout: 240 seconds)
2014-05-28 09:20:52	-->	adorver (~adorver@58.125.237.138) has joined #python
2014-05-28 09:20:53	-->	nero (~nero@unaffiliated/nero) has joined #python
2014-05-28 09:20:57	<--	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-05-28 09:21:08	<--	adorver (~adorver@58.125.237.138) has quit (Client Quit)
2014-05-28 09:21:30	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 09:21:32	mitch-_	can anyone assist with "openpyxl" for xlsx files?? I get an error that i'm missing a module even though i've installed openpyxl via pip
2014-05-28 09:21:36	-->	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 09:21:36	-->	oubiga (~oubiga@40.3.20.95.dynamic.jazztel.es) has joined #python
2014-05-28 09:21:41	-->	bsmt (~i@209.141.41.20) has joined #python
2014-05-28 09:21:48	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 09:21:51	-->	sivoais (~zaki@unaffiliated/sivoais) has joined #python
2014-05-28 09:21:55	-->	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has joined #python
2014-05-28 09:21:57	hellhound	[Tritium]: but save() from the "apparent" base class
2014-05-28 09:21:59	[Tritium]	hellhound: IF you must mock out something built in, create a local name for super at module scope (like my_super = super) and mock my_super with your testing code.
2014-05-28 09:21:59	-->	indigo (~indigo@nullo.me) has joined #python
2014-05-28 09:22:00	-->	bandroidx (~bandroidx@unaffiliated/bandroid) has joined #python
2014-05-28 09:22:11	<--	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has quit (Quit: Leaving)
2014-05-28 09:22:21	-->	LACP (clm@unaffiliated/acpe) has joined #python
2014-05-28 09:22:27	<--	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has quit (Client Quit)
2014-05-28 09:22:29	newke	so i should use variables outside __init__ if i want them to change automatically?
2014-05-28 09:22:32	[Tritium]	and user my_super instead of super in your code
2014-05-28 09:22:32	hellhound	[Tritium]: no, you got it wrong, I don't want to mock super() exactly
2014-05-28 09:22:40	hellhound	[Tritium]: I want to mock super().save()
2014-05-28 09:22:41	jwhisnant	mitch-_: are you in the same environment as where you installed it; what does pip -f report; paste traceback and how you got there ...
2014-05-28 09:22:46	Yhg1s	newke: variables can't 'change automatically'.
2014-05-28 09:22:49	hellhound	[Tritium]: that's all
2014-05-28 09:22:55	jwhisnant	mitch-_: pip freeze, even
2014-05-28 09:23:02	[Tritium]	hellhound: You will have to mock super to do that.
2014-05-28 09:23:06	hellhound	[Tritium]: but within a mixin that inerits directly from object
2014-05-28 09:23:08	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 09:23:12	-->	scottferg (~scottferg@c-98-226-208-95.hsd1.il.comcast.net) has joined #python
2014-05-28 09:23:16	Yhg1s	newke: you may be interested to learn about properties, though.
2014-05-28 09:23:17	hellhound	[Tritium]: hmm ok
2014-05-28 09:23:30	hellhound	[Tritium]: how can I do that then?
2014-05-28 09:23:32	<--	harobed (~harobed@ANancy-652-1-518-32.w86-197.abo.wanadoo.fr) has quit
2014-05-28 09:24:09	<--	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 276 seconds)
2014-05-28 09:24:12	-->	likecolacola (~likecolac@54.Red-176-84-0.dynamicIP.rima-tde.net) has joined #python
2014-05-28 09:24:14	-->	rquid (~sashka@94.41.177.225) has joined #python
2014-05-28 09:24:15	[Tritium]	hellhound: or mock object, but that is even a worse idea.  To mock super, you should make a local name for super at module scope (like my_super), use my_super instead of super, and mock my_super when testing
2014-05-28 09:24:17	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 264 seconds)
2014-05-28 09:24:19	<--	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has quit (Ping timeout: 240 seconds)
2014-05-28 09:24:35	mitch-_	jwhisnant, one moment while i pastebin this.
2014-05-28 09:24:45	ssbr_at_work	mocking super sounds crazy
2014-05-28 09:24:48	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 09:24:52	likecolacola	python 2.7 bitwise operations are the same as python 3?
2014-05-28 09:25:00	-->	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has joined #python
2014-05-28 09:25:01	jwhisnant	more likely super will mock you, instead
2014-05-28 09:25:04	ssbr_at_work	hellhound: mock out your base class's save method, not super
2014-05-28 09:25:11	-->	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has joined #python
2014-05-28 09:25:17	[Tritium]	ssbr_at_work: the baseclass is object.  this is a mixin
2014-05-28 09:25:23	mitch-_	http://pastebin.com/BjyB2zYT.... that is the output from [pip freeze]
2014-05-28 09:25:24	infobob	http://paste.pound-python.org/show/veWAlmWwdCR54ulNoQ3j/ (repasted for mitch-_)
2014-05-28 09:25:30	hellhound	ssbr_at_work: it's a mixin that inherits directly from object
2014-05-28 09:25:35	shurr	[Tritium]: But we are moving to python3 at some time, right?
2014-05-28 09:25:44	[Tritium]	shurr: maybe.
2014-05-28 09:25:44	ssbr_at_work	hellhound: ok, then replace it on the mixin type
2014-05-28 09:25:47	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 09:26:00	-->	hwrd|work (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 09:26:07	ssbr_at_work	you can @mock.patch('mymodule.MyMixin', save, ret_val=3) or however it worked
2014-05-28 09:26:15	-->	wong2 (~wong2@106.38.245.5) has joined #python
2014-05-28 09:26:21	hellhound	[Tritium]: that's a great idea considering I'll have to degrade my code for testing purposes
2014-05-28 09:26:23	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 09:26:36	<--	tom94 (~tom@152.78.171.10) has quit (Quit: Konversation terminated!)
2014-05-28 09:26:37	ssbr_at_work	return_value
2014-05-28 09:26:46	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2014-05-28 09:26:47	<--	introom (~introom@dmf124.resnet.ust.hk) has quit (Ping timeout: 252 seconds)
2014-05-28 09:26:58	-->	Porkepix_ (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 09:27:04	<--	gandalfcome (~gandalfco@184.175.4.178) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 09:27:05	<--	amargherio (~MarioEIU@dcfw-a-e021.wnco.com) has quit (Disconnected by services)
2014-05-28 09:27:15	[Tritium]	hellhound: follow ssbr's advice
2014-05-28 09:27:27	-->	pozori (~ojr@unaffiliated/pozori) has joined #python
2014-05-28 09:27:31	<--	heavytull (1000@wifi-eduroam-etud-153-91.unilim.fr) has quit (Remote host closed the connection)
2014-05-28 09:27:33	jwhisnant	mitch-_: looks installed; what does python -c 'import openpyxl; print (openpyxl.__version__)' give you?
2014-05-28 09:27:34	-->	gandalfcome (~gandalfco@184.175.4.178) has joined #python
2014-05-28 09:27:49	 *	[Tritium] assumed hellhound wanted to test the mixin while it was not mixed into anything
2014-05-28 09:27:49	-->	cyphase (~cyphase@unaffiliated/cyphase) has joined #python
2014-05-28 09:27:50	ssbr_at_work	well
2014-05-28 09:27:54	ssbr_at_work	don't listen to me exactly
2014-05-28 09:28:05	ssbr_at_work	e.g. that mock.patch line is wrong because i r dumb
2014-05-28 09:28:08	[Tritium]	oh
2014-05-28 09:28:09	mitch-_	2.0.3
2014-05-28 09:28:11	[Tritium]	better idea
2014-05-28 09:28:18	<--	muffer (d849f9f6@gateway/web/freenode/ip.216.73.249.246) has quit (Ping timeout: 240 seconds)
2014-05-28 09:28:22	ssbr_at_work	(mymodule.Mixin.patch)
2014-05-28 09:28:32	[Tritium]	just create a class in your tests that mixes in your mixin and mock save in that test-only class
2014-05-28 09:28:41	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 09:28:44	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Ping timeout: 255 seconds)
2014-05-28 09:28:48	<--	pozori (~ojr@unaffiliated/pozori) has quit (Client Quit)
2014-05-28 09:28:51	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 09:29:04	ssbr_at_work	I like that idea.
2014-05-28 09:29:15	-->	cshell (~cshell@167.220.26.234) has joined #python
2014-05-28 09:29:18	ssbr_at_work	(I'd use mock.patch instead because it's easier once you remember the API)
2014-05-28 09:29:29	ssbr_at_work	(but that's not to say it's better.)
2014-05-28 09:30:43	<--	cjwilburn (~cjwilburn@2607:f470:a:5:3060:26a8:2d9b:73bc) has quit (Ping timeout: 240 seconds)
2014-05-28 09:31:06	-->	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has joined #python
2014-05-28 09:31:12	-->	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has joined #python
2014-05-28 09:31:35	-->	sedeki (~textual@unaffiliated/sedeki) has joined #python
2014-05-28 09:31:48	[Tritium]	shurr: moving to python 3 is non-trivial, and for some projects, companies, and developers, it is not a priority (and in some cases, will never happen.)
2014-05-28 09:32:04	jwhisnant	mitch-_: can you paste your code and traceback then to a pastebin?
2014-05-28 09:32:07	<--	bosie (~bosie@unaffiliated/bosie) has quit (Ping timeout: 265 seconds)
2014-05-28 09:32:50	<--	zemanel (~hanzo@31.6.78.131) has quit (Quit: work session timed out)
2014-05-28 09:32:56	mitch-_	the entire code? i probably cant.... it's for work and i don't own it. makes it a bit harder to troubleshoot as well..
2014-05-28 09:33:06	<--	jleclanche (~adys@unaffiliated/adys) has quit (Remote host closed the connection)
2014-05-28 09:33:14	<--	hwrd|work (~textual@unaffiliated/hwrdprkns) has quit (Ping timeout: 255 seconds)
2014-05-28 09:33:20	<--	includex (~includex@194.65.5.235) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 09:33:24	<--	The-Compiler (~compiler@unaffiliated/the-compiler) has left #python ("WeeChat 1.0-dev")
2014-05-28 09:33:34	<--	chhantyal (~neo@175.100.142.207) has quit (Quit: chhantyal)
2014-05-28 09:33:55	<--	[mda] (~daniel@bas1-newmarket85-3096616480.dsl.bell.ca) has quit (Ping timeout: 240 seconds)
2014-05-28 09:34:07	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-28 09:34:11	newke	so if i make variable in __init__ which equals some calculation of other __init__ variables will result change when i change other vairables?
2014-05-28 09:34:32	mitch-_	i can tell you waht it does.... it reads an xlsx file and creates a gateway config based on the input.....
2014-05-28 09:34:37	jwhisnant	mitch-_: just need the minimal case that reproduces the error; which runs as pasted, not all the code, 2.0.3 seems fairly new, maybe they made a mistake ... what OS?
2014-05-28 09:35:07	mitch-_	I'm on Ubuntu 14.04. it works and is compiled for Windows into an exe.... it also works "as-is" for Mac OSx.
2014-05-28 09:35:15	ELFrederich	isn't there some package on pypi that implements the newer datetime API for older version of Python.  For example, on 2.6 it provides acess to total_seconds() method on timedelta objects?
2014-05-28 09:35:16	<--	deranged_user (~deranged_@unaffiliated/deranged-user/x-2475585) has left #python
2014-05-28 09:35:25	mitch-_	so i feel like i'm missing something in my python (for lack of a better word) library
2014-05-28 09:35:28	-->	OverNord (~brn@host-091-097-122-251.ewe-ip-backbone.de) has joined #python
2014-05-28 09:35:38	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 09:35:51	<--	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has quit (Ping timeout: 276 seconds)
2014-05-28 09:35:59	-->	ddssc (~schmettdd@cpe-188-129-4-186.static.amis.hr) has joined #python
2014-05-28 09:36:11	[Tritium]	ELFrederich: I dont think those api changes were backported (via packages)
2014-05-28 09:36:22	ELFrederich	[Tritium], how do I use them?
2014-05-28 09:36:29	-->	AE7IK (~cyborg@209.141.49.215) has joined #python
2014-05-28 09:36:55	ddssc	is there a way to clone the current python environment into a virtual env?
2014-05-28 09:36:55	-->	Debnet (marc@2a01:e35:2e9c:d7f0:c9ce:60df:ba8a:6dd1) has joined #python
2014-05-28 09:37:06	-->	morolin (~morolin@cantor.csl.cornell.edu) has joined #python
2014-05-28 09:37:14	<--	morolin (~morolin@cantor.csl.cornell.edu) has left #python ("Leaving")
2014-05-28 09:37:16	ddssc	other than doing pip freeze and creating env with all components
2014-05-28 09:37:16	[Tritium]	ELFrederich: ...well...if they wernt backported you have 2 options: change the version of python you use or patch your python.  The first is the most reasonable.
2014-05-28 09:37:22	-->	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has joined #python
2014-05-28 09:37:30	-->	hwrd|work (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 09:37:43	ELFrederich	[Tritium], I think I've seen it pulled in before from something I was working on via pip.  I just don't know what the package name was
2014-05-28 09:37:52	<--	flub (~flub@host217-41-56-26.in-addr.btopenworld.com) has quit (Quit: bye)
2014-05-28 09:38:05	--	jholden is now known as jholden_away
2014-05-28 09:38:15	<--	cesar_bo (uid17588@gateway/web/irccloud.com/x-fkzgndrazzicetqj) has quit (Quit: Connection closed for inactivity)
2014-05-28 09:38:25	-->	harph (~harph@208.46.190.178) has joined #python
2014-05-28 09:38:30	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 09:38:32	-->	morolin (~morolin@cantor.csl.cornell.edu) has joined #python
2014-05-28 09:38:41	-->	throwinghammers (~hcs@unaffiliated/throwinghammers) has joined #python
2014-05-28 09:38:45	jwhisnant	ddssc: personally I would pip freeze > requirements.txt; then create a new virtualenv and run pip -r requirements.txt in your new env
2014-05-28 09:38:58	ddssc	jwhisnant, ye that's what I thought, thanks anyway
2014-05-28 09:39:06	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 09:39:10	--	cmheisel is now known as cmheisel|away
2014-05-28 09:39:12	-->	patrick91 (~patrick91@93.55.54.119) has joined #python
2014-05-28 09:39:20	[Tritium]	ELFrederich: someone seams to have done it, called datetimeex...
2014-05-28 09:39:26	ddssc	jwhisnant, whats the best way to do the other way around? I'd want to uninstall everything in my current python env and install evereything from a virtual env?
2014-05-28 09:39:26	--	cmheisel|away is now known as cmheisel
2014-05-28 09:40:12	<--	hwrd|work (~textual@unaffiliated/hwrdprkns) has quit (Read error: Connection reset by peer)
2014-05-28 09:40:26	jwhisnant	ddssc: do you mean "uninstall all system level packages installed by <OS package manager>" ? or do you mean pip uninstall ?
2014-05-28 09:40:53	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Ping timeout: 255 seconds)
2014-05-28 09:40:55	<--	patrick91 (~patrick91@93.55.54.119) has quit (Client Quit)
2014-05-28 09:41:15	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-153.dynamic.uwaterloo.ca) has joined #python
2014-05-28 09:42:05	<--	Lauxley (~rtissot@149.6.166.70) has quit (Quit: Leaving.)
2014-05-28 09:42:26	-->	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has joined #python
2014-05-28 09:42:27	<--	ggp (~guilherme@177.188.48.117) has quit (Remote host closed the connection)
2014-05-28 09:42:32	KingInTheNorth	Is it possible to make a .exe file from python in Python 3.2
2014-05-28 09:42:43	ddssc	jwhisnant, by pip install but not in a virtual env...
2014-05-28 09:43:05	-->	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has joined #python
2014-05-28 09:43:16	-->	shackra (~shackra@186.32.192.206) has joined #python
2014-05-28 09:43:22	<--	Leeds (~richardc@n112118156036.netvigator.com) has quit (Quit: Leaving)
2014-05-28 09:44:08	-->	mlt- (~user@bbe201657146.cfans.umn.edu) has joined #python
2014-05-28 09:44:17	-->	[mda] (~daniel@bas1-newmarket85-3096616480.dsl.bell.ca) has joined #python
2014-05-28 09:44:21	<--	brammator (~brammator@80.80.205.51) has quit
2014-05-28 09:44:30	-->	commandocoding (~commandoc@59.180.154.115) has joined #python
2014-05-28 09:44:43	<--	ncthom91 (~ncthom91@173.252.71.129) has quit (Ping timeout: 258 seconds)
2014-05-28 09:44:51	<--	ZombieFe_ (~ZombieFey@ip70-162-87-228.ph.ph.cox.net) has quit (Ping timeout: 252 seconds)
2014-05-28 09:45:01	<--	SoftwareMaven (~Thunderbi@c-67-177-48-118.hsd1.ut.comcast.net) has quit (Quit: SoftwareMaven)
2014-05-28 09:45:09	mlt-	How tasks are assigned with multiprocessing.Pool ? I mean if I have 20 tasks and only 5 workers, is each assigned 4 tasks right away or does it happen dynamically?
2014-05-28 09:45:21	mitch-_	jwhisnant, how do you know that the module shared.exc is installed from the freeze output?? i dont see it in there
2014-05-28 09:45:23	jwhisnant	ddssc: I would not use pip outside of a virtualenv; "sudo pip ..." is the wrong thing to do; using your package manager is the right thing to do for that case
2014-05-28 09:45:26	<--	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 09:45:43	[Tritium]	gah, the str.is_digit() is just...code smell
2014-05-28 09:45:56	<--	commandocoding (~commandoc@59.180.154.115) has left #python
2014-05-28 09:46:03	jwhisnant	mitch-_: I don't know what shared.exc is
2014-05-28 09:46:16	mitch-_	oh. so that's the problem we're having eh?
2014-05-28 09:46:30	-->	anddam (~weechat@199.19.224.42) has joined #python
2014-05-28 09:46:31	mitch-_	should i try to get the mac version instead of the source-code version?
2014-05-28 09:46:56	<--	Porkepix_ (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2014-05-28 09:47:17	-->	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has joined #python
2014-05-28 09:47:23	newke	how to make that, when i create class instance, inside of it a variable would be created, which uses information provided to decide what that variable should contain?
2014-05-28 09:47:29	therealfakemoot	[Tritium]: I've used it before.
2014-05-28 09:47:38	therealfakemoot	[Tritium]: When that's literally exactly what you need, why not?
2014-05-28 09:47:49	Yhg1s	newke: it _sounds_ like you want to pass arguments to __init__, or perhaps use a property.
2014-05-28 09:47:55	Yhg1s	newke: but it isn't entirely obvious.
2014-05-28 09:48:06	KingInTheNorth	 Is it possible to make a .exe file from python in Python 3.2
2014-05-28 09:48:08	-->	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has joined #python
2014-05-28 09:48:15	-->	janus (Janus@2a01:4f8:120:7061::5:46a0) has joined #python
2014-05-28 09:48:31	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 09:48:38	shurr	[Tritium]: I know, but I supposed you are not migrating.
2014-05-28 09:48:47	<--	dude-x (~dude-x@208.82.12.18) has quit (Ping timeout: 252 seconds)
2014-05-28 09:49:01	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 09:49:07	Wooble	KingInTheNorth: any reason you don't want to use a newer version than 3.2?
2014-05-28 09:49:11	-->	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has joined #python
2014-05-28 09:49:31	newke	ahhh get it now i think
2014-05-28 09:49:31	<--	zooz (~zooz@87.85.173.82) has quit (Ping timeout: 252 seconds)
2014-05-28 09:49:53	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 252 seconds)
2014-05-28 09:50:17	mitch-_	http://paste.pound-python.org/show/pRed52e6rAwFmp1OF4vh/
2014-05-28 09:50:25	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2014-05-28 09:50:37	mitch-_	jwhisnant, ok that is the output that i get when i try to run the script with the proper parameters and such.
2014-05-28 09:50:45	-->	Josse|BNC (uid29288@gateway/web/irccloud.com/x-ckwgbqmbsfcscvul) has joined #python
2014-05-28 09:50:54	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 09:51:04	-->	nshsome (~unf@wikipedia/nsh) has joined #python
2014-05-28 09:51:06	<--	khagler (~khagler@gateway/tor-sasl/khagler) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 09:51:07	shurr	[Tritium]: I mean, of course not all, but many things may be written from scratch.
2014-05-28 09:51:10	<--	sarlalian (~sarlalian@in-bennett.laika.com) has quit (Quit: WeeChat 0.4.0)
2014-05-28 09:51:21	-->	sarlalian (~sarlalian@in-bennett.laika.com) has joined #python
2014-05-28 09:51:23	--	nshsome is now known as nshlol
2014-05-28 09:52:02	<--	wong2 (~wong2@106.38.245.5) has left #python
2014-05-28 09:52:07	-->	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has joined #python
2014-05-28 09:52:16	-->	desophos (~desophos@128.149.227.202) has joined #python
2014-05-28 09:52:49	<--	legless399 (~samtur@195.81.28.46) has quit (Quit: Leaving.)
2014-05-28 09:52:53	-->	tom94 (~tom@2001:630:d0:ed04:ae72:89ff:fe01:2fed) has joined #python
2014-05-28 09:52:59	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 09:53:28	<--	shurr (~hibudeva@219.Red-213-98-52.staticIP.rima-tde.net) has quit (Quit: bai)
2014-05-28 09:54:02	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 09:54:17	KingInTheNorth	Wooble: Nah, just had 3.2. Updated to 3.4.1 Right nw
2014-05-28 09:54:34	-->	Johz (~Johz@94.0.154.49) has joined #python
2014-05-28 09:54:36	<--	kushal (~kdas@fedora/kushal) has quit (Quit: Leaving)
2014-05-28 09:54:49	-->	emorrow (~Thunderbi@185.7.185.250) has joined #python
2014-05-28 09:54:54	--	regebro is now known as regebro|afk
2014-05-28 09:55:16	jwhisnant	mitch-_: why do you think openpyxl has a .shared anything ?? (it doesn't appear to ...)
2014-05-28 09:55:48	<--	n3bul4 (c9163b56@gateway/web/freenode/ip.201.22.59.86) has quit (Ping timeout: 240 seconds)
2014-05-28 09:56:03	<--	hellhound (~hellhound@unaffiliated/hellhound) has left #python ("Computers do not solve problems -computers carry out solutions, specified by people, to problems. - D. D. Spencer")
2014-05-28 09:56:06	<--	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-05-28 09:56:08	-->	joshlegs (~josh@unaffiliated/horsehead) has joined #python
2014-05-28 09:56:35	Wooble	KingInTheNorth: (because the new version of py2exe works on 3.3 and later)
2014-05-28 09:57:04	<--	al34n1x (~al34n1x@186.19.211.131) has quit
2014-05-28 09:57:44	<--	venomDev (~venomDev@101.113.9.242) has quit (Read error: Connection reset by peer)
2014-05-28 09:58:37	-->	chrislkeller (~chrislkel@63.237.174.130) has joined #python
2014-05-28 09:58:38	-->	sakjur (~sakjur@mjuk.is) has joined #python
2014-05-28 09:59:20	<--	tom (~tom@s5.wservices.ch) has left #python
2014-05-28 09:59:27	--	stal is now known as stal[GL]
2014-05-28 09:59:33	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 09:59:59	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 10:00:42	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 10:00:57	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined #python
2014-05-28 10:01:00	-->	T-virus (~T-virus@a89-153-104-249.cpe.netcabo.pt) has joined #python
2014-05-28 10:01:18	desophos	hi everyone, i'm having a problem with threading: i'm using HTMLParser to scrape thousands of pages in a directory with a separate thread for each page (they're small), but i'm finding that sometimes (rarely) the HTMLParser fails to parse the page correctly and gives incomplete output. i've run the script several times and the missing pages are different every time. does anyone have an idea of what's going wrong and how i could fix it? thanks
2014-05-28 10:01:35	<--	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 258 seconds)
2014-05-28 10:01:49	-->	andtorg (~andtorg@host46-170-dynamic.49-82-r.retail.telecomitalia.it) has joined #python
2014-05-28 10:01:56	-->	lauracr (~lauracr@199.47.79.34) has joined #python
2014-05-28 10:01:57	therealfakemoot	desophos: sounds like interrupted transmission of the pages.
2014-05-28 10:02:04	[Tritium]	therealfakemoot: the case that i am cringing at is someone useing it...IN TECHING MATERIAL...to check if a string only contains integer values.  .is_digit precludes values x > 10 and x < 0
2014-05-28 10:02:20	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 10:02:21	-->	zoidfarb (~bjmc@50-200-5-5-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 10:02:21	therealfakemoot	[Tritium]: I don't see what's wrong with that
2014-05-28 10:02:31	therealfakemoot	[Tritium]: But i don't really follow the second half of your statement
2014-05-28 10:02:40	<--	fabricio_org (~fabricio@189.16.167.220) has quit (Read error: Connection reset by peer)
2014-05-28 10:02:45	zoidfarb	Has anyone here used greylog for monitoring a Python web app? Any idea how it compares to Sentry?
2014-05-28 10:02:58	<--	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has quit (Ping timeout: 240 seconds)
2014-05-28 10:03:13	therealfakemoot	.is_digit seems perfectly apropos for that purpose. It's nicer than a try/except wrapped around an int() call
2014-05-28 10:03:20	-->	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-28 10:03:21	[Tritium]	therealfakemoot: it is literally checking if a len 1 string is in '0123456789' ... where the intended use is to check if the string is an integer
2014-05-28 10:03:23	therealfakemoot	which is what is_digit is already doing
2014-05-28 10:03:31	therealfakemoot	[Tritium]: Wait what
2014-05-28 10:03:42	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-28 10:03:45	therealfakemoot	[Tritium]: Okay, so?
2014-05-28 10:03:58	therealfakemoot	[Tritium]: is that an invalid way of checking if a string contains only digits?
2014-05-28 10:04:02	[Tritium]	therealfakemoot: in the use case, '10' is valid
2014-05-28 10:04:12	<--	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has quit (Ping timeout: 240 seconds)
2014-05-28 10:04:16	desophos	therealfakemoot: that sounds reasonable. why would it be happening, and do you think i can fix it? it's pretty vital that this data is reliable
2014-05-28 10:04:17	-->	drinkycrow (~drinkycro@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-28 10:04:24	therealfakemoot	desophos: because the network cannot be trusted
2014-05-28 10:04:39	therealfakemoot	desophos: You'll have to monitor your workers and retry if there's a failure
2014-05-28 10:04:39	<--	alem0lars (~alem0lars@mail.spot.it) has quit (Quit: Going AFK...)
2014-05-28 10:04:53	cdunklau	desophos: perhaps you should use something sane instead
2014-05-28 10:04:55	therealfakemoot	heh
2014-05-28 10:04:58	[Tritium]	therealfakemoot: so is '-10'
2014-05-28 10:04:58	<--	ThomasC (~ThomasC@poly-bot-46-193-244.35.cust.wifirst.net) has quit (Remote host closed the connection)
2014-05-28 10:05:02	cdunklau	scrapy is a super nice thing for scraping
2014-05-28 10:05:22	therealfakemoot	[Tritium]: I don't really know what argument you're trying to make. that .is_digit is implemented incorrectly?
2014-05-28 10:05:32	desophos	cdunklau: i have been instructed to use only the python stdlib
2014-05-28 10:05:34	-->	iAmerikan (~foo@c-76-120-120-77.hsd1.co.comcast.net) has joined #python
2014-05-28 10:05:40	cdunklau	desophos: by whom?
2014-05-28 10:05:41	<--	l4cr0ss (~l4cr0ss@unaffiliated/l4cr0ss) has quit (Disconnected by services)
2014-05-28 10:05:42	-->	Na3iL (~Naeil@unaffiliated/na3il) has joined #python
2014-05-28 10:05:44	therealfakemoot	desophos: travesty
2014-05-28 10:05:51	desophos	cdunklau: my boss, therealfakemoot: yes
2014-05-28 10:06:06	-->	l4cr0ss (~Jefferson@unaffiliated/l4cr0ss) has joined #python
2014-05-28 10:06:07	<--	spec_ed (~spec_ed@c-98-203-32-130.hsd1.fl.comcast.net) has quit (Ping timeout: 245 seconds)
2014-05-28 10:06:07	Pici	ugh
2014-05-28 10:06:10	cdunklau	desophos: who is your boss, and why does he insist on stupid things?
2014-05-28 10:06:25	[Tritium]	therealfakemoot: that, when eventually converting to an int anyways, using isdigit (we both have been using an extra _) its code smell, and it definatly shouldnt be in teaching material
2014-05-28 10:06:29	-->	Gambit- (~Gambit-@unaffiliated/gambit-) has joined #python
2014-05-28 10:06:38	desophos	cdunklau: this script needs to be portable and maintainable; the idea is that non-stdlib libraries can't be relied upon to be maintained several years from now
2014-05-28 10:06:44	stack	in the ipython shell, how do I tell that to use utf8 and not throw UnicodeEncodeError: ?
2014-05-28 10:06:46	--	Rev|SleepingFox is now known as TheReverend403
2014-05-28 10:07:13	-->	ggp (~guilherme@143.106.196.234) has joined #python
2014-05-28 10:07:15	Pici	can your code be relied upon to be maintained several years from now?
2014-05-28 10:07:16	-->	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has joined #python
2014-05-28 10:07:18	therealfakemoot	[Tritium]: Okay, see, that is different from just saying "isdigit is kinda bad". Yes if you're converting the string to an int you may as well int() it right away
2014-05-28 10:07:20	cdunklau	desophos: that's hilarious. the stdlib is where code goes to die
2014-05-28 10:07:29	desophos	therealfakemoot: so it's up to me to decide what a failure is and how to detect it then, i suppose?
2014-05-28 10:07:33	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 10:07:34	therealfakemoot	desophos: Yep.
2014-05-28 10:07:36	desophos	Pici: i hope so haha
2014-05-28 10:07:43	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 10:07:45	therealfakemoot	desophos: Seems like your HTML parser throws an error that might be handy
2014-05-28 10:07:50	[Tritium]	therealfakemoot: I think my cringing impeaded my explaining ability
2014-05-28 10:07:51	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Read error: Connection reset by peer)
2014-05-28 10:07:56	therealfakemoot	hahaha
2014-05-28 10:08:16	l4cr0ss	Im using Python for Windows. How can I use this project in my code? https://code.google.com/p/python-ntlm/source/checkout
2014-05-28 10:08:21	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 10:08:26	-->	stymo (~stymo@pool-71-174-188-132.bstnma.east.verizon.net) has joined #python
2014-05-28 10:08:55	[Tritium]	l4cr0ss: install it, then use it as per its docs
2014-05-28 10:08:56	cdunklau	desophos: i'd strong suggest you impress upon your boss that handrolling something is substantially more likely to result in maintenance nightmares
2014-05-28 10:09:24	<--	treehug88 (~treehug88@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-05-28 10:09:32	-->	agrajag42 (uid27336@gateway/web/irccloud.com/x-frkjhsybimwqvmcr) has joined #python
2014-05-28 10:09:33	l4cr0ss	[Tritium]: How do I 'install' it on Windows? I only know how to do it on linux with pip
2014-05-28 10:09:40	-->	alem0lars (~alem0lars@mail.spot.it) has joined #python
2014-05-28 10:09:53	<--	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has quit (Remote host closed the connection)
2014-05-28 10:10:12	cdunklau	desophos: and also, check out twisted's release history. regular releases since 11 years ago
2014-05-28 10:10:15	[Tritium]	l4cr0ss: well, you could use pip on windows.  it works there too.  but download the source, and run `python setup.py install`
2014-05-28 10:10:43	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 10:10:57	Pici	pip on Windows works pretty well, except where things needs to get compiled.
2014-05-28 10:11:07	l4cr0ss	[Tritium]: Ok thanks. I don't know how to use pip on Windows. It doesn't seem to exist in my Python27 folder
2014-05-28 10:11:24	cdunklau	desophos: and by the way, a scraper based on scrapy will likely be substantially faster than a threaded+syncronous version
2014-05-28 10:11:26	-->	treehug88 (~treehug88@static-96-239-100-47.nycmny.fios.verizon.net) has joined #python
2014-05-28 10:11:27	therealfakemoot	l4cr0ss: That's correct. pip is a third party tool
2014-05-28 10:11:36	[Tritium]	l4cr0ss: download get-pip.py from pip-installer.org
2014-05-28 10:11:53	[Tritium]	l4cr0ss: then run it with python get-pip.py
2014-05-28 10:12:09	-->	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has joined #python
2014-05-28 10:12:20	-->	Pyus (~uSr@cpe-23-242-236-154.socal.res.rr.com) has joined #python
2014-05-28 10:12:26	<--	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has quit (Max SendQ exceeded)
2014-05-28 10:12:26	<--	alem0lars (~alem0lars@mail.spot.it) has quit (Client Quit)
2014-05-28 10:12:27	desophos	cdunklau: you don't have to convince me, i know; i don't think i'm in a position to try to convince others though
2014-05-28 10:12:29	-->	thekkid (~thekkid@c-68-57-205-28.hsd1.il.comcast.net) has joined #python
2014-05-28 10:12:35	<--	Pyus (~uSr@cpe-23-242-236-154.socal.res.rr.com) has quit (Max SendQ exceeded)
2014-05-28 10:12:36	[Tritium]	l4cr0ss: comes with setuptools, which is something you will need anyways to install that
2014-05-28 10:12:44	cdunklau	desophos: of course you are. you're building the thing
2014-05-28 10:13:00	thekkid	I'm trying to download a file using ftplib retrbinary and use zlib to decompress it. HOw can I do this without saving it to a file?
2014-05-28 10:13:01	_habnabit	stack, tell what, exactly, to 'use utf8'?
2014-05-28 10:13:04	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 10:13:06	cdunklau	desophos: you may not be in a position to *demand* things... but what's the harm in bringing it up
2014-05-28 10:13:15	-->	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has joined #python
2014-05-28 10:13:30	desophos	cdunklau: well, i originally wrote it with scrapy, but i was told to change it to use the stdlib
2014-05-28 10:13:39	cdunklau	desophos: run away
2014-05-28 10:13:40	cdunklau	:)
2014-05-28 10:13:43	desophos	cdunklau: haha
2014-05-28 10:14:02	[Tritium]	desophos: the solution to that, is of course, whiskey
2014-05-28 10:14:09	desophos	of course
2014-05-28 10:14:11	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-28 10:14:14	<--	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has quit (Ping timeout: 258 seconds)
2014-05-28 10:14:19	cdunklau	desophos: i'm surprised you haven't been told to reimplement TLS from scratch because of the heartbleed bug
2014-05-28 10:14:32	<--	scar00t (Anemos@cpe-98-157-152-53.ma.res.rr.com) has quit
2014-05-28 10:14:52	l4cr0ss	[Tritium]: Ok, it's all been installed. Is it on my path now?
2014-05-28 10:14:56	[Tritium]	cdunklau: that... is an order i expect to have been issued somewhere
2014-05-28 10:15:15	cdunklau	[Tritium]: i'm sure it was issued in a frightening number of places
2014-05-28 10:15:17	<--	chowmeined (~chowmeine@unaffiliated/chowmeined) has quit (Quit: Leaving)
2014-05-28 10:15:30	[Tritium]	l4cr0ss: unless you added c:\python27\scripts to your path, no.  but that is where pip is installed
2014-05-28 10:15:37	desophos	therealfakemoot: i see that HTMLParser defines an HTMLParseError exception, but i'm not sure where it would raise it, since HTMLParser requires several function to handle parsing
2014-05-28 10:15:44	desophos	*functions
2014-05-28 10:15:49	<--	ggp (~guilherme@143.106.196.234) has quit (Read error: Connection reset by peer)
2014-05-28 10:15:59	<--	n1x (~n1x@unaffiliated/n1xnc0d3) has quit (Ping timeout: 255 seconds)
2014-05-28 10:16:13	cdunklau	desophos: wooh another problem that probably wouldn't exist if you used scrapy :)
2014-05-28 10:16:16	cdunklau	because lxml
2014-05-28 10:16:16	desophos	therealfakemoot: and i don't manually call the functions, so i can't use a try/except block
2014-05-28 10:16:20	cdunklau	ok i'll stop
2014-05-28 10:16:22	<--	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has quit (Remote host closed the connection)
2014-05-28 10:16:45	l4cr0ss	[Tritium]: Great, it's working. Thank you
2014-05-28 10:16:55	[Tritium]	l4cr0ss: dont mention it
2014-05-28 10:16:55	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-153.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 10:17:00	desophos	cdunklau: if only
2014-05-28 10:17:07	<--	Na3iL (~Naeil@unaffiliated/na3il) has quit (Ping timeout: 240 seconds)
2014-05-28 10:17:12	<--	spossiba (~spossiba@unaffiliated/stryx/x-3871776) has quit (Remote host closed the connection)
2014-05-28 10:17:16	<--	Vivekananda (~Vivekanan@69.251.189.107) has quit (Quit: Ex-Chat)
2014-05-28 10:17:22	[Tritium]	desophos: er... why cant you?  exceptions propigate upwards
2014-05-28 10:17:27	thekkid	Nvm, I got it!
2014-05-28 10:17:34	therealfakemoot	desophos: Right. You catch that exception somewhere where you're dispatching the HTML parsing
2014-05-28 10:17:56	-->	SoftwareMaven (~Thunderbi@c-67-177-48-118.hsd1.ut.comcast.net) has joined #python
2014-05-28 10:17:57	-->	ggp (~guilherme@143.106.196.234) has joined #python
2014-05-28 10:18:09	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Quit: Leaving.)
2014-05-28 10:18:10	-->	spossiba (~spossiba@unaffiliated/stryx/x-3871776) has joined #python
2014-05-28 10:18:36	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 10:18:38	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-28 10:18:40	-->	MarderIII (~marderii@enneman.demon.nl) has joined #python
2014-05-28 10:18:45	cdunklau	oh actually it looks like it's become better at parsing broken crap recently
2014-05-28 10:18:50	[Tritium]	Is it an unusual practice to not catche exceptions while developing
2014-05-28 10:18:50	cdunklau	desophos: what version of python are you using
2014-05-28 10:18:51	[Tritium]	?
2014-05-28 10:18:58	desophos	cdunklau: 2.7
2014-05-28 10:19:02	cdunklau	desophos: which, though
2014-05-28 10:19:05	-->	evanton (~cbbe@unaffiliated/evanton) has joined #python
2014-05-28 10:19:13	aberrant	I always forget how to do this: I have an array of dicts. I want to sort the array by the value of dictionary element ‘foo’. how do I do this?
2014-05-28 10:19:14	therealfakemoot	[Tritium]: Well, you're supposed to catch the ones you can handle/recover from and ignore the rest for callers to handle
2014-05-28 10:19:28	<--	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 10:19:30	cdunklau	desophos: HTMLParser appears to have gotten better as of 2.7.3
2014-05-28 10:19:30	Yhg1s	aberrant: an array or a list?
2014-05-28 10:19:36	aberrant	Yhg1s: sorry, a list
2014-05-28 10:19:38	Yhg1s	aberrant: L.sort(key=operator.itemgetter('foo'))
2014-05-28 10:19:45	aberrant	itemgetter.
2014-05-28 10:19:46	aberrant	thank you.
2014-05-28 10:19:57	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 10:20:11	aberrant	does key work on sorted() as well?
2014-05-28 10:20:20	aberrant	looks like it
2014-05-28 10:20:22	Yhg1s	aberrant: Yes.
2014-05-28 10:20:26	-->	konradsurf (~konradsur@65.60.116.2) has joined #python
2014-05-28 10:20:35	[Tritium]	therealfakemoot: and I do that when i am cleaning up a module when I am done working on it (or near done at least).  But when first writing... I want to see all the errors, even ones I expect... I somehow feel that is.. unusual
2014-05-28 10:20:49	-->	deSilva (~deSilva@c83-254-213-203.bredband.comhem.se) has joined #python
2014-05-28 10:20:50	<--	Dharmit (shahdharmi@nat/redhat/x-acccurofilaojvkc) has quit (Quit: Leaving)
2014-05-28 10:20:51	Yhg1s	sorted is really just 'def sorted(it, *args, **kwargs): result = list(it); result.sort(*args, **kwargs); return result' :)
2014-05-28 10:20:55	desophos	therealfakemoot: but since i'm running each instance in a thread, how would i catch an exception raised by one thread? if i put the thread_queue.put() statement in a try/except block, then wouldn't it only catch exceptions raised by put()?
2014-05-28 10:21:00	<--	dude-x (~dude-x@208.82.12.18) has quit (Remote host closed the connection)
2014-05-28 10:21:09	cdunklau	[Tritium]: eh, you could use logging.exception
2014-05-28 10:21:15	-->	mcanes (~mcanes@251.Red-88-12-41.staticIP.rima-tde.net) has joined #python
2014-05-28 10:21:33	ddssc	jwhisnant,  what are the dangers of doing pip install -r requirements.txt outside of virtualenv?
2014-05-28 10:21:39	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-167.dynamic.uwaterloo.ca) has joined #python
2014-05-28 10:21:43	--	oleo is now known as Guest58286
2014-05-28 10:22:05	-->	LeMike (~Thunderbi@dslb-084-063-151-122.pools.arcor-ip.net) has joined #python
2014-05-28 10:22:12	Yhg1s	ddssc: messing with files installed by your system package manger.
2014-05-28 10:22:17	[Tritium]	desophos: take your boss out for a beer.  Your main problem here is social, not technological, and it is creating a lot of technological problems that a beer can fix
2014-05-28 10:22:28	desophos	[Tritium]: very funny
2014-05-28 10:22:30	Yhg1s	(or, your system package manager messing with files you installed with pip, or shadowing packages installed with pip.)
2014-05-28 10:22:36	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 240 seconds)
2014-05-28 10:22:58	konradsurf	hi. i'm trying to use 'pyparsing' to parse a nested structure, similar to the example shown below...i'm getting 'expected "}"' errors. i don't understand the solutions i've seen. http://pyparsing.wikispaces.com/share/view/40834661
2014-05-28 10:23:02	[Tritium]	desophos: I am not joking.  You need to convince your boss to use third party modules.  The crap in the standard lib is broken.
2014-05-28 10:23:07	cdunklau	well
2014-05-28 10:23:14	<--	FasTTo (~FasTTo@bl16-177-118.dsl.telepac.pt) has quit (Quit: Inactive)
2014-05-28 10:23:15	cdunklau	it works, there's just better things
2014-05-28 10:23:32	-->	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has joined #python
2014-05-28 10:23:38	[Tritium]	so the batteries are leaking, but still hold a charge.
2014-05-28 10:23:39	-->	nagrat (~nagrat@unaffiliated/nagrat) has joined #python
2014-05-28 10:23:55	-->	FasTTo (~FasTTo@bl16-177-118.dsl.telepac.pt) has joined #python
2014-05-28 10:24:01	konradsurf	here's another example of parsing a nested structure...i would really appreciate some enlightenment. http://pyparsing.wikispaces.com/UnderDevelopment#x-C%20struct%20parser
2014-05-28 10:24:07	<--	ivonunes (~ivonunes@194.65.5.235) has quit (Remote host closed the connection)
2014-05-28 10:24:37	-->	Palantiri (~Palantiri@216.207.42.134) has joined #python
2014-05-28 10:24:41	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 10:24:43	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-28 10:25:07	-->	oleo (~oleo@xdsl-78-35-146-104.netcologne.de) has joined #python
2014-05-28 10:25:29	<--	Guest58286 (~oleo@xdsl-78-35-164-158.netcologne.de) has quit (Ping timeout: 264 seconds)
2014-05-28 10:26:24	konradsurf	neither of those examples use a 'negative lookahead', but that is the only StackOverflow answer i've received. http://stackoverflow.com/questions/23841136/the-trick-to-nested-structures-in-pyparsing
2014-05-28 10:26:40	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-28 10:27:13	<--	calvinx (~calvinx@216.131.64.46) has quit (Quit: calvinx)
2014-05-28 10:28:12	l4cr0ss	I got this NTLM auth library to work, but it doesn't handle redirects directly. It says I need to check and handle the response myself. Can I use urllib2 to do that? Do I need to use another handler object?
2014-05-28 10:28:12	<--	rippa (~rippa@176.100.246.238) has quit (Ping timeout: 240 seconds)
2014-05-28 10:28:24	-->	bigga (6c5b1467@gateway/web/freenode/ip.108.91.20.103) has joined #python
2014-05-28 10:28:37	-->	mablae (~mablae@dyndsl-095-033-220-140.ewe-ip-backbone.de) has joined #python
2014-05-28 10:28:43	ddssc	Yhg1s, right. pip does recognize those packages tho, and won't reinstall if the requirements are already met
2014-05-28 10:29:15	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 10:29:40	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 10:29:40	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 10:29:50	-->	zlalanne (~zlalanne@nat/ti/x-pofalhrhdsoteonh) has joined #python
2014-05-28 10:31:21	kingplusplus	http://pastebin.com/vBkyeWzN please is there any reason why CTRL+C would not terminate?
2014-05-28 10:31:25	-->	NoReflex (~ionut@79.114.107.144) has joined #python
2014-05-28 10:31:26	kingplusplus	the console
2014-05-28 10:31:26	infobob	http://paste.pound-python.org/show/n8jQBmbx4iMuJ3RWVe8c/ (repasted for kingplusplus)
2014-05-28 10:31:51	-->	EcoGiko (~EcoGiko@unaffiliated/ecogiko) has joined #python
2014-05-28 10:32:06	cdunklau	kingplusplus: that does not appear to be all of the code
2014-05-28 10:32:11	NoReflex	hello! I'm trying to make some asynchronous requests to my webserver; I'm using tornado AsyncHTTPClient
2014-05-28 10:32:43	NoReflex	my problem is that I don't know how to stop (exit) the ioloop after the requests have been finished
2014-05-28 10:33:13	cdunklau	NoReflex: presumably you can throw a callback in somewhere that calls the ioloop's exit method
2014-05-28 10:33:27	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-28 10:33:37	--	Wooble is now known as Wooble_
2014-05-28 10:33:37	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2014-05-28 10:33:45	kingplusplus	cdunklau, http://pastebin.com/Z9ydUw21 this is all of it
2014-05-28 10:33:45	infobob	http://paste.pound-python.org/show/f3o3I5elCKNWvp3BsMC6/ (repasted for kingplusplus)
2014-05-28 10:33:48	-->	Porkepix_ (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 10:33:48	kingplusplus	thank
2014-05-28 10:34:04	<--	oubiga (~oubiga@40.3.20.95.dynamic.jazztel.es) has quit (Quit: oubiga)
2014-05-28 10:34:12	<--	Soham (~Soham@202.78.233.60) has quit (Ping timeout: 240 seconds)
2014-05-28 10:34:21	cdunklau	kingplusplus: take out all of the bare except clauses
2014-05-28 10:34:21	<--	dude-x (~dude-x@208.82.12.18) has quit (Ping timeout: 276 seconds)
2014-05-28 10:34:44	-->	someprimetime (~someprime@162.245.21.10) has joined #python
2014-05-28 10:35:02	kingplusplus	cdunklau, bare where pls?
2014-05-28 10:35:03	NoReflex	cdunklau, I'm doing 2000 requests; basically I create a new AsyncHTTPClient, create 2000 requests (using for and httpclient.fetch) and afterwards I start the ioloop
2014-05-28 10:35:14	-->	Wooble (~user@unaffiliated/wooble) has joined #python
2014-05-28 10:35:16	NoReflex	the on_response function does nothing  (pass)
2014-05-28 10:35:25	cdunklau	NoReflex: i'm not really familiar with tornado, but i know a bit of twisted
2014-05-28 10:35:31	<--	Wooble_ (8231f2c5@gateway/web/freenode/ip.130.49.242.197) has quit
2014-05-28 10:35:47	cdunklau	NoReflex: how do you know when your requests are done?
2014-05-28 10:36:00	cdunklau	NoReflex: also let's see some code
2014-05-28 10:36:29	gugah	should I limit the rows inserted to a mysql db when using cursor.executemany()?
2014-05-28 10:36:33	NoReflex	cdunklau, th only thing I can think about is using a global variable and increasing it with each response; when the counter hits 2000 - ioloop exit
2014-05-28 10:36:40	<--	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has quit (Remote host closed the connection)
2014-05-28 10:36:42	-->	rezzack (~rezzack@unaffiliated/rezzack) has joined #python
2014-05-28 10:36:53	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-28 10:36:58	cdunklau	yeah i'm certain there's a better way
2014-05-28 10:37:25	NoReflex	cdunklau, http://privatepaste.com/73a4e63242
2014-05-28 10:38:18	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 10:38:18	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 10:39:01	desophos	ok, so how do i catch an exception that was raised in a thread?
2014-05-28 10:39:01	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-28 10:39:05	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-28 10:39:28	desophos	i've been looking but i haven't found what i'm looking for
2014-05-28 10:39:34	<--	dude-x (~dude-x@208.82.12.18) has quit (Read error: Connection reset by peer)
2014-05-28 10:39:40	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 10:39:50	cdunklau	NoReflex: ...so you're not doing anything with the results?
2014-05-28 10:40:28	desophos	HTMLParser raises an exception internally and i want to catch it during parsing; however, i don't control starting the parsing because i just pass an HTMLParser instance to a thread with some input
2014-05-28 10:40:29	-->	dommetysk (~dommetysk@p5B13117A.dip0.t-ipconnect.de) has joined #python
2014-05-28 10:40:37	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 10:40:54	-->	morfeo_81 (~mauro@2.192.48.53) has joined #python
2014-05-28 10:41:07	NoReflex	cdunklau, I will do something with the results later on; for now I'm trying to validate the approach
2014-05-28 10:41:31	NoReflex	the server (127.0.0.1 on port 8000) currently returns "Hello world"
2014-05-28 10:41:35	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Ping timeout: 252 seconds)
2014-05-28 10:41:41	-->	manizzle (~manizzle@107-220-114-180.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-28 10:41:46	cdunklau	NoReflex: i'm out of my depth
2014-05-28 10:41:58	cdunklau	NoReflex: if you were using twisted i could help :)
2014-05-28 10:42:14	-->	gelignite (~gelignite@i5387A20A.versanet.de) has joined #python
2014-05-28 10:42:18	NoReflex	I'm trying to test which is the best approach to issue lots of simultaneous requests using python
2014-05-28 10:42:29	-->	Fed0t (fedot@unaffiliated/fed0t) has joined #python
2014-05-28 10:42:31	cdunklau	NoReflex: for what, though
2014-05-28 10:42:33	NoReflex	threads and multiprocessing don't seem to cut it
2014-05-28 10:42:39	cdunklau	yeah, that's true
2014-05-28 10:43:00	<--	krizzo (~krizzo@unaffiliated/lf4) has quit (Ping timeout: 240 seconds)
2014-05-28 10:43:02	<--	Biopandemic (~Biopandem@unaffiliated/biopandemic) has quit (Quit: Leaving)
2014-05-28 10:43:03	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 252 seconds)
2014-05-28 10:43:24	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 10:43:29	<--	av0idz (~void@151.236.24.222) has quit (Ping timeout: 264 seconds)
2014-05-28 10:43:33	-->	Draconis (~dfitzpatr@pool-96-229-207-22.lsanca.fios.verizon.net) has joined #python
2014-05-28 10:43:35	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 10:44:09	<--	dvx (~dvx@igw.obsm.cz) has quit (Quit: dvx)
2014-05-28 10:44:20	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-28 10:44:24	cdunklau	NoReflex: so it looks like you stop the ioloop with ioloop.IOLoop.instance, using the start() and close() methods
2014-05-28 10:44:31	<--	dude-x (~dude-x@208.82.12.18) has quit (Ping timeout: 252 seconds)
2014-05-28 10:44:46	--	Auv is now known as wonderful
2014-05-28 10:45:02	-->	av0idz (~void@151.236.24.222) has joined #python
2014-05-28 10:45:06	<--	mgrouchy (~mgrouchy@CPE68b6fc44a453-CM68b6fc44a450.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 10:45:18	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 10:45:26	-->	rockyrock (~rockyrock@unaffiliated/rockyrock) has joined #python
2014-05-28 10:45:27	-->	thatAndrogynous (~abarna@ghdc.ucsd.edu) has joined #python
2014-05-28 10:45:34	<--	rodfersou (~RoADRuNNE@177.16.92.35) has quit (Quit: leaving)
2014-05-28 10:45:39	<--	Heimdall (c1300882@gateway/web/freenode/ip.193.48.8.130) has quit (Disconnected by services)
2014-05-28 10:45:43	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 10:45:58	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 240 seconds)
2014-05-28 10:46:38	<--	dude-x (~dude-x@208.82.12.18) has quit (Read error: Connection reset by peer)
2014-05-28 10:46:58	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 10:47:12	-->	Cope (~nelsost1@37.188.125.80) has joined #python
2014-05-28 10:47:41	<--	andtorg (~andtorg@host46-170-dynamic.49-82-r.retail.telecomitalia.it) has quit (Ping timeout: 264 seconds)
2014-05-28 10:47:46	NoReflex	cdunklau, for now I will be using the counter idea: http://privatepaste.com/a4b1167eab
2014-05-28 10:47:54	cdunklau	eeeesh
2014-05-28 10:48:03	cdunklau	man, i don't get tornado at all
2014-05-28 10:48:08	<--	iAmerikan (~foo@c-76-120-120-77.hsd1.co.comcast.net) has quit (Quit: o/   \o)
2014-05-28 10:48:12	cdunklau	where the hell are the callbacks in the http client?
2014-05-28 10:48:18	<--	bigga (6c5b1467@gateway/web/freenode/ip.108.91.20.103) has quit (Ping timeout: 240 seconds)
2014-05-28 10:48:41	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 10:49:18	<--	kl0_ (~void@unaffiliated/rf14) has quit (Ping timeout: 240 seconds)
2014-05-28 10:49:29	NoReflex	using the hello world response from the server (which is also tornado) on my machine it finished the 2000 requests in 1.2 seconds
2014-05-28 10:49:32	cdunklau	oohhhhh
2014-05-28 10:49:38	<--	marscher (~marscher@hawk.imp.fu-berlin.de) has quit (Ping timeout: 240 seconds)
2014-05-28 10:49:42	cdunklau	fetch takes a callback
2014-05-28 10:49:46	-->	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-28 10:50:19	<--	the_rat (~the_rat@217.200.185.229) has quit (Read error: Connection reset by peer)
2014-05-28 10:50:33	morfeo_81	Hi there I need help on conditions (if else..) I 'd like to open file and if there is more lines I use the first code if there is only one line I need to use the second code ..http://bpaste.net/show/IcAx9M9KniCCNTtESjqf/
2014-05-28 10:50:34	-->	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has joined #python
2014-05-28 10:50:38	<--	grizwako (~GrizzLy@141-138-56-223.dsl.iskon.hr) has quit (Ping timeout: 255 seconds)
2014-05-28 10:50:55	-->	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 10:51:11	-->	evanz_ (~evanz@dhcp162-84.netlab.uky.edu) has joined #python
2014-05-28 10:51:17	<--	nagrat (~nagrat@unaffiliated/nagrat) has quit (Remote host closed the connection)
2014-05-28 10:51:29	<--	dude-x (~dude-x@208.82.12.18) has quit (Ping timeout: 252 seconds)
2014-05-28 10:51:29	<--	Samb2 (~Sammysama@2.121.203.77) has quit (Ping timeout: 252 seconds)
2014-05-28 10:51:41	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 10:51:58	cdunklau	NoReflex: so. make 1999 requests, then make a last one with a callback like... http_client.fetch(url, callback=exit_ioloop)
2014-05-28 10:52:17	-->	dude-x (~dude-x@208.82.12.18) has joined #python
2014-05-28 10:52:18	ELFrederich	how can I do this with Python with like urllib2 or something?   curl -H "Content-Type: application/json" -d '{"a":123,"b":789}' http://localhost:5000/foo
2014-05-28 10:52:39	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 10:52:44	[Tritium]	I should get off my butt and learn how to actually use a non-toy gui framework
2014-05-28 10:52:47	-->	the_rat (~the_rat@217.200.185.198) has joined #python
2014-05-28 10:53:01	cdunklau	morfeo_81: where exit_ioloop is just: def exit_ioloop(response): ioloop.IOLoop.instance.stop(); ioloop.IOLoop.instance.close()
2014-05-28 10:53:06	-->	uidzer0 (uidzer0@2604:180:1::7fae:9b8) has joined #python
2014-05-28 10:53:07	cdunklau	err
2014-05-28 10:53:11	cdunklau	NoReflex: ^ that was for you
2014-05-28 10:53:17	-->	Deithrian (~Deithrian@unaffiliated/deithrian) has joined #python
2014-05-28 10:53:28	NoReflex	cdunklau, I understand - nice idea; thx
2014-05-28 10:53:39	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 10:53:43	<--	emorrow (~Thunderbi@185.7.185.250) has quit (Ping timeout: 258 seconds)
2014-05-28 10:53:48	<--	lucian (~lucian@194.74.244.130) has quit (Ping timeout: 240 seconds)
2014-05-28 10:54:02	--	wonderful is now known as Auv
2014-05-28 10:54:08	desophos	ok, so how do i catch an exception that was raised in a thread? HTMLParser raises an exception internally and i want to catch it during parsing; however, i don't control starting the parsing because i just pass an HTMLParser instance to a thread with some input
2014-05-28 10:54:36	-->	frostschutz (~frostschu@pD9E50F97.dip0.t-ipconnect.de) has joined #python
2014-05-28 10:54:38	<--	greg_f (~greg@altlinux/developer/greg) has quit (Remote host closed the connection)
2014-05-28 10:55:01	morfeo_81	cdunklau, sorry I don't understand?
2014-05-28 10:55:11	cdunklau	morfeo_81: mistag, ignore it
2014-05-28 10:55:38	cdunklau	ELFrederich: i'd suggest using requests instead
2014-05-28 10:55:41	-->	tech-desk (~tech@nat5.broadband.bnmedia.ru) has joined #python
2014-05-28 10:55:45	-->	theslow1 (~theslow1@host-173-255-076-249.tcc.on.ca) has joined #python
2014-05-28 10:55:57	<--	Macuser (~textual@unaffiliated/macuser) has quit (Client Quit)
2014-05-28 10:56:00	-->	Paradisee (~Paradisee@2.239.28.120) has joined #python
2014-05-28 10:56:31	theslow1	Hello python, I created an application which uses pyserial.
2014-05-28 10:56:36	<--	dude-x (~dude-x@208.82.12.18) has quit (Ping timeout: 240 seconds)
2014-05-28 10:56:40	-->	treehug8_ (~treehug88@static-96-239-100-47.nycmny.fios.verizon.net) has joined #python
2014-05-28 10:56:45	cdunklau	ELFrederich: it would be requests.get(url, data=json.loads({'a': 123, 'b': 789}), headers={'content-type': 'application/json'})
2014-05-28 10:56:58	<--	treehug88 (~treehug88@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-05-28 10:57:12	<--	ribasushi (~riba@mujunyku.leporine.io) has quit (Read error: Connection reset by peer)
2014-05-28 10:57:15	theslow1	when a normal user runs the application/program everything works fine
2014-05-28 10:57:21	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 252 seconds)
2014-05-28 10:57:26	ELFrederich	cdunklau, wouldn't it be json.dumps?
2014-05-28 10:57:29	<--	eriko (~eriko@50-192-202-145-static.hfc.comcastbusiness.net) has quit (Quit: eriko)
2014-05-28 10:57:30	-->	rippa (~rippa@176.100.246.238) has joined #python
2014-05-28 10:57:38	<--	rippa (~rippa@176.100.246.238) has quit (Client Quit)
2014-05-28 10:57:43	<--	Fed0t (fedot@unaffiliated/fed0t) has quit (Ping timeout: 252 seconds)
2014-05-28 10:57:43	<--	tech-desk (~tech@nat5.broadband.bnmedia.ru) has quit (Client Quit)
2014-05-28 10:57:44	-->	kl0_ (~void@unaffiliated/rf14) has joined #python
2014-05-28 10:57:47	<--	hakced (~vince@pdpc/supporter/active/vinces) has quit (Quit: Konversation terminated!)
2014-05-28 10:57:48	theslow1	but when a limited user (deamon) runs it, I do not have permission to access /dev/ttyS01
2014-05-28 10:57:52	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 10:58:09	-->	nagrat (~nagrat@unaffiliated/nagrat) has joined #python
2014-05-28 10:58:12	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 10:58:28	-->	hakced (~vince@pdpc/supporter/active/vinces) has joined #python
2014-05-28 10:58:30	-->	lechatnoir (~doge@200.212.22.178) has joined #python
2014-05-28 10:59:15	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 10:59:20	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-28 10:59:29	<--	thatAndrogynous (~abarna@ghdc.ucsd.edu) has quit (Quit: WeeChat 0.4.3)
2014-05-28 10:59:37	-->	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-28 11:00:04	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 11:00:11	-->	n1x (~n1x@unaffiliated/n1xnc0d3) has joined #python
2014-05-28 11:00:29	-->	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-28 11:00:32	<--	shackra (~shackra@186.32.192.206) has quit (Ping timeout: 255 seconds)
2014-05-28 11:00:50	morfeo_81	I need to insert some dat on mysql.I have a input file can have more than 2 rows or only one row How can write inside the mysql only if there is only one line?
2014-05-28 11:01:10	morfeo_81	http://bpaste.net/show/IcAx9M9KniCCNTtESjqf/
2014-05-28 11:01:27	cdunklau	ELFrederich: yes
2014-05-28 11:01:28	cdunklau	my bad
2014-05-28 11:01:42	-->	ribasushi (~riba@mujunyku.leporine.io) has joined #python
2014-05-28 11:01:43	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-167.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 11:01:59	-->	rodfersou (~RoADRuNNE@177.16.92.35) has joined #python
2014-05-28 11:02:05	<--	newke (~newke@88-223-71-157.meganet.lt) has quit (Ping timeout: 264 seconds)
2014-05-28 11:02:24	-->	kevlarman (~roman@tremulous/officialdevannoyer/kevlarman) has joined #python
2014-05-28 11:02:26	<--	mcanes (~mcanes@251.Red-88-12-41.staticIP.rima-tde.net) has quit (Remote host closed the connection)
2014-05-28 11:02:55	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 258 seconds)
2014-05-28 11:02:55	<--	morfeo_81 (~mauro@2.192.48.53) has quit (Quit: Leaving)
2014-05-28 11:03:30	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 11:03:45	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-28 11:03:59	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 11:04:24	-->	harsk (~rjco@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 11:04:31	-->	le_tropico (~le_tropic@194.44.174.106) has joined #python
2014-05-28 11:04:34	<--	harsk (~rjco@host81-151-74-116.range81-151.btcentralplus.com) has quit (Client Quit)
2014-05-28 11:04:34	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 11:04:40	-->	aljohri (~atul@wireless-165-124-129-66.nuwlan.northwestern.edu) has joined #python
2014-05-28 11:04:44	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 11:04:47	<--	yedi (~yedi@201.199.88.62) has quit (Read error: No route to host)
2014-05-28 11:04:47	-->	murk_ (~nnscript@D97A9253.cm-3-3c.dynamic.ziggo.nl) has joined #python
2014-05-28 11:05:08	-->	cjwilburn (~cjwilburn@modvvlan502.0671.wlan.wireless-pennnet.upenn.edu) has joined #python
2014-05-28 11:05:10	ELFrederich	cdunklau, thanks
2014-05-28 11:05:45	<--	snyp (~snyp@223.29.204.2) has quit (Quit: leaving)
2014-05-28 11:05:47	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-28 11:06:09	<--	thesheff17 (~thesheff1@24-148-57-183.c3-0.lem-ubr1.chi-lem.il.cable.rcn.com) has quit (Ping timeout: 252 seconds)
2014-05-28 11:06:16	-->	motsu (motsu35@2604:180:1::ec72:b654) has joined #python
2014-05-28 11:06:22	-->	carbon1 (~Thunderbi@234.Red-83-51-18.dynamicIP.rima-tde.net) has joined #python
2014-05-28 11:06:29	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 11:06:38	<--	cjwilburn (~cjwilburn@modvvlan502.0671.wlan.wireless-pennnet.upenn.edu) has quit (Read error: Connection reset by peer)
2014-05-28 11:06:40	<--	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has quit (Quit: AkashicLegend)
2014-05-28 11:06:44	aberrant	hey Yhg1s - is it possible to sort a list of dicts based on the product of two of the dict elements?
2014-05-28 11:06:45	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Ping timeout: 258 seconds)
2014-05-28 11:07:05	Yhg1s	aberrant: write a function that takes a dict as argument and returns whatever key you want to sort by, then pass that as the 'key' argument.
2014-05-28 11:07:09	-->	rippa (~rippa@176.100.246.238) has joined #python
2014-05-28 11:07:10	aberrant	can you do key = (operator.itemgetter(‘foo’) * operator.itemgetter(‘bar’)) ?
2014-05-28 11:07:15	-->	agjacome (~agjacome@181.217.11.37.dynamic.jazztel.es) has joined #python
2014-05-28 11:07:24	cdunklau	aberrant: no
2014-05-28 11:07:24	Yhg1s	no.
2014-05-28 11:07:30	aberrant	yeah, that was stupid. sorry.
2014-05-28 11:07:42	Yhg1s	Not stupid, it's just not how Python works.
2014-05-28 11:07:42	cdunklau	eh, it'd be cool if you could do something like that
2014-05-28 11:07:45	Yhg1s	(it's how some other languages work.)
2014-05-28 11:07:57	<--	Porkepix_ (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2014-05-28 11:08:05	cdunklau	aberrant: oh wait
2014-05-28 11:08:07	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 11:08:17	aberrant	the thing is, I’d rather not create a new key that’s the product of two other keys.
2014-05-28 11:08:18	cdunklau	aberrant: oooh based on the product, nevermind
2014-05-28 11:08:36	aberrant	would a lambda work here?
2014-05-28 11:08:41	motsu	hey guys, im trying to call a bash script from within python. the script needs to run until a user ends it (currently with a ctrl+c). i need to call this script from within python. i have tried subprocess.call() but when i press ctrl c it ends the python program, not the subprocess. with subprocess.Popen() it calls the subprocess but execution keeps flowing in python, and i dont think ctrl c ends the subprocess. how do i do this?
2014-05-28 11:08:49	motsu	and, sorrt for the wall-o-text
2014-05-28 11:09:07	cdunklau	aberrant: you just need to write a function. def foo_bar_product(d): return d['foo'] * d['bar']
2014-05-28 11:09:22	cdunklau	aberrant: a lambda could do it, yes
2014-05-28 11:09:26	cdunklau	names are nice though
2014-05-28 11:09:35	aberrant	cdunklau: then key = foo_bar_product ?
2014-05-28 11:10:11	<--	yedi (~yedi@201.199.88.62) has quit (Ping timeout: 252 seconds)
2014-05-28 11:10:23	cdunklau	aberrant: yes
2014-05-28 11:10:35	aberrant	cool.
2014-05-28 11:10:38	-->	SteveG (~SteveG@pdpc/supporter/21for7/steveg) has joined #python
2014-05-28 11:10:39	cdunklau	well, thelist.sort(key=foo_bar_product)
2014-05-28 11:11:13	-->	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined #python
2014-05-28 11:11:23	<--	alexsnake (~alexsnake@187.153.20.128) has quit (Remote host closed the connection)
2014-05-28 11:11:28	cdunklau	motsu: well, you'll need to not use subprocess.call
2014-05-28 11:11:38	cdunklau	since that just blocks until the subprocess exits
2014-05-28 11:11:47	<--	carbon1 (~Thunderbi@234.Red-83-51-18.dynamicIP.rima-tde.net) has quit (Quit: carbon1)
2014-05-28 11:11:48	<--	LeMike (~Thunderbi@dslb-084-063-151-122.pools.arcor-ip.net) has quit (Ping timeout: 240 seconds)
2014-05-28 11:12:07	<--	Josse (3eeba09e@gateway/web/freenode/ip.62.235.160.158) has quit (Quit: Slapen gaan, trouwens: Hier had uw advertentie kunnen staan :))
2014-05-28 11:12:21	-->	Squarepy (~Squarepy@unaffiliated/squarepy) has joined #python
2014-05-28 11:12:23	<--	drinkycrow (~drinkycro@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-28 11:12:52	cdunklau	motsu: you could set up a sleep loop after you spawn the process with subprocess.Popen, trap KeyboardInterrupt just enough to terminate/kill the subprocess
2014-05-28 11:12:54	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-28 11:13:02	aberrant	sweet.
2014-05-28 11:13:07	aberrant	Thank you cdunklau and Yhg1s
2014-05-28 11:13:09	cdunklau	motsu: be sure to re-raise it
2014-05-28 11:13:13	<--	Siberian_Tiger (~Nicholas@67-210-183-162.fidnet.com) has quit (Disconnected by services)
2014-05-28 11:13:16	-->	chrisgeorge (~chrisgeor@unaffiliated/chrisgeorge) has joined #python
2014-05-28 11:13:24	-->	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has joined #python
2014-05-28 11:13:38	cdunklau	motsu: alternately, reimplement the bash script with python :)
2014-05-28 11:14:42	<--	ddssc (~schmettdd@cpe-188-129-4-186.static.amis.hr) has quit (Remote host closed the connection)
2014-05-28 11:14:42	-->	Fed0t (fedot@unaffiliated/fed0t) has joined #python
2014-05-28 11:15:14	motsu	cdunklau: well, this is the first time i have used python, how would i trap a ctrl c? or do you mean just trap another kepyess and do a kill when it gets that?
2014-05-28 11:15:19	<--	Nitori (~kappa@chireiden.net) has quit (Ping timeout: 252 seconds)
2014-05-28 11:15:23	rivarun	i wonder if adding syntactic sugar that would do `self.a=a;self.b=b` in methods like `def this_method(a,b,c):` would make sense. for example `def this_method(#a,#b,c):`
2014-05-28 11:15:45	therealfakemoot	rivarun: It's been discussed.
2014-05-28 11:15:48	Yhg1s	frequently.
2014-05-28 11:15:50	Yhg1s	and no.
2014-05-28 11:16:21	rivarun	i guess it is too limited?
2014-05-28 11:18:00	<--	tawonga (~chatzilla@120.148.156.38) has quit (Read error: Connection reset by peer)
2014-05-28 11:18:47	-->	Marchal (sammy@shell.franken.de) has joined #python
2014-05-28 11:18:55	-->	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined #python
2014-05-28 11:18:55	<--	samphippen (~textual@37.157.33.78) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 11:18:56	Yhg1s	rivarun: yes. There are many common cases, like assigning a default instead of None, that it doens't address.
2014-05-28 11:19:12	<--	crucl0 (~alekzp@78.165.95.41) has quit (Read error: Connection reset by peer)
2014-05-28 11:19:21	-->	dude-x (~dude-x@30.sub-70-208-83.myvzw.com) has joined #python
2014-05-28 11:19:23	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-179.dynamic.uwaterloo.ca) has joined #python
2014-05-28 11:19:30	Yhg1s	rivarun: if it were to save very common boilerplate it'd be one thing, but as it is the thing it'd replace varies greatly, and it isn't something that's easily done wrong.
2014-05-28 11:20:08	-->	crucl0 (~alekzp@78.165.95.41) has joined #python
2014-05-28 11:20:08	-->	jnoob22 (~jnoob@c-76-25-106-67.hsd1.co.comcast.net) has joined #python
2014-05-28 11:20:19	mexi_d3_	wonders if we need sugar to save me typing __init__ everywhere
2014-05-28 11:20:19	konradsurf	does anyone understand the | operator (MatchFirst) in pyparsing? i'm struggling to parse nested structures. i've got a StackOverflow question about it.
2014-05-28 11:20:22	-->	citra (~citra@unaffiliated/citra) has joined #python
2014-05-28 11:20:24	rivarun	Yhg1s: i suppose it only is common in __init__ methods. and it still wouldn't save that much effort/space in most cases. thanks
2014-05-28 11:20:27	-->	OOPMan (~adamj@41.2.214.60) has joined #python
2014-05-28 11:20:33	mitch-_	jwhisnant, did you ever get a chance to see the output of this? http://paste.pound-python.org/show/pRed52e6rAwFmp1OF4vh/
2014-05-28 11:20:39	mitch-_	sorry about earlier. i had to go to lunch.
2014-05-28 11:20:41	citra	http://bpaste.net/show/4Gg4OjTXlX6jxu0MtfcU/
2014-05-28 11:20:56	-->	czapla (~czapla@2a02:8109:8380:1298:dd67:c168:a3d1:d4de) has joined #python
2014-05-28 11:21:12	-->	adorver1 (~yaaic@58.125.237.138) has joined #python
2014-05-28 11:21:20	<--	adorver1 (~yaaic@58.125.237.138) has left #python
2014-05-28 11:21:30	-->	adorver1 (~yaaic@58.125.237.138) has joined #python
2014-05-28 11:22:25	<--	qiemem (uid14911@gateway/web/irccloud.com/x-siwjkltoevyluezp) has quit (Quit: Connection closed for inactivity)
2014-05-28 11:22:31	-->	durut (~root@71-94-128-82.static.mtpk.ca.charter.com) has joined #python
2014-05-28 11:23:30	heedly	I get the error - "new-line character seen in unquoted field - do you need to open the file in universal-newline mode?" when I'm parsing a csv file.
2014-05-28 11:23:42	heedly	but I don't open the file, I take it from an upload
2014-05-28 11:23:48	<--	evanton (~cbbe@unaffiliated/evanton) has quit (Quit: leaving)
2014-05-28 11:23:49	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 11:24:00	heedly	how do I simulate universal-newline mode?
2014-05-28 11:24:08	Yhg1s	heedly: you probably don't need universal newline mode.
2014-05-28 11:24:27	Yhg1s	heedly: it's more likely your CSV data is quoting or escaping in ways the csv module doesn't expect.
2014-05-28 11:24:53	Yhg1s	heedly: see https://docs.python.org/2/library/csv.html#csv-fmt-params
2014-05-28 11:25:20	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-28 11:25:53	-->	cesar_bo (uid17588@gateway/web/irccloud.com/x-iphxlujgcliigotv) has joined #python
2014-05-28 11:26:01	-->	sunya7a_ (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 11:26:02	heedly	Yhg1s: the CSV file is fine.
2014-05-28 11:27:06	konradsurf	this seems like the best example of parsing nested structures, http://pyparsing.wikispaces.com/share/view/40834661
2014-05-28 11:27:15	-->	qiemem (uid14911@gateway/web/irccloud.com/x-gvatpmctzkdfawda) has joined #python
2014-05-28 11:27:17	<--	MarderIII (~marderii@enneman.demon.nl) has quit (Ping timeout: 264 seconds)
2014-05-28 11:27:22	-->	ragsagar (~ragsagar@unaffiliated/ragsagar) has joined #python
2014-05-28 11:27:22	Yhg1s	heedly: ok, according to _which rules_? Because there are different rules on how things like newlines and quoted fields should be handled.
2014-05-28 11:27:38	<--	sunya7a_ (~pryde@unaffiliated/sunya7a) has quit (Client Quit)
2014-05-28 11:27:53	-->	emperorcezar (~emperorce@c-71-57-38-56.hsd1.il.comcast.net) has joined #python
2014-05-28 11:28:05	-->	sunya7a_ (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 11:28:40	-->	jpj (~jpj@115.241.31.107) has joined #python
2014-05-28 11:28:42	<--	jpj (~jpj@115.241.31.107) has quit (Client Quit)
2014-05-28 11:28:47	<--	__main__ (~main@50.240.210.73) has quit (Read error: Connection reset by peer)
2014-05-28 11:28:50	-->	_main_ (~main@50.240.210.73) has joined #python
2014-05-28 11:28:57	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 276 seconds)
2014-05-28 11:29:43	heedly	Yhg1s: I can open it in libreoffice, each field with spaces is quoted.
2014-05-28 11:30:01	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 11:30:18	<--	rquid (~sashka@94.41.177.225) has quit (Remote host closed the connection)
2014-05-28 11:30:37	citra	can't filter out for array size using item.shape and assigning to a name
2014-05-28 11:30:37	Yhg1s	heedly: ok, what about fields with newlines in them?
2014-05-28 11:30:42	<--	mlt- (~user@bbe201657146.cfans.umn.edu) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-05-28 11:30:51	<--	bocaneri (~bocaneri_@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-05-28 11:30:52	<--	pikaren (~ren@unaffiliated/pikaren) has quit (Quit: Lost terminal)
2014-05-28 11:31:01	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 265 seconds)
2014-05-28 11:31:25	heedly	Yhg1s: the only new lines I can see are at the end of lines
2014-05-28 11:31:44	Yhg1s	heedly: are the lines terminated with '\n' or with '\r\n'?
2014-05-28 11:31:53	<--	sunya7a_ (~pryde@unaffiliated/sunya7a) has quit (Client Quit)
2014-05-28 11:31:54	<--	czapla (~czapla@2a02:8109:8380:1298:dd67:c168:a3d1:d4de) has quit (Remote host closed the connection)
2014-05-28 11:32:08	-->	mgrouchy (~mgrouchy@CPE68b6fc44a453-CM68b6fc44a450.cpe.net.cable.rogers.com) has joined #python
2014-05-28 11:32:39	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 11:32:39	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Client Quit)
2014-05-28 11:32:46	--	_main_ is now known as __main__
2014-05-28 11:32:57	-->	Ofek (4431dada@gateway/web/freenode/ip.68.49.218.218) has joined #python
2014-05-28 11:33:10	-->	morfeo_81 (~mauro@2.192.29.96) has joined #python
2014-05-28 11:33:12	-->	shackra (~shackra@186.32.192.206) has joined #python
2014-05-28 11:33:16	morfeo_81	hi there
2014-05-28 11:33:26	desophos	so, how do i catch an exception that was raised in a thread? HTMLParser raises an exception internally and i want to catch it during parsing; however, i don't control starting the parsing because i just pass an HTMLParser instance to a thread with some input
2014-05-28 11:34:49	KirkMcDonald	desophos: So pass a function that handles the exception instead.
2014-05-28 11:35:35	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-28 11:35:58	<--	n1x (~n1x@unaffiliated/n1xnc0d3) has quit (Ping timeout: 252 seconds)
2014-05-28 11:36:08	mitch-_	jwhisnant, I think i traced through the filesystem to which file it is referencing and i can show you to the file that is reading from..... it's util.py and it's trying to import a file that doesnt exist in the folder structure... can i copy a python folder for "openpyxl" into this directory?
2014-05-28 11:36:11	mitch-_	i think thats what it's missing
2014-05-28 11:36:27	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-28 11:36:40	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 11:36:47	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 11:36:47	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Client Quit)
2014-05-28 11:36:55	-->	caleb_ (textual@nat/rackspace/x-knddsxgusuurotkz) has joined #python
2014-05-28 11:37:04	-->	syrius (~syrius@dead.stormtek.net) has joined #python
2014-05-28 11:37:10	-->	dunkel2 (~dunkel2@189.158.61.126) has joined #python
2014-05-28 11:37:18	desophos	KirkMcDonald: you mean a function that starts the HTMLParser instance in a try/except block?
2014-05-28 11:37:34	-->	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has joined #python
2014-05-28 11:38:03	<--	yedi (~yedi@201.199.88.62) has quit (Read error: No route to host)
2014-05-28 11:38:06	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 11:38:13	therealfakemoot	desophos: A function that wraps whatever call might raise your parsing exception in a try/except block, yes
2014-05-28 11:38:19	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-28 11:38:26	heedly	Yhg1s: that I don't know
2014-05-28 11:38:47	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 252 seconds)
2014-05-28 11:38:47	<--	FasTTo (~FasTTo@bl16-177-118.dsl.telepac.pt) has quit (Quit: Inactive)
2014-05-28 11:38:50	desophos	therealfakemoot, KirkMcDonald: ok thanks, i'll try that
2014-05-28 11:39:04	<--	jorgev (~jorgev@rrcs-67-52-158-66.west.biz.rr.com) has quit (Quit: Computer has gone to sleep.)
2014-05-28 11:39:18	<--	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has quit (Quit: Leaving.)
2014-05-28 11:39:29	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 11:39:40	morfeo_81	http://bpaste.net/show/Z4PiGK0ULV5y8YUFubFs/  I need to read many files some have only one line and I will treat in different way
2014-05-28 11:40:14	-->	Burgundy (~burgundy@188.25.126.27) has joined #python
2014-05-28 11:40:16	morfeo_81	how can say if a file have only one line print in different way?
2014-05-28 11:40:41	<--	pvt_petey (~pvt_petey@cpc11-colc6-2-0-cust131.7-4.cable.virginm.net) has quit
2014-05-28 11:40:43	-->	jleclanche (~adys@unaffiliated/adys) has joined #python
2014-05-28 11:41:06	KirkMcDonald	morfeo_81: You won't know whether a file has more than one line until you've read the second line.
2014-05-28 11:41:18	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 11:41:23	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Client Quit)
2014-05-28 11:41:53	KirkMcDonald	Well, I suppose you could read the first line and compare the file position to its length. But that's probably more complicated than just deferring the decision until you've read more than one line.
2014-05-28 11:41:57	morfeo_81	KirkMcDonald, yes I can parse that if there is no second row?
2014-05-28 11:42:09	KirkMcDonald	morfeo_81: Perhaps a for/else statement.
2014-05-28 11:42:25	-->	jalaziz (~jalaziz@67-207-118-18.static.wiline.com) has joined #python
2014-05-28 11:42:36	-->	commandocoding (~commandoc@59.180.154.115) has joined #python
2014-05-28 11:42:47	morfeo_81	KirkMcDonald, http://bpaste.net/show/Z4PiGK0ULV5y8YUFubFs/ The probles is how use rigth elif
2014-05-28 11:42:56	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 11:43:06	KirkMcDonald	Or just use enumerate() as you are doing, and do whatever you need to when you're on the second line.
2014-05-28 11:43:15	<--	yedi (~yedi@201.199.88.62) has quit (Ping timeout: 276 seconds)
2014-05-28 11:43:22	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 11:43:24	<--	commandocoding (~commandoc@59.180.154.115) has left #python
2014-05-28 11:43:29	KirkMcDonald	morfeo_81: Also, might I recommend the csv module?
2014-05-28 11:43:34	morfeo_81	KirkMcDonald, so I suppose if exist only one line and no more line..
2014-05-28 11:43:47	morfeo_81	KindOne,
2014-05-28 11:43:59	<--	masci (~masci@dynamic-adsl-94-37-173-189.clienti.tiscali.it) has quit (Remote host closed the connection)
2014-05-28 11:44:26	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 11:44:27	-->	ewh (~ewh@173-10-223-54-BusName-Nashville.hfc.comcastbusiness.net) has joined #python
2014-05-28 11:44:35	-->	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has joined #python
2014-05-28 11:44:36	-->	masci (~masci@dynamic-adsl-94-37-173-189.clienti.tiscali.it) has joined #python
2014-05-28 11:44:48	morfeo_81	KirkMcDonald, so you suggest to do like this if i[0] = 1: do something else: print
2014-05-28 11:44:57	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Quit: Computer has gone to sleep.)
2014-05-28 11:45:00	<--	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-05-28 11:45:09	Draconis	morfeo_81, what are you trying to do, just skip the header?
2014-05-28 11:45:32	KirkMcDonald	morfeo_81: Well, I'm still not totally sure what the problem you are ultimately trying to solve is.
2014-05-28 11:45:41	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 11:46:18	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Quit: Leaving.)
2014-05-28 11:46:24	morfeo_81	Draconis, yes I want to skip the first line and if I read file with only the header I want to print the header
2014-05-28 11:47:07	<--	mFacenet (~mFacenet@unaffiliated/mfacenet) has quit (Ping timeout: 240 seconds)
2014-05-28 11:47:39	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 11:47:40	-->	b4rbz (~barbz@ool-18e42f45.dyn.optonline.net) has joined #python
2014-05-28 11:47:54	-->	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has joined #python
2014-05-28 11:48:19	<--	ragsagar (~ragsagar@unaffiliated/ragsagar) has quit (Ping timeout: 252 seconds)
2014-05-28 11:48:23	-->	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has joined #python
2014-05-28 11:48:26	<--	Typo (~Typomatic@unaffiliated/typo) has quit (Ping timeout: 255 seconds)
2014-05-28 11:48:30	<--	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has left #python
2014-05-28 11:48:37	<--	masci (~masci@dynamic-adsl-94-37-173-189.clienti.tiscali.it) has quit (Ping timeout: 245 seconds)
2014-05-28 11:48:41	-->	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has joined #python
2014-05-28 11:49:26	-->	ptrv (~ptrv@p57A05D84.dip0.t-ipconnect.de) has joined #python
2014-05-28 11:49:36	-->	jpj (~jpj@115.241.31.107) has joined #python
2014-05-28 11:49:37	<--	thelinuxkid (~thelinuxk@66.172.11.64) has quit (Quit: ZNC - http://znc.in)
2014-05-28 11:49:45	-->	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has joined #python
2014-05-28 11:49:47	--	mission_ is now known as mission
2014-05-28 11:49:50	-->	cardboard (~cardboard@DHCP-159-220.caltech.edu) has joined #python
2014-05-28 11:49:55	morfeo_81	KirkMcDonald,  with this code if ther is more than one row or ony one I print the first line sowhat I want is print the first row only if there is no more rows http://bpaste.net/show/QnWWsHZaNviOf30GvuCk/
2014-05-28 11:50:11	-->	sardok (~sinan@94.122.8.197) has joined #python
2014-05-28 11:50:34	Draconis	morfeo_81,  you can get just the header by doing something like: header_line = next(p)
2014-05-28 11:50:51	Draconis	then for line in p: do stuff
2014-05-28 11:51:06	-->	Typo (~Typomatic@unaffiliated/typo) has joined #python
2014-05-28 11:51:07	cdunklau	motsu: KeyboardInterrupt is the exception that gets raised when the user hits ctrl+C
2014-05-28 11:51:12	<--	Auv (~jack@unaffiliated/auv5) has quit (Quit: WeeChat 1.0-dev)
2014-05-28 11:51:21	morfeo_81	Draconis, but I I have only one line I have a error
2014-05-28 11:51:40	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-28 11:51:46	adamsilver	guys how can I change 'Mike' to 'Joe' in this list of dicts: c = [{'a': 1, 'name': 'john'}, {'a': 21, 'name': 'Mike'}]
2014-05-28 11:51:51	Draconis	your advancing the iterator, technically the for loop will never run if its only 1 line
2014-05-28 11:52:14	cdunklau	adamsilver: iterate over the list, find where name is Mike, and change it to Joe
2014-05-28 11:52:50	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 11:52:51	adamsilver	cdunklau: so I need to rebuild the list from scratch?
2014-05-28 11:53:02	cdunklau	adamsilver: what gave you that idea
2014-05-28 11:53:11	<--	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-05-28 11:53:13	adamsilver	cdunklau: your answer :)
2014-05-28 11:53:41	morfeo_81	Draconis, so in that case I can'use print on the loop http://bpaste.net/show/6iTNJrhPTCcMTUKHkyMU/
2014-05-28 11:53:49	morfeo_81	Draconis, thanks so much!!
2014-05-28 11:53:53	cdunklau	adamsilver: change the value to 'Joe' in the dict for the key 'name'
2014-05-28 11:53:54	-->	sedeki (~textual@unaffiliated/sedeki) has joined #python
2014-05-28 11:53:58	<--	jpj (~jpj@115.241.31.107) has quit (Client Quit)
2014-05-28 11:54:27	-->	foist (~alex@38.69.142.159) has joined #python
2014-05-28 11:54:37	-->	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has joined #python
2014-05-28 11:54:38	adamsilver	I don't understand...
2014-05-28 11:54:43	Draconis	morfeo_81, no problem, solved your problem?
2014-05-28 11:55:02	cdunklau	adamsilver: which part?
2014-05-28 11:55:51	foist	I can't install Pillow in pip. I'm getting this: http://www.dpaste.com/14YDQN5/ I already tried 'export ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future'
2014-05-28 11:55:52	morfeo_81	Draconis, Yes thanks so much!!
2014-05-28 11:55:55	foist	Anyone know what's up?
2014-05-28 11:56:09	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 11:56:22	cdunklau	foist: wouldn't it be CFLAGS?
2014-05-28 11:56:39	<--	aljohri (~atul@wireless-165-124-129-66.nuwlan.northwestern.edu) has quit (Quit: aljohri)
2014-05-28 11:56:58	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-179.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 11:56:59	adamsilver	cdunklau: here's why I am trying to do: http://bpaste.net/show/Wpoz6TEYncrWVUAYZhRM/
2014-05-28 11:57:13	<--	morfeo_81 (~mauro@2.192.29.96) has quit (Quit: Leaving)
2014-05-28 11:57:23	adamsilver	little correction: http://bpaste.net/show/8mCfCZsgqVXzmxG2t496/
2014-05-28 11:57:24	foist	cdunklau: I tried some cflags stuff too; didn't work either.
2014-05-28 11:57:52	cdunklau	foist: should just need CFLAGS=-Wunused-command-line-argument-hard-error-in-future
2014-05-28 11:57:55	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 11:58:44	foist	cdunklau: doesn't work. Although, I'm doing 'set CFLAGS -Wunused-command-line-argument-hard-error-in-future' because I use fish.
2014-05-28 11:58:50	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 11:58:56	-->	Guest98316 (~Nicholas@67-210-183-162.fidnet.com) has joined #python
2014-05-28 11:58:59	cdunklau	foist: try it with normal pip in a venv
2014-05-28 11:59:11	cdunklau	i don't know anything about fish
2014-05-28 11:59:13	--	Guest98316 is now known as Siberian_Tiger
2014-05-28 12:00:14	cdunklau	adamsilver: what is `i`
2014-05-28 12:00:19	cdunklau	adamsilver: print it's repr()
2014-05-28 12:00:30	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 12:00:39	<--	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has quit (Quit: wwnnbb)
2014-05-28 12:01:03	<--	le_tropico (~le_tropic@194.44.174.106) has quit (Quit: Leaving)
2014-05-28 12:01:09	-->	DiabloHorn (~DiabloHor@unaffiliated/diablohorn) has joined #python
2014-05-28 12:01:36	cdunklau	blarg, gotta go
2014-05-28 12:01:39	 *	cdunklau &
2014-05-28 12:02:55	<--	dogeydogey (~dogeydoge@ip98-169-134-239.dc.dc.cox.net) has quit (Ping timeout: 265 seconds)
2014-05-28 12:03:38	<--	avoinea (~avoinea@85.9.55.194) has quit (Ping timeout: 240 seconds)
2014-05-28 12:04:05	-->	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has joined #python
2014-05-28 12:04:09	-->	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has joined #python
2014-05-28 12:04:10	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-28 12:04:48	<--	dommetysk (~dommetysk@p5B13117A.dip0.t-ipconnect.de) has quit (Quit: dommetysk)
2014-05-28 12:04:49	[Tritium]	is it just me, that when I come across a repo on github with pyc's committed, fork the repo, delete the pycs, and update/create a gitignore for the user and send a PR?  am I the only person who does this for random people?
2014-05-28 12:05:01	Draconis	adamsilver, basic crude implementation of what you want: http://bpaste.net/show/Z9jDgoTTAK8sAmHThc3V/
2014-05-28 12:05:08	Pici	[Tritium]: yes.
2014-05-28 12:05:17	<--	shn228 (~json@cpc19-dals19-2-0-cust8.20-2.cable.virginm.net) has quit (Ping timeout: 252 seconds)
2014-05-28 12:05:50	adamsilver	cdunklau: here's the repr http://bpaste.net/show/0VwtSvuFdWxvC3Mzkaz0/
2014-05-28 12:06:16	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-176.dynamic.uwaterloo.ca) has joined #python
2014-05-28 12:06:19	<--	eliezerfot123 (~Thunderbi@200.11.230.242) has quit (Quit: eliezerfot123)
2014-05-28 12:07:25	foist	cdunklau: well, it worked in bash.
2014-05-28 12:07:30	-->	wwnnbb (~wwnnbb@85.112.113.2) has joined #python
2014-05-28 12:07:37	<--	zoidfarb (~bjmc@50-200-5-5-static.hfc.comcastbusiness.net) has left #python
2014-05-28 12:07:40	foist	I'd like to get it working in fish though. I'll play around with it. Thanks.
2014-05-28 12:07:48	-->	morfeo_81 (~mauro@2.192.29.96) has joined #python
2014-05-28 12:07:51	-->	eka_ (~eka@190.117.246.241) has joined #python
2014-05-28 12:07:58	<--	eka (~eka@190.117.247.36) has quit (Read error: Connection reset by peer)
2014-05-28 12:08:07	-->	norn_ (~norn@cgn-pool-83-219-138-135.tis-dialog.ru) has joined #python
2014-05-28 12:08:10	Draconis	adamsilver, actually http://bpaste.net/show/PcxZQnpzjzq0FDnkGTF2/   don't work with dicts too often. Too early for me :)
2014-05-28 12:08:23	-->	Heimdall (~Heimdall@AMontsouris-652-1-185-226.w90-24.abo.wanadoo.fr) has joined #python
2014-05-28 12:08:34	<--	Heimdall (~Heimdall@AMontsouris-652-1-185-226.w90-24.abo.wanadoo.fr) has left #python
2014-05-28 12:08:43	-->	Ephexeve (~benmezger@187.65.231.51) has joined #python
2014-05-28 12:09:06	-->	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has joined #python
2014-05-28 12:09:16	adamsilver	Draconis: ok, i was trying it, thanks
2014-05-28 12:09:22	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-28 12:09:34	foist	Figured it out. Thanks again, cdunklau.
2014-05-28 12:09:43	[Tritium]	Draconis: python is (essentially) dicts all the way down
2014-05-28 12:09:43	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2014-05-28 12:09:46	morfeo_81	Draconis, Sorry I realize continue to gave me a problem http://bpaste.net/show/S1M4b9hEOnaF1hqv7jRh/
2014-05-28 12:09:49	Avaris	adamsilver: line 7, this -> request.session['cart'][i]['meta']['quantity'] should be i['meta']['quantity']
2014-05-28 12:09:54	-->	mutley89 (~mutley89@cpc3-swin15-2-0-cust158.3-1.cable.virginm.net) has joined #python
2014-05-28 12:10:06	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 12:10:17	-->	wwnnbb_ (~wwnnbb@trancom-gw.anders.ru) has joined #python
2014-05-28 12:10:19	<--	OOPMan (~adamj@41.2.214.60) has quit (Ping timeout: 252 seconds)
2014-05-28 12:10:24	Avaris	adamsilver: err... possible `item` instead of `i` though
2014-05-28 12:10:24	Draconis	[Tritium], I'm addicted to the sugar
2014-05-28 12:10:45	<--	C0deMaver1ck (~C0deMaver@such.doge.wow.uberbot.ru) has left #python ("Leaving...")
2014-05-28 12:11:16	adamsilver	Avaris: but that will change it inside the loop only, I want to change my session dict
2014-05-28 12:11:17	[Tritium]	Draconis: some of the sugar is glucose and some of it is sucrose... you NEED some of the sugar (classes) and some you dont
2014-05-28 12:11:38	<--	wwnnbb (~wwnnbb@85.112.113.2) has quit (Ping timeout: 240 seconds)
2014-05-28 12:11:38	--	wwnnbb_ is now known as wwnnbb
2014-05-28 12:11:57	<--	ggp (~guilherme@143.106.196.234) has quit (Read error: Connection reset by peer)
2014-05-28 12:12:06	morfeo_81	http://bpaste.net/show/S1M4b9hEOnaF1hqv7jRh/ how can use if and else for print text if there is no more rows
2014-05-28 12:12:15	-->	ggp (~guilherme@143.106.196.234) has joined #python
2014-05-28 12:13:27	-->	tylrr (~textual@rrcs-173-197-114-202.west.biz.rr.com) has joined #python
2014-05-28 12:13:44	Avaris	adamsilver: nope, `i` is a reference to the dict in `request.session['cart']`. if you change `i`, the one in `request.session['cart']` will also change
2014-05-28 12:14:18	adamsilver	Avaris: okay I am trying this
2014-05-28 12:14:19	-->	macieks (~macieks@ip-222-135.ists.pl) has joined #python
2014-05-28 12:15:39	<--	Edifice7 (a7073701@gateway/web/freenode/ip.167.7.55.1) has quit (Quit: Page closed)
2014-05-28 12:16:38	Avaris	adamsilver: however, note that 'quantity' is a string. += might not do what you think
2014-05-28 12:17:06	<--	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has quit (Quit: AkashicLegend)
2014-05-28 12:17:17	blahsphemer	Is there a tool/plugin for any IDE/editor that would enter sphinx doc tags in python scripts that I create.
2014-05-28 12:17:36	<--	tilgovi (~randall@couchdb/committer/tilgovi) has quit (Remote host closed the connection)
2014-05-28 12:17:50	blahsphemer	Like adding an empty docstrings at the beginning of a function ...
2014-05-28 12:18:01	-->	sunya7a_ (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 12:18:22	-->	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has joined #python
2014-05-28 12:18:23	-->	michaelchum (uid26679@gateway/web/irccloud.com/x-vbjsrpllpizwrooq) has joined #python
2014-05-28 12:19:00	adamsilver	Avaris: It worked but why? python dict always iterate by reference not value?
2014-05-28 12:19:40	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-28 12:19:52	<--	ggp (~guilherme@143.106.196.234) has quit (Remote host closed the connection)
2014-05-28 12:20:07	-->	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has joined #python
2014-05-28 12:20:11	-->	neataroni (~neataroni@c-67-171-200-129.hsd1.or.comcast.net) has joined #python
2014-05-28 12:20:43	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Quit: Computer has gone to sleep.)
2014-05-28 12:20:47	<--	IchEsseDichAuf (~grek@blfd-4db0e36f.pool.mediaWays.net) has quit (Read error: Connection reset by peer)
2014-05-28 12:21:13	Avaris	adamsilver: for iterates over the objects. so `i` will refer to the same object inside the original dict. if you mutate `i`, obviously you're changing the object and the one in the original dict will be changed too
2014-05-28 12:21:56	-->	steveoh (~steveoh@remote.utah.gov) has joined #python
2014-05-28 12:22:01	morfeo_81	http://bpaste.net/show/zZ2PDE0wbMvs9cVs0tAU/ I want to print the header only if I have one row How can I do this?
2014-05-28 12:22:10	heedly	How do I pass a dialect to csv.DictReader(). I pass dialet=dialect, but get an error: "delimiter" must be an 1-character string
2014-05-28 12:22:11	steveoh	can you specify a single test in a .noserc file?
2014-05-28 12:22:26	-->	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has joined #python
2014-05-28 12:22:26	<--	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-28 12:22:31	-->	ompaul (~ompaul@unaffiliated/ompaul) has joined #python
2014-05-28 12:23:00	<--	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has quit (Ping timeout: 240 seconds)
2014-05-28 12:23:11	Draconis	morfeo_81, I don't understand. Just print the header before the for loop
2014-05-28 12:23:22	Draconis	if there is nothing else, it won't print anything
2014-05-28 12:23:38	adamsilver	Avaris: thank you so much
2014-05-28 12:23:46	-->	mijicd (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has joined #python
2014-05-28 12:24:03	-->	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has joined #python
2014-05-28 12:24:32	<--	simplisity (~simplisit@cpe-23-242-199-175.socal.res.rr.com) has quit (Quit: simplisity)
2014-05-28 12:25:05	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 252 seconds)
2014-05-28 12:25:24	-->	eliezerfot123 (~Thunderbi@200.11.230.242) has joined #python
2014-05-28 12:25:56	-->	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has joined #python
2014-05-28 12:26:00	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-176.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 12:26:19	<--	averagecase (~av@cl-3825.cgn-01.de.sixxs.net) has quit (Quit: Verlassend)
2014-05-28 12:26:27	-->	Zeedox (~quassel@h-141-127.a176.priv.bahnhof.se) has joined #python
2014-05-28 12:26:29	-->	eeriegeek (~eeriegeek@c-98-244-112-229.hsd1.va.comcast.net) has joined #python
2014-05-28 12:26:33	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 12:26:37	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 12:26:39	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 12:26:50	<--	jeffisabelle (~jeffisabe@85.110.126.115) has quit (Remote host closed the connection)
2014-05-28 12:27:07	<--	echevemaster (~echevemas@fedora/echevemaster) has quit (Remote host closed the connection)
2014-05-28 12:27:27	<--	morfeo_81 (~mauro@2.192.29.96) has quit (Ping timeout: 276 seconds)
2014-05-28 12:28:06	-->	morfeo_81 (~mauro@2.192.151.161) has joined #python
2014-05-28 12:28:10	<--	mijicd (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has quit (Remote host closed the connection)
2014-05-28 12:28:11	morfeo_81	hi!!
2014-05-28 12:28:15	-->	averagecase (~anon@dslb-094-221-216-065.pools.arcor-ip.net) has joined #python
2014-05-28 12:28:28	<--	likecolacola (~likecolac@54.Red-176-84-0.dynamicIP.rima-tde.net) has quit (Remote host closed the connection)
2014-05-28 12:28:31	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 12:28:36	<--	amigo (~amigo@unaffiliated/amigo) has quit (Quit: leaving)
2014-05-28 12:28:39	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Ping timeout: 252 seconds)
2014-05-28 12:28:53	adorver1	hi
2014-05-28 12:29:13	-->	mijicd (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has joined #python
2014-05-28 12:29:18	Draconis	morfeo_81, I don't understand your requirements. So if the file only has the header, you want it to print the header.... if it has the header and data with it, what do you want to do?
2014-05-28 12:29:25	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 12:30:20	<--	lechatnoir (~doge@200.212.22.178) has quit (Read error: Connection reset by peer)
2014-05-28 12:30:23	-->	blakeblade (blakeblade@gateway/shell/elitebnc/x-crlveslvgmnunvet) has joined #python
2014-05-28 12:30:33	-->	Nitori (~kappa@chireiden.net) has joined #python
2014-05-28 12:30:36	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 12:30:54	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 12:31:15	morfeo_81	Draconis, if the second line not exist I want to print only the header http://bpaste.net/show/D161Th47Ur4rGj5wRLF3/
2014-05-28 12:31:24	<--	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has quit (Read error: Connection reset by peer)
2014-05-28 12:31:35	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-28 12:31:50	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 12:31:58	morfeo_81	Draconis, I want to print header only in the condition I don't have rows more than 1
2014-05-28 12:33:43	<--	Zeedox (~quassel@h-141-127.a176.priv.bahnhof.se) has quit (Quit: No Ping reply in 180 seconds.)
2014-05-28 12:33:56	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 12:34:08	-->	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has joined #python
2014-05-28 12:34:11	-->	davividal (~davi.vida@187.59.6.154) has joined #python
2014-05-28 12:34:18	<--	mijicd (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has quit (Remote host closed the connection)
2014-05-28 12:34:20	<--	umair (~umair@182.178.25.84) has quit (Ping timeout: 255 seconds)
2014-05-28 12:34:26	-->	VladVP (~VladVP@185.37.87.102) has joined #python
2014-05-28 12:35:01	aberrant	is testing for list equality as intuitive as a == b?
2014-05-28 12:35:07	-->	umair (~umair@182.178.81.161) has joined #python
2014-05-28 12:35:12	-->	mijicd (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has joined #python
2014-05-28 12:35:13	-->	Zeedox (~quassel@h-141-127.a176.priv.bahnhof.se) has joined #python
2014-05-28 12:35:14	-->	Johannes` (~jal@cm-84.209.90.205.getinternet.no) has joined #python
2014-05-28 12:35:15	<--	norn (~norn@cgn-pool-83-219-138-135.tis-dialog.ru) has quit (Ping timeout: 252 seconds)
2014-05-28 12:35:17	<--	norn_ (~norn@cgn-pool-83-219-138-135.tis-dialog.ru) has quit (Ping timeout: 245 seconds)
2014-05-28 12:35:24	aberrant	that is, each element of list a equals the corresponding element in list b
2014-05-28 12:35:33	Avaris	aberrant: yes
2014-05-28 12:35:35	-->	lechatnoir (~doge@200.212.22.178) has joined #python
2014-05-28 12:35:38	aberrant	wow, cool
2014-05-28 12:35:38	<--	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has quit (Ping timeout: 272 seconds)
2014-05-28 12:35:45	-->	Yoriz (~chatzilla@cpc23-farn5-2-0-cust23.6-2.cable.virginm.net) has joined #python
2014-05-28 12:35:52	<--	decoponio (~decoponio@pon059-128.kcn.ne.jp) has quit (Quit: Leaving...)
2014-05-28 12:35:56	Johannes`	hi, cython 0.20 won't run with python 3.3 - syntax error reading Cython/Compiler/Main.py
2014-05-28 12:36:00	Johannes`	can't find any info about that
2014-05-28 12:36:07	morfeo_81	http://bpaste.net/show/D161Th47Ur4rGj5wRLF3/ how can print "no" or the header if not exist second row?
2014-05-28 12:36:11	-->	shadfc (~shadfc@64.244.57.226) has joined #python
2014-05-28 12:36:12	<--	caleb_ (textual@nat/rackspace/x-knddsxgusuurotkz) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 12:36:45	keypusher	morfeo_81: http://bpaste.net/show/76iO3UCqK7pPwrgxp5Lx/
2014-05-28 12:36:57	Draconis	morfeo_81, so if there is data, you do not want the header included?
2014-05-28 12:37:00	shadfc	anyone know the right way to modify only the data of an S3 key using boto?  meaning, how do i get the key and store new content to it but preserve ACL and other metadata?
2014-05-28 12:37:24	<--	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has quit (Ping timeout: 240 seconds)
2014-05-28 12:37:48	<--	cardboard (~cardboard@DHCP-159-220.caltech.edu) has quit (Remote host closed the connection)
2014-05-28 12:38:37	keypusher	pretty sure key is calculated at runtime, why do you need to modify key content?
2014-05-28 12:38:57	morfeo_81	Draconis, no
2014-05-28 12:39:05	-->	mathemancer (~mathemanc@198.15.70.2) has joined #python
2014-05-28 12:39:16	Avaris	morfeo_81: http://bpaste.net/show/t70KOgz43ZGUs0O73J7K/
2014-05-28 12:39:17	morfeo_81	Draconis, only if there is only one row
2014-05-28 12:39:20	morfeo_81	keypusher, Thanks so much!
2014-05-28 12:40:00	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2014-05-28 12:40:14	shadfc	keypusher: just trying to modify file files/objects that currently exist on S3 without borking their ACLs and metadata
2014-05-28 12:40:24	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 12:40:25	-->	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has joined #python
2014-05-28 12:40:26	<--	Shukaro (~Shukaro@cpe-69-135-211-191.woh.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-05-28 12:40:32	morfeo_81	Avaris, thanks so much!!
2014-05-28 12:40:33	<--	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has quit (Quit: Leaving)
2014-05-28 12:41:01	heedly	How do I pass a dialect to csv.DictReader(). I pass dialet=dialect, but get an error: "delimiter" must be an 1-character string
2014-05-28 12:41:02	-->	jkyle1 (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-28 12:41:06	-->	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-28 12:41:19	Avaris	heedly: show the traceback
2014-05-28 12:41:27	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 12:41:30	<--	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has quit (Quit: MindlessDrone)
2014-05-28 12:41:41	<--	Zeedox (~quassel@h-141-127.a176.priv.bahnhof.se) has quit (Ping timeout: 264 seconds)
2014-05-28 12:41:53	<--	morfeo_81 (~mauro@2.192.151.161) has quit (Quit: Leaving)
2014-05-28 12:41:54	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-28 12:42:21	keypusher	shadfc: does that require you interact with the key?  can't you just put the file you want to update again?  acls and metadata should stay, no?
2014-05-28 12:42:37	ELFrederich	anyone know how to specify port with web.py without using command line arg?
2014-05-28 12:42:55	<--	Deesl (bsdboy@redhat/deesl) has quit (Quit: Leaving...)
2014-05-28 12:43:06	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 12:43:14	shadfc	keypusher: apparently not, with boto at least
2014-05-28 12:43:18	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 240 seconds)
2014-05-28 12:43:18	<--	thekkid (~thekkid@c-68-57-205-28.hsd1.il.comcast.net) has quit (Quit: leaving)
2014-05-28 12:43:26	<--	eliezerfot123 (~Thunderbi@200.11.230.242) has quit (Remote host closed the connection)
2014-05-28 12:43:34	<--	SebSemmi (~SebSemmi@e178193149.adsl.alicedsl.de) has quit (Quit: brb)
2014-05-28 12:44:02	<--	deniska (~denis@unaffiliated/deniska) has quit (Quit: Leaving.)
2014-05-28 12:44:20	<--	felipeduardo (~felipedua@189.115.4.196) has quit (Remote host closed the connection)
2014-05-28 12:44:27	keypusher	shadfc: if you put the file again, with new data, what happens to the acls and meta?
2014-05-28 12:44:47	-->	jorgev (~jorgev@rrcs-67-52-158-66.west.biz.rr.com) has joined #python
2014-05-28 12:45:28	shadfc	acl gets set back to owner access only, custom metadata like content-encoding, cache-control all get lost
2014-05-28 12:45:34	<--	ompaul (~ompaul@unaffiliated/ompaul) has quit (Quit: and zebedee said its time for other stuff)
2014-05-28 12:45:54	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 12:46:08	-->	eliezerfot123 (~Thunderbi@200.11.230.242) has joined #python
2014-05-28 12:46:12	russw	Does anyone now of any python Exceptions that are constructed with more than one argument?  Or any that use a non-string first argument?
2014-05-28 12:46:26	russw	s/now/know/
2014-05-28 12:46:34	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-28 12:46:37	<--	sunya7a_ (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 252 seconds)
2014-05-28 12:46:43	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 240 seconds)
2014-05-28 12:46:48	<--	kazagistar (~kazagista@host-174-45-72-127.bzm-mt.client.bresnan.net) has quit (Ping timeout: 258 seconds)
2014-05-28 12:46:49	-->	felipeduardo (~felipedua@189.115.4.196) has joined #python
2014-05-28 12:47:03	heedly	Avaris: It's part of a django program, but here is the relivent parts: http://dpaste.com/0Y9K3PN/
2014-05-28 12:47:37	heedly	russw: personal ones
2014-05-28 12:47:47	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-28 12:47:49	-->	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has joined #python
2014-05-28 12:48:06	russw	heedly: right... I was wondering if I should have specified "public exceptions" :)
2014-05-28 12:48:41	<--	tom94 (~tom@2001:630:d0:ed04:ae72:89ff:fe01:2fed) has quit (Quit: Konversation terminated!)
2014-05-28 12:49:02	russw	heedly: any particular reason you chose to capture something other than a basic description (like the old-school 'message')?
2014-05-28 12:49:22	<--	skaflem (~skaflem@ti0099a430-0965.bb.online.no) has quit (Quit: Leaving)
2014-05-28 12:50:06	-->	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined #python
2014-05-28 12:50:08	-->	ggp (~guilherme@177.188.48.117) has joined #python
2014-05-28 12:50:36	aberrant	man, this is tough
2014-05-28 12:50:36	<--	yedi (~yedi@201.199.88.62) has quit (Ping timeout: 240 seconds)
2014-05-28 12:50:56	-->	xcesariox (~xcesariox@101.127.20.151) has joined #python
2014-05-28 12:50:58	<--	xcesariox (~xcesariox@101.127.20.151) has quit (Max SendQ exceeded)
2014-05-28 12:51:07	Avaris	heedly: odd... that looks correct
2014-05-28 12:51:09	<--	quake_guy (~brett@gos-bketter-d3.uwm.edu) has quit (Remote host closed the connection)
2014-05-28 12:51:44	<--	vandrew (~vandrew@86.122.229.114) has quit (Quit: Leaving)
2014-05-28 12:52:11	aberrant	I have a dict of lists. I need to “merge” all the identical lists under a new index name. Not sure how to iterate through this to get all of them.
2014-05-28 12:52:13	-->	ncthom91_ (ncthom91@64.125.189.90) has joined #python
2014-05-28 12:52:29	<--	Johannes` (~jal@cm-84.209.90.205.getinternet.no) has left #python
2014-05-28 12:52:37	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 12:52:38	heedly	russw: It was necessary
2014-05-28 12:52:40	Avaris	heedly: something wrong with the dialect maybe?
2014-05-28 12:52:44	<--	someprimetime (~someprime@162.245.21.10) has quit (Quit: someprimetime)
2014-05-28 12:52:49	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-05-28 12:52:53	keypusher	shadfc: looks like maybe that's just how s3 itself works.  one workaround would be to get the acl and metadata of object before update, send the new file data, then set acl and meta back to old values.
2014-05-28 12:52:59	<--	oleo (~oleo@xdsl-78-35-146-104.netcologne.de) has quit (Remote host closed the connection)
2014-05-28 12:53:08	heedly	Avaris: it's what I get back from Sniffer().sniff()
2014-05-28 12:53:10	-->	TheFakeazneD525 (~denza252@unaffiliated/denza252) has joined #python
2014-05-28 12:53:41	<--	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has quit (Ping timeout: 252 seconds)
2014-05-28 12:53:49	-->	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has joined #python
2014-05-28 12:54:03	<--	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has quit (Quit: innertracks)
2014-05-28 12:54:10	-->	someprimetime (~someprime@162.245.21.10) has joined #python
2014-05-28 12:54:41	-->	ihitdisplay (~aaaaaa@187.121.53.62) has joined #python
2014-05-28 12:55:18	Avaris	heedly: then, i have no idea
2014-05-28 12:55:19	<--	Ephexeve (~benmezger@187.65.231.51) has quit (Remote host closed the connection)
2014-05-28 12:55:21	-->	Ephexeve_ (~benmezger@187.65.231.51) has joined #python
2014-05-28 12:55:29	<--	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Ping timeout: 264 seconds)
2014-05-28 12:55:29	<--	rippa (~rippa@176.100.246.238) has quit (Quit: {#`%${%&`+'${`%&NO CARRIER)
2014-05-28 12:55:59	-->	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has joined #python
2014-05-28 12:56:05	<--	Porkepix (~Porkepix@212-83-163-69.rev.poneytelecom.eu) has quit (Ping timeout: 264 seconds)
2014-05-28 12:56:40	<--	bmispelon (~bmispelon@django/committer/bmispelon) has quit (Read error: Connection timed out)
2014-05-28 12:58:09	<--	Cuppa_coffee (~Beast@5ED4E499.cm-7-5d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-05-28 12:58:55	<--	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has quit
2014-05-28 12:58:58	-->	oleo (~oleo@xdsl-78-35-146-104.netcologne.de) has joined #python
2014-05-28 12:59:22	-->	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has joined #python
2014-05-28 12:59:26	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 13:00:06	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-172.dynamic.uwaterloo.ca) has joined #python
2014-05-28 13:01:54	<--	throwinghammers (~hcs@unaffiliated/throwinghammers) has quit (Ping timeout: 276 seconds)
2014-05-28 13:01:58	<--	plex0r (~plex0r@173-160-70-101-atlanta.hfc.comcastbusiness.net) has quit (Read error: Connection reset by peer)
2014-05-28 13:02:11	-->	adrian_berg (~adrian@unaffiliated/adrian-berg/x-4249779) has joined #python
2014-05-28 13:02:17	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 13:02:24	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-28 13:02:47	-->	guhcampos (~guhcampos@186.249.5.2) has joined #python
2014-05-28 13:02:52	<--	jnoob22 (~jnoob@c-76-25-106-67.hsd1.co.comcast.net) has quit (Quit: Leaving)
2014-05-28 13:02:56	adrian_berg	what is a method object?
2014-05-28 13:02:59	adrian_berg	https://docs.python.org/2/reference/datamodel.html
2014-05-28 13:03:10	-->	warptangent (~warptan@192.227.139.148) has joined #python
2014-05-28 13:03:13	adrian_berg	A user-defined method object combines a class, a class instance (or None) and any callable object (normally a user-defined function).
2014-05-28 13:03:22	adrian_berg	https://docs.python.org/2/reference/datamodel.html
2014-05-28 13:03:30	adrian_berg	is that a typo?
2014-05-28 13:03:41	-->	SilentGhost (~SilentGho@h51580eb1.seluesp.dyn.perspektivbredband.net) has joined #python
2014-05-28 13:03:45	-->	guilhermebr (~guilherme@179.182.229.70) has joined #python
2014-05-28 13:04:40	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-28 13:05:02	KirkMcDonald	adrian_berg: Is what a typo?
2014-05-28 13:05:03	-->	w4|k3r (~w4|k3r@106.51.153.138) has joined #python
2014-05-28 13:05:07	-->	gkap (~gkap@c-71-237-208-229.hsd1.or.comcast.net) has joined #python
2014-05-28 13:05:11	-->	cirwin (~Adium@wiktionary/ConradIrwin) has joined #python
2014-05-28 13:05:12	<--	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has quit (Ping timeout: 258 seconds)
2014-05-28 13:05:19	cirwin	is the shutdown process documented somewhere?
2014-05-28 13:05:20	-->	LysergicDreams (~Lysergia@208-46-125-98.dia.static.qwest.net) has joined #python
2014-05-28 13:05:30	cirwin	I'm getting on errors in my exception handler about sys being None
2014-05-28 13:05:39	cirwin	s/on/odd
2014-05-28 13:05:48	<--	theslow1 (~theslow1@host-173-255-076-249.tcc.on.ca) has quit (Ping timeout: 276 seconds)
2014-05-28 13:05:58	-->	theslow1 (~theslow1@host-173-255-076-249.tcc.on.ca) has joined #python
2014-05-28 13:05:58	KirkMcDonald	cirwin: Yes. Part of the shutdown process involves setting module-level names to None.
2014-05-28 13:05:59	-->	nect (~nect@igate.tc.faa.gov) has joined #python
2014-05-28 13:06:02	adrian_berg	KirkMcDonald: "method object"
2014-05-28 13:06:04	cirwin	yeah, I found this http://bugs.python.org/issue1731
2014-05-28 13:06:12	KirkMcDonald	adrian_berg: That is not a typo, no.
2014-05-28 13:06:25	cirwin	is it safe to re-import things, or should I just abort out and hope the exception wasn't that important anyway
2014-05-28 13:06:44	motsu	hey all, im trying to catch sigint and end a sub process. i found this http://stackoverflow.com/questions/1112343/how-do-i-capture-sigint-in-python which is promising. my question though, is how do i pass the process handle to the function
2014-05-28 13:06:50	cirwin	http://bugs.python.org/issue7336 too
2014-05-28 13:07:07	KirkMcDonald	cirwin: Yes.
2014-05-28 13:07:16	adrian_berg	KirkMcDonald: Can you give an example of a method object?
2014-05-28 13:07:18	cirwin	cool
2014-05-28 13:07:21	KirkMcDonald	cirwin: That is...
2014-05-28 13:07:25	KirkMcDonald	cirwin: Re-importing won't help.
2014-05-28 13:07:45	adrian_berg	I take it method objects are just shorthand for methods the further I read into this
2014-05-28 13:07:45	cirwin	oh
2014-05-28 13:07:47	cirwin	ok
2014-05-28 13:07:52	adrian_berg	"Everything's an object"
2014-05-28 13:07:54	KirkMcDonald	cirwin: Is this coming from some object's __del__ method?
2014-05-28 13:08:20	cirwin	sys.excepthook
2014-05-28 13:08:31	adrian_berg	What is the difference between a method object and a function object?
2014-05-28 13:08:39	<--	FinboySlick (~shark@74.117.40.10) has left #python ("PONG :morgan.freenode.net")
2014-05-28 13:08:50	<--	mexi_d3_ (~mexi@host109-149-116-243.range109-149.btcentralplus.com) has quit (Quit: Leaving)
2014-05-28 13:08:52	w4|k3r	I have a noobish question - suppose I have written a class in a someTestFile.py -- can I use this class in my main.py file?
2014-05-28 13:08:53	KirkMcDonald	adrian_berg: For example: http://paste.pound-python.org/show/vQnxFeaLfcKdgShfGypy/
2014-05-28 13:09:12	ihitdisplay	http://runnable.com/U4Y81Y9ZgZgE1VS8/output I want the result of that sum to be updated without the need to click "calculate server side"...  as you enter the value in the textbox the result is updated
2014-05-28 13:09:26	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 13:09:36	ihitdisplay	how do I do this?
2014-05-28 13:09:50	-->	kcj (~casey@unaffiliated/kcj) has joined #python
2014-05-28 13:09:58	w4|k3r	I am asking if I could do just as I would do include "<custom header here>" in c++
2014-05-28 13:09:59	Pici	ihitdisplay: that link doesn't work.
2014-05-28 13:10:08	KirkMcDonald	w4|k3r: You could import it.
2014-05-28 13:10:24	KirkMcDonald	w4|k3r: Imports in Python are not quite the same thing as #include in C++, but they serve the same purpose.
2014-05-28 13:10:28	sbuettner	w4|k3r, 'import someTestFile' then access it like 'someinstance = someTestFile.SomeClassName()'
2014-05-28 13:10:33	<--	Burgundy (~burgundy@188.25.126.27) has quit (Ping timeout: 252 seconds)
2014-05-28 13:10:38	-->	AnYaDi (~AnYaDi@eduroam-169-222.dyn.carleton.edu) has joined #python
2014-05-28 13:11:22	ihitdisplay	Pici,  sorry http://web-1190b1d8-175d-4e94-8c70-a987947e4cf1.runnable.com/
2014-05-28 13:11:25	w4|k3r	KirkMcDonald, Will it get imported from the same directory where my main.py is present
2014-05-28 13:11:32	-->	Zzeiss (~wsy@mumble144109.merl.com) has joined #python
2014-05-28 13:11:38	KirkMcDonald	w4|k3r: Sure.
2014-05-28 13:12:11	w4|k3r	KirkMcDonald, Oh, I never tried that out -- thanks man, I was writing all my code in one file only
2014-05-28 13:12:17	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 264 seconds)
2014-05-28 13:12:23	w4|k3r	KirkMcDonald, I will check right away
2014-05-28 13:12:32	-->	andtorg (~andtorg@87.18.94.71) has joined #python
2014-05-28 13:13:20	<--	AnYaDi (~AnYaDi@eduroam-169-222.dyn.carleton.edu) has quit (Client Quit)
2014-05-28 13:13:22	Pici	ihitdisplay: Are you sure this is a python question?
2014-05-28 13:13:30	adrian_berg	KirkMcDonald: okay, so a method object is just a method within an object
2014-05-28 13:13:47	-->	lad1337 (~Adium@pD9F767BA.dip0.t-ipconnect.de) has joined #python
2014-05-28 13:13:49	-->	nande_ (~quassel@190.183.4.91) has joined #python
2014-05-28 13:13:52	-->	Biopandemic (~jake@unaffiliated/biopandemic) has joined #python
2014-05-28 13:14:06	-->	jimklo (~jimklo@192.12.16.119) has joined #python
2014-05-28 13:14:17	-->	t4bs (~Trevor@ppp203-122-192-170.static.internode.on.net) has joined #python
2014-05-28 13:14:21	-->	sedeki (~textual@unaffiliated/sedeki) has joined #python
2014-05-28 13:14:33	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 13:14:43	<--	Josse|BNC (uid29288@gateway/web/irccloud.com/x-ckwgbqmbsfcscvul) has quit (Quit: Connection closed for inactivity)
2014-05-28 13:15:15	ihitdisplay	Pici, http://runnable.com/UiPhLHanceFYAAAP/how-to-perform-ajax-in-flask-for-python click "Run"
2014-05-28 13:15:26	<--	EPG (~EPG@pC19EA0F5.dip0.t-ipconnect.de) has quit (Quit: EPG)
2014-05-28 13:15:34	-->	MaybeSimon (4c737d57@gateway/web/freenode/ip.76.115.125.87) has joined #python
2014-05-28 13:15:40	-->	SebSemmi (~SebSemmi@e178193149.adsl.alicedsl.de) has joined #python
2014-05-28 13:15:47	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 13:15:48	<--	rezzack (~rezzack@unaffiliated/rezzack) has quit (Quit: Leaving.)
2014-05-28 13:16:02	MaybeSimon	Hey, can someone help a beginner with something really quick?
2014-05-28 13:16:07	-->	rezzack (~rezzack@unaffiliated/rezzack) has joined #python
2014-05-28 13:16:14	rivarun	MaybeSimon: lots of people. go ahead and ask
2014-05-28 13:16:45	-->	thesheff17 (~thesheff1@24-148-57-183.c3-0.lem-ubr1.chi-lem.il.cable.rcn.com) has joined #python
2014-05-28 13:16:53	SilentGhost	ihitdisplay: your question has nothing to do with python, your question is about interface that's (could be) written in javascript
2014-05-28 13:17:01	MaybeSimon	I'm trying to wrtie a code that allows a user to input three integer numbers, and then have the program produce the average of those three numbers. This is what I have so far:
2014-05-28 13:17:07	MaybeSimon	 var1 = raw_input("Please enter a number: ")  var2 = raw_input("Please enter a second number: ")  var3 = raw_input("Please enter a third number: ") print "The average of your three number inputs are", (var1) + (var2) + (var3)
2014-05-28 13:17:07	<--	shadfc (~shadfc@64.244.57.226) has left #python ("Leaving...")
2014-05-28 13:17:07	<--	lorenzosu (~lorenzosu@149.154.157.185) has quit (Remote host closed the connection)
2014-05-28 13:17:09	-->	tom94 (~tom@152.78.171.10) has joined #python
2014-05-28 13:17:26	MaybeSimon	But for some reason it's treating the inputs as objects and so they're not being added or divded :'(
2014-05-28 13:17:37	<--	dude-x (~dude-x@30.sub-70-208-83.myvzw.com) has quit (Remote host closed the connection)
2014-05-28 13:17:51	SilentGhost	MaybeSimon: raw_input returns string
2014-05-28 13:17:51	<--	blakeblade (blakeblade@gateway/shell/elitebnc/x-crlveslvgmnunvet) has quit (Quit: frequency change approved)
2014-05-28 13:18:09	<--	peripeteian (~grant@c-98-230-43-132.hsd1.fl.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-28 13:18:25	Pici	ihitdisplay: As SilentGhost said, This really looks like a javascript/jquery question.  I'd assume you want it to automatically ask flask for new information when you change either of the text fields.
2014-05-28 13:18:34	--	MrElendig is now known as Desu
2014-05-28 13:18:38	<--	jimklo (~jimklo@192.12.16.119) has quit (Ping timeout: 240 seconds)
2014-05-28 13:18:52	MaybeSimon	It's a CS 160 beginner's python project
2014-05-28 13:19:18	Pici	MaybeSimon: heres a hint: raw_input returns strings.
2014-05-28 13:19:19	-->	Synthead (~max@216.239.55.44) has joined #python
2014-05-28 13:19:21	<--	kjn (~kjn@168.93.96.5) has quit (Ping timeout: 252 seconds)
2014-05-28 13:19:51	-->	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has joined #python
2014-05-28 13:20:07	<--	[mda] (~daniel@bas1-newmarket85-3096616480.dsl.bell.ca) has quit (Quit: Lost terminal)
2014-05-28 13:20:13	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 13:20:14	-->	kjn (~kjn@168.93.96.5) has joined #python
2014-05-28 13:20:16	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-28 13:21:19	MaybeSimon	I don't understand the hint. :( We've never learned python in CS160, we've only learned about ASCII and binary up until now.
2014-05-28 13:22:08	therealfakemoot	MaybeSimon: You should probably do a python tutorial, then
2014-05-28 13:22:13	<--	nande_ (~quassel@190.183.4.91) has quit (Remote host closed the connection)
2014-05-28 13:22:28	<--	thesheff17 (~thesheff1@24-148-57-183.c3-0.lem-ubr1.chi-lem.il.cable.rcn.com) has quit (Disconnected by services)
2014-05-28 13:22:42	sbuettner	MaybeSimon, What have you been working with? C++? Java? (please don't say PHP)
2014-05-28 13:22:57	Desu	MaybeSimon: try: v1 = int(var1); except ValueError: print "{0} is not a valid integer".format(var1)
2014-05-28 13:23:42	MaybeSimon	No actual languages learned. Just basic pseudo coding, hex, decimals, floating point notation and lots of binary.
2014-05-28 13:23:51	sbuettner	Ah
2014-05-28 13:24:15	sbuettner	That's kind of strange
2014-05-28 13:24:17	-->	JoeLoser (~JoeLoser@24-207-245-104.dhcp.stls.mo.charter.com) has joined #python
2014-05-28 13:24:20	therealfakemoot	MaybeSimon: You should definitely learn how to program before trying to program
2014-05-28 13:24:44	<--	Synthead (~max@216.239.55.44) has quit (Quit: p33 ba115)
2014-05-28 13:24:45	<--	Zzeiss (~wsy@mumble144109.merl.com) has quit (Ping timeout: 252 seconds)
2014-05-28 13:24:47	MaybeSimon	I didn't have a choice friend :( Our professor just sent us home with this project..
2014-05-28 13:25:07	-->	Synthead (~max@216.239.55.44) has joined #python
2014-05-28 13:25:11	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 13:25:25	MaybeSimon	I was able to figure out all the other ones, and this is the only one I'm stuck on.
2014-05-28 13:25:27	therealfakemoot	MaybeSimon: It's not an insult.
2014-05-28 13:25:30	therealfakemoot	MaybeSimon: It's advice.
2014-05-28 13:25:44	MaybeSimon	No, no I understand. I didn't take it as an insult.
2014-05-28 13:26:03	<--	Deesl (bsdboy@redhat/deesl) has quit (Quit: Leaving...)
2014-05-28 13:27:04	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 13:27:40	<--	nanonyme (nanonyme@unaffiliated/nanonyme) has quit (Quit: WeeChat 1.0-dev)
2014-05-28 13:27:45	sbuettner	MaybeSimon, Sane programming langauges (Read: Languages that are not PHP) treat numbers and text differently. You're trying to add text, rather than numbers. In Python2 you have the string type for text, and also int for integer numbers.
2014-05-28 13:27:48	-->	nanonyme (nanonyme@unaffiliated/nanonyme) has joined #python
2014-05-28 13:28:05	sakjur	MaybeSimon: Wow, that sounds really discouraging, see Desu's answer for another hint
2014-05-28 13:28:12	<--	hoot (~hoot@5.140.190.27) has quit (Ping timeout: 240 seconds)
2014-05-28 13:28:30	jwhisnant	sbuettner: you should perhaps add perl to that list as well
2014-05-28 13:28:41	sakjur	JavaScript..
2014-05-28 13:28:50	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-28 13:28:59	sbuettner	I just like to hate on PHP more than most, personally, but yes.
2014-05-28 13:29:13	motsu	who doesnt like to hate on php
2014-05-28 13:29:23	jwhisnant	motsu: people who write php?
2014-05-28 13:29:33	Desu	all the people that took cs101 at the wrong uni
2014-05-28 13:29:35	sbuettner	A surprisingly/terrifyingly large portion of web developers
2014-05-28 13:29:45	Desu	or self tought
2014-05-28 13:29:47	<--	digicyc (~digicyc@unaffiliated/digicyc) has quit (Ping timeout: 252 seconds)
2014-05-28 13:29:56	motsu	nah, i used to be a php dev. all the people i worked with hated / laughed at it
2014-05-28 13:30:14	sakjur	sbuettner: "2" + Date.now() + Object + function fn(){} <- is actually valid JS
2014-05-28 13:30:27	sbuettner	This is why I don't use JS for anything
2014-05-28 13:30:31	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #python
2014-05-28 13:30:53	<--	NoReflex (~ionut@79.114.107.144) has quit (Quit: Leaving)
2014-05-28 13:30:57	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-28 13:31:06	sbuettner	I mean, I dunno maybe the performance is awesome or something, but Node et al never appealed to me because, hey, I would have to write JS
2014-05-28 13:31:09	-->	Jucato (~jucato@kde/developer/jucato) has joined #python
2014-05-28 13:31:39	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-28 13:31:53	-->	exicer_ (~exicer@cpc1-cmbg14-2-0-cust355.5-4.cable.virginm.net) has joined #python
2014-05-28 13:31:59	-->	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has joined #python
2014-05-28 13:32:00	<--	Tii (~Tii@stevie-ray.me) has quit (Remote host closed the connection)
2014-05-28 13:32:03	-->	SuperLag (~akulbe@unaffiliated/superlag) has joined #python
2014-05-28 13:32:06	-->	yak (~yak@isper-224-24.isper.sk) has joined #python
2014-05-28 13:32:15	-->	heath (~ybit@unaffiliated/ybit) has joined #python
2014-05-28 13:32:34	-->	le_tropico (~le_tropic@194.44.174.106) has joined #python
2014-05-28 13:32:38	<--	le_tropico (~le_tropic@194.44.174.106) has quit (Max SendQ exceeded)
2014-05-28 13:32:43	<--	adrian_berg (~adrian@unaffiliated/adrian-berg/x-4249779) has quit (Quit: leaving)
2014-05-28 13:32:43	sbuettner	Language bashing aside. MaybeSimon: What you'll want to do is convert your strings to ints before trying to add them together. https://docs.python.org/2.7/library/functions.html#int This should help.
2014-05-28 13:32:50	-->	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 13:33:05	-->	le_tropico (~le_tropic@194.44.174.106) has joined #python
2014-05-28 13:33:18	-->	Tii (~Tii@stevie-ray.me) has joined #python
2014-05-28 13:33:20	-->	nande_ (~quassel@190.183.4.91) has joined #python
2014-05-28 13:33:29	-->	aidalgol (~user@pdpc/supporter/student/aidalgol) has joined #python
2014-05-28 13:33:45	MaybeSimon	sbuettner: Thank you, that's what I was trying to figure out. I know what I was doing wrong, but I just didn't know how to fix it.
2014-05-28 13:33:47	<--	mathemancer (~mathemanc@198.15.70.2) has quit (Ping timeout: 265 seconds)
2014-05-28 13:33:52	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 13:33:55	desophos	why doesn't this work to catch HTMLParseError in each thread? http://dpaste.com/2QCDZ9P/
2014-05-28 13:33:59	aidalgol	What am I doing wrong? http://paste.debian.net/hidden/010c9e86/
2014-05-28 13:34:04	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 13:34:21	desophos	whoops http://dpaste.com/25AQQWG/
2014-05-28 13:34:24	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Read error: Connection timed out)
2014-05-28 13:34:29	<--	eliezerfot123 (~Thunderbi@200.11.230.242) has quit (Quit: eliezerfot123)
2014-05-28 13:34:33	<--	JoeLoser (~JoeLoser@24-207-245-104.dhcp.stls.mo.charter.com) has quit (Quit: Leaving)
2014-05-28 13:34:43	<--	joshlegs (~josh@unaffiliated/horsehead) has quit (Ping timeout: 258 seconds)
2014-05-28 13:34:49	-->	Sembei (~Sembei@unaffiliated/sembei) has joined #python
2014-05-28 13:35:14	-->	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has joined #python
2014-05-28 13:35:21	<--	adorver1 (~yaaic@58.125.237.138) has quit (Remote host closed the connection)
2014-05-28 13:35:26	<--	DaneoShiga (~drshiga@201.23.92.102.dedicated.neoviatelecom.com.br) has quit (Quit: Leaving)
2014-05-28 13:35:34	sbuettner	aidalgol, Look closely at the docs for .match and .search for the re module.
2014-05-28 13:36:21	<--	ncthom91_ (ncthom91@64.125.189.90) has quit (Ping timeout: 276 seconds)
2014-05-28 13:36:39	<--	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has quit (Quit: Leaving.)
2014-05-28 13:37:03	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 13:37:10	<--	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2014-05-28 13:37:14	-->	Porkepix (~Porkepix@159.175.24.109.rev.sfr.net) has joined #python
2014-05-28 13:37:44	-->	sedeki (~textual@unaffiliated/sedeki) has joined #python
2014-05-28 13:37:51	<--	aidalgol (~user@pdpc/supporter/student/aidalgol) has left #python ("ERC Version 5.3 (IRC client for Emacs)")
2014-05-28 13:37:56	<--	winegoddess (~winegodde@64.58.240.210) has quit (Quit: winegoddess)
2014-05-28 13:38:13	-->	ZujkisNx (~hara@78-58-84-227.static.zebra.lt) has joined #python
2014-05-28 13:38:38	VooDooNOFX	MaybeSimon: remember, raw_input returns a string, not an int.
2014-05-28 13:39:17	<--	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has quit (Client Quit)
2014-05-28 13:39:24	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Client Quit)
2014-05-28 13:39:37	-->	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has joined #python
2014-05-28 13:39:43	MaybeSimon	VooDooNOFX: Thank you, I'll remember that. I have to head to class, thank you all for the help!
2014-05-28 13:39:44	<--	Biopandemic (~jake@unaffiliated/biopandemic) has left #python
2014-05-28 13:40:12	<--	MaybeSimon (4c737d57@gateway/web/freenode/ip.76.115.125.87) has quit (Quit: Page closed)
2014-05-28 13:40:35	ZujkisNx	Hello! Started to use Wheels today and maybe someone have some recomendations for good aliases which make life easyer? Like if package in wheel folder then use it; else download it to wheel folder and install? Any ideas are more than welcome!
2014-05-28 13:40:41	VooDooNOFX	aidalgol: you're compiling a regular expression, but .match will only return captured groups. re.search will return the matched item in this case.
2014-05-28 13:40:43	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 13:40:59	-->	sedeki (~textual@unaffiliated/sedeki) has joined #python
2014-05-28 13:41:06	-->	jkyle2 (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-28 13:42:12	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined #python
2014-05-28 13:42:28	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 13:42:48	sbuettner	VooDooNOFX, Actaully .match and .search will both return a MatchObject instance. https://docs.python.org/2/library/re.html#search-vs-match
2014-05-28 13:42:58	<--	jkyle1 (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 240 seconds)
2014-05-28 13:43:02	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 13:43:06	-->	sunya7a_ (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 13:43:36	<--	jorbas (~jorbas@cpc1-gill14-2-0-cust377.basl.cable.virginm.net) has quit (Quit: WeeChat 0.4.3)
2014-05-28 13:44:30	VooDooNOFX	sbuettner: yeah, you're right.
2014-05-28 13:45:12	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 13:45:34	<--	lad1337 (~Adium@pD9F767BA.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-05-28 13:45:51	<--	scottferg (~scottferg@c-98-226-208-95.hsd1.il.comcast.net) has quit (Quit: leaving)
2014-05-28 13:45:57	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 13:46:05	-->	bluedreams (~bluedream@24-205-95-34.dhcp.psdn.ca.charter.com) has joined #python
2014-05-28 13:46:20	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 13:46:35	<--	armyriad (~armyriad@50.23.115.112) has quit (Read error: Connection reset by peer)
2014-05-28 13:46:55	-->	armyriad (~armyriad@50.23.115.112) has joined #python
2014-05-28 13:47:03	-->	jkyle3 (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-28 13:47:04	-->	mijicd_ (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has joined #python
2014-05-28 13:47:51	<--	JotaK (~Bihotz@unaffiliated/jotak) has quit (Ping timeout: 252 seconds)
2014-05-28 13:47:52	-->	Questions (~TheOneWho@38.88.218.190) has joined #python
2014-05-28 13:47:54	-->	nszceta (~nszceta@venezuela.pharm.pitt.edu) has joined #python
2014-05-28 13:48:18	-->	venomDev (~venomDev@101.113.9.114) has joined #python
2014-05-28 13:48:42	Questions	i've got a bunch of options i get from optparse and based on those i want to create a filter function without constantly repeating myself for all the combinations
2014-05-28 13:48:50	Questions	is there a pythonic way to 'build up' a filter function
2014-05-28 13:49:10	nszceta	how can I parse github webhook POST requests? the data I get is basically garbage: payload=%7B%22ref%22%3A%22refs%2Fheads%2Fmaster%22%2C%22after%22%3A%2236e90f4bbea809dee2370078ca5ab648eeb71b27%22%2C%22before%22%3A%22ca8fb014f3225f2374ae1673fbf36c1d6bd88
2014-05-28 13:49:10	nszceta	75d%22%2C%22created%22%3Afalse%2C%22deleted%22%3Afalse%2C%22forced%22%3Afalse%2C%22compare%22%3A%22h
2014-05-28 13:49:12	nszceta	json.loads() does nothing
2014-05-28 13:49:22	<--	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has quit (Quit: alem0lars)
2014-05-28 13:49:27	<--	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2014-05-28 13:49:39	-->	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has joined #python
2014-05-28 13:49:46	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Client Quit)
2014-05-28 13:49:50	preaction	nszceta: that's urlencoded data. look at urllib
2014-05-28 13:49:57	skimbrel	nszceta: that looks like urlencoded json to me
2014-05-28 13:49:58	<--	scampbell (~scampbell@mail.scampbell.net) has quit (Remote host closed the connection)
2014-05-28 13:50:00	<--	jkyle2 (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 276 seconds)
2014-05-28 13:50:04	nszceta	thanks guys
2014-05-28 13:50:11	KirkMcDonald	nszceta: urllib.unquote() specifically.
2014-05-28 13:50:17	<--	inhahe (~inhahe@adsl-074-186-083-219.sip.mia.bellsouth.net) has quit (Ping timeout: 245 seconds)
2014-05-28 13:50:31	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 13:50:44	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-28 13:50:47	-->	inhahe (~inhahe@adsl-074-186-083-219.sip.mia.bellsouth.net) has joined #python
2014-05-28 13:50:47	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 252 seconds)
2014-05-28 13:50:49	<--	sunya7a_ (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 258 seconds)
2014-05-28 13:50:50	<--	durut (~root@71-94-128-82.static.mtpk.ca.charter.com) has left #python ("Leaving")
2014-05-28 13:50:53	KirkMcDonald	nszceta: Also urlparse.parse_qs()
2014-05-28 13:51:17	<--	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2014-05-28 13:51:25	<--	mitch-_ (~mitch@173.sub-70-198-68.myvzw.com) has quit (Quit: Leaving)
2014-05-28 13:52:03	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 13:52:32	-->	heckman (~tim@206.190.71.242) has joined #python
2014-05-28 13:52:38	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-28 13:52:41	Questions	anybody? :D
2014-05-28 13:53:09	<--	Jucato (~jucato@kde/developer/jucato) has quit (Quit: Konversation terminated!)
2014-05-28 13:53:13	-->	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-28 13:53:18	-->	Biopandemic (~jake@unaffiliated/biopandemic) has joined #python
2014-05-28 13:53:19	<--	Calle__Lid (~Ailongam@h-111-17.a323.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-05-28 13:53:22	-->	masci (~masci@dynamic-adsl-94-37-154-60.clienti.tiscali.it) has joined #python
2014-05-28 13:53:26	therealfakemoot	Questions: how about you show us what you already have
2014-05-28 13:53:32	heckman	I'm having some lame problem with pip, and I think it's due to an old version installed: https://gist.github.com/theckman/7f9715363c31e6a66ac6 -- does anyone know which version of packages I need to not have this issue?
2014-05-28 13:53:51	heckman	In short: "error: invalid command 'egg_info'"
2014-05-28 13:54:13	heedly	How do I get the current directory I'm being run from?
2014-05-28 13:54:14	<--	juantwo (juantwo@nat/rackspace/x-rafwjcvotxaynavq) has quit (Remote host closed the connection)
2014-05-28 13:54:34	jwhisnant	heedly: os.getcwd()
2014-05-28 13:54:34	preaction	Questions: i ended up building a language to do that instead. see "jq" (not mine) and App::YAML::Filter (mine). it's fun!
2014-05-28 13:54:44	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 13:55:01	w4|k3r	Questions, itertools might be of help
2014-05-28 13:55:07	<--	the_rat (~the_rat@217.200.185.198) has quit (Ping timeout: 240 seconds)
2014-05-28 13:55:41	<--	EcoGiko (~EcoGiko@unaffiliated/ecogiko) has quit (Quit: Leaving)
2014-05-28 13:56:23	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 13:56:32	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-28 13:57:12	-->	CyrilPeponnet (~Cyril@vm0015.xi.srv.conemu.de) has joined #python
2014-05-28 13:57:14	desophos	why doesn't this work to catch HTMLParseError in each thread? http://dpaste.com/25AQQWG/
2014-05-28 13:57:33	<--	sphenxes (~sphenxes@91-119-49-221.dynamic.xdsl-line.inode.at) has quit (Quit: Leaving)
2014-05-28 13:57:57	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 13:58:00	Questions	i have something like this right now: http://pastebin.com/ZjkB1Ydm
2014-05-28 13:58:03	infobob	http://paste.pound-python.org/show/gvRE3tbxcsfVWOqFwvcy/ (repasted for Questions)
2014-05-28 13:58:08	Questions	you see how this can easily become unsunstainable
2014-05-28 13:58:12	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Read error: Connection reset by peer)
2014-05-28 13:58:16	<--	sedeki (~textual@unaffiliated/sedeki) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 13:58:29	sbuettner	heckman: http://stackoverflow.com/questions/11425106/python-pip-install-fails-invalid-command-egg-info (The first result on a google search for your error message.)
2014-05-28 13:58:32	Questions	maybe need to rethink the problem a bit
2014-05-28 13:58:46	<--	theshit123 (~theshit@217.217.50.206.dyn.user.ono.com) has quit (Quit: Leaving)
2014-05-28 13:59:32	nedbat	Questions: maybe you want to build a list of filters
2014-05-28 14:00:05	-->	dlman (~dlman@c-24-61-47-4.hsd1.ma.comcast.net) has joined #python
2014-05-28 14:00:13	<--	dlman (~dlman@c-24-61-47-4.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-28 14:00:17	<--	b10n1k (~j0ni@athedsl-190096.home.otenet.gr) has quit (Ping timeout: 245 seconds)
2014-05-28 14:00:46	<--	mikeybisbo (~mikeybisb@host86-171-32-109.range86-171.btcentralplus.com) has quit
2014-05-28 14:00:53	<--	BlaXpirit-UA (~blaxpirit@175-179-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-05-28 14:00:56	sbuettner	Oh hey nedbat is here. I got linked your Pycon talk about testing, earlier today, and wanted to say thanks, it was really informative.
2014-05-28 14:01:06	nedbat	sbuettner: cool, thanks!
2014-05-28 14:01:08	motsu	hey, what would the best way to go about getting files in a directory? i need to find the newest created file. the files look like <static prefix>0032
2014-05-28 14:01:33	<--	evanz_ (~evanz@dhcp162-84.netlab.uky.edu) has quit (Ping timeout: 258 seconds)
2014-05-28 14:01:34	<--	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has quit (Remote host closed the connection)
2014-05-28 14:01:47	Questions	motsu: recursively? you can walk the directory with os.walk
2014-05-28 14:01:52	<--	taloszerg (~taloszerg@c62e6602.cst.lightpath.net) has quit (Remote host closed the connection)
2014-05-28 14:01:58	Questions	os.path.walk
2014-05-28 14:02:05	KirkMcDonald	No, os.walk() is the correct one.
2014-05-28 14:02:15	motsu	i know the directory. theres no other folders
2014-05-28 14:02:23	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 14:02:30	aberrant	are boolean operations on lists of booleans ok? They seem to be: that is, [False, True, False] and [True, True, False] yields [False, True, False]
2014-05-28 14:02:49	KirkMcDonald	aberrant: Non-empty lists are true.
2014-05-28 14:02:59	VooDooNOFX	motsu: os.walk has the added benefit of seperating out the files and folders for you already. glob and other services like os.listdir won't.
2014-05-28 14:03:14	aberrant	KirkMcDonald: not sure how that impacts this.
2014-05-28 14:03:14	heckman	sbuettner: yeah, that didn't work which is why I showed up here.
2014-05-28 14:03:15	Questions	motsu: os.stat on individual files will give you things like access time and modification time
2014-05-28 14:03:18	motsu	just, what would be the best way to get the files and what not. i feel like there would be an easier way then writing a sorting algo to get the highest number file.
2014-05-28 14:03:21	nedbat	aberrant: it isn't doing what you want
2014-05-28 14:03:22	heckman	sbuettner: I think I may have discovered a workaround.
2014-05-28 14:03:29	<--	lechatnoir (~doge@200.212.22.178) has quit (Quit: Leaving)
2014-05-28 14:03:36	aberrant	nedbat: yeah, I just noticed that.
2014-05-28 14:03:55	heckman	sbuettner: specifically, trust the system packages to do the right thing because frozen versions and all.
2014-05-28 14:03:58	aberrant	I think I see what it’s doing
2014-05-28 14:03:59	nedbat	aberrant: [ x and y for x,y in zip(list1, list2) ]
2014-05-28 14:04:05	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-28 14:04:06	<--	Deesl (bsdboy@redhat/deesl) has quit (Quit: Leaving...)
2014-05-28 14:04:16	aberrant	nedbat: thanks :)
2014-05-28 14:04:22	-->	kurban (~kai@host71-2.natpool.mwn.de) has joined #python
2014-05-28 14:04:36	-->	DrIDK (~quassel@brc29-3-88-189-64-212.fbx.proxad.net) has joined #python
2014-05-28 14:04:46	Questions	motsu: if you just want the highest number you can probably do max(os.listdir(), key=CUSTOM_FUNC)
2014-05-28 14:05:16	<--	heckman (~tim@206.190.71.242) has quit (Quit: Thanks for the help!)
2014-05-28 14:05:24	<--	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-28 14:05:59	sbuettner	'key=lambda x: os.stat(x).st_mtime' ?
2014-05-28 14:06:09	sbuettner	If I remember my lambda syntax right
2014-05-28 14:06:12	VooDooNOFX	motsu: Is there some consistent way to decide what the most recent file in the folder is?
2014-05-28 14:06:44	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-28 14:06:54	<--	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has left #python
2014-05-28 14:06:55	motsu	VooDooNOFX: yeah, its the file with the highest number. theres a filename, and then a number appended, which is 0 padded to 5 spaces
2014-05-28 14:07:11	-->	gazprom (~gazprom@gateway/tor-sasl/gazprom) has joined #python
2014-05-28 14:07:14	sbuettner	heckman: Ah. Yea, that can be helpful.
2014-05-28 14:07:38	-->	FasTTo (~FasTTo@bl15-209-130.dsl.telepac.pt) has joined #python
2014-05-28 14:07:44	KirkMcDonald	sbuettner: os.path.getmtime()
2014-05-28 14:08:04	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 14:08:06	sbuettner	ah, right
2014-05-28 14:08:09	-->	sunya7a_ (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 14:08:14	sbuettner	That would be easier, yes :)
2014-05-28 14:08:17	KirkMcDonald	Note that os.listdir() returns basenames.
2014-05-28 14:08:26	KirkMcDonald	You may need to join those names to the directory being listed.
2014-05-28 14:08:28	Questions	nedbat: yeah, a list of filters is okay, sort of ugly though
2014-05-28 14:08:28	<--	softwaredoug (~quassel@216.30.179.168) has quit (Read error: Connection reset by peer)
2014-05-28 14:08:32	sbuettner	ah, also true
2014-05-28 14:08:37	nedbat	Questions: ugly why?
2014-05-28 14:09:03	<--	tedoc2000 (~tedoc2000@nat/yahoo/x-nvniwaoccleepumf) has quit (Remote host closed the connection)
2014-05-28 14:09:16	<--	mgrouchy (~mgrouchy@CPE68b6fc44a453-CM68b6fc44a450.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 14:09:20	nedbat	Questions: you started by saying that your current plan was unsustainable.
2014-05-28 14:09:24	<--	kcj (~casey@unaffiliated/kcj) has quit (Ping timeout: 240 seconds)
2014-05-28 14:09:25	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 14:09:31	-->	tedoc2000 (~tedoc2000@nat/yahoo/x-lofjudabrdsaarmw) has joined #python
2014-05-28 14:09:43	<--	gazprom (~gazprom@gateway/tor-sasl/gazprom) has quit (Client Quit)
2014-05-28 14:10:24	<--	mijicd (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has quit (Quit: leaving)
2014-05-28 14:10:38	-->	the_rat (~the_rat@217.200.185.216) has joined #python
2014-05-28 14:10:53	<--	mutley89 (~mutley89@cpc3-swin15-2-0-cust158.3-1.cable.virginm.net) has quit (Ping timeout: 254 seconds)
2014-05-28 14:10:54	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 14:11:04	-->	biberao (~Unknown@funtoo/staff/biberao) has joined #python
2014-05-28 14:12:19	steveoh	if you are making a db connection/query from a 'service' type module, is it ok to execute the query, then for in the resultset and yield each row to the calling method?
2014-05-28 14:12:31	Questions	nedbat: it would be nice if i could just | things together somehow :p
2014-05-28 14:12:34	biberao	hi
2014-05-28 14:12:39	-->	gazprom (~gazprom@gateway/tor-sasl/gazprom) has joined #python
2014-05-28 14:12:45	-->	jimmybot_ (~jimmybot@64.124.192.210) has joined #python
2014-05-28 14:13:17	-->	penguin_dan (~dan_johns@168.93.96.4) has joined #python
2014-05-28 14:13:29	<--	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2014-05-28 14:13:38	<--	rodfersou (~RoADRuNNE@177.16.92.35) has quit (Quit: leaving)
2014-05-28 14:13:45	kevlarman	steveoh: as long as the calling method promises to consume the result before making new queries
2014-05-28 14:13:48	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Ping timeout: 240 seconds)
2014-05-28 14:13:49	-->	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has joined #python
2014-05-28 14:13:53	<--	tedoc2000 (~tedoc2000@nat/yahoo/x-lofjudabrdsaarmw) has quit (Ping timeout: 252 seconds)
2014-05-28 14:14:03	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 14:14:14	steveoh	kevlarman: yes that is a promise it can keep
2014-05-28 14:14:20	-->	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has joined #python
2014-05-28 14:14:41	steveoh	what about closing the connection kevlarman? just put it outside the for and it will execute when the resultset is empty
2014-05-28 14:14:45	-->	Samb2 (~Sammysama@2001:8b0:856:1:6627:37ff:fe35:ddc1) has joined #python
2014-05-28 14:15:17	<--	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Ping timeout: 264 seconds)
2014-05-28 14:15:19	Questions	nedbat: i have to make filter calls in a loop now, although maybe something in itertools can help with that ugliness
2014-05-28 14:15:30	kevlarman	uh, you generally want your connection to the db to be longlived
2014-05-28 14:15:30	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 14:15:32	<--	jimmybot_ (~jimmybot@64.124.192.210) has quit (Read error: Connection reset by peer)
2014-05-28 14:15:45	nedbat	Questions: you can put that into your own function.
2014-05-28 14:15:56	-->	tedoc2000 (~tedoc2000@nat/yahoo/x-whwbmfkxngudqzmk) has joined #python
2014-05-28 14:16:08	nedbat	Questions: you could stack up lambdas, but that would also be weird.
2014-05-28 14:16:12	kevlarman	steveoh: if you're closing the connection, you need to consume the results before you do so
2014-05-28 14:16:16	<--	pwh_ (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit
2014-05-28 14:16:24	Questions	nedbat: yes i considered that
2014-05-28 14:16:27	nedbat	Questions: f = lambda e, f=f: e.criterion or f(e)
2014-05-28 14:16:36	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Ping timeout: 240 seconds)
2014-05-28 14:16:42	Questions	yeah i hate that i need to pass along a lambda callback heh
2014-05-28 14:16:55	nedbat	Questions: this is still just a function of e
2014-05-28 14:17:22	penguin_dan	Does anyone have any good resources for testing asynchronous applications?
2014-05-28 14:17:23	nanonyme	Ewww :P
2014-05-28 14:17:29	nanonyme	Ie to nedbat
2014-05-28 14:17:43	nedbat	nanonyme: I said it would be weird....
2014-05-28 14:17:52	nanonyme	penguin_dan, Twisted's testing functionality is pretty awesome
2014-05-28 14:17:54	-->	jimmybot_ (~jimmybot@64.124.192.210) has joined #python
2014-05-28 14:17:57	<--	kyheo (~kyheo@54-152-231-201.fibertel.com.ar) has quit (Quit: Leaving.)
2014-05-28 14:18:04	kevlarman	nedbat: doesn't that overflow the stack under the wrong conditions?
2014-05-28 14:18:07	nanonyme	penguin_dan, assuming you wrote the asynchronous application with Twisted
2014-05-28 14:18:18	nedbat	kevlarman: which conditions?
2014-05-28 14:18:28	nedbat	(it totally did when I tried it here before I got it right!)
2014-05-28 14:18:43	steveoh	kevlarman: https://gist.github.com/steveoh/2438159c6643eea2696f
2014-05-28 14:18:45	<--	deSilva (~deSilva@c83-254-213-203.bredband.comhem.se) has quit
2014-05-28 14:18:46	steveoh	that's legit?
2014-05-28 14:19:04	kevlarman	nedbat: e.criterion=false, f left at the default value
2014-05-28 14:19:18	penguin_dan	nanonyme, I guess I should have prefaced using asyncio. :S
2014-05-28 14:19:33	nedbat	kevlarman: oh, you definitely need to have an f defined first, and you never provide an arg for f.
2014-05-28 14:20:11	kevlarman	steveoh: assuming execute returns all the results, the only problem is setting up/tearing down the connection every time
2014-05-28 14:20:18	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 14:20:22	-->	pabardina (~pabardina@128-79-160-198.hfc.dyn.abo.bbox.fr) has joined #python
2014-05-28 14:20:29	steveoh	it only happens once
2014-05-28 14:20:33	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Ping timeout: 276 seconds)
2014-05-28 14:20:52	<--	the_rat (~the_rat@217.200.185.216) has quit (Read error: Connection reset by peer)
2014-05-28 14:21:13	steveoh	i think i need to do a fetchall() or something kevlarman
2014-05-28 14:21:18	-->	the_rat (~the_rat@217.200.185.216) has joined #python
2014-05-28 14:21:27	<--	FasTTo (~FasTTo@bl15-209-130.dsl.telepac.pt) has quit (Quit: Inactive)
2014-05-28 14:21:42	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Remote host closed the connection)
2014-05-28 14:21:54	-->	adrian_berg (~adrian@unaffiliated/adrian-berg/x-4249779) has joined #python
2014-05-28 14:22:30	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-28 14:22:34	<--	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has quit (Quit: Leaving.)
2014-05-28 14:22:46	<--	michaelchum (uid26679@gateway/web/irccloud.com/x-vbjsrpllpizwrooq) has quit (Quit: Connection closed for inactivity)
2014-05-28 14:22:51	adrian_berg	What's the difference between a method object and a function object? What does the im in im_self stand for? instance method? Will someone give me an example of a continuation in python? Does python have callbacks?
2014-05-28 14:23:32	nanonyme	What are you dealing with that you bumped to im_self
2014-05-28 14:23:34	nanonyme	?
2014-05-28 14:23:55	-->	dragun0v (~dragun0v@173-228-114-2.dedicated.static.sonic.net) has joined #python
2014-05-28 14:23:57	dragun0v	How can I print a huge list as a table in python to improve readibility?
2014-05-28 14:24:03	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-28 14:24:17	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 264 seconds)
2014-05-28 14:24:30	<--	ihitdisplay (~aaaaaa@187.121.53.62) has quit (Quit: Saindo)
2014-05-28 14:24:33	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 258 seconds)
2014-05-28 14:25:19	-->	shn228 (~json@cpc19-dals19-2-0-cust8.20-2.cable.virginm.net) has joined #python
2014-05-28 14:25:46	tos9	/38/
2014-05-28 14:26:01	-->	tterlet__ (~le_tropic@194.44.148.76) has joined #python
2014-05-28 14:26:02	MentalAtrophy	dragun0v, the built-in stuff is probably suitable: https://docs.python.org/3.4/tutorial/inputoutput.html#fancier-output-formatting
2014-05-28 14:26:25	-->	tiwula (~lane@2600:100e:b116:17ba:227:10ff:fe2d:aa2c) has joined #python
2014-05-28 14:26:27	MentalAtrophy	print('{} {} {}'.format(arg1, arg2, arg3))
2014-05-28 14:26:33	MentalAtrophy	And within the brackets you can specify alignment and string length.
2014-05-28 14:26:38	-->	breno (~breno@190.237.8.53) has joined #python
2014-05-28 14:26:49	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-28 14:26:51	<--	le_tropico (~le_tropic@194.44.174.106) has quit (Ping timeout: 258 seconds)
2014-05-28 14:26:53	dragun0v	It's actually a big list, so i think i will have to write a for loop around it
2014-05-28 14:27:02	dragun0v	thanks.. will try to use that and see
2014-05-28 14:27:02	<--	nagrat (~nagrat@unaffiliated/nagrat) has quit (Quit: sleeping)
2014-05-28 14:27:06	MentalAtrophy	Well, yes.
2014-05-28 14:27:15	MentalAtrophy	That would only print one line of the table.
2014-05-28 14:27:25	dragun0v	correct, thanks
2014-05-28 14:27:43	kevlarman	dragun0v: you may find the pprint module interesting
2014-05-28 14:27:48	MentalAtrophy	It gives a pretty straight forward example.
2014-05-28 14:28:35	-->	ncthom91_ (ncthom91@64.125.189.90) has joined #python
2014-05-28 14:28:58	MentalAtrophy	pprint works too, and it's in the standard library.
2014-05-28 14:28:58	dragun0v	To explain further, I wanted to use something similar to prettytable but i didn't want multiple column names to be same.. anyway.. i will look into both the suggestions.. thanks guys
2014-05-28 14:29:01	MentalAtrophy	https://docs.python.org/3.4/library/pprint.html
2014-05-28 14:29:06	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-28 14:29:26	-->	snyp (~snyp@223.29.204.2) has joined #python
2014-05-28 14:30:17	<--	AncientPC (~AncientPC@pool-173-71-49-128.dllstx.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2014-05-28 14:30:18	-->	scampbell (~scampbell@mail.scampbell.net) has joined #python
2014-05-28 14:30:18	-->	nagrat (~nagrat@unaffiliated/nagrat) has joined #python
2014-05-28 14:30:22	<--	nagrat (~nagrat@unaffiliated/nagrat) has quit (Max SendQ exceeded)
2014-05-28 14:30:35	-->	ncthom9__ (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 14:30:38	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 14:30:39	<--	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Read error: Connection reset by peer)
2014-05-28 14:31:11	desophos	why doesn't this work to catch HTMLParseError in each thread? http://dpaste.com/25AQQWG/
2014-05-28 14:31:37	<--	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has quit (Quit: Leaving)
2014-05-28 14:31:49	-->	AncientPC (~AncientPC@pool-173-71-49-128.dllstx.fios.verizon.net) has joined #python
2014-05-28 14:31:59	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 14:32:24	<--	__lgw4__ (~lgw4@rrcs-67-52-237-74.west.biz.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 14:32:25	adrian_berg	nanonyme: I'm just reading the tutorial
2014-05-28 14:32:33	nanonyme	Which tutorial?
2014-05-28 14:32:44	adrian_berg	the one on python.org
2014-05-28 14:32:52	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 14:32:59	<--	ncthom91_ (ncthom91@64.125.189.90) has quit (Ping timeout: 258 seconds)
2014-05-28 14:33:05	nanonyme	Well, how about linking to what you're reading?
2014-05-28 14:33:26	w4|k3r	desophos, Does it work with Exception as a whole?
2014-05-28 14:33:32	adrian_berg	https://docs.python.org/2/reference/datamodel.html
2014-05-28 14:33:54	-->	Heimdall (~Heimdall@AMontsouris-652-1-185-226.w90-24.abo.wanadoo.fr) has joined #python
2014-05-28 14:33:55	-->	Lemony (~textual@cpc50-slam6-2-0-cust27.2-4.cable.virginm.net) has joined #python
2014-05-28 14:33:56	desophos	w4|k3r: i don't know, no other exceptions should be thrown
2014-05-28 14:33:56	-->	nf7 (~nf7@64-46-24-109.dyn.novuscom.net) has joined #python
2014-05-28 14:33:58	<--	nf7 (~nf7@64-46-24-109.dyn.novuscom.net) has left #python
2014-05-28 14:33:59	nanonyme	adrian_berg, that is not a tutorial
2014-05-28 14:34:08	<--	Heimdall (~Heimdall@AMontsouris-652-1-185-226.w90-24.abo.wanadoo.fr) has left #python
2014-05-28 14:34:23	desophos	w4|k3r: i suppose i could manually raise an exception
2014-05-28 14:34:32	adrian_berg	okay, but that's not the point i guess
2014-05-28 14:34:38	adrian_berg	I really just want to know what it stands for
2014-05-28 14:35:02	nanonyme	adrian_berg, https://docs.python.org/2/reference/introduction.html what does the first paragraph there say?
2014-05-28 14:35:07	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 14:35:08	<--	scampbell (~scampbell@mail.scampbell.net) has quit (Quit: Leaving)
2014-05-28 14:35:13	<--	kurban (~kai@host71-2.natpool.mwn.de) has left #python
2014-05-28 14:35:22	w4|k3r	desophos, if the function is throwing the HTMLParse exception - it should catch it
2014-05-28 14:35:24	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Read error: Connection reset by peer)
2014-05-28 14:35:28	adrian_berg	nanonyme: please stop trolling me
2014-05-28 14:35:37	adrian_berg	I said the wrong thing, let's focus on the question
2014-05-28 14:35:42	adrian_berg	please
2014-05-28 14:35:51	w4|k3r	desophos, else just check if Exception works or not, I mean catches the HTMLParseError
2014-05-28 14:35:53	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 14:36:16	desophos	w4|k3r: ok, thanks -- so it *should* work if HTMLParseError is being raised
2014-05-28 14:36:20	<--	pabardina (~pabardina@128-79-160-198.hfc.dyn.abo.bbox.fr) has quit (Quit: Lingo - http://lingoirc.com)
2014-05-28 14:36:26	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-28 14:36:28	desophos	w4|k3r: which apparently it's not, i'll check Exception, thanks
2014-05-28 14:36:41	<--	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has quit (Remote host closed the connection)
2014-05-28 14:36:43	<--	kl0_ (~void@unaffiliated/rf14) has quit (Ping timeout: 240 seconds)
2014-05-28 14:37:04	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 14:37:08	<--	skinux (~skinux@68-113-7-47.dhcp.wlwl.wa.charter.com) has left #python
2014-05-28 14:37:18	-->	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-28 14:37:21	desophos	w4|k3r: if it isn't being raised, then i have a worse problem than i thought i did :(
2014-05-28 14:37:23	nanonyme	adrian_berg, unless you are an experienced Python programmer, I highly recommend reading the actual tutorial rather than the technical design documentation for Python language
2014-05-28 14:37:45	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-28 14:38:00	kevlarman	even if you are an experienced python programmer, you probably shouldn't be touching that part of python
2014-05-28 14:38:04	adrian_berg	I am doing that as well, I just confused what I was reading with the source
2014-05-28 14:38:05	<--	macieks (~macieks@ip-222-135.ists.pl) has quit (Ping timeout: 252 seconds)
2014-05-28 14:38:14	<--	crucl0 (~alekzp@78.165.95.41) has quit (Quit: Leaving.)
2014-05-28 14:38:23	kevlarman	the last time i did touch that part i made something really evil
2014-05-28 14:38:28	kevlarman	useful, but evil :P
2014-05-28 14:38:31	nanonyme	ddyou can pretty much just ignore what im_self is. You very likely will never need that when you use Python
2014-05-28 14:39:00	-->	rthat (~rthat@159.140.254.99) has joined #python
2014-05-28 14:39:00	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-172.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 14:39:01	adrian_berg	i just want to know what the im stands for, that's all i'm asking
2014-05-28 14:39:08	adrian_berg	i don't even care what it does right now
2014-05-28 14:39:17	-->	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-28 14:39:21	kevlarman	adrian_berg: nanonyme is saying you should forget it even exists, period
2014-05-28 14:39:34	adrian_berg	fine
2014-05-28 14:39:36	-->	mrkz (~mark@187.244.15.18) has joined #python
2014-05-28 14:39:39	motsu	alright, so i got the file thing to work.... kind of.
2014-05-28 14:39:50	nedbat	adrian_berg: im is instance method, yes.
2014-05-28 14:39:51	adrian_berg	What's the difference betweena a method object and function object?
2014-05-28 14:39:58	adrian_berg	nedbat: thank you
2014-05-28 14:40:02	motsu	so there is one ofther file in the directory, which aphabetically starts with a higher value then the other files im interested in
2014-05-28 14:40:12	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-28 14:40:18	nedbat	adrian_berg: i'm glad you are curious, but I will also caution you against digging too deeply into details too early
2014-05-28 14:40:30	adrian_berg	nedbat: it isn't early in the game for me
2014-05-28 14:40:35	adrian_berg	i've been around a long time
2014-05-28 14:40:39	nedbat	adrian_berg: a method object has a reference to a function and to an object.
2014-05-28 14:40:42	adrian_berg	i just havent' used the language in awhile
2014-05-28 14:40:42	<--	w4|k3r (~w4|k3r@106.51.153.138) has quit (Ping timeout: 276 seconds)
2014-05-28 14:40:46	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 14:41:12	motsu	so, if i have abc00001... abc00055 i want to get abc00055. but theres another file like "started" that gets detected becasue of the fact s > a
2014-05-28 14:41:36	motsu	so, is there a way to filter that? max(somefilter(os.listdir()))
2014-05-28 14:41:37	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 14:41:46	nedbat	motsu: max(f for f in os.listdir() if f.startswith("abc"))
2014-05-28 14:41:48	motsu	or am i going to have to make that function?
2014-05-28 14:42:05	Yhg1s	adrian_berg: a method is a function that belongs to a specific class or instance.
2014-05-28 14:42:09	<--	tom94 (~tom@152.78.171.10) has quit (Quit: Konversation terminated!)
2014-05-28 14:42:17	<--	jimmybot_ (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 14:42:25	<--	SilentGhost (~SilentGho@h51580eb1.seluesp.dyn.perspektivbredband.net) has quit (Quit: WeeChat 0.4.3)
2014-05-28 14:42:25	-->	FasTTo (~FasTTo@bl15-209-130.dsl.telepac.pt) has joined #python
2014-05-28 14:42:29	Yhg1s	adrian_berg: but really, docs.python.org/tutorial is a much better read than docs.python.org/reference.
2014-05-28 14:42:39	<--	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has quit (Ping timeout: 276 seconds)
2014-05-28 14:42:52	ZujkisNx	Hi! Anyone using Wheel's? If so - How to make pip use cached wheels by default (before trying to download it from PyPl) ?
2014-05-28 14:42:55	Yhg1s	motsu: you may also be interested in the glob module.
2014-05-28 14:43:04	-->	SevenWolf (~SevenWolf@unaffiliated/sevenwolf) has joined #python
2014-05-28 14:43:09	-->	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has joined #python
2014-05-28 14:43:24	motsu	ill look up glob, what was posted above looks good though
2014-05-28 14:43:26	nedbat	motsu: Yhg1s is right:  max(f in glob.glob("abc*"))
2014-05-28 14:43:46	motsu	i love how python has such cool things like that. this would be a pain in the ass with c :p
2014-05-28 14:43:48	adrian_berg	on tu/win 3
2014-05-28 14:44:31	-->	joaofelix (~joaofelix@177.17.230.178.dynamic.adsl.gvt.net.br) has joined #python
2014-05-28 14:44:34	motsu	oh, so glob should be used instead of startswith?
2014-05-28 14:44:35	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 14:44:44	nedbat	motsu: it will be better, yes.
2014-05-28 14:44:48	Yhg1s	instead of os.listdir and startswith, yes.
2014-05-28 14:45:00	motsu	cool. thanks :)
2014-05-28 14:45:05	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 14:45:36	-->	mikeybisbo (~mikeybisb@host86-171-32-109.range86-171.btcentralplus.com) has joined #python
2014-05-28 14:45:53	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 14:45:56	<--	guhcampos (~guhcampos@186.249.5.2) has left #python
2014-05-28 14:46:08	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-28 14:46:10	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 14:46:48	-->	_jack_ (~jack@141.218.143.78) has joined #python
2014-05-28 14:46:50	--	whg is now known as zz_whg
2014-05-28 14:47:30	VooDooNOFX	Does anyone have a pretty function which reverses an enumerated sequence using iterators? I found: lambda l: izip(xrange(len(l)-1, -1, -1), reversed(l)), but that's pretty ugly.
2014-05-28 14:48:02	<--	dragun0v (~dragun0v@173-228-114-2.dedicated.static.sonic.net) has quit (Remote host closed the connection)
2014-05-28 14:48:30	nedbat	VooDooNOFX: all functions are pretty from the outside :)
2014-05-28 14:48:31	therealfakemoot	VooDooNOFX: why isn't `reversed(enumerate(foo))` sufficident?
2014-05-28 14:48:44	VooDooNOFX	therealfakemoot: I need to reverse both the item, and the index
2014-05-28 14:49:01	therealfakemoot	reversed(item, index for item, index in enumerate(foo))
2014-05-28 14:49:28	<--	emperorcezar (~emperorce@c-71-57-38-56.hsd1.il.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 14:49:32	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 14:49:32	-->	mzarella (~m@unaffiliated/mzarella) has joined #python
2014-05-28 14:49:38	<--	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has quit (Ping timeout: 246 seconds)
2014-05-28 14:49:45	[Tritium]	VooDooNOFX: there is no way to do what you want without exhausting the iterator
2014-05-28 14:49:51	<--	treehug8_ (~treehug88@static-96-239-100-47.nycmny.fios.verizon.net) has quit
2014-05-28 14:49:59	<--	jwhisnant (~jwhisnant@unaffiliated/jwhisnant) has quit (Remote host closed the connection)
2014-05-28 14:50:01	[Tritium]	VooDooNOFX: even your example exhausts the iterator
2014-05-28 14:50:11	<--	cornfeedhobo (~cornfeedh@unaffiliated/cornfeed) has left #python ("when i leave, come together like butt cheeks")
2014-05-28 14:50:13	motsu	hmm, both ways are giving me invalid syntax.
2014-05-28 14:50:21	<--	nszceta (~nszceta@venezuela.pharm.pitt.edu) has quit
2014-05-28 14:50:30	nedbat	motsu: as always, pastebin your code and the complete error report.
2014-05-28 14:50:32	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-28 14:50:50	nedbat	VooDooNOFX: why not enumerate the reversed sequence?
2014-05-28 14:51:02	motsu	yep. im going to run to the store rly quick, but when i get back i will do :)
2014-05-28 14:51:10	therealfakemoot	nedbat: I think he means that he wants to reverse the sequence as well as revferse the order of index, element
2014-05-28 14:51:16	nedbat	VooDooNOFX: or:  enumerate(t[1] for t in reversed(l))
2014-05-28 14:51:22	VooDooNOFX	I would like ['a', 'b', 'c'] to return [(2, 'c'), (1, 'b'), (0, 'a')]
2014-05-28 14:51:34	therealfakemoot	VooDooNOFX: reversed(item, index for item, index in enumerate(foo))
2014-05-28 14:51:34	nedbat	VooDooNOFX: that's reversed(enumerate(l))
2014-05-28 14:51:41	therealfakemoot	Oh wait, yeah!
2014-05-28 14:51:43	therealfakemoot	Even simpler.
2014-05-28 14:51:56	mzarella	I'm curious, why are process calculi not used much in python much? https://github.com/python-concurrency/python-csp
2014-05-28 14:52:03	mzarella	That is an an example
2014-05-28 14:52:11	[Tritium]	VooDooNOFX: ok, I have to be the one to ask, why do you want to do this with iterators?
2014-05-28 14:52:16	mzarella	...of a library which isn't getting much use
2014-05-28 14:52:21	VooDooNOFX	reversed(enumerate(['a', 'b', 'c'])) returns TypeError on 2.7 (TypeError: argument to reversed() must be a sequence)
2014-05-28 14:52:25	-->	Gamenoob (~Gamenoob@93-136-27-75.adsl.net.t-com.hr) has joined #python
2014-05-28 14:52:32	therealfakemoot	Huh.
2014-05-28 14:52:46	[Tritium]	not that its a wrong thing to want to use iterators when you can, but  why do you want to in this case?
2014-05-28 14:52:51	<--	nemesit|znc (~nemesit|z@84.200.7.95) has quit (Ping timeout: 252 seconds)
2014-05-28 14:52:55	mzarella	I guess the underlying question is which concurrency models are used the most, and which libraries provide these abstractions?
2014-05-28 14:52:58	kevlarman	VooDooNOFX: reversed(list(foo))
2014-05-28 14:53:07	nedbat	VooDooNOFX: ok, reversed(list(enumerate(l)))
2014-05-28 14:53:17	<--	Gamenoob (~Gamenoob@93-136-27-75.adsl.net.t-com.hr) has quit (Client Quit)
2014-05-28 14:53:19	kevlarman	VooDooNOFX: or list(foo)[::-1] for compactness
2014-05-28 14:53:51	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-28 14:53:53	VooDooNOFX	[Tritium]: Mostly because i'd like to cleanup our codebase, and i'm seeing a lot of "for index in range(len(some_iterable), -1, -1)"
2014-05-28 14:53:59	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Quit: Computer has gone to sleep.)
2014-05-28 14:54:05	therealfakemoot	That's atrocious.
2014-05-28 14:54:44	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 14:54:50	VooDooNOFX	But both of those solutions are building an enumerate iter over the iterable, then dereferencing it with list(), then re-iterating it.
2014-05-28 14:54:50	Questions	VooDooNOFX: to me that looks like they just want to iterate backwards: for item in reversed(iterable)
2014-05-28 14:54:55	[Tritium]	VooDooNOFX: that is aweful.  for idx, item in reversed(list(enumerate(some_iterable))):   iterators not needed
2014-05-28 14:54:56	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-28 14:55:00	<--	Bird|otherbox (~Da@unaffiliated/htt-bird) has quit (Ping timeout: 276 seconds)
2014-05-28 14:55:01	VooDooNOFX	Are we saying that's the only way it's going to work well?
2014-05-28 14:55:28	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-28 14:55:38	VooDooNOFX	The core of this is I'm taking some string like 'test1_test2_test3_test4' and doing diminishing splits to match the string to other strings.
2014-05-28 14:55:45	-->	Windy (~Windwaker@71.13.116.52) has joined #python
2014-05-28 14:55:51	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 14:55:59	-->	arescorpio (~arescorpi@204-27-245-190.fibertel.com.ar) has joined #python
2014-05-28 14:56:03	[Tritium]	VooDooNOFX: inherently you need to exhast the iterator once in order to reverse it.  there is no way around that, so might as well make it the most readable way
2014-05-28 14:56:09	VooDooNOFX	e.g. first match the whole thing, then match 'test1_test2_test3' if that didn't work, then match 'test1_test2', etc...
2014-05-28 14:56:10	<--	cshell (~cshell@167.220.26.234) has quit (Quit: cshell)
2014-05-28 14:56:41	kevlarman	VooDooNOFX: this really smells like an xy problem
2014-05-28 14:56:59	[Tritium]	Indeed
2014-05-28 14:57:08	-->	mattcen (~mattcen@c110-22-201-130.sunsh4.vic.optusnet.com.au) has joined #python
2014-05-28 14:57:30	VooDooNOFX	It looks like its developing that way
2014-05-28 14:57:35	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-28 14:57:49	<--	neataroni (~neataroni@c-67-171-200-129.hsd1.or.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 14:57:52	VooDooNOFX	The interesting thing is to learn how to spot that ahead of time
2014-05-28 14:58:20	<--	dcrosta (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has quit (Quit: Quitting.)
2014-05-28 14:58:32	<--	Synthead (~max@216.239.55.44) has quit (Disconnected by services)
2014-05-28 14:58:58	kevlarman	VooDooNOFX: basically, any time we think "why would anyone want to do that?" it's probably an xy problem
2014-05-28 14:58:58	-->	FreezingCold (~FreezingC@135.0.41.14) has joined #python
2014-05-28 14:58:59	<--	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-28 14:59:04	-->	max__ (~max@216.239.55.44) has joined #python
2014-05-28 14:59:18	kevlarman	VooDooNOFX: so what's the x?
2014-05-28 14:59:21	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 252 seconds)
2014-05-28 14:59:23	--	max__ is now known as Guest98019
2014-05-28 14:59:26	-->	macacity_ (uid33844@gateway/web/irccloud.com/x-xnlzanghxnfuornb) has joined #python
2014-05-28 14:59:55	VooDooNOFX	I'm making a minimal viable example now :)
2014-05-28 15:00:18	<--	kingplusplus (~kingplusp@41.58.96.7) has quit (Ping timeout: 240 seconds)
2014-05-28 15:00:46	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Remote host closed the connection)
2014-05-28 15:00:58	<--	Macacity (~Macacity@cpe-001a4f1e9770.ip-pool.rftonline.net) has quit (Ping timeout: 240 seconds)
2014-05-28 15:01:16	<--	ZujkisNx (~hara@78-58-84-227.static.zebra.lt) has quit (Quit: WeeChat 0.4.1)
2014-05-28 15:01:20	<--	Windwaker (~Windwaker@71.13.116.52) has quit (Ping timeout: 264 seconds)
2014-05-28 15:01:20	<--	novist (~rndbit@tango025.startdedicated.com) has quit (Ping timeout: 264 seconds)
2014-05-28 15:01:20	<--	BiDOrD (~BiDOrD@johnnie.bidord.com) has quit (Ping timeout: 264 seconds)
2014-05-28 15:01:20	<--	devdazed (~russ_nyc@rrcs-24-136-119-106.nyc.biz.rr.com) has quit (Ping timeout: 264 seconds)
2014-05-28 15:01:21	<--	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has quit (Ping timeout: 264 seconds)
2014-05-28 15:01:21	<--	crissae (~quassel@rrcs-24-227-220-2.sw.biz.rr.com) has quit (Ping timeout: 264 seconds)
2014-05-28 15:01:21	<--	ekarlso (~ekarlso@unaffiliated/zykes) has quit (Ping timeout: 264 seconds)
2014-05-28 15:01:41	<--	armlesshobo (~ahobo@unaffiliated/armlesshobo) has quit (Remote host closed the connection)
2014-05-28 15:01:44	-->	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has joined #python
2014-05-28 15:02:05	<--	tterlet__ (~le_tropic@194.44.148.76) has quit (Ping timeout: 264 seconds)
2014-05-28 15:02:16	<--	nedbat (~nedbat@python/psf/nedbat) has quit
2014-05-28 15:02:22	<--	andi- (~andi@unaffiliated/andi-) has quit (Ping timeout: 245 seconds)
2014-05-28 15:02:23	-->	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has joined #python
2014-05-28 15:02:41	<--	slu9freek (~dm7freek@dhcp-63-190.cse.ucsc.edu) has quit (Ping timeout: 264 seconds)
2014-05-28 15:02:44	-->	Burgundy (~burgundy@188.25.126.27) has joined #python
2014-05-28 15:02:44	--	macacity_ is now known as Macacity
2014-05-28 15:02:54	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 15:03:17	<--	Ephexeve_ (~benmezger@187.65.231.51) has quit (Ping timeout: 264 seconds)
2014-05-28 15:03:30	-->	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has joined #python
2014-05-28 15:03:44	<--	heedypo1 (~heedypo@user-5af4a188.broadband.tesco.net) has quit (Ping timeout: 255 seconds)
2014-05-28 15:03:55	<--	dunkel2 (~dunkel2@189.158.61.126) has quit (Quit: dunkel2)
2014-05-28 15:04:24	-->	nemesit|znc (~nemesit|z@84.200.7.95) has joined #python
2014-05-28 15:04:38	-->	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has joined #python
2014-05-28 15:04:51	<--	cewing (~cewing@97-113-30-194.tukw.qwest.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 15:04:57	<--	Burgundy (~burgundy@188.25.126.27) has quit (Remote host closed the connection)
2014-05-28 15:05:13	VooDooNOFX	kevlarman: Here's an example of what I'm trying to do. It's a simplified example, but heregoes: http://codepad.org/5SL2hV1Q
2014-05-28 15:05:20	<--	guilhermebr (~guilherme@179.182.229.70) has quit (Remote host closed the connection)
2014-05-28 15:05:31	-->	slu9freek (~dm7freek@dhcp-63-190.cse.ucsc.edu) has joined #python
2014-05-28 15:05:37	<--	felipeduardo (~felipedua@189.115.4.196) has quit (Quit: ..)
2014-05-28 15:06:06	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-28 15:06:10	<--	Macacity (uid33844@gateway/web/irccloud.com/x-xnlzanghxnfuornb) has left #python
2014-05-28 15:06:16	-->	Macacity (uid33844@gateway/web/irccloud.com/x-xnlzanghxnfuornb) has joined #python
2014-05-28 15:06:59	<--	sbuettner (Scott@2600:3c00::f03c:91ff:feae:9b3a) has quit (Quit: Leaving)
2014-05-28 15:07:06	<--	Roukoswarf (admin@rouk.org) has quit (Ping timeout: 258 seconds)
2014-05-28 15:07:17	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Read error: Connection reset by peer)
2014-05-28 15:07:17	-->	ncthom91 (ncthom91@64.125.189.90) has joined #python
2014-05-28 15:07:18	<--	R0b0t1 (~dev@unaffiliated/r0b0t1) has quit (Ping timeout: 240 seconds)
2014-05-28 15:07:24	kevlarman	VooDooNOFX: make a generator that yields ['test1_test2_test3', 'test1_test2', 'test1']
2014-05-28 15:07:33	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-28 15:07:44	kevlarman	VooDooNOFX: or just a list, whichever is easier
2014-05-28 15:08:02	-->	wilsoncd35 (~mad@199.59.106.58) has joined #python
2014-05-28 15:08:12	<--	SebSemmi (~SebSemmi@e178193149.adsl.alicedsl.de) has quit
2014-05-28 15:08:19	<--	Deithrian (~Deithrian@unaffiliated/deithrian) has quit (Ping timeout: 240 seconds)
2014-05-28 15:08:24	kevlarman	VooDooNOFX: no need for enumerate either that way
2014-05-28 15:08:31	<--	jkyle3 (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 252 seconds)
2014-05-28 15:08:41	<--	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has quit (Remote host closed the connection)
2014-05-28 15:09:01	-->	Wharncliffe (~coffee@unaffiliated/ridout) has joined #python
2014-05-28 15:09:06	-->	ovoraptor (~transluce@c-50-154-216-222.hsd1.fl.comcast.net) has joined #python
2014-05-28 15:09:21	VooDooNOFX	kevlarman: can you give me an example of not needing enumerate? The only approach I can conceive is to enumerate the split object, yielding results of the current item joined to any item before it.
2014-05-28 15:09:24	steveoh	if you have something printed and it shows up as ('stuff', 1, None) is that a set?
2014-05-28 15:09:43	therealfakemoot	that's a tuple, probably
2014-05-28 15:09:47	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-28 15:09:50	steveoh	a tuple ok
2014-05-28 15:09:55	steveoh	yup
2014-05-28 15:09:56	therealfakemoot	steveoh: you can find out for sure by actually MAKING a set and then printing it.
2014-05-28 15:10:07	-->	ncthom91_ (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 15:10:11	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined #python
2014-05-28 15:10:11	steveoh	tuples are accessed by an index right
2014-05-28 15:10:16	kevlarman	VooDooNOFX: for needle in ['test1_test2_test3', 'test1_test2', ...]:
2014-05-28 15:10:18	<--	adrian_berg (~adrian@unaffiliated/adrian-berg/x-4249779) has quit (Quit: leaving)
2014-05-28 15:10:32	<--	shn228 (~json@cpc19-dals19-2-0-cust8.20-2.cable.virginm.net) has quit (Quit: leaving)
2014-05-28 15:10:33	kevlarman	VooDooNOFX: the split should not be there
2014-05-28 15:10:47	VooDooNOFX	kevlarman: Sure, but given only 'test1_test2_test3', how to make the list of dimishing joined strings?
2014-05-28 15:10:54	therealfakemoot	steveoh: Yes.
2014-05-28 15:10:57	[Tritium]	steveoh: yes, tuples are indexed in the same way a list is
2014-05-28 15:11:03	kevlarman	VooDooNOFX: make a function that does that specifically
2014-05-28 15:11:06	steveoh	so you shoudl be able to for in a tuple
2014-05-28 15:11:09	<--	ncthom9__ (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Read error: Connection reset by peer)
2014-05-28 15:11:24	kevlarman	VooDooNOFX: or rather a generator, but same difference
2014-05-28 15:11:26	VooDooNOFX	kevlarman: Ok, and that function in my mind needs an enumerate.
2014-05-28 15:11:28	therealfakemoot	steveoh: You can iterate over tuples
2014-05-28 15:11:39	therealfakemoot	steveoh: You can iterate over sequences that don't support indeexing, too. Like sets and dicts.
2014-05-28 15:11:47	kevlarman	VooDooNOFX: it may or may not, but your for loop doesn't
2014-05-28 15:11:54	<--	ncthom91 (ncthom91@64.125.189.90) has quit (Ping timeout: 265 seconds)
2014-05-28 15:12:05	<--	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has quit (Ping timeout: 255 seconds)
2014-05-28 15:12:07	kevlarman	VooDooNOFX: and i'm pretty sure you can do it more simply with just xrange
2014-05-28 15:12:09	[Tritium]	steveoh: you can iterate over anything that supports the iterator protocol
2014-05-28 15:12:25	--	jjmojojjmojo is now known as jjmojo^away
2014-05-28 15:12:41	VooDooNOFX	kevlarman: right. ok. I'm actually ignoring the item in teh enumerate call anyway, so I could just use an xrange here.
2014-05-28 15:13:17	<--	bwreilly (~bwreilly@66.193.98.226) has quit (Ping timeout: 252 seconds)
2014-05-28 15:13:18	<--	cparlette (~chris.par@static-108-48-124-82.washdc.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-05-28 15:13:25	kevlarman	VooDooNOFX: def foo(l): for i in xrange(len(l), 0, -1): yield l[0:i]
2014-05-28 15:13:26	kevlarman	ish
2014-05-28 15:13:27	-->	Burgundy (~burgundy@188.25.126.27) has joined #python
2014-05-28 15:13:29	<--	foist (~alex@38.69.142.159) has quit (Ping timeout: 264 seconds)
2014-05-28 15:13:42	-->	Snake2k (~snake2k@164.106.75.252) has joined #python
2014-05-28 15:13:45	kevlarman	VooDooNOFX: the join probably goes in there too
2014-05-28 15:14:14	-->	robvdl (~robvdl@2404:130:0:1000:5543:4aa1:7764:3db7) has joined #python
2014-05-28 15:14:23	<--	nemesit|znc (~nemesit|z@84.200.7.95) has quit (Ping timeout: 252 seconds)
2014-05-28 15:14:41	<--	chrismed (~chrismed@abjr214.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2014-05-28 15:14:50	<--	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has quit (Ping timeout: 246 seconds)
2014-05-28 15:14:51	[Tritium]	(l[0:i] for i in xrange(len(l), 0, -1)) genexp
2014-05-28 15:15:00	-->	guilhermebr (~guilherme@179.182.229.70) has joined #python
2014-05-28 15:15:01	<--	guilhermebr (~guilherme@179.182.229.70) has quit (Remote host closed the connection)
2014-05-28 15:15:20	kevlarman	[Tritium]: he said his code does this a lot, so it makes sense to name it
2014-05-28 15:15:40	<--	wldcordeiro_work (~kvirc@50-200-160-113-static.hfc.comcastbusiness.net) has quit (Read error: Connection reset by peer)
2014-05-28 15:16:11	-->	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has joined #python
2014-05-28 15:16:14	<--	nihilista (~nihilista@89-164-126-48.dsl.iskon.hr) has quit (Read error: Connection reset by peer)
2014-05-28 15:16:20	-->	nemesit|znc (~nemesit|z@84.200.7.95) has joined #python
2014-05-28 15:16:51	-->	nihilista (~nihilista@89-164-126-48.dsl.iskon.hr) has joined #python
2014-05-28 15:17:08	VooDooNOFX	Yes, these are perfect.
2014-05-28 15:17:22	VooDooNOFX	I'll make this one a function, but the genexp can also be useful elsewhere.
2014-05-28 15:17:29	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 15:17:43	VooDooNOFX	Thank you for helping me identify X.
2014-05-28 15:17:54	kevlarman	VooDooNOFX: btw, our xy detector does occasionally have false positives, when someone has a good reason to do something really complicated
2014-05-28 15:18:08	kevlarman	but as a general rule complicated stuff is unnecessary and undesirable
2014-05-28 15:19:01	-->	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has joined #python
2014-05-28 15:19:07	-->	neurosnap (~neurosnap@72.240.79.150) has joined #python
2014-05-28 15:19:20	<--	desophos (~desophos@128.149.227.202) has quit (Quit: Leaving)
2014-05-28 15:19:25	<--	mzarella (~m@unaffiliated/mzarella) has quit (Quit: leaving)
2014-05-28 15:19:48	neurosnap	ayo
2014-05-28 15:20:21	-->	adrian_berg (~adrian@unaffiliated/adrian-berg/x-4249779) has joined #python
2014-05-28 15:20:38	-->	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has joined #python
2014-05-28 15:22:28	steveoh	if you for in'd over a list of tuples would it for in over the tuples only
2014-05-28 15:22:32	<--	Eyess (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Ping timeout: 265 seconds)
2014-05-28 15:22:42	steveoh	it looks like it's entering into the tuple itself
2014-05-28 15:22:42	VooDooNOFX	Since i've got the floor, can anyone recommend a good algorithms book? In my cs education, I mostly screwed around when we were learning things like traveling salesman and other algorithms.
2014-05-28 15:22:57	<--	bnmalcabis (~benjy@190.233.117.65) has quit (Ping timeout: 276 seconds)
2014-05-28 15:23:06	-->	tilgovi (~randall@couchdb/committer/tilgovi) has joined #python
2014-05-28 15:23:27	aberrant	ok, what the flying fuck?
2014-05-28 15:23:36	<--	LysergicDreams (~Lysergia@208-46-125-98.dia.static.qwest.net) has quit (Ping timeout: 276 seconds)
2014-05-28 15:23:39	<--	T-virus (~T-virus@a89-153-104-249.cpe.netcabo.pt) has quit
2014-05-28 15:23:39	aberrant	truecrypt.org is now throwing in the towel??
2014-05-28 15:23:51	kevlarman	VooDooNOFX: uh, you will probably never run into a situation where you have to implement an algorithm to solve np-complete problems
2014-05-28 15:23:51	aberrant	oops, sorry, wrong channel :)
2014-05-28 15:24:04	kevlarman	aberrant: people are suspecting something fishy going on
2014-05-28 15:24:21	aberrant	kevlarman: yah, reading up. Sorry to have cursed in this channel :)
2014-05-28 15:25:14	-->	Rask (~rask@97-124-235-88.hlrn.qwest.net) has joined #python
2014-05-28 15:25:21	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-28 15:25:26	-->	darkstalker (~wolfie@fluffy.pw) has joined #python
2014-05-28 15:25:53	adrian_berg	How can you create a function object, i.e. how can you make a function that isn't part of an object? I thought it was obects all the way down
2014-05-28 15:25:58	<--	ovoraptor (~transluce@c-50-154-216-222.hsd1.fl.comcast.net) has quit (Remote host closed the connection)
2014-05-28 15:26:41	<--	mikemac (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Remote host closed the connection)
2014-05-28 15:26:53	Rask	Hi channel.  Anyone happen to know how to get the value of globals() for the file that was invoked by the command shell (as opposed to the file in which the function inside which globals() is called)?
2014-05-28 15:26:58	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Remote host closed the connection)
2014-05-28 15:27:00	kevlarman	adrian_berg: you create a function object with the def and lambda keywords
2014-05-28 15:27:05	-->	mikemac (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined #python
2014-05-28 15:27:16	VooDooNOFX	kevlarman: How about any algorithms that help many to many searching?
2014-05-28 15:27:26	<--	Olipro (~Olipro@uncyclopedia/pdpc.21for7.olipro) has quit (Ping timeout: 246 seconds)
2014-05-28 15:27:36	adrian_berg	kevlarman: You do the same for method objects, though, right?
2014-05-28 15:27:56	kevlarman	adrian_berg: a method object is just a fancy function object
2014-05-28 15:27:57	darkstalker	hi, i'm trying to compile some software via scons, but it fails to import "subprocess.check_output". I'm already using python 2.7. What's the problem?
2014-05-28 15:28:18	-->	ncthom91 (ncthom91@64.125.189.90) has joined #python
2014-05-28 15:28:25	kevlarman	darkstalker: pastebin the exact error please
2014-05-28 15:28:27	-->	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has joined #python
2014-05-28 15:28:51	-->	slowpoke (~slowpoke@unaffiliated/proxypoke) has joined #python
2014-05-28 15:28:56	<--	jml (~jml@unaffiliated/jml) has quit (Ping timeout: 255 seconds)
2014-05-28 15:29:16	Yhg1s	adrian_berg: everything is an object, yes, but not everything is a _method_.
2014-05-28 15:29:55	<--	tredory (~tredory@p5488A574.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2014-05-28 15:30:06	-->	ncthom9__ (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 15:30:08	-->	jml (~jml@unaffiliated/jml) has joined #python
2014-05-28 15:30:19	<--	tiwula (~lane@2600:100e:b116:17ba:227:10ff:fe2d:aa2c) has quit (Quit: Leaving)
2014-05-28 15:30:31	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 15:30:32	darkstalker	kevlarman: here it is http://pastie.org/9232346
2014-05-28 15:30:32	Rask	Actually... now I think about it, I think what I really need to know is, what's the best way to invoke a function under different globals than it's supposed to have?
2014-05-28 15:30:41	<--	mateNz (~mateNz@unaffiliated/matenz) has quit (Read error: Connection reset by peer)
2014-05-28 15:30:42	Yhg1s	Rask: there isn't a good way.
2014-05-28 15:30:54	Yhg1s	Rask: what are you trying to do?
2014-05-28 15:31:03	solidus-river	what is wrong with this syntax
2014-05-28 15:31:04	Yhg1s	darkstalker: you forgot the actual error, the last line.
2014-05-28 15:31:12	solidus-river	http://pastie.org/9232349
2014-05-28 15:31:20	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 15:31:22	Yhg1s	darkstalker: oh, no, it's just a mangled traceback.
2014-05-28 15:31:24	<--	ncthom91_ (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Ping timeout: 240 seconds)
2014-05-28 15:31:31	[Tritium]	adrian_berg: methods are functions that you get through attribute access on a class or instance.  Untill you get them, they are just regular functions
2014-05-28 15:31:32	<--	andtorg (~andtorg@87.18.94.71) has quit (Quit: WeeChat 0.4.3)
2014-05-28 15:31:40	darkstalker	it's the entire output
2014-05-28 15:31:45	Yhg1s	darkstalker: Can you do '/usr/bin/python2.7 -c "import subprocess; print subprocess.check_output"'?
2014-05-28 15:31:53	Rask	Yhg1s: Bunch of different classes that inherit from a superclass to do different kinds of testing, I want them all to be runnable from the command line and share a common 'main' that instantiates the class, etc.
2014-05-28 15:32:05	darkstalker	<function check_output at 0xcea320>
2014-05-28 15:32:15	Avaris	solidus-river: `return = ...` you're assigning to `return` which is a keyword
2014-05-28 15:32:17	Yhg1s	darkstalker: sounds like something is wrong with the SCons environment then, I'm afraid.
2014-05-28 15:32:18	darkstalker	yea it's weird. from what i read it's supposed to work
2014-05-28 15:32:28	<--	lauracr (~lauracr@199.47.79.34) has quit (Quit: lauracr)
2014-05-28 15:32:38	Yhg1s	Rask: ok? Where do the different globals come in?
2014-05-28 15:32:43	<--	ncthom91 (ncthom91@64.125.189.90) has quit (Ping timeout: 252 seconds)
2014-05-28 15:32:45	solidus-river	oh, does python not return
2014-05-28 15:32:49	solidus-river	oh i get it
2014-05-28 15:32:52	solidus-river	it does i'm jsut using =
2014-05-28 15:32:56	solidus-river	sorry i'm on 1.5 hours of sleep
2014-05-28 15:33:06	solidus-river	probably doin more harm than good today
2014-05-28 15:33:32	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 15:33:36	Rask	Yhg1s: I need to search globals for the class name, and also refer to a parameter defined in each file with some metadata
2014-05-28 15:33:46	adrian_berg	kevlarman, Yhg1s, [Tritium]: perfect, thank you
2014-05-28 15:33:52	Yhg1s	Rask: pass it to the functions instead.
2014-05-28 15:34:05	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-177.dynamic.uwaterloo.ca) has joined #python
2014-05-28 15:34:12	<--	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2014-05-28 15:34:15	Yhg1s	Rask: or, since you were talking about a class, make it a class attribute.
2014-05-28 15:34:17	-->	bnmalcabis (~benjy@190.233.117.65) has joined #python
2014-05-28 15:34:35	-->	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has joined #python
2014-05-28 15:34:39	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 276 seconds)
2014-05-28 15:34:49	Rask	Mmmn, I suppose I could just stuff them as parameters...  I just want to give the users writing the test classes one less thing to trip over.
2014-05-28 15:35:06	<--	Samb2 (~Sammysama@2001:8b0:856:1:6627:37ff:fe35:ddc1) has quit (Ping timeout: 265 seconds)
2014-05-28 15:35:09	-->	mathemancer (~mathemanc@174-29-59-101.hlrn.qwest.net) has joined #python
2014-05-28 15:35:19	<--	thedodd (~Anthony@rrcs-67-78-97-126.sw.biz.rr.com) has quit (Quit: Leaving)
2014-05-28 15:36:13	Rask	Arright, thanks anyhoo.
2014-05-28 15:36:13	-->	kcj (~kcj@unaffiliated/kcj) has joined #python
2014-05-28 15:37:37	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-28 15:37:41	-->	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-28 15:37:47	<--	adrian_berg (~adrian@unaffiliated/adrian-berg/x-4249779) has quit (Quit: leaving)
2014-05-28 15:37:58	<--	QBob (~qbob@amarok/developer/qbob) has quit (Ping timeout: 240 seconds)
2014-05-28 15:38:02	-->	bwreilly (~bwreilly@9.sub-166-248-57.myvzw.com) has joined #python
2014-05-28 15:38:13	<--	badon (~badon@pdpc/supporter/active/badon) has quit (Ping timeout: 252 seconds)
2014-05-28 15:38:49	-->	piR (~pierre@pierregerard.net) has joined #python
2014-05-28 15:39:37	<--	piR (~pierre@pierregerard.net) has left #python
2014-05-28 15:40:21	Rask	Tangential question, actually
2014-05-28 15:40:29	<--	Callek (~chatzilla@75-138-181-33.dhcp.oxfr.ma.charter.com) has quit (Remote host closed the connection)
2014-05-28 15:40:39	<--	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has quit (Remote host closed the connection)
2014-05-28 15:40:45	Rask	Given a reference to a class, how to get just its name as a string?
2014-05-28 15:41:11	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-28 15:41:26	Yhg1s	Rask: classes have a __name__ attribute.
2014-05-28 15:41:48	<--	armyriad (~armyriad@50.23.115.112) has quit (Ping timeout: 240 seconds)
2014-05-28 15:41:57	Rask	Oh, huh, that's odd, why did that not appear in dir?
2014-05-28 15:42:07	-->	czapla (~czapla@2a02:8109:8380:1298:7829:99cb:66b6:9c7b) has joined #python
2014-05-28 15:42:13	Jerub	dir() doesn't have the whole truth
2014-05-28 15:42:14	Yhg1s	dir() isn't really a useful tool. It doesn't show lots of things.
2014-05-28 15:42:15	-->	visualshockg (~visualsho@host-37-191-204-89.lynet.no) has joined #python
2014-05-28 15:42:17	kevlarman	Rask: probably because you're confusing a class and an instance
2014-05-28 15:42:31	VooDooNOFX	Rask: some_class_instance.__class__.__name__
2014-05-28 15:42:32	<--	exicer_ (~exicer@cpc1-cmbg14-2-0-cust355.5-4.cable.virginm.net) has quit (Quit: exicer_)
2014-05-28 15:42:34	Rask	kevlarman: Nope, I'm specifically referring to a class
2014-05-28 15:42:34	-->	ncthom91 (ncthom91@64.125.189.90) has joined #python
2014-05-28 15:42:53	<--	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 255 seconds)
2014-05-28 15:43:04	Rask	as in:  class foo(object): pass   x = foo   x.__name__
2014-05-28 15:43:11	<--	mulander (uid1766@gateway/web/irccloud.com/x-tgqmbazeczaovhff) has quit (Quit: Connection closed for inactivity)
2014-05-28 15:43:23	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 15:43:25	Rask	Anyhoo, __name__ was what I needed, thanks!
2014-05-28 15:43:39	<--	Infant (~thomas@78-56-194-78.static.zebra.lt) has quit (Remote host closed the connection)
2014-05-28 15:43:58	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-28 15:44:00	<--	snyp (~snyp@223.29.204.2) has quit (Quit: Leaving)
2014-05-28 15:44:27	<--	SittingShiva (~textual@50.97.94.43-static.reverse.softlayer.com) has quit (Ping timeout: 252 seconds)
2014-05-28 15:44:32	<--	mathemancer (~mathemanc@174-29-59-101.hlrn.qwest.net) has quit (Quit: Lost terminal)
2014-05-28 15:44:44	<--	zlalanne (~zlalanne@nat/ti/x-pofalhrhdsoteonh) has quit (Quit: Leaving)
2014-05-28 15:44:46	-->	mike_af (~mike_af@unaffiliated/mike-af/x-5454762) has joined #python
2014-05-28 15:44:52	<--	ncthom9__ (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Ping timeout: 245 seconds)
2014-05-28 15:44:58	konradsurf	anyone know how to parse with pyparsing?
2014-05-28 15:45:09	_habnabit	konradsurf, have you read the docs?
2014-05-28 15:45:11	-->	picca (~picca@86.188.222.130) has joined #python
2014-05-28 15:45:22	-->	armyriad (~armyriad@cpe-104-32-187-144.socal.res.rr.com) has joined #python
2014-05-28 15:45:24	cryzed	yeah that seems like the first place I'd go.
2014-05-28 15:45:27	cryzed	http://pyparsing.wikispaces.com/HowToUsePyparsing
2014-05-28 15:45:29	konradsurf	_habnabit: yes, so much...i'm struggling with a few concepts, but having some success.
2014-05-28 15:45:35	<--	visualshock (~visualsho@host-37-191-204-89.lynet.no) has quit (Ping timeout: 255 seconds)
2014-05-28 15:45:40	_habnabit	konradsurf, perhaps you meant to ask a more useful question, then
2014-05-28 15:45:40	cryzed	oh
2014-05-28 15:45:54	<--	mikeybisbo (~mikeybisb@host86-171-32-109.range86-171.btcentralplus.com) has quit
2014-05-28 15:46:02	cryzed	konradsurf, as in your specific problem
2014-05-28 15:46:14	konradsurf	_habnabit: if you are helping, i appreciate it. typing a question...
2014-05-28 15:47:06	-->	Arctico (~Arctico@12.175.218.87.dynamic.jazztel.es) has joined #python
2014-05-28 15:47:14	_habnabit	konradsurf, also, you might consider using parsley instead of pyparsing
2014-05-28 15:47:20	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 15:47:44	<--	rthat (~rthat@159.140.254.99) has quit (Quit: Out for ribs.)
2014-05-28 15:47:47	-->	Polymorphism (~textual@68.204.154.30) has joined #python
2014-05-28 15:47:49	<--	ptrv (~ptrv@p57A05D84.dip0.t-ipconnect.de) has quit (Quit: KVIrc 4.3.1 Aria http://www.kvirc.net/)
2014-05-28 15:47:50	konradsurf	_habnabit: i have not read the docs on parsley, and pyparsing seems user friendly, but i have 2 things tripping me up now.
2014-05-28 15:48:03	konradsurf	general problem: trying to parse a json-like structure, or C-like structure if you prefer, with nested structures....
2014-05-28 15:48:22	Yhg1s	konradsurf: interestingly enough, there's a good talk on parsley that uses JSON-like structures as an example.
2014-05-28 15:48:36	<--	mijicd_ (~mijicd@cable-188-246-38-174.dynamic.kdsinter.net) has quit (Quit: leaving)
2014-05-28 15:48:48	konradsurf	specific problem #1: statements on multiple lines are combining into one result, i need them to be multiple matches and not just one big match.
2014-05-28 15:48:49	Yhg1s	konradsurf: but with any reasonable parser, 'nesting' is something you should be getting just by nature of specifying a general expression that can be contained in other expressions.
2014-05-28 15:48:51	<--	mn3monic (~xxwa@unaffiliated/mn3monic) has quit (Ping timeout: 252 seconds)
2014-05-28 15:49:09	konradsurf	Yhg1s: do you personally know how to use parsley or pyparsing?
2014-05-28 15:49:24	Yhg1s	konradsurf: yes.
2014-05-28 15:49:34	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-28 15:49:37	konradsurf	Yhg1s: yes, i agree...i'm overlooking something obvious that will still be a problem with another library.
2014-05-28 15:49:48	<--	lduros (~user@fsf/member/lduros) has quit (Remote host closed the connection)
2014-05-28 15:49:57	<--	murk_ (~nnscript@D97A9253.cm-3-3c.dynamic.ziggo.nl) has quit (Quit: ( www.nnscript.com :: NoNameScript 4.22 :: www.esnation.com ))
2014-05-28 15:50:39	-->	dray3 (~daaray@cpe-173-095-178-019.nc.res.rr.com) has joined #python
2014-05-28 15:50:47	<--	armyriad (~armyriad@cpe-104-32-187-144.socal.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-05-28 15:51:02	konradsurf	here is what i want to parse, see the Format section: http://www.ogre3d.org/docs/manual/manual_14.html#Material-Scripts
2014-05-28 15:51:08	-->	armyriad (~armyriad@cpe-104-32-187-144.socal.res.rr.com) has joined #python
2014-05-28 15:51:23	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 15:51:28	<--	plutoniix (~plutoniix@node-4fd.pool-125-25.dynamic.totbb.net) has quit (Quit: จรลี จรลา)
2014-05-28 15:51:48	konradsurf	it's pretty simple, but i'm not defining 'members' correctly, e.g. "ambient & diffuse" are getting combined into one match.
2014-05-28 15:52:02	-->	R0b0t1 (~dev@unaffiliated/r0b0t1) has joined #python
2014-05-28 15:52:10	<--	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2014-05-28 15:52:11	_habnabit	konradsurf, remember that pyparsing ignores all whitespace by default
2014-05-28 15:52:12	Yhg1s	konradsurf: ok, so how are you parsing this?:
2014-05-28 15:52:21	-->	cardboard (~cardboard@DHCP-159-220.caltech.edu) has joined #python
2014-05-28 15:52:25	<--	qiemem (uid14911@gateway/web/irccloud.com/x-gvatpmctzkdfawda) has quit (Quit: Connection closed for inactivity)
2014-05-28 15:52:31	-->	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has joined #python
2014-05-28 15:52:37	-->	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has joined #python
2014-05-28 15:52:37	-->	semigloss (~semigloss@d192-24-132-200.try.wideopenwest.com) has joined #python
2014-05-28 15:53:03	konradsurf	_habnabit, cryzed, Yhg1s : you guys with me?
2014-05-28 15:53:25	Yhg1s	konradsurf: you haven't said anything that we can help you with, so far.
2014-05-28 15:53:31	konradsurf	hmm
2014-05-28 15:53:35	Yhg1s	konradsurf: if you want help with your code, you'll have to show the code.
2014-05-28 15:53:49	aberrant	I have a dict of lists of booleans. Is there a way to efficiently AND multiple elements of the dict? For example, AND 5 selected lists together?
2014-05-28 15:53:50	cryzed	pretty much. Use dpaste/pastebin/gist to paste your pyparsing code and a concrete example that fails
2014-05-28 15:54:03	konradsurf	line of code: statement = name + val
2014-05-28 15:54:05	Yhg1s	aberrant: bitwise or logical and?
2014-05-28 15:54:11	konradsurf	why is this line of code matching multiple lines?
2014-05-28 15:54:12	aberrant	Yhg1s: logical
2014-05-28 15:54:26	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 15:54:28	cryzed	aberrant, all(element for element in dict['element_key'])
2014-05-28 15:54:30	aberrant	Yhg1s: right now I’m using a loop through the keys
2014-05-28 15:54:31	Yhg1s	aberrant: all() may be what you want then.
2014-05-28 15:54:31	cryzed	something like this maybe?
2014-05-28 15:54:42	cryzed	or just uh
2014-05-28 15:54:44	Yhg1s	konradsurf: what are 'name' and 'val' there?
2014-05-28 15:54:44	_habnabit	cryzed, your genexp is redundant
2014-05-28 15:54:46	cryzed	all(dict['element_key'])
2014-05-28 15:54:47	cryzed	yeah
2014-05-28 15:54:48	<--	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2014-05-28 15:54:49	cryzed	noticed that too
2014-05-28 15:54:55	<--	solidus-river (~solidus-r@207.170.224.131) has quit (Ping timeout: 265 seconds)
2014-05-28 15:55:01	Yhg1s	konradsurf: seriously, just pastebin your actual code, instead of showing us snippets.
2014-05-28 15:55:05	konradsurf	Yhg1s: name = pp.Word(pp.alphas, pp.alphanums+'_')
2014-05-28 15:55:24	<--	firecat53 (~firecat53@108.170.1.2) has quit (Ping timeout: 258 seconds)
2014-05-28 15:55:31	aberrant	Yhg1s: not sure that’s more efficient than http://dpaste.com/2BB77EE/
2014-05-28 15:55:58	cryzed	why wouldn it be any less efficient?
2014-05-28 15:56:02	<--	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has quit (Quit: Leaving.)
2014-05-28 15:56:14	Yhg1s	aberrant: it would be more efficient, but it would also do something else entirely.
2014-05-28 15:56:18	-->	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has joined #python
2014-05-28 15:56:18	aberrant	cryzed: I’m pretty sure zip() is more efficient than element traversal within a list.
2014-05-28 15:56:24	Yhg1s	aberrant: if you just want to do an elementwise and, you may want to consider using numpy arrays instead.
2014-05-28 15:56:34	_habnabit	aberrant, zip _is_ an element traversal
2014-05-28 15:56:38	-->	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has joined #python
2014-05-28 15:56:39	Yhg1s	More than one, in fact.
2014-05-28 15:56:40	aberrant	Yhg1s: yeah, but I need labels.
2014-05-28 15:56:44	cryzed	2 actually
2014-05-28 15:56:47	-->	faldridg_ (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-28 15:56:52	Yhg1s	aberrant: I'm not sure what you mean by that, sorry.
2014-05-28 15:56:57	cryzed	doesn't zip just take element i for 2 lists and tuples them together
2014-05-28 15:56:57	<--	yorick (~yorick@oftn/member/yorick) has quit (Remote host closed the connection)
2014-05-28 15:57:00	aberrant	Yhg1s: the dict key is important to me.
2014-05-28 15:57:07	-->	dj_pi (~dj@107.5.25.243) has joined #python
2014-05-28 15:57:08	Yhg1s	aberrant: ok?
2014-05-28 15:57:19	<--	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 15:57:26	aberrant	Yhg1s: numpy arrays don’t have a place to hold the dict key, IIRC
2014-05-28 15:57:37	Yhg1s	aberrant: I don't understand why that precludes using a numpy array of bools, considering your current list comprehension doesn't contain the dict key either, but okay.
2014-05-28 15:57:37	aberrant	I could make a separate lookup table, I guess.
2014-05-28 15:57:41	Yhg1s	aberrant: if what you ahve works, just keep using it.
2014-05-28 15:57:48	aberrant	Yhg1s: it’s taking too long :(
2014-05-28 15:58:05	-->	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-28 15:58:08	aberrant	103.368 seconds for combination (4,60)
2014-05-28 15:58:10	-->	kosh (~kosh@aesaeion.com) has joined #python
2014-05-28 15:58:21	konradsurf	Yhg1s: thanks for the help. http://pastebin.com/DBD5BhqT
2014-05-28 15:58:23	infobob	http://paste.pound-python.org/show/YV2GCH7GSbNERXPzcnqp/ (repasted for konradsurf)
2014-05-28 15:58:30	aberrant	I’ll look at numpy arrays though.
2014-05-28 15:58:45	-->	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has joined #python
2014-05-28 15:59:08	-->	amstan (~alex@aichallenge/admin/amstan) has joined #python
2014-05-28 15:59:09	_habnabit	konradsurf, remember that pyparsing ignores all whitespace by default
2014-05-28 15:59:28	<--	picca (~picca@86.188.222.130) has quit (Quit: Lingo - http://lingoirc.com)
2014-05-28 15:59:40	_habnabit	konradsurf, you're doing OneOrMore without checking for newlines
2014-05-28 15:59:47	<--	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-05-28 16:00:06	-->	picca (~picca@86.188.222.130) has joined #python
2014-05-28 16:00:30	<--	wilsoncd35 (~mad@199.59.106.58) has quit (Quit: no carrier)
2014-05-28 16:00:36	konradsurf	Yhg1s: does that look reasonable?
2014-05-28 16:00:45	Yhg1s	konradsurf: does what look reasonable?
2014-05-28 16:00:55	konradsurf	i'll repost
2014-05-28 16:00:57	konradsurf	Yhg1s: thanks for the help. http://pastebin.com/DBD5BhqT
2014-05-28 16:00:57	infobob	http://paste.pound-python.org/show/YV2GCH7GSbNERXPzcnqp/ (repasted for konradsurf)
2014-05-28 16:01:07	<--	stack (~urb@unaffiliated/stack) has quit (Ping timeout: 245 seconds)
2014-05-28 16:01:09	<--	faldridg_ (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-05-28 16:01:09	Yhg1s	konradsurf: your code? No, for the reason _habnabit already pointed out.
2014-05-28 16:01:34	<--	FasTTo (~FasTTo@bl15-209-130.dsl.telepac.pt) has quit (Quit: Inactive)
2014-05-28 16:01:43	konradsurf	hmm, i do not see a response from _habnabit
2014-05-28 16:02:06	Yhg1s	_habnabit: see, that's what you get for having a nick that starts with _.
2014-05-28 16:02:17	_habnabit	oh no :(
2014-05-28 16:02:26	-->	Fusxfaranto (~quassel@c-69-181-236-33.hsd1.ca.comcast.net) has joined #python
2014-05-28 16:03:10	konradsurf	i'm confused
2014-05-28 16:03:12	<--	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has quit (Quit: WeeChat 0.4.2)
2014-05-28 16:03:28	-->	ncthom91_ (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 16:03:31	<--	dennisw (~dennis@nat-168-7-222-60.rice.edu) has quit (Ping timeout: 252 seconds)
2014-05-28 16:03:53	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 252 seconds)
2014-05-28 16:04:19	-->	ncthom9__ (ncthom91@64.125.189.90) has joined #python
2014-05-28 16:04:19	konradsurf	Yhg1s: will you please repost _habnabit's response?
2014-05-28 16:04:30	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 16:05:04	Yhg1s	00:52 < _habnabit> konradsurf, remember that pyparsing ignores all whitespace by default
2014-05-28 16:05:07	Yhg1s	00:59 < _habnabit> konradsurf, remember that pyparsing ignores all whitespace by default
2014-05-28 16:05:11	Yhg1s	00:59 < _habnabit> konradsurf, you're doing OneOrMore without checking for newlines
2014-05-28 16:05:23	konradsurf	wow, none of that came through. thanks
2014-05-28 16:05:33	Yhg1s	You may want to unignore him, then.
2014-05-28 16:06:19	<--	steveoh (~steveoh@remote.utah.gov) has quit (Read error: Connection reset by peer)
2014-05-28 16:06:19	-->	ADubhlaoich (~ADubhlaoi@86.42.127.53) has joined #python
2014-05-28 16:06:32	--	jjmojo^away is now known as jjmojojjmojo
2014-05-28 16:06:55	<--	ncthom91 (ncthom91@64.125.189.90) has quit (Ping timeout: 252 seconds)
2014-05-28 16:06:57	l4cr0ss	how can I add a cookiejar to an existing opener?
2014-05-28 16:07:38	<--	ncthom91_ (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Ping timeout: 240 seconds)
2014-05-28 16:08:15	<--	cesar_bo (uid17588@gateway/web/irccloud.com/x-iphxlujgcliigotv) has quit (Quit: Connection closed for inactivity)
2014-05-28 16:08:18	konradsurf	i tried /unignore nick   hopefully that helps
2014-05-28 16:08:24	-->	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 16:08:25	-->	faldridge (~faldridge@172.56.7.29) has joined #python
2014-05-28 16:08:35	_habnabit	konradsurf, hello!
2014-05-28 16:08:39	<--	dray3 (~daaray@cpe-173-095-178-019.nc.res.rr.com) has quit (Quit: Leaving.)
2014-05-28 16:08:40	<--	faldridge (~faldridge@172.56.7.29) has quit (Client Quit)
2014-05-28 16:08:57	-->	stack (~urb@unaffiliated/stack) has joined #python
2014-05-28 16:09:20	Yhg1s	l4cr0ss: does it already have a HTTPCookieProcessor included in it?
2014-05-28 16:09:24	<--	pld (~pld@unaffiliated/pld) has quit (Ping timeout: 240 seconds)
2014-05-28 16:10:26	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-05-28 16:10:36	--	nshlol is now known as FBI
2014-05-28 16:10:49	--	swebb is now known as zz_swebb
2014-05-28 16:11:06	--	FBI is now known as Guest47801
2014-05-28 16:11:07	<--	ncthom9__ (ncthom91@64.125.189.90) has quit (Ping timeout: 258 seconds)
2014-05-28 16:11:07	--	Guest47801 is now known as nshlol
2014-05-28 16:11:08	-->	benkay (~user@unaffiliated/benkay) has joined #python
2014-05-28 16:11:37	benkay	i'd like to map a function over a list of lists, treating each element in the sublist as an argument to my function. what's the pythonic way to do this?
2014-05-28 16:11:45	konradsurf	Yhg1s do you know how i can 'check for newlines' ?
2014-05-28 16:11:48	l4cr0ss	Yhg1s: I've already created an opener with an HTTPNtlmAuthHandler... code: http://pastebin.com/cAk7r3nY
2014-05-28 16:11:49	infobob	http://paste.pound-python.org/show/iOBUVCJsbAlkeaQ9qWNT/ (repasted for l4cr0ss)
2014-05-28 16:12:32	Yhg1s	benkay: so you want [[1, 2, 3], ['a', 'b', 'c']] to translate into [func(1, 'a'), func(2, 'b'), func(3, 'c')]?
2014-05-28 16:12:33	<--	Rask (~rask@97-124-235-88.hlrn.qwest.net) has left #python ("WeeChat 0.3.8")
2014-05-28 16:13:00	<--	naught101 (~naught101@60-242-27-10.static.tpgi.com.au) has quit (Ping timeout: 276 seconds)
2014-05-28 16:13:17	<--	picca (~picca@86.188.222.130) has left #python
2014-05-28 16:13:19	Yhg1s	konradsurf: the 'setWhitespaceChars' method.
2014-05-28 16:13:38	benkay	more along the lines of [[1, 2, 3], ['a', 'b', 'c']] -> [func(1, 2, 3), func(a, b, c)]
2014-05-28 16:13:42	benkay	Yhg1s:
2014-05-28 16:13:43	<--	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has quit (Quit: jr3)
2014-05-28 16:13:53	Yhg1s	l4cr0ss: just add a HTTPCookieProcessor instance to the arguments to urllib2.build_opener.
2014-05-28 16:14:07	Yhg1s	benkay: oh, well, [ func(*args) for args in L ]
2014-05-28 16:14:15	benkay	SWEET
2014-05-28 16:14:21	benkay	thanks Yhg1s !
2014-05-28 16:14:57	benkay	so that actually replaces a map with a list comprehension?
2014-05-28 16:15:02	benkay	wild
2014-05-28 16:15:13	Yhg1s	it's always a good idea not to use map, yes.
2014-05-28 16:15:46	MentalAtrophy	Oh... What's the problem with map()?  I didn't know it was bad.
2014-05-28 16:15:47	benkay	my tiny little lisp brain just blew up, but that's okay :)
2014-05-28 16:16:15	<--	smccully (~smccully@192.65.45.20) has quit (Ping timeout: 276 seconds)
2014-05-28 16:16:29	Yhg1s	MentalAtrophy: a list comprehension is much more flexible, because it can take any expression, not just a function to call.
2014-05-28 16:16:29	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 16:16:35	<--	Lemony (~textual@cpc50-slam6-2-0-cust27.2-4.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 16:16:44	<--	Squarepy (~Squarepy@unaffiliated/squarepy) has quit (Quit: Leaving)
2014-05-28 16:16:53	MentalAtrophy	But if you only need a function, why is that bad?
2014-05-28 16:17:15	-->	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has joined #python
2014-05-28 16:17:17	<--	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has quit (Client Quit)
2014-05-28 16:17:26	Yhg1s	MentalAtrophy: if you only need a function, a list comprehension works just as well as map(), so why would you use something different just for that case?
2014-05-28 16:17:30	-->	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has joined #python
2014-05-28 16:17:57	-->	softwaredoug (~quassel@c-76-104-27-79.hsd1.va.comcast.net) has joined #python
2014-05-28 16:17:59	-->	cob (~cob@189.4.113.207) has joined #python
2014-05-28 16:18:04	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 16:18:24	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Client Quit)
2014-05-28 16:18:26	konradsurf	i wish i could see _habnabit
2014-05-28 16:18:29	MentalAtrophy	Because it still works?  What's actually bad about it though?
2014-05-28 16:18:37	-->	crapp (~quassel@unaffiliated/saedelaere) has joined #python
2014-05-28 16:18:58	offby1	benkay: wait'll you learn about python's so-called "lambda"
2014-05-28 16:19:06	 *	offby1 <--- grumpy old Lisper
2014-05-28 16:19:18	ssbr_at_work	offby1: python's lambda is scheme's lambda
2014-05-28 16:19:21	ssbr_at_work	what other lambda is there?
2014-05-28 16:19:31	<--	kjn (~kjn@168.93.96.5) has quit (Quit: Quit)
2014-05-28 16:19:39	Questions	multiline lambdas...
2014-05-28 16:19:54	Yhg1s	MentalAtrophy: I'm not sure I said there was anything *bad* about it, but since you asked: it's unnecessary cognitive load, it's an attractive nuisance, it tricks people into starting with map() and then resorting to lambda or creating helper functions when they need to do something more than call an already existing function.
2014-05-28 16:20:04	ssbr_at_work	Questions: python lambdas are multi-line :/
2014-05-28 16:20:15	ssbr_at_work	Questions: if you're talking about statements, scheme lambdas can only contain expressions
2014-05-28 16:20:27	MentalAtrophy	You said it was good not to use it.  Usually, that means it's bad to use it.
2014-05-28 16:20:30	ssbr_at_work	they cannot contain statements in either scheme or python
2014-05-28 16:20:33	Yhg1s	Questions: if you want lambda's that can contain statements, that's spelled 'def'.
2014-05-28 16:20:59	MentalAtrophy	But I don't want to turn it into a semantics thing.
2014-05-28 16:21:01	Yhg1s	MentalAtrophy: it's just better to use a list comprehension. But see what I said.
2014-05-28 16:21:04	-->	Wild_Cat (~Max@108.161.125.246) has joined #python
2014-05-28 16:21:59	-->	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has joined #python
2014-05-28 16:22:04	<--	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has quit
2014-05-28 16:22:28	<--	saedelaere (~quassel@unaffiliated/saedelaere) has quit (Ping timeout: 265 seconds)
2014-05-28 16:22:30	KirkMcDonald	ssbr_at_work: Does Scheme even have statements?
2014-05-28 16:23:00	ssbr_at_work	KirkMcDonald: scheme has expressions, and things that are not expressions
2014-05-28 16:23:02	<--	the_rat (~the_rat@217.200.185.216) has quit (Remote host closed the connection)
2014-05-28 16:23:06	ssbr_at_work	in R5RS that's expressions and definitions
2014-05-28 16:23:19	ssbr_at_work	in R6RS, non-expression things are definitions and... imports?
2014-05-28 16:23:39	ssbr_at_work	non-expressions are only valid at the top-level
2014-05-28 16:23:52	<--	masci (~masci@dynamic-adsl-94-37-154-60.clienti.tiscali.it) has quit (Remote host closed the connection)
2014-05-28 16:23:55	konradsurf	here is a pyparsing example that checks for a new line, but i don't understand how to use it in a OneOrMore statement, http://pyparsing.wikispaces.com/share/view/3036789
2014-05-28 16:23:57	-->	andkenneth (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has joined #python
2014-05-28 16:24:18	ssbr_at_work	the scheme equivalent of "lambda x: y = x" is "(lambda (x) (define y x))".
2014-05-28 16:24:25	ssbr_at_work	neither are legal.
2014-05-28 16:24:27	-->	masci (~masci@dynamic-adsl-94-37-154-60.clienti.tiscali.it) has joined #python
2014-05-28 16:24:47	MentalAtrophy	I don't think it's necessarily better to use a list comprehension.  I'd say a list comprehension is better than a map(lambda n), sure.  But if it's just a simple, single function map is better.
2014-05-28 16:24:48	ssbr_at_work	(unless you are using a weird variant of python / weird variant of scheme)
2014-05-28 16:24:53	Yhg1s	konradsurf: I'm not sure what you're linking to (it's an empty page for me), but the point is that you don't need to check for newlines. What you need to do is tell PyParsing that you *don't* want to consider newlines whitespace to ignore.
2014-05-28 16:25:18	konradsurf	weird
2014-05-28 16:25:23	ssbr_at_work	I dunno, I just find it really weird when people insinuate python's lambdas are somehow absurd compared to lambdas from lisp
2014-05-28 16:25:31	ssbr_at_work	considering that the originator of the syntax behaves the same way
2014-05-28 16:25:35	Yhg1s	konradsurf: because, as mentioned, PyParsing ignores whitespace by default. Including newlines.
2014-05-28 16:26:03	<--	Vutral (~ss@mirbsd/special/Vutral) has quit (Excess Flood)
2014-05-28 16:26:16	konradsurf	Yhg1s: right...that put me on the right track. thank you. i'm still trying to figure out how to use it. still testing...
2014-05-28 16:26:57	MentalAtrophy	Ex:  map(int, x) vs [int(i) for x in i].
2014-05-28 16:27:08	-->	narkeeso (~narkeeso@108.60.34.124) has joined #python
2014-05-28 16:27:10	MentalAtrophy	Er... i in x.
2014-05-28 16:27:22	Yhg1s	MentalAtrophy: yes. I don't know why you prefer the first one, for the reasons I already pointed out.
2014-05-28 16:27:39	Yhg1s	MentalAtrophy: just imagine if you didn't know what 'map' meant.
2014-05-28 16:27:44	konradsurf	Yhg1s: this is the content of what i tried to link to...he sets the default whitespace characters AND does a SkipTo( NL ), http://pastebin.com/6KYH9jv4
2014-05-28 16:27:44	infobob	http://paste.pound-python.org/show/Lu0uBaQxoi1EMv43fLtA/ (repasted for konradsurf)
2014-05-28 16:27:47	<--	fcodiaz (~fcodiaz@208.71.232.130) has quit (Ping timeout: 245 seconds)
2014-05-28 16:27:57	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 16:28:31	Yhg1s	konradsurf: that's just to parse things up to newlines (or commas.)
2014-05-28 16:28:36	Yhg1s	konradsurf: the important bit is line 21.
2014-05-28 16:28:53	-->	dt3k (~dt3k@unaffiliated/dt3k) has joined #python
2014-05-28 16:29:05	<--	masci (~masci@dynamic-adsl-94-37-154-60.clienti.tiscali.it) has quit (Ping timeout: 264 seconds)
2014-05-28 16:29:22	ssbr_at_work	one may as well suppose we didn't know what list comprehensions were.
2014-05-28 16:29:38	<--	tilgovi (~randall@couchdb/committer/tilgovi) has quit (Remote host closed the connection)
2014-05-28 16:29:55	<--	VladVP (~VladVP@185.37.87.102) has quit (Ping timeout: 252 seconds)
2014-05-28 16:30:01	Yhg1s	ssbr_at_work: sure, but the question assumes you know what *both* are. It would be wonderful if we didn't have to remember two things just because one is shorter to type in one specific usecase.
2014-05-28 16:30:08	-->	Proselyte (~proselyte@97-93-232-75.dhcp.ftwo.tx.charter.com) has joined #python
2014-05-28 16:30:30	nedbat	MentalAtrophy: it's really a cultural thing.  In Python, the listcomp is more likely. In Haskel, map is.
2014-05-28 16:30:37	<--	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 16:31:13	-->	firecat53 (~firecat53@108.170.1.2) has joined #python
2014-05-28 16:31:28	-->	Vutral (~ss@mirbsd/special/Vutral) has joined #python
2014-05-28 16:31:31	<--	benkay (~user@unaffiliated/benkay) has left #python ("ERC Version 5.3 (IRC client for Emacs)")
2014-05-28 16:31:39	ssbr_at_work	well, in haskell, map is polymorphic where list comprehensions are not
2014-05-28 16:31:49	ssbr_at_work	it's not out of some kind of puritanism over map vs comprehensions
2014-05-28 16:32:38	ssbr_at_work	(well, map isn't,. but e.g. mapM is)
2014-05-28 16:32:50	nedbat	ssbr_at_work: i didn't say it was puritanism.  The languages have affected the cultures, and vice-versa
2014-05-28 16:33:02	Yhg1s	nedbat: I think ssbr_at_work means I'm being puritan.
2014-05-28 16:33:05	<--	tylrr (~textual@rrcs-173-197-114-202.west.biz.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 16:33:06	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-28 16:33:06	ssbr_at_work	Yhg1s: no
2014-05-28 16:33:12	ssbr_at_work	nedbat: what I mean is that it isn't a cultural thing
2014-05-28 16:33:17	ssbr_at_work	there are technical reasons to prefer map in haskell
2014-05-28 16:33:26	-->	mven_ (~textual@ip68-104-38-84.lv.lv.cox.net) has joined #python
2014-05-28 16:33:46	ssbr_at_work	I mean, there are _also_ soft concerns
2014-05-28 16:33:58	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-28 16:34:03	nedbat	ssbr_at_work: ok, but part of why MentalAtrophy prefers map (I'll presume) is that they are used to it in other languages where it is more central.
2014-05-28 16:34:04	ssbr_at_work	the same way in python, a list comprehension changes more nicely if circumstances change, map changes more nicely if circumstances change
2014-05-28 16:34:12	<--	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has quit
2014-05-28 16:35:03	<--	studmuf (~studmuf@eduroam-253-141.ucsc.edu) has quit
2014-05-28 16:35:09	<--	chrislkeller (~chrislkel@63.237.174.130) has quit (Quit: Leaving.)
2014-05-28 16:35:17	<--	gandalfcome (~gandalfco@184.175.4.178) has quit (Quit: Computer has gone to sleep.)
2014-05-28 16:36:00	ssbr_at_work	nedbat: I don't think this culture is as ingrained as some like to think.
2014-05-28 16:36:01	MentalAtrophy	No, I just think it's a good tool for the right job.
2014-05-28 16:36:17	nedbat	MentalAtrophy: fair enough
2014-05-28 16:36:25	ssbr_at_work	map reads perfectly fine in Python if you know what it does, as do list comprehensions, and many people think it isn't unreasonable to expect someone to know of both.
2014-05-28 16:36:29	konradsurf	Yhg1s: this is frustrating...my grammar only gets one statement, not the statements after the new line. i've wrapped the statement definition in a ZeroOrMore, so it seems it should find them all.
2014-05-28 16:36:40	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 16:37:00	-->	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has joined #python
2014-05-28 16:37:01	_habnabit	konradsurf, is there a particular pattern you must match for a given line, or could you just SkipTo(LineEnd()) ?
2014-05-28 16:37:08	ssbr_at_work	in which case we end up with using map for some things and LCs for other things and genexps for other things and dict comprehensions for yet others, and set comprehensions for the rest
2014-05-28 16:37:15	ssbr_at_work	all specialized syntaxes to save a few characters in a special case
2014-05-28 16:37:29	ssbr_at_work	but most python programmers find this valuable nonetheless
2014-05-28 16:37:36	<--	BeholdMyGlory (~behold@unaffiliated/beholdmyglory) has quit (Quit: Leaving)
2014-05-28 16:37:45	<--	Frosh (uid4206@gateway/web/irccloud.com/x-ijigjateaulxlvnh) has quit (Quit: Connection closed for inactivity)
2014-05-28 16:37:59	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Ping timeout: 252 seconds)
2014-05-28 16:38:25	<--	firecat53 (~firecat53@108.170.1.2) has quit (Ping timeout: 265 seconds)
2014-05-28 16:38:36	<--	bwreilly (~bwreilly@9.sub-166-248-57.myvzw.com) has quit (Ping timeout: 240 seconds)
2014-05-28 16:39:00	<--	Questions (~TheOneWho@38.88.218.190) has quit (Ping timeout: 276 seconds)
2014-05-28 16:39:21	<--	joaofelix (~joaofelix@177.17.230.178.dynamic.adsl.gvt.net.br) has quit (Quit: Computer has gone to sleep.)
2014-05-28 16:40:32	-->	Samb2 (~Sammysama@2.121.203.77) has joined #python
2014-05-28 16:40:47	sproingie	ssbr_at_work: careful now, that almost sounds reasonable
2014-05-28 16:41:23	-->	rybczynski (~rybczynsk@unaffiliated/rybczynski) has joined #python
2014-05-28 16:41:26	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-28 16:41:41	ssbr_at_work	sproingie: I don't understand the viewpoints of the opposition and likely never will
2014-05-28 16:41:58	ssbr_at_work	I don't think my views are particularly _reasonable_ though
2014-05-28 16:42:01	sproingie	ghc brought back monad comprehensions, so they might come back into fashion there
2014-05-28 16:42:14	sproingie	map actually isn't polymorphic, fmap is
2014-05-28 16:42:28	ssbr_at_work	fmap, mapM, whatever. haskell is dumb.
2014-05-28 16:42:31	<--	bnmalcabis (~benjy@190.233.117.65) has quit (Remote host closed the connection)
2014-05-28 16:42:35	-->	gandalfcome (~gandalfco@184.175.4.178) has joined #python
2014-05-28 16:42:45	MentalAtrophy	This map/list comprehension thing led me to something new.  Any reason timeit('[int(i) for i in range(100)]') runs indefinitely?
2014-05-28 16:42:53	ssbr_at_work	the point is that there are things like map which are polymorphic
2014-05-28 16:43:00	sproingie	cale gibbard did a pretty good job at "undumbing" a lot of the prelude
2014-05-28 16:43:02	MentalAtrophy	Or am I just missing something obvious?
2014-05-28 16:43:09	sproingie	like (.) = fmap
2014-05-28 16:43:48	sproingie	only thing that speaks caleskell though is lambdabot and the regulars on #haskell don't like that either
2014-05-28 16:43:54	ssbr_at_work	MentalAtrophy: you're not waiting long enough. the default number of runs is probably too large
2014-05-28 16:44:25	ssbr_at_work	sproingie: haskell seems to me to be an unfortunately unpragmatic language
2014-05-28 16:44:36	Yhg1s	MentalAtrophy: timeit.timeit() doesn't do the auto-scaling of the repetitions like 'python -m timeit' does.
2014-05-28 16:44:42	Yhg1s	MentalAtrophy: so it's running for a lot of iterations.
2014-05-28 16:44:44	ssbr_at_work	I'm writing a web app in idris in my free time. It almost seems more practical than haskell, except when you actually use it.
2014-05-28 16:44:46	Yhg1s	eh, repititions.
2014-05-28 16:44:57	ssbr_at_work	repetitions even
2014-05-28 16:44:59	sproingie	scala's got for-comprehensions, those have always worked for anything defining map and flatmap
2014-05-28 16:45:03	MentalAtrophy	Ah, okay.  I passed it a discrete argument this time and it finalizes.
2014-05-28 16:45:04	<--	yak (~yak@isper-224-24.isper.sk) has quit (Quit: Leaving)
2014-05-28 16:45:09	Yhg1s	MentalAtrophy: try 'python -m timeit -s 'r = range(100)' '[int(i) for i in r]'
2014-05-28 16:46:26	sproingie	ssbr_at_work: i gotta give idris a look.  eager evaluation seems like a good thing.  as fun as lazy is, it's an albatross around haskell's neck
2014-05-28 16:46:34	<--	mike_af (~mike_af@unaffiliated/mike-af/x-5454762) has quit (Remote host closed the connection)
2014-05-28 16:46:46	<--	sgviking (~sgviking@gateway/tor-sasl/sgviking) has left #python ("^D")
2014-05-28 16:46:47	MentalAtrophy	timeit('[int(i) for i in range(100)]', number=100)
2014-05-28 16:46:48	MentalAtrophy	0.0055622952086196165
2014-05-28 16:46:51	-->	algae (ash@blk-222-90-202.eastlink.ca) has joined #python
2014-05-28 16:46:58	MentalAtrophy	timeit('x = range(1000);map(int, x)', number=100)
2014-05-28 16:46:58	MentalAtrophy	0.00015601325412717415
2014-05-28 16:47:14	nedbat	MentalAtrophy: this is the worst reason to choose one over the other
2014-05-28 16:47:34	MentalAtrophy	Am I overlooking something?
2014-05-28 16:47:36	sproingie	microbenchmark is micro
2014-05-28 16:48:02	sproingie	try a map with a lambda and see what the call overhead does
2014-05-28 16:48:05	Yhg1s	MentalAtrophy: well, apart from the convenience of 'python -m timeit', no, not really.
2014-05-28 16:48:11	nedbat	MentalAtrophy: you're overlooking that most of your program is not time-sensitive, so why use time to decide?
2014-05-28 16:48:13	sproingie	and try at least 10K iterations
2014-05-28 16:48:17	Yhg1s	MentalAtrophy: but yes, microbenchmarks are micro. They're not something to worry about.
2014-05-28 16:48:46	<--	AaronMT (~AaronMT@CPE0088654f39bd-CM602ad0738a5c.cpe.net.cable.rogers.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 16:48:56	-->	geardev (~ab@unaffiliated/adrian-berg/x-4249779) has joined #python
2014-05-28 16:49:02	<--	kosh (~kosh@aesaeion.com) has quit (Ping timeout: 245 seconds)
2014-05-28 16:49:13	sproingie	i think the animus against map comes from lambda, which as clunky as it is now, used to be much much worse
2014-05-28 16:49:50	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-177.dynamic.uwaterloo.ca) has quit (Quit: bluecat)
2014-05-28 16:50:09	geardev	How do you write terse python code without throwing try/catch blocks all over the place? How is it that the requests library, e.g., a highly used library, is able to avoid polluting its codebasee with these statements?
2014-05-28 16:50:24	Yhg1s	sproingie: not my animus, no. mine comes from the fact that its functionality is a complete subset of list comprehensions.
2014-05-28 16:50:31	Yhg1s	without loss of anything worth mentioning.
2014-05-28 16:50:42	-->	Roukoswarf (admin@rouk.org) has joined #python
2014-05-28 16:50:49	sproingie	Yhg1s: how's partial() work on a listcomp?
2014-05-28 16:50:51	Yhg1s	geardev: it depends. Why would you have try/except statements anywhere?
2014-05-28 16:51:01	Yhg1s	sproingie: ha ha partial.
2014-05-28 16:51:20	sproingie	Yhg1s: seems to go to your set of "anything worth mentioning"
2014-05-28 16:51:24	MentalAtrophy	How is performance not worth mentioning?
2014-05-28 16:51:29	<--	jorgev (~jorgev@rrcs-67-52-158-66.west.biz.rr.com) has quit (Quit: Computer has gone to sleep.)
2014-05-28 16:51:31	--	zz_swebb is now known as swebb
2014-05-28 16:51:34	Yhg1s	MentalAtrophy: when it's an insignificant difference.
2014-05-28 16:51:38	sproingie	MentalAtrophy: try a real world measurement
2014-05-28 16:51:47	nedbat	MentalAtrophy: by that logic, we'd write everything in C.
2014-05-28 16:51:48	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-178.dynamic.uwaterloo.ca) has joined #python
2014-05-28 16:51:52	KirkMcDonald	MentalAtrophy: Performance of an application is interesting.
2014-05-28 16:51:54	geardev	Yhg1s: so you can handle failure
2014-05-28 16:51:54	sproingie	MentalAtrophy: like i said, try mapping a lambda
2014-05-28 16:51:56	Yhg1s	MentalAtrophy: if you want performance, there are much more important things to consider than map vs LC.
2014-05-28 16:51:57	MentalAtrophy	But nedbat, map(int, i) isn't unreadable.
2014-05-28 16:52:02	Yhg1s	geardev: handle how? What would you do instead?
2014-05-28 16:52:02	KirkMcDonald	MentalAtrophy: Performance of a particular expression is less interesting.
2014-05-28 16:52:07	Yhg1s	MentalAtrophy: that's a matter of opinion (as is most of this.)
2014-05-28 16:52:08	<--	mkster_ (~Mkster@i577B58DB.versanet.de) has quit (Read error: Connection reset by peer)
2014-05-28 16:52:20	nedbat	MentalAtrophy: i'm not saying you shouldn't use map. I'm saying you should use it if it expresses your idea best, even if it is slower.
2014-05-28 16:52:23	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-178.dynamic.uwaterloo.ca) has quit (Client Quit)
2014-05-28 16:52:30	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 16:52:34	Yhg1s	MentalAtrophy: you may consider it more readable, I do not. For example, it isn't obvious from a glance that this will actually *call* int, let alone call it for each item in i.
2014-05-28 16:52:34	<--	eka_ (~eka@190.117.246.241) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2014-05-28 16:52:40	geardev	Yhg1s: the alternative I guess is to not use them and let your program crash
2014-05-28 16:52:49	Yhg1s	geardev: if that's what you want to do, sure.
2014-05-28 16:52:49	geardev	Yhg1s: I don't think this is desirable though
2014-05-28 16:53:04	Yhg1s	geardev: ok, so how is this related to requests? requests isn't a program, it's a library.
2014-05-28 16:53:06	nedbat	geardev: what exceptions are happening, and why do you have to catch them?
2014-05-28 16:53:10	MentalAtrophy	I don't consider it more or less readable.  I consider it just as readable.
2014-05-28 16:53:13	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 16:53:29	MentalAtrophy	Just because a list comprehension can also do it doesn't negate the usefulness of map, especially when map can do certain things better.
2014-05-28 16:53:34	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-28 16:53:53	-->	bluecat (~anonymous@wn-campus-nat-129-97-124-178.dynamic.uwaterloo.ca) has joined #python
2014-05-28 16:54:09	<--	Debnet (marc@2a01:e35:2e9c:d7f0:c9ce:60df:ba8a:6dd1) has quit (Read error: Connection reset by peer)
2014-05-28 16:54:09	sproingie	eh, i prefer to use a genexp anyway, and those don't get lazy til 3.x
2014-05-28 16:54:10	<--	gandalfcome (~gandalfco@184.175.4.178) has quit (Quit: Computer has gone to sleep.)
2014-05-28 16:54:11	konradsurf	i just looked at parsley, and i definitely think pyparsing is better for me. i did not understand the parsley examples easily.
2014-05-28 16:54:14	<--	bluecat (~anonymous@wn-campus-nat-129-97-124-178.dynamic.uwaterloo.ca) has quit (Remote host closed the connection)
2014-05-28 16:54:18	<--	Proselyte (~proselyte@97-93-232-75.dhcp.ftwo.tx.charter.com) has left #python ("Leaving")
2014-05-28 16:54:26	sproingie	(and wasn't i just decrying ubiquitous laziness?)
2014-05-28 16:54:42	Yhg1s	MentalAtrophy: well, the 'better', so far, has been the idea that 'map(func, iterable)' is more readable (which yo don't agree with), that it's more performant (the difference in which is only significant in microbenchmarks, not in real-world code), and that you can pass map around as a function (which precludes the use as map(func, iterable))
2014-05-28 16:54:45	nedbat	sproingie: genexps are lazy in python 2, no?
2014-05-28 16:54:48	Yhg1s	MentalAtrophy: so I'm not sure where that 'better' is.
2014-05-28 16:54:56	<--	Trynemjoel (~Trynemjoe@82-169-73-55.ip.telfort.nl) has quit (Quit: Trynemjoel)
2014-05-28 16:54:57	sproingie	nedbat: er yeah i meant to say and *map* doesn't get lazy
2014-05-28 16:55:02	nedbat	sproingie: ah
2014-05-28 16:55:07	geardev	nedbat: I guess my question is when is it appropriate to use a try/catch and when should you not use it?
2014-05-28 16:55:11	--	jjmojojjmojo is now known as jjmojo^away
2014-05-28 16:55:15	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 276 seconds)
2014-05-28 16:55:27	Yhg1s	MentalAtrophy: given that map() also has a cost (cognitive load, not to mention more code to change if you find you need more than the ideal case for map()), I don't understand why map() is better anywhere.
2014-05-28 16:55:27	nedbat	geardev: you should use it when you can do something better by catching it than by letting it fly.
2014-05-28 16:55:46	nedbat	geardev: some people think they have to catch everything: you don't have to.
2014-05-28 16:55:51	ssbr_at_work	sproingie: idris is not very good.
2014-05-28 16:56:05	nedbat	MentalAtrophy: I don't recommend that you try to convince Yhg1s about map....
2014-05-28 16:56:05	geardev	Yhg1s: I was using requests as an example, it's a popular library that is used by a lot of people, so I'm guessing it's a decent code base to draw examples from. And in this case, they don't pollute their code with try/except blocks
2014-05-28 16:56:08	-->	darkf (~darkf___@unaffiliated/darkf) has joined #python
2014-05-28 16:56:10	<--	xsamurai (~fahad@unaffiliated/xsamurai) has left #python
2014-05-28 16:56:12	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 240 seconds)
2014-05-28 16:56:21	ssbr_at_work	Yes, it makes imperative programming in haskell-like languages better, but imperative programming within a monad still blows.
2014-05-28 16:56:22	Yhg1s	geardev: yes. I'm not sure why you think they would.
2014-05-28 16:56:31	Yhg1s	geardev: they just let exceptions propagate, like all good library code should do.
2014-05-28 16:56:37	ssbr_at_work	Also, dependent types are extremely bothersome and not well documented.
2014-05-28 16:56:37	sproingie	it's not pollution if you need them.  you can abstract out a lot of it with context managers though
2014-05-28 16:57:03	<--	sunya7a_ (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 252 seconds)
2014-05-28 16:57:22	sproingie	ssbr_at_work: documentation is my problem with so many things in the FP world
2014-05-28 16:57:45	<--	Wild_Cat (~Max@108.161.125.246) has quit (Ping timeout: 265 seconds)
2014-05-28 16:57:49	-->	tterlet__ (~le_tropic@194.44.148.76) has joined #python
2014-05-28 16:58:24	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 16:58:39	<--	gkap (~gkap@c-71-237-208-229.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-28 16:58:44	-->	Wild_Cat (~Max@108.161.125.246) has joined #python
2014-05-28 16:58:48	-->	naught101 (~naught101@uniwide-pat-pool-129-94-8-31.gw.unsw.edu.au) has joined #python
2014-05-28 16:59:02	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Ping timeout: 258 seconds)
2014-05-28 16:59:06	-->	sunya7a_ (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 16:59:27	<--	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 16:59:40	sproingie	ssbr_at_work: i think it's less the "within a monad" as it is either "lift . lift . lift . lift . omgliftsomemore" or "TransformerStackThatBreaksSpectacularlyIfYouTypo x"
2014-05-28 16:59:54	sproingie	i guess that all arises from the monad discipline
2014-05-28 17:00:27	-->	magicflakes (~cellopin@202.78.127.130) has joined #python
2014-05-28 17:01:08	konradsurf	does anyone see my mistake? i'm trying to parse multiple lines but i'm matching only one line. http://pastebin.com/5W7vd5pt
2014-05-28 17:01:09	-->	mueslo (~mueslo@p54B43FB8.dip0.t-ipconnect.de) has joined #python
2014-05-28 17:01:10	infobob	http://paste.pound-python.org/show/pgbhMw6BnFEMyB37cPwA/ (repasted for konradsurf)
2014-05-28 17:02:01	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-28 17:02:49	 *	nedbat is glad to still be mystified about monads
2014-05-28 17:02:57	-->	davlaps (~davlaps@66-192-9-78.static.twtelecom.net) has joined #python
2014-05-28 17:03:09	<--	davividal (~davi.vida@187.59.6.154) has quit (Quit: Ex-Chat)
2014-05-28 17:03:18	<--	Kayra (~Kayra@2.24.76.87) has quit (Remote host closed the connection)
2014-05-28 17:03:23	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-28 17:03:49	sproingie	monads are a monoid in the category of endofunctors, what's so hard about that?
2014-05-28 17:03:50	sproingie	:)
2014-05-28 17:04:01	 *	nedbat is suddenly enlightened!
2014-05-28 17:04:05	-->	firecat53 (~firecat53@108.170.1.2) has joined #python
2014-05-28 17:04:11	-->	thinkxl (~Adium@207-91-184-235.nstci.net) has joined #python
2014-05-28 17:04:27	sproingie	oh wait, they're actually burritos.
2014-05-28 17:04:35	KirkMcDonald	konradsurf: Actually you have two matches.
2014-05-28 17:04:36	nedbat	mmmm, burritos
2014-05-28 17:05:04	KirkMcDonald	konradsurf: The first match is the prop_name as the first value. The second match is treating the second value as the second prop_name.
2014-05-28 17:05:11	KirkMcDonald	s/as the/and the/
2014-05-28 17:06:21	<--	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-05-28 17:06:22	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-28 17:06:25	KirkMcDonald	konradsurf: I don't think you want prop_val to include pp.SkipTo(EOL).
2014-05-28 17:06:58	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 17:07:08	KirkMcDonald	konradsurf: What about something like this: http://paste.pound-python.org/show/zXaZanILE8bBMKpgIvs3/
2014-05-28 17:08:11	<--	robvdl (~robvdl@2404:130:0:1000:5543:4aa1:7764:3db7) has quit (Remote host closed the connection)
2014-05-28 17:08:21	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-28 17:08:29	<--	ewh (~ewh@173-10-223-54-BusName-Nashville.hfc.comcastbusiness.net) has left #python ("WeeChat 0.4.3")
2014-05-28 17:08:52	-->	mercurytw (a0212b05@gateway/web/freenode/ip.160.33.43.5) has joined #python
2014-05-28 17:09:05	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 17:09:26	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined #python
2014-05-28 17:11:20	<--	mercurytw (a0212b05@gateway/web/freenode/ip.160.33.43.5) has quit (Client Quit)
2014-05-28 17:11:46	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 17:11:50	-->	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-28 17:11:57	-->	mercurytw (a0212b05@gateway/web/freenode/ip.160.33.43.5) has joined #python
2014-05-28 17:11:59	lyxus	I am building an RPM by doing python setup.py bdist --formats=rpm. Is there anyway to only include the source file. I want to be able to run them on py2.6 and 2.7
2014-05-28 17:12:10	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 17:12:40	-->	sheap (4834548b@gateway/web/freenode/ip.72.52.84.139) has joined #python
2014-05-28 17:12:45	-->	Jucato (~jucato@kde/developer/jucato) has joined #python
2014-05-28 17:13:00	<--	alemedeiros (~alemedeir@187.10.22.149) has quit (Ping timeout: 240 seconds)
2014-05-28 17:13:15	sheap	if I have a class that is just a counter, how do I reset the class values after I initiate a specific (different) class?
2014-05-28 17:13:26	<--	xnox (~xnox@ubuntu/member/xnox) has quit (Ping timeout: 326 seconds)
2014-05-28 17:13:27	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-28 17:13:37	-->	introom (~introom@wf077-185.ust.hk) has joined #python
2014-05-28 17:13:45	_habnabit	sheap, i can't parse your question
2014-05-28 17:13:50	_habnabit	sheap, perhaps you should show some code
2014-05-28 17:13:51	mercurytw	hello. I recently did a fresh install of Python 3.4 on windows. It came with a 3rd party module, and some sample scripts which leverage that module. When I run the sample script, it imports a file in the site-packages folder. It gets that far, however *that* file then imports another file that's in the same folder, but that import fails. Any idea what would cause this?
2014-05-28 17:13:53	-->	xnox_ (~xnox@ubuntu/member/xnox) has joined #python
2014-05-28 17:13:59	<--	lahwran (~lahwran@python/site-packages/lahwran) has quit (Ping timeout: 326 seconds)
2014-05-28 17:14:11	<--	firecat53 (~firecat53@108.170.1.2) has quit (Ping timeout: 265 seconds)
2014-05-28 17:14:26	-->	lahwran_ (~lahwran@python/site-packages/lahwran) has joined #python
2014-05-28 17:14:50	mercurytw	I have very little experience with python so it's very possible I just don't have something configured properly
2014-05-28 17:14:58	_habnabit	mercurytw, which folder is 'the same folder'
2014-05-28 17:15:01	sheap	_habnabit: http://fpaste.org/105543/32247814/
2014-05-28 17:15:04	_habnabit	mercurytw, also, pastebin the whole traceback
2014-05-28 17:15:17	<--	mercurytw (a0212b05@gateway/web/freenode/ip.160.33.43.5) has quit (Client Quit)
2014-05-28 17:15:24	--	xnox_ is now known as xnox
2014-05-28 17:15:32	_habnabit	sheap, this 'Visits' class is pretty silly
2014-05-28 17:15:32	sheap	I need that "counter" class to reset back to zero when the "bye" class is initiated
2014-05-28 17:15:41	geardev	why is this failing? https://pastee.org/b9e78
2014-05-28 17:15:46	_habnabit	sheap, is this web.py?
2014-05-28 17:15:49	-->	mercurytw (a0212b05@gateway/web/freenode/ip.160.33.43.5) has joined #python
2014-05-28 17:15:53	<--	_ikke_ (~kevin@ikke.info) has quit (Ping timeout: 264 seconds)
2014-05-28 17:16:01	mercurytw	sorry I keep getting disconnected
2014-05-28 17:16:05	_habnabit	geardev, well, did you read the error?
2014-05-28 17:16:05	sheap	_habnabit: yes it is. it was the only way to get the counter to work with the like 3 "classes" (web pages) that I have
2014-05-28 17:16:07	Yhg1s	geardev: 'a' is not a valid typecode for array.array()
2014-05-28 17:16:13	<--	codeitloadit (~codeitloa@wsip-68-225-25-202.oc.oc.cox.net) has quit
2014-05-28 17:16:23	sheap	at least how I tried it
2014-05-28 17:16:31	-->	_ikke_ (~kevin@ikke.info) has joined #python
2014-05-28 17:16:37	lyxus	anyone has an idea ?
2014-05-28 17:16:39	geardev	oh, i didn't relize that was a typecode
2014-05-28 17:16:53	geardev	so it really does only store homogenous data
2014-05-28 17:17:04	_habnabit	geardev, yes, that is what the array module is for
2014-05-28 17:17:20	<--	ADubhlaoich (~ADubhlaoi@86.42.127.53) has quit (Quit: Leaving)
2014-05-28 17:17:37	_habnabit	sheap, can you pastebin your full code?
2014-05-28 17:17:43	-->	Mooash (~mooash@unaffiliated/mooash) has joined #python
2014-05-28 17:17:44	aberrant	gah. numpy made things SLOWER.
2014-05-28 17:17:53	Yhg1s	geardev: you may be looking to use lists instead
2014-05-28 17:18:10	-->	_jam (~james@c-50-148-60-36.hsd1.il.comcast.net) has joined #python
2014-05-28 17:18:10	-->	kessel (~kesselhau@ip-109-43-217-173.web.vodafone.de) has joined #python
2014-05-28 17:18:17	sheap	_habnabit: http://fpaste.org/105544/13226791/
2014-05-28 17:18:29	-->	themagician_l (themagicia@91-158-141-238.elisa-laajakaista.fi) has joined #python
2014-05-28 17:18:30	geardev	Yhg1s: thanks, I'm just reading the end of the tutorial, part 2 of the standard library intro
2014-05-28 17:18:59	geardev	thanks _habnabit
2014-05-28 17:19:01	<--	havok88 (~havok88@host109-149-91-6.range109-149.btcentralplus.com) has quit (Remote host closed the connection)
2014-05-28 17:19:06	_habnabit	sheap, also, i very strongly urge you to never use web.py in any circumstance
2014-05-28 17:19:14	sheap	_habnabit: why not?
2014-05-28 17:19:26	_habnabit	sheap, web.py is by far the worst web framework available for python
2014-05-28 17:19:39	<--	brodul (~brodul@brodul.org) has quit (Ping timeout: 399 seconds)
2014-05-28 17:19:39	<--	themagician (themagicia@91-158-141-238.elisa-laajakaista.fi) has quit (Ping timeout: 399 seconds)
2014-05-28 17:19:39	<--	lony (~user@183.82.3.32) has quit (Ping timeout: 399 seconds)
2014-05-28 17:19:39	<--	norrell (~norrell@pool-108-20-78-135.bstnma.fios.verizon.net) has quit (Ping timeout: 399 seconds)
2014-05-28 17:19:39	<--	deed02392 (~deed02392@ks312604.kimsufi.com) has quit (Ping timeout: 399 seconds)
2014-05-28 17:19:45	--	lahwran_ is now known as lahwran
2014-05-28 17:19:57	<--	inhahe (~inhahe@adsl-074-186-083-219.sip.mia.bellsouth.net) has quit (Read error: Connection reset by peer)
2014-05-28 17:19:59	_habnabit	sheap, it's poorly-designed, ancient, and insecure by default
2014-05-28 17:20:06	sheap	so django then?
2014-05-28 17:20:10	<--	magicflakes (~cellopin@202.78.127.130) has quit (Remote host closed the connection)
2014-05-28 17:20:13	-->	inhahe (~inhahe@adsl-074-186-083-219.sip.mia.bellsouth.net) has joined #python
2014-05-28 17:20:14	<--	mission (~mission@unaffiliated/mission) has quit (Ping timeout: 252 seconds)
2014-05-28 17:20:17	_habnabit	sheap, if you want. i don't like django, but it's secure by default at least
2014-05-28 17:20:24	<--	martin_ (martin@unaffiliated/martinp) has quit (Ping timeout: 252 seconds)
2014-05-28 17:20:32	sheap	_habnabit: well I need to write a frontend to a linux application
2014-05-28 17:20:37	sheap	any suggestions would be helpful..
2014-05-28 17:20:41	_habnabit	sheap, pyramid is what i use
2014-05-28 17:20:42	kevlarman	sheap: take your pick of django flask or pyramid
2014-05-28 17:20:43	-->	mission (~mission@unaffiliated/mission) has joined #python
2014-05-28 17:20:57	<--	kesselhaus_ (~kesselhau@ip-109-43-110-227.web.vodafone.de) has quit (Ping timeout: 265 seconds)
2014-05-28 17:21:05	-->	kl0_ (~void@unaffiliated/rf14) has joined #python
2014-05-28 17:21:34	sheap	alright
2014-05-28 17:21:36	-->	qiemem (uid14911@gateway/web/irccloud.com/x-svlvblqtwwdchwrh) has joined #python
2014-05-28 17:21:40	sheap	I guess I just start over then lol
2014-05-28 17:21:42	-->	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has joined #python
2014-05-28 17:21:53	_habnabit	sheap, fortunately, you don't have to throw away much code
2014-05-28 17:21:56	<--	gbowyer_ (~gbowyer@cpc22-maid5-2-0-cust171.20-1.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2014-05-28 17:22:21	sheap	_habnabit: yea I know but it took a while to get where I was
2014-05-28 17:22:28	-->	deed02392 (~deed02392@ks312604.kimsufi.com) has joined #python
2014-05-28 17:23:04	-->	rogi1 (~rogi@198.0.198.66) has joined #python
2014-05-28 17:23:30	-->	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 17:23:34	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 258 seconds)
2014-05-28 17:23:36	_habnabit	sheap, http://paste.pound-python.org/show/3gBheqEeZ2nNjrmEHjyy/ fwiw this is how i would write it
2014-05-28 17:24:02	<--	Mooash (~mooash@unaffiliated/mooash) has quit (Remote host closed the connection)
2014-05-28 17:24:08	sheap	_habnabit: thanks
2014-05-28 17:24:20	<--	dj_pi (~dj@107.5.25.243) has quit (Ping timeout: 258 seconds)
2014-05-28 17:24:38	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-28 17:24:50	<--	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 255 seconds)
2014-05-28 17:24:55	rogi1	just discovered that dateutil.rrule doesn't assert that interval > 0
2014-05-28 17:25:11	rogi1	 list(rrule.rrule(rrule.MINUTELY, interval=0))[:-1] just spins the cpu
2014-05-28 17:25:24	-->	magicflakes (~cellopin@202.78.127.130) has joined #python
2014-05-28 17:25:27	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 17:25:29	<--	Macuser (~textual@unaffiliated/macuser) has quit (Max SendQ exceeded)
2014-05-28 17:26:07	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 17:26:38	-->	fmope (~fmope@80-218-227-138.dclient.hispeed.ch) has joined #python
2014-05-28 17:26:42	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-28 17:27:03	-->	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-28 17:27:12	-->	ncthom91_ (ncthom91@64.125.189.90) has joined #python
2014-05-28 17:28:54	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-28 17:28:58	<--	jml (~jml@unaffiliated/jml) has quit (Ping timeout: 240 seconds)
2014-05-28 17:29:05	<--	jalaziz (~jalaziz@67-207-118-18.static.wiline.com) has quit (Ping timeout: 264 seconds)
2014-05-28 17:29:05	sheap	soo if I had users logging in I'd need something like ldap right?
2014-05-28 17:29:08	-->	taloszerg (~taloszerg@ool-1826eaa2.dyn.optonline.net) has joined #python
2014-05-28 17:29:39	<--	sardok (~sinan@94.122.8.197) has quit (Quit: Leaving)
2014-05-28 17:29:44	_habnabit	sheap, not necessarily LDAP. LDAP is one way of persisting user credentials, though, sure
2014-05-28 17:29:59	<--	magicflakes (~cellopin@202.78.127.130) has quit (Client Quit)
2014-05-28 17:30:03	<--	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Ping timeout: 252 seconds)
2014-05-28 17:30:10	<--	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has quit
2014-05-28 17:30:22	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Quit: Computer has gone to sleep.)
2014-05-28 17:30:30	geardev	When would you use bdb and when would you use pdb?
2014-05-28 17:30:56	-->	shunya_chakra (~shunya@117.200.79.146) has joined #python
2014-05-28 17:31:07	<--	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2014-05-28 17:31:14	shunya_chakra	Hi, in python is ever error is exception?
2014-05-28 17:31:24	shunya_chakra	*every
2014-05-28 17:31:31	cwillu_at_work	shunya_chakra, approximately
2014-05-28 17:31:36	<--	rogi1 (~rogi@198.0.198.66) has left #python
2014-05-28 17:31:44	cwillu_at_work	shunya_chakra, there's baseexception as well, but you almost never want to catch those
2014-05-28 17:31:53	cwillu_at_work	(i.e., KeyboardInterrupt, SystemExit, and similar)
2014-05-28 17:32:11	nedbat	shunya_chakra: if you mean, do some functions return special values for errors, not that I can think of, but maybe somewhere.
2014-05-28 17:32:13	cwillu_at_work	(things that aren't really errors, but are still exceptional, and which do their work by unwinding the stack)
2014-05-28 17:32:49	-->	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has joined #python
2014-05-28 17:32:56	shunya_chakra	and what about warnings? are they also come under exception?
2014-05-28 17:32:56	-->	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has joined #python
2014-05-28 17:32:57	<--	sheap (4834548b@gateway/web/freenode/ip.72.52.84.139) has quit (Quit: Page closed)
2014-05-28 17:33:03	-->	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-28 17:33:07	shunya_chakra	nedbat, cwillu_at_work
2014-05-28 17:33:07	KrzyStar	Warnings? :p
2014-05-28 17:33:09	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-28 17:33:25	nedbat	shunya_chakra: no, warnings are not exceptions, but what kind of warnings are you thinking about?
2014-05-28 17:33:49	-->	jml (~jml@unaffiliated/jml) has joined #python
2014-05-28 17:34:03	shunya_chakra	I just started using python... in c and java... there compiler shows..
2014-05-28 17:34:09	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 17:34:11	shunya_chakra	is ther warnings in python :P
2014-05-28 17:34:29	cwillu_at_work	compile-time warnings have little to do with error handling in any language that isn't lisp :p
2014-05-28 17:34:43	-->	atolani (Arpit@nat/redhat/x-egqpvsyfqpzirbgk) has joined #python
2014-05-28 17:34:44	<--	Guest98019 (~max@216.239.55.44) has quit (Ping timeout: 255 seconds)
2014-05-28 17:35:20	<--	dowwie (~Dowwie@pool-108-5-114-141.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2014-05-28 17:35:26	<--	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-05-28 17:35:45	kevlarman	cwillu_at_work: as if i needed more reasons to be terrified of lisp :P
2014-05-28 17:35:46	shunya_chakra	ok... I think first i learn exception... thanks now its more clear to me :)
2014-05-28 17:36:22	cwillu_at_work	kevlarman, I'm just making noises about macros and eval
2014-05-28 17:37:04	--	CyrilPeponnet is now known as CP|AFK
2014-05-28 17:37:23	l4cr0ss	NTLM auth with the requests library isn't working for me, but NTLM auth with the urllib2 library IS working for me. However, the NTLM auth manager for the urllib2 library won't follow redirects. How do I handle the 302 code I receive after I authenticate?
2014-05-28 17:37:24	-->	badon (~badon@pdpc/supporter/active/badon) has joined #python
2014-05-28 17:38:04	kevlarman	l4cr0ss: you pretty much just make a new request to the url you were redirected to
2014-05-28 17:38:29	-->	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has joined #python
2014-05-28 17:38:37	-->	jandrusk (~jra@cpe-24-29-234-80.neo.res.rr.com) has joined #python
2014-05-28 17:38:38	l4cr0ss	kevlarman: How do I pull out the new URL from the urllib2 response?
2014-05-28 17:38:41	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 264 seconds)
2014-05-28 17:38:54	kevlarman	l4cr0ss: it's usually in the body
2014-05-28 17:38:57	-->	Mooash (~mooash@unaffiliated/mooash) has joined #python
2014-05-28 17:39:06	<--	mordonez (~mordonez@190.102.132.14) has quit (Quit: Lingo - http://lingoirc.com)
2014-05-28 17:39:27	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 245 seconds)
2014-05-28 17:39:27	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 276 seconds)
2014-05-28 17:39:35	<--	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-28 17:40:48	l4cr0ss	kevlarman: Is there a standard method I can use to extract the redirected url from a 302 response
2014-05-28 17:41:14	kevlarman	i'm pretty sure it's just the response body of a 302
2014-05-28 17:41:44	<--	ncthom91_ (ncthom91@64.125.189.90) has quit (Ping timeout: 265 seconds)
2014-05-28 17:41:55	l4cr0ss	kevlarman: Did some searching on what you said, looks like ".geturl()" is what I'm in need of
2014-05-28 17:42:05	-->	gopar (~gopar@c-76-102-222-91.hsd1.ca.comcast.net) has joined #python
2014-05-28 17:42:27	-->	boingolov (~nastynate@c-68-52-218-6.hsd1.tn.comcast.net) has joined #python
2014-05-28 17:42:29	-->	francislr (~LokiN@dsl-173-248-235-127.acanac.net) has joined #python
2014-05-28 17:42:48	<--	Mooash (~mooash@unaffiliated/mooash) has quit (Remote host closed the connection)
2014-05-28 17:43:21	<--	SteveG (~SteveG@pdpc/supporter/21for7/steveg) has quit (Ping timeout: 252 seconds)
2014-05-28 17:43:24	-->	ffledgling (~anhad@corp-nat.p2p.sfo1.mozilla.com) has joined #python
2014-05-28 17:43:47	<--	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 17:43:50	ffledgling	i was wondering if it's possible to get the output of a command invoked via subprocess that fails?
2014-05-28 17:44:03	<--	taloszerg (~taloszerg@ool-1826eaa2.dyn.optonline.net) has quit (Remote host closed the connection)
2014-05-28 17:44:08	ffledgling	I'm calling it inside a celery worker, but the command seems to fail and I get no output form the commadn
2014-05-28 17:44:18	blahsphemer	Is there a python library for parsing output created by the logging module?
2014-05-28 17:44:23	ffledgling	and the worker simply exits with a success
2014-05-28 17:44:38	kevlarman	ffledgling: subprocess.check_output returns the contents of stdout and stderr
2014-05-28 17:45:11	<--	geardev (~ab@unaffiliated/adrian-berg/x-4249779) has quit (Ping timeout: 252 seconds)
2014-05-28 17:45:22	ffledgling	kevlarman: the code seems to stop execution at the subprocess call and doesn't do anything after that, so I'm not sure if putting that out there will help or not
2014-05-28 17:45:33	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-28 17:45:34	<--	mercurytw (a0212b05@gateway/web/freenode/ip.160.33.43.5) has left #python
2014-05-28 17:45:44	<--	Johz (~Johz@94.0.154.49) has quit (Quit: Leaving)
2014-05-28 17:45:48	<--	Paradisee (~Paradisee@2.239.28.120) has quit (Ping timeout: 258 seconds)
2014-05-28 17:46:01	ffledgling	kevlarman: I'm using process = subprocess.call(whatever); process.communicate() is that equivalent?
2014-05-28 17:46:21	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-28 17:46:24	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-28 17:46:53	kevlarman	ffledgling: more or less yeah
2014-05-28 17:47:01	-->	Ephexeve (~benmezger@187.65.231.51) has joined #python
2014-05-28 17:47:45	-->	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has joined #python
2014-05-28 17:47:50	<--	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has quit (Quit: Leaving.)
2014-05-28 17:47:51	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-28 17:47:54	konradsurf	OMG i got it working, SkipTo(newLine) | normal_stuff
2014-05-28 17:48:28	-->	ASUChander (~asuchande@cpe-071-070-224-227.nc.res.rr.com) has joined #python
2014-05-28 17:49:28	-->	mac_ified (~mac_ified@67.9.155.198) has joined #python
2014-05-28 17:49:35	<--	ncthom91 (~ncthom91@mpk-nat-7.thefacebook.com) has quit (Ping timeout: 255 seconds)
2014-05-28 17:49:41	<--	mrkz (~mark@187.244.15.18) has quit (Quit: Leaving.)
2014-05-28 17:50:01	<--	AcidReign (~AcidReign@unaffiliated/acidreign) has quit (Ping timeout: 258 seconds)
2014-05-28 17:50:17	<--	mueslo (~mueslo@p54B43FB8.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-05-28 17:50:19	<--	Gambit- (~Gambit-@unaffiliated/gambit-) has quit (Ping timeout: 252 seconds)
2014-05-28 17:50:25	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 17:50:28	<--	andkenneth (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has quit (Read error: Connection reset by peer)
2014-05-28 17:51:42	-->	cesar_bo (uid17588@gateway/web/irccloud.com/x-rifnwtpddcqykgns) has joined #python
2014-05-28 17:52:01	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-28 17:52:06	-->	wkmanire (~wkmanire@wsip-24-234-189-66.lv.lv.cox.net) has joined #python
2014-05-28 17:52:12	<--	amstan (~alex@aichallenge/admin/amstan) has quit (Quit: Konversation terminated!)
2014-05-28 17:52:50	ssbr_at_work	nedbat: for reals I don't think monads are more than a model for composition of functions
2014-05-28 17:53:13	ssbr_at_work	but there's a lot of whizzbang that goes along with it that I haven't worked out, and reasoning efficiently about them seems to take some learning, which sucks
2014-05-28 17:53:14	-->	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has joined #python
2014-05-28 17:53:26	nedbat	ssbr_at_work: i don't know enough to comment, except to say that i trust your judgement on these matters
2014-05-28 17:53:43	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-28 17:53:45	ssbr_at_work	but if you look at the literal definition of a monad it's pretty straightforward -- there's the type constructor, the return function, the bind function
2014-05-28 17:53:55	-->	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has joined #python
2014-05-28 17:53:55	ssbr_at_work	and they behave how you would want for composing things together
2014-05-28 17:54:01	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 17:54:04	-->	robvdl (~robvdl@2404:130:0:1000:280c:cfb2:6b78:4e7f) has joined #python
2014-05-28 17:54:27	ssbr_at_work	but like, M (M t) can go die
2014-05-28 17:54:40	wkmanire	heh
2014-05-28 17:54:56	-->	mueslo (~mueslo@p54B43FB8.dip0.t-ipconnect.de) has joined #python
2014-05-28 17:55:42	--	motsu is now known as motsu|away
2014-05-28 17:56:05	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 264 seconds)
2014-05-28 17:56:41	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 264 seconds)
2014-05-28 17:57:22	-->	rjco_ (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has joined #python
2014-05-28 17:57:35	<--	nande_ (~quassel@190.183.4.91) has quit (Remote host closed the connection)
2014-05-28 17:58:12	sproingie	whee, still on monads :)
2014-05-28 17:58:20	ssbr_at_work	sproingie: am I wrong or am I wrong
2014-05-28 17:58:45	ssbr_at_work	I thought I was dumb for not being comfortable with nested monads, but according to Idris, everyone is uncomfortable with it
2014-05-28 17:58:51	sproingie	bind and return are haskell's way of doing monads, i prefer fmap and join (or as scala calls it, flatten)
2014-05-28 17:58:58	ssbr_at_work	(although I'm still less comfortable than others are)
2014-05-28 17:59:08	-->	nande_ (~quassel@190.183.4.91) has joined #python
2014-05-28 17:59:11	sproingie	i find fmap+join to be way more intuitive
2014-05-28 17:59:15	ssbr_at_work	sproingie: I liked >=> but I don't know what other operators you need
2014-05-28 17:59:37	ssbr_at_work	oh wow, yes, fmap is nicer
2014-05-28 17:59:52	<--	davlaps (~davlaps@66-192-9-78.static.twtelecom.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 17:59:53	<--	marr (~ccc@78.10.73.191) has quit
2014-05-28 18:00:07	-->	emperorcezar (~emperorce@c-24-14-228-224.hsd1.il.comcast.net) has joined #python
2014-05-28 18:00:07	sproingie	basically, approach monads through scala and they make a lot more sense.  plus you see a lot more immediately practical uses, like for-comprehensions on futures
2014-05-28 18:00:23	<--	yano (~yano@freenode/staff/yano) has quit (Remote host closed the connection)
2014-05-28 18:00:35	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Ping timeout: 265 seconds)
2014-05-28 18:00:35	--	rjco_ is now known as rjco
2014-05-28 18:00:53	-->	firecat53 (~firecat53@198.15.108.186) has joined #python
2014-05-28 18:00:58	sproingie	scala doesn't even emphasize the m-word, they just say "hey it's another thing you can stick in a for statement"
2014-05-28 18:01:33	-->	taloszerg (~taloszerg@c62e6602.cst.lightpath.net) has joined #python
2014-05-28 18:01:42	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-28 18:01:52	-->	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-28 18:02:02	MentalAtrophy	I haven't even observed scala.  My hip friend that shaves his chest and wears nice shirts keeps telling me I should check it out, though.
2014-05-28 18:03:00	<--	Ard1t (~Ardit@unaffiliated/ard1t) has quit (Ping timeout: 240 seconds)
2014-05-28 18:03:01	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-28 18:03:07	-->	tedoc200_ (~tedoc2000@2001:4998:effd:600:fd1e:3463:4d8c:1de8) has joined #python
2014-05-28 18:03:17	-->	pikaren (~ren@unaffiliated/pikaren) has joined #python
2014-05-28 18:03:23	-->	Ard1t (~Ardit@unaffiliated/ard1t) has joined #python
2014-05-28 18:03:31	<--	averagecase (~anon@dslb-094-221-216-065.pools.arcor-ip.net) has quit (Quit: Verlassend)
2014-05-28 18:03:41	-->	Lemony (~textual@cpc50-slam6-2-0-cust27.2-4.cable.virginm.net) has joined #python
2014-05-28 18:04:01	<--	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has quit (Remote host closed the connection)
2014-05-28 18:04:02	-->	yano (~yano@freenode/staff/yano) has joined #python
2014-05-28 18:04:05	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-28 18:04:52	<--	ffledgling (~anhad@corp-nat.p2p.sfo1.mozilla.com) has quit (Ping timeout: 245 seconds)
2014-05-28 18:04:53	<--	rezzack (~rezzack@unaffiliated/rezzack) has quit (Ping timeout: 255 seconds)
2014-05-28 18:05:02	-->	claptor (~avarice@107-134-134-100.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-28 18:05:06	-->	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has joined #python
2014-05-28 18:05:47	<--	tedoc2000 (~tedoc2000@nat/yahoo/x-whwbmfkxngudqzmk) has quit (Ping timeout: 255 seconds)
2014-05-28 18:05:59	sproingie	i haven't touched scala in ages either.  i have a hard time recommending it in general, since type errors tend to be an explosion of bracket syntax from the compiler
2014-05-28 18:06:07	-->	afei418 (~Administr@123.53.120.32) has joined #python
2014-05-28 18:06:17	-->	fluter (~fluter@fedora/fluter) has joined #python
2014-05-28 18:06:23	sproingie	(why can't we get errors as nice as Hugs had >10 years ago?)
2014-05-28 18:06:27	<--	shunya_chakra (~shunya@117.200.79.146) has quit (Ping timeout: 252 seconds)
2014-05-28 18:06:49	--	nande_ is now known as nande
2014-05-28 18:07:19	sproingie	but it does have a nice pragmatic approach to monads -- you use 'em where they're handy, but you're never forced into them, and they feel like a natural extension of for-loops
2014-05-28 18:07:19	MentalAtrophy	I would try out everything if I didn't have competing interests.
2014-05-28 18:07:21	-->	johnnydiabetic (~johnnydia@pool-173-63-35-157.nwrknj.fios.verizon.net) has joined #python
2014-05-28 18:07:25	MentalAtrophy	And only so much time.
2014-05-28 18:07:43	-->	dunkel2 (~dunkel2@189.158.61.126) has joined #python
2014-05-28 18:07:43	<--	Palantiri (~Palantiri@216.207.42.134) has quit
2014-05-28 18:07:43	MentalAtrophy	Time which I am wasting in IRC talking about not having enough time.
2014-05-28 18:07:57	-->	Vivekananda (~Vivekanan@69.251.189.107) has joined #python
2014-05-28 18:07:58	sproingie	the only guys in scala-land who really beat you over the head with type theory are the scalaz folks
2014-05-28 18:08:03	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 276 seconds)
2014-05-28 18:08:08	-->	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has joined #python
2014-05-28 18:08:27	sproingie	and really just one guy in particular.  scalaz is still too full of goodies to ignore tho.
2014-05-28 18:08:45	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 18:08:48	<--	manizzle (~manizzle@107-220-114-180.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 265 seconds)
2014-05-28 18:09:41	-->	innertracks (~Thunderbi@ip-64-134-132-146.public.wayport.net) has joined #python
2014-05-28 18:10:26	-->	k_sze[work] (~kvirc@unaffiliated/kira) has joined #python
2014-05-28 18:10:36	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-28 18:10:43	<--	tedoc200_ (~tedoc2000@2001:4998:effd:600:fd1e:3463:4d8c:1de8) has quit (Remote host closed the connection)
2014-05-28 18:11:09	<--	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-05-28 18:12:23	<--	Joe-Joe (~joe@host-92-25-163-191.as13285.net) has quit
2014-05-28 18:12:49	<--	semberal (~semberal@216.240.161.68) has quit (Quit: ZNC - http://znc.in)
2014-05-28 18:13:36	<--	mueslo (~mueslo@p54B43FB8.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-05-28 18:13:51	<--	frostschutz (~frostschu@pD9E50F97.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-05-28 18:13:59	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 18:15:13	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Quit: Leaving.)
2014-05-28 18:15:13	<--	oozbooz (~ocherno@172-13-187-218.lightspeed.cicril.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-05-28 18:15:16	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-28 18:15:43	l4cr0ss	I am using cookielib.LWPCookierJar() and I can iterated through the cookies I am getting from the server, but when I do cookies.save they aren't being saved to disk. Any idea why?
2014-05-28 18:16:44	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-28 18:17:39	<--	semberal (~semberal@216.240.161.68) has quit (Client Quit)
2014-05-28 18:17:45	<--	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has quit (Quit: Leaving.)
2014-05-28 18:17:56	<--	afei418 (~Administr@123.53.120.32) has left #python
2014-05-28 18:18:56	-->	FreezingCold (~FreezingC@135.0.41.14) has joined #python
2014-05-28 18:18:57	<--	Burrito (~Burrito@unaffiliated/burrito) has quit (Quit: derp indeed)
2014-05-28 18:20:51	l4cr0ss	Why will my cookies print but not save?
2014-05-28 18:21:00	-->	jimklo (~jimklo@192.12.16.119) has joined #python
2014-05-28 18:21:25	-->	kosh (~kosh@aesaeion.com) has joined #python
2014-05-28 18:22:59	-->	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has joined #python
2014-05-28 18:23:02	-->	mike_af (~mike_af@unaffiliated/mike-af/x-5454762) has joined #python
2014-05-28 18:23:14	VooDooNOFX	l4cr0ss: not an answer to your question, but have you considered using the requests library instead? http://docs.python-requests.org/en/latest/user/quickstart/#cookies
2014-05-28 18:23:34	l4cr0ss	VooDooNOFX: I tried using the Requests library but I wasn't able to get NTLM authentication to work with it
2014-05-28 18:23:45	l4cr0ss	VooDooNOFX: Which is weird because it works fine with urllib2
2014-05-28 18:24:00	VooDooNOFX	l4cr0ss: how were you not able to get it to work?
2014-05-28 18:24:22	VooDooNOFX	I assume you used requests-ntlm?
2014-05-28 18:24:47	<--	armyriad (~armyriad@cpe-104-32-187-144.socal.res.rr.com) has quit (Quit: Leaving)
2014-05-28 18:25:04	-->	kermit (~zip55413@pdpc/supporter/bronze/kermit) has joined #python
2014-05-28 18:25:10	<--	yano (~yano@freenode/staff/yano) has quit (Quit: WeeChat, The Better IRC Client -- http://weechat.org/)
2014-05-28 18:25:12	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-28 18:25:31	l4cr0ss	VooDooNOFX: Yes
2014-05-28 18:25:39	<--	Watball (~Watball@f124242.upc-f.chello.nl) has quit (Quit: Leaving)
2014-05-28 18:25:46	l4cr0ss	requests-ntlm doesn't work, but python-ntlm does
2014-05-28 18:26:09	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-28 18:26:20	<--	digilord (~digilord@unaffiliated/digilord) has quit (Quit: Catch ya on the flipside!)
2014-05-28 18:26:21	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 18:26:25	<--	Macuser (~textual@unaffiliated/macuser) has quit (Max SendQ exceeded)
2014-05-28 18:27:01	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-28 18:27:05	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-28 18:27:17	<--	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has quit (Ping timeout: 264 seconds)
2014-05-28 18:27:32	-->	yano (~yano@freenode/staff/yano) has joined #python
2014-05-28 18:27:32	<--	semberal (~semberal@216.240.161.68) has quit (Remote host closed the connection)
2014-05-28 18:27:38	<--	shello (~shello@bl14-187-207.dsl.telepac.pt) has quit (Quit: shello)
2014-05-28 18:27:41	-->	mablae_ (~mablae@dyndsl-037-138-031-207.ewe-ip-backbone.de) has joined #python
2014-05-28 18:27:42	JodaZ	l4cr0ss, might want to debug requests-ntlm and help fix it
2014-05-28 18:28:02	VooDooNOFX	l4cr0ss: interesting. I don't have an NT system to auth with right now, but you really should diag the source of the issue with requests-ntlm.
2014-05-28 18:28:53	<--	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2014-05-28 18:29:33	-->	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has joined #python
2014-05-28 18:29:48	VooDooNOFX	l4cr0ss: because cookielib is wowefully lacking compared to modern libs.
2014-05-28 18:29:53	<--	yedi (~yedi@201.199.88.62) has quit (Ping timeout: 258 seconds)
2014-05-28 18:30:17	<--	xelra (~quassel@unaffiliated/xelra) has quit (Remote host closed the connection)
2014-05-28 18:30:23	l4cr0ss	VooDooNOFX, JodaZ I will bring it up with their team
2014-05-28 18:30:27	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Quit: Computer has gone to sleep.)
2014-05-28 18:30:58	<--	mablae (~mablae@dyndsl-095-033-220-140.ewe-ip-backbone.de) has quit (Ping timeout: 240 seconds)
2014-05-28 18:31:02	JodaZ	l4cr0ss, you are a programmer too...
2014-05-28 18:31:10	jr3	offby1: around?
2014-05-28 18:31:15	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-28 18:32:13	<--	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-28 18:32:27	VooDooNOFX	l4cr0ss: Basically, you'll want to capture the http headers you're sending with requests, specifically, response.request.headers and response.request.data should contain some very interesting info for this.
2014-05-28 18:32:32	<--	Vivekananda (~Vivekanan@69.251.189.107) has quit (Quit: Ex-Chat)
2014-05-28 18:32:38	-->	apg (~Thunderbi@unaffiliated/apg) has joined #python
2014-05-28 18:32:50	<--	semberal (~semberal@216.240.161.68) has quit (Client Quit)
2014-05-28 18:33:22	<--	Jucato (~jucato@kde/developer/jucato) has quit (Read error: Connection reset by peer)
2014-05-28 18:33:43	<--	Snake2k (~snake2k@164.106.75.252) has quit (Ping timeout: 258 seconds)
2014-05-28 18:33:50	-->	Jucato (~jucato@kde/developer/jucato) has joined #python
2014-05-28 18:34:17	l4cr0ss	VooDooNOFX, JodaZ: Ok
2014-05-28 18:34:23	-->	digilord (~digilord@unaffiliated/digilord) has joined #python
2014-05-28 18:34:43	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 18:35:02	JodaZ	l4cr0ss, you might very well be the first user of this
2014-05-28 18:35:22	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-28 18:35:42	l4cr0ss	I don't mind debugging it, that will be interesting. But first I'd like to get my script working. I may just hack together a cookie file by saving echo statements to disk. So strange that I can iterate through the cookies but they won't save
2014-05-28 18:36:23	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 18:37:11	<--	rjco (~RyanCassi@host81-151-74-116.range81-151.btcentralplus.com) has quit (Quit: rjco)
2014-05-28 18:37:16	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 18:37:31	<--	thinkxl (~Adium@207-91-184-235.nstci.net) has quit (Quit: Leaving.)
2014-05-28 18:37:33	Macuser	Is there a way to install Python onto my Python 3 without using a package manager?
2014-05-28 18:38:06	<--	semberal (~semberal@216.240.161.68) has quit (Max SendQ exceeded)
2014-05-28 18:38:06	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-28 18:38:23	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-28 18:38:59	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-28 18:39:05	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 255 seconds)
2014-05-28 18:39:29	VooDooNOFX	Macuser: I think you mean install another version of python without modifying your system installed python?
2014-05-28 18:39:32	<--	HeN (uid3747@gateway/web/irccloud.com/x-edcqpdhdzexihuxh) has quit (Quit: Connection closed for inactivity)
2014-05-28 18:39:41	sproingie	pythonz is the best way to go
2014-05-28 18:39:46	l4cr0ss	JodaZ: Heh, first user of what? the requests-ntlm library?
2014-05-28 18:39:47	Macuser	VooDooNOFX: No I already have python 2 and 3
2014-05-28 18:40:00	Macuser	It's just that python 2 is my main, default, python
2014-05-28 18:40:07	JodaZ	l4cr0ss, ntlm auth with requests
2014-05-28 18:40:31	JodaZ	eh, yeah
2014-05-28 18:40:38	Macuser	Actually I just did a clean install so I don't have 3 anymore
2014-05-28 18:40:45	Macuser	So how would I add 3 again without making it my default python?
2014-05-28 18:40:55	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2014-05-28 18:41:08	<--	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has quit (Quit: kenbolton)
2014-05-28 18:42:00	VooDooNOFX	Macuser: You just install python 3, probably via the .dmg from python.org. It won't override the system at all.
2014-05-28 18:42:11	Macuser	Yeah that's what I thought
2014-05-28 18:42:22	<--	mikemac (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Read error: Connection reset by peer)
2014-05-28 18:42:25	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Read error: Connection reset by peer)
2014-05-28 18:42:25	VooDooNOFX	you then specifically call python3 if you want py3
2014-05-28 18:42:27	-->	crazymykl (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined #python
2014-05-28 18:42:55	<--	theslow1 (~theslow1@host-173-255-076-249.tcc.on.ca) has quit (Read error: Connection reset by peer)
2014-05-28 18:43:00	MentalAtrophy	That's what I do, at least on Win7.
2014-05-28 18:43:07	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-28 18:43:07	<--	aberrant (~aberrant@unaffiliated/aberrant) has quit (Quit: aberrant)
2014-05-28 18:43:10	-->	theslow1 (~theslow1@host-173-255-076-249.tcc.on.ca) has joined #python
2014-05-28 18:43:42	MentalAtrophy	I setup my environmentals so that python calls Python3, and python2 when I need Python2.
2014-05-28 18:44:07	-->	AcidReign (~AcidReign@unaffiliated/acidreign) has joined #python
2014-05-28 18:44:14	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-28 18:44:38	-->	Peleus (~chatzilla@unaffiliated/peleus) has joined #python
2014-05-28 18:45:07	<--	gelignite (~gelignite@i5387A20A.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-05-28 18:45:16	<--	someprimetime (~someprime@162.245.21.10) has quit (Quit: someprimetime)
2014-05-28 18:45:38	-->	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has joined #python
2014-05-28 18:46:15	-->	JamesNZ (~james@fedora/JamesNZ) has joined #python
2014-05-28 18:46:58	<--	kl0_ (~void@unaffiliated/rf14) has quit (Ping timeout: 240 seconds)
2014-05-28 18:47:22	MentalAtrophy	Mac's OSX is just Unix-based isn't it?  So you should be able to change your path variables pretty easily.
2014-05-28 18:47:33	MentalAtrophy	Or is Macuser just a username?
2014-05-28 18:47:34	-->	taion809 (~Nick@ool-43526e1b.dyn.optonline.net) has joined #python
2014-05-28 18:47:51	Macuser	MentalAtrophy: Yes it is Unix-based
2014-05-28 18:48:00	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-28 18:48:24	kevlarman	MentalAtrophy: why do you want to do that?
2014-05-28 18:48:29	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined #python
2014-05-28 18:48:30	<--	comand (~comand@2620:79:0:164:1ec1:deff:fe33:c08d) has quit (Quit: Bye)
2014-05-28 18:48:48	MentalAtrophy	Doesn't he want to point to multiple versions of Python?
2014-05-28 18:49:35	MentalAtrophy	If there's a better way just jump in--I am mentally atrophic.
2014-05-28 18:50:08	<--	kevlarman (~roman@tremulous/officialdevannoyer/kevlarman) has quit (Quit: Lost terminal)
2014-05-28 18:50:09	<--	emperorcezar (~emperorce@c-24-14-228-224.hsd1.il.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 18:51:36	VooDooNOFX	MentalAtrophy: Sorry, jump into to what? Python?
2014-05-28 18:51:53	<--	harph (~harph@208.46.190.178) has quit (Ping timeout: 264 seconds)
2014-05-28 18:52:35	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-28 18:52:36	mic_e	is there a siply way to make print() respect the prompt of read()?
2014-05-28 18:52:49	mic_e	s/read/input
2014-05-28 18:52:59	<--	neurosnap (~neurosnap@72.240.79.150) has quit (Remote host closed the connection)
2014-05-28 18:53:11	-->	rawfodog (~rawfodog@bas8-montreal28-845454797.dsl.bell.ca) has joined #python
2014-05-28 18:53:17	<--	claptor (~avarice@107-134-134-100.lightspeed.irvnca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2014-05-28 18:53:21	mic_e	basically, the input prompt should be re-printed after print() is finished
2014-05-28 18:54:23	<--	jimklo (~jimklo@192.12.16.119) has quit (Ping timeout: 252 seconds)
2014-05-28 18:54:45	-->	thinkxl (~Adium@207-91-184-235.nstci.net) has joined #python
2014-05-28 18:54:46	-->	n1x4 (~n1x4@69.176.13.178.FRTC.static.foothills.net) has joined #python
2014-05-28 18:54:52	<--	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has quit (Ping timeout: 245 seconds)
2014-05-28 18:55:25	l4cr0ss	FWIW figured out the problem; the cookies were marked to be discarded so I needed to put ignore_discard=True in the cookie.save() function call
2014-05-28 18:56:39	<--	Ephexeve (~benmezger@187.65.231.51) has quit (Ping timeout: 265 seconds)
2014-05-28 18:57:05	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 255 seconds)
2014-05-28 18:57:07	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 18:57:10	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 18:57:52	<--	tyll_ (~till@fedora/tyll) has quit (Ping timeout: 258 seconds)
2014-05-28 18:58:59	<--	Peleus (~chatzilla@unaffiliated/peleus) has left #python
2014-05-28 18:59:09	<--	fuzeman|away (~fuzeman@unaffiliated/fuzeman) has quit (Ping timeout: 252 seconds)
2014-05-28 18:59:12	<--	kermit (~zip55413@pdpc/supporter/bronze/kermit) has quit (Quit: Leaving.)
2014-05-28 18:59:22	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 18:59:28	<--	sr (~smrgr@shellium/member/samruger) has quit (Remote host closed the connection)
2014-05-28 18:59:30	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-28 18:59:38	-->	claptor (~avarice@107-134-134-100.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-28 18:59:47	<--	rawfodog (~rawfodog@bas8-montreal28-845454797.dsl.bell.ca) has quit (Quit: Ex-Chat)
2014-05-28 18:59:51	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 19:00:06	-->	taloszer_ (~taloszerg@ool-1826eaa2.dyn.optonline.net) has joined #python
2014-05-28 19:00:30	<--	taloszer_ (~taloszerg@ool-1826eaa2.dyn.optonline.net) has quit (Remote host closed the connection)
2014-05-28 19:01:09	-->	taloszer_ (~taloszerg@c62e6602.cst.lightpath.net) has joined #python
2014-05-28 19:01:37	<--	johnnydiabetic (~johnnydia@pool-173-63-35-157.nwrknj.fios.verizon.net) has quit (Quit: Leaving)
2014-05-28 19:01:44	-->	sr (~smrgr@shellium/member/samruger) has joined #python
2014-05-28 19:02:17	-->	galactic_pretty_ (~aaa@210.223.154.133) has joined #python
2014-05-28 19:03:23	<--	ixti (~ixti@77.226.194.200) has quit (Ping timeout: 255 seconds)
2014-05-28 19:03:26	-->	alemedeiros (~alemedeir@189-19-125-174.dsl.telesp.net.br) has joined #python
2014-05-28 19:03:37	<--	taloszerg (~taloszerg@c62e6602.cst.lightpath.net) has quit (Ping timeout: 245 seconds)
2014-05-28 19:03:59	<--	czapla (~czapla@2a02:8109:8380:1298:7829:99cb:66b6:9c7b) has quit (Remote host closed the connection)
2014-05-28 19:04:02	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-28 19:04:20	-->	jimklo (~jimklo@192.12.16.119) has joined #python
2014-05-28 19:05:09	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 258 seconds)
2014-05-28 19:05:33	-->	AndroidLoverInSF (~AndroidLo@64.56.206.12) has joined #python
2014-05-28 19:05:45	<--	introom (~introom@wf077-185.ust.hk) has quit (Ping timeout: 252 seconds)
2014-05-28 19:07:26	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 19:07:42	-->	mordonez (~mordonez@190.102.132.14) has joined #python
2014-05-28 19:07:46	-->	ffledgling (~anhad@50.56.129.170) has joined #python
2014-05-28 19:08:12	<--	yedi (~yedi@201.199.88.62) has quit (Ping timeout: 245 seconds)
2014-05-28 19:08:20	<--	OverNord (~brn@host-091-097-122-251.ewe-ip-backbone.de) has quit (Quit: OverNord)
2014-05-28 19:08:34	<--	hypha (~hypha@cpc1-sgyl30-2-0-cust752.sgyl.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-05-28 19:10:17	<--	b4rbz (~barbz@ool-18e42f45.dyn.optonline.net) has quit (Remote host closed the connection)
2014-05-28 19:10:42	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-28 19:10:57	<--	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has quit
2014-05-28 19:10:59	-->	gadotti (~gadotti@189-73-96-81.jvece702.dsl.brasiltelecom.net.br) has joined #python
2014-05-28 19:11:16	<--	gadotti (~gadotti@189-73-96-81.jvece702.dsl.brasiltelecom.net.br) has quit (Max SendQ exceeded)
2014-05-28 19:11:43	<--	narkeeso (~narkeeso@108.60.34.124) has quit (Quit: Computer has gone to sleep.)
2014-05-28 19:12:15	-->	gadotti (~gadotti@189-73-96-81.jvece702.dsl.brasiltelecom.net.br) has joined #python
2014-05-28 19:12:45	-->	mr_machina (~user@cpe-74-76-23-93.nycap.res.rr.com) has joined #python
2014-05-28 19:13:17	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Read error: Connection reset by peer)
2014-05-28 19:13:30	-->	someprimetime (~someprime@mobile-166-137-179-147.mycingular.net) has joined #python
2014-05-28 19:13:41	<--	gadotti (~gadotti@189-73-96-81.jvece702.dsl.brasiltelecom.net.br) has quit (Client Quit)
2014-05-28 19:14:22	-->	DoMPatoneS (~DoM.Paton@108-239-184-135.lightspeed.snantx.sbcglobal.net) has joined #python
2014-05-28 19:15:01	dropdrive	Erm, with tox, how do I install into testenvs using wheel instead of whatever is happening now?
2014-05-28 19:16:29	<--	sunya7a_ (~pryde@unaffiliated/sunya7a) has quit (Remote host closed the connection)
2014-05-28 19:16:29	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Remote host closed the connection)
2014-05-28 19:16:34	-->	blurrr (~blurrr@101.119.27.188) has joined #python
2014-05-28 19:17:02	<--	jimklo (~jimklo@192.12.16.119) has quit (Ping timeout: 258 seconds)
2014-05-28 19:17:06	-->	cashnguns (~cashnguns@184.78.58.91) has joined #python
2014-05-28 19:17:29	<--	someprimetime (~someprime@mobile-166-137-179-147.mycingular.net) has quit (Client Quit)
2014-05-28 19:17:40	<--	gopar (~gopar@c-76-102-222-91.hsd1.ca.comcast.net) has quit (Quit: Leaving)
2014-05-28 19:17:56	k_sze[work]	What if I specifically want to format a datetime object like 'May 1st, 2014'?
2014-05-28 19:18:19	k_sze[work]	note the '1st'. strftime seems to only understand %d, which is zero-padded day number.
2014-05-28 19:18:35	<--	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has quit (Read error: Connection reset by peer)
2014-05-28 19:18:53	cwillu_at_work	k_sze[work], a more complete localization/translation library will be required
2014-05-28 19:18:54	<--	innertracks (~Thunderbi@ip-64-134-132-146.public.wayport.net) has quit (Quit: innertracks)
2014-05-28 19:19:00	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit
2014-05-28 19:19:21	--	jjmojo^away is now known as jjmojojjmojo
2014-05-28 19:19:38	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #python
2014-05-28 19:20:13	<--	mr_machina (~user@cpe-74-76-23-93.nycap.res.rr.com) has quit (Remote host closed the connection)
2014-05-28 19:20:28	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 19:20:36	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-28 19:20:48	-->	innertracks (~Thunderbi@ip-64-134-132-146.public.wayport.net) has joined #python
2014-05-28 19:21:15	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-28 19:21:15	-->	frothnicator (~frothy@unaffiliated/frothnicator) has joined #python
2014-05-28 19:21:46	--	jjmojojjmojo is now known as jjmojo^away
2014-05-28 19:22:42	-->	weuolululu (~zhouwe@118.228.153.194) has joined #python
2014-05-28 19:22:56	 *	DoMPatoneS clear
2014-05-28 19:23:11	<--	onthestairs (~austin@217.138.44.210) has quit (Ping timeout: 255 seconds)
2014-05-28 19:24:04	--	CP|AFK is now known as CyrilPeponnet
2014-05-28 19:24:07	<--	francislr (~LokiN@dsl-173-248-235-127.acanac.net) has quit (Quit: Peace and Protection 4.22.3)
2014-05-28 19:24:42	frothnicator	Is there an easy way to only handle exceptions that are thrown within a scope, and not those that are thrown in a sub-scope?
2014-05-28 19:25:05	frothnicator	For example, consider this code:
2014-05-28 19:25:14	frothnicator	try: do; some; stuff; call_func(); except SomeError: ...
2014-05-28 19:25:22	frothnicator	If "do; some; stuff;" throws SomeError, I want to catch it.  But if SomeError is thrown from within call_func(), I want to ignore it.  How would I accomplish this?
2014-05-28 19:25:36	-->	gbowyer_ (~gbowyer@cpc22-maid5-2-0-cust171.20-1.cable.virginm.net) has joined #python
2014-05-28 19:25:43	<--	DaEvil1 (~DaEvil1@ti0004a400-0098.bb.online.no) has quit
2014-05-28 19:26:22	-->	introom (~introom@wf077-185.ust.hk) has joined #python
2014-05-28 19:26:34	<--	blurrr (~blurrr@101.119.27.188) has quit (Remote host closed the connection)
2014-05-28 19:26:54	wleslie	infobob: redent frothnicator try: do_some_stuff();; except SomeError: handler();; else: call_func()
2014-05-28 19:26:56	infobob	frothnicator, http://paste.pound-python.org/show/TC6JYDb5oWaZGzSaTNZv/
2014-05-28 19:27:18	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-28 19:27:19	<--	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has quit
2014-05-28 19:27:37	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-28 19:28:44	frothnicator	wleslie: ah.  Are you saying to wrap "do; some; stuff;" in a function?
2014-05-28 19:30:05	-->	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has joined #python
2014-05-28 19:30:42	-->	emperorcezar (~emperorce@c-24-14-228-224.hsd1.il.comcast.net) has joined #python
2014-05-28 19:30:49	-->	DrewbieDoo (~DrewbieDo@pool-96-241-202-210.washdc.fios.verizon.net) has joined #python
2014-05-28 19:30:51	frothnicator	wleslie: How about with this example, which is more on target: http://paste.pound-python.org/show/gip3LWloBLBccyIUvLTj/
2014-05-28 19:31:23	wleslie	frothnicator: I am saying to use an 'else' clause.
2014-05-28 19:31:32	frothnicator	wleslie: I /only/ want to catch the KeyError in reference to the handler dict, not from the function it calls.
2014-05-28 19:31:57	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-28 19:32:32	wleslie	frothnicator: http://paste.pound-python.org/show/nwUwoqwDIOdSiNlsW1IM/
2014-05-28 19:32:42	frothnicator	wleslie: ah, okay.  So, I should make it two lines.
2014-05-28 19:32:43	wleslie	frothnicator: yes, that's what an else clause is for.
2014-05-28 19:33:00	-->	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has joined #python
2014-05-28 19:33:04	frothnicator	wleslie: thanks.  Duh, now that you point it out.
2014-05-28 19:33:05	<--	alemedeiros (~alemedeir@189-19-125-174.dsl.telesp.net.br) has quit (Ping timeout: 255 seconds)
2014-05-28 19:33:08	<--	nedbat (~nedbat@python/psf/nedbat) has quit
2014-05-28 19:33:12	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Ping timeout: 276 seconds)
2014-05-28 19:33:24	<--	sepero (~none@115.sub-75-199-93.myvzw.com) has quit (Disconnected by services)
2014-05-28 19:33:27	--	chamunks is now known as zz_chamunks
2014-05-28 19:33:40	-->	sepero (~none@117.sub-75-202-236.myvzw.com) has joined #python
2014-05-28 19:33:52	<--	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 19:33:59	<--	apg (~Thunderbi@unaffiliated/apg) has quit (Ping timeout: 252 seconds)
2014-05-28 19:34:34	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 19:34:49	-->	matelot (~rchin@ool-44c4b2bd.dyn.optonline.net) has joined #python
2014-05-28 19:35:04	--	wkmanire is now known as wkmanire_
2014-05-28 19:35:15	-->	johnkevinmbasco (~johnkevin@203.215.121.216) has joined #python
2014-05-28 19:35:45	-->	Leeds (~richardc@n112118156036.netvigator.com) has joined #python
2014-05-28 19:35:50	matelot	"except ValueError , e" and "except ValueError as e" are equivalent ?
2014-05-28 19:36:00	<--	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-05-28 19:36:10	-->	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has joined #python
2014-05-28 19:36:14	-->	Ariel_Calzada (~aricalso@201.216.0.73) has joined #python
2014-05-28 19:36:30	sproingie	yes, but don't use the first
2014-05-28 19:36:42	mic_e	the first is invalid python3
2014-05-28 19:36:44	matelot	yeah i dont like it either
2014-05-28 19:36:58	<--	al1o (~al1o@p4FF541E8.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-05-28 19:37:06	<--	dunkel2 (~dunkel2@189.158.61.126) has quit (Quit: dunkel2)
2014-05-28 19:37:08	matelot	actually didn't know first was valid
2014-05-28 19:37:26	-->	apg (~Thunderbi@unaffiliated/apg) has joined #python
2014-05-28 19:37:35	-->	mattallmill (1000@129.130.175.163) has joined #python
2014-05-28 19:38:00	wleslie	it used to be 'except (OneException, TwoException), e:'
2014-05-28 19:38:05	<--	frothnicator (~frothy@unaffiliated/frothnicator) has quit (Quit: Leaving.)
2014-05-28 19:38:30	wleslie	confusing for obvious reasons, so having 'as' as a new keyword in 2.5 future they made good use of it
2014-05-28 19:38:43	KirkMcDonald	One of my favorite Python errors is: except foo.FooError, bar.BarError:
2014-05-28 19:38:58	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 240 seconds)
2014-05-28 19:39:16	-->	al1o (~al1o@p4FF5439D.dip0.t-ipconnect.de) has joined #python
2014-05-28 19:39:31	KirkMcDonald	(Which will reassign the module-level name bar.BarError, if that wasn't obvious.)
2014-05-28 19:39:41	<--	mission (~mission@unaffiliated/mission) has quit (Remote host closed the connection)
2014-05-28 19:39:42	<--	innertracks (~Thunderbi@ip-64-134-132-146.public.wayport.net) has quit (Ping timeout: 276 seconds)
2014-05-28 19:40:13	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Max SendQ exceeded)
2014-05-28 19:40:19	KirkMcDonald	ls
2014-05-28 19:40:21	KirkMcDonald	Ack
2014-05-28 19:40:44	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-28 19:41:43	-->	jalaziz (~jalaziz@76-217-208-122.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-28 19:42:36	-->	dunkel2 (~dunkel2@189.158.61.126) has joined #python
2014-05-28 19:43:14	<--	wleslie (~verte@python/site-packages/verte) has quit (Quit: ~~~ Crash in JIT!)
2014-05-28 19:45:33	<--	il (~not_mike@unaffiliated/not-mike/x-4399907) has quit (Ping timeout: 276 seconds)
2014-05-28 19:46:25	-->	Zer000 (~phil@216-58-17-59.cpe.distributel.net) has joined #python
2014-05-28 19:48:18	<--	AndroidLoverInSF (~AndroidLo@64.56.206.12) has quit (Ping timeout: 240 seconds)
2014-05-28 19:48:33	<--	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-05-28 19:49:59	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Quit: Konversation terminated!)
2014-05-28 19:50:06	<--	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2014-05-28 19:50:06	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 276 seconds)
2014-05-28 19:50:12	-->	wong2 (~wong2@124.205.66.195) has joined #python
2014-05-28 19:50:29	<--	apg (~Thunderbi@unaffiliated/apg) has quit (Ping timeout: 252 seconds)
2014-05-28 19:50:35	<--	Ariel_Calzada (~aricalso@201.216.0.73) has quit (Ping timeout: 252 seconds)
2014-05-28 19:50:53	-->	techdragon (~techdrago@106-69-164-17.dyn.iinet.net.au) has joined #python
2014-05-28 19:51:59	<--	AcidReign (~AcidReign@unaffiliated/acidreign) has quit (Ping timeout: 255 seconds)
2014-05-28 19:53:01	-->	frothnicator (~frothy@unaffiliated/frothnicator) has joined #python
2014-05-28 19:53:27	<--	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has quit (Quit: jr3)
2014-05-28 19:55:50	-->	Guest98019 (~max@172.56.33.52) has joined #python
2014-05-28 19:56:48	<--	Zer000 (~phil@216-58-17-59.cpe.distributel.net) has left #python ("Leaving")
2014-05-28 19:57:25	<--	sepero (~none@117.sub-75-202-236.myvzw.com) has quit (Disconnected by services)
2014-05-28 19:57:41	-->	sepero (~none@117.sub-75-202-236.myvzw.com) has joined #python
2014-05-28 19:58:53	<--	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has quit (Quit: Leaving)
2014-05-28 19:58:56	<--	agjacome (~agjacome@181.217.11.37.dynamic.jazztel.es) has quit (Quit: leaving)
2014-05-28 20:00:29	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-28 20:02:05	-->	Vivekananda (~Vivekanan@69.251.189.107) has joined #python
2014-05-28 20:04:50	<--	asoliman (~asoliman@cpe-76-94-183-111.socal.res.rr.com) has quit (Quit: Leaving...)
2014-05-28 20:05:31	<--	braincrash (~braincras@bl14-213-147.dsl.telepac.pt) has quit (Quit: bye bye)
2014-05-28 20:05:53	<--	AkashicLegend (~AkashicLe@unaffiliated/akashiclegend) has quit (Quit: time to frag off)
2014-05-28 20:06:52	-->	eoss (~e0s@pdpc/supporter/student/eoss) has joined #python
2014-05-28 20:07:12	--	CyrilPeponnet is now known as CP|AFK
2014-05-28 20:08:34	<--	__main__ (~main@50.240.210.73) has quit (Ping timeout: 252 seconds)
2014-05-28 20:08:55	-->	braincrash (~braincras@bl14-213-147.dsl.telepac.pt) has joined #python
2014-05-28 20:09:14	sproingie	KirkMcDonald: huh, so is "except Foo as self.bar" still a thing you can do?
2014-05-28 20:09:29	sproingie	all kinds of happy fun evil with descriptors there
2014-05-28 20:10:12	emperorcezar	I'm trying to mock a function that is imported inside another function. Anyone know how to reach it with mock?
2014-05-28 20:10:18	<--	visualshockg (~visualsho@host-37-191-204-89.lynet.no) has quit (Quit: Leaving)
2014-05-28 20:10:24	--	CP|AFK is now known as CyrilPeponnet
2014-05-28 20:10:40	-->	__main__ (~main@adsl-99-173-15-158.dsl.pltn13.sbcglobal.net) has joined #python
2014-05-28 20:10:40	k_sze[work]	Does the `id` token have any special meaning in python?
2014-05-28 20:10:53	<--	SiegeX (~SiegeX@unaffiliated/siegex) has quit (Ping timeout: 255 seconds)
2014-05-28 20:10:58	sproingie	k_sze[work]: no, it's just the name of a not very useful builtin
2014-05-28 20:11:10	-->	Salvakiya (~Salvakiya@pool-74-100-213-151.lsanca.dsl-w.verizon.net) has joined #python
2014-05-28 20:11:20	Salvakiya	in python how do I convert degrees to radians?
2014-05-28 20:11:20	sproingie	if you don't need the builtin, feel free to use the name as a local
2014-05-28 20:11:24	Salvakiya	math.radians?
2014-05-28 20:11:43	k_sze[work]	ah, ok, the builtin id function
2014-05-28 20:12:31	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-28 20:12:59	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-28 20:13:01	sproingie	id() would have been far more useful as a HOF, but alas it's not that id function
2014-05-28 20:13:12	-->	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has joined #python
2014-05-28 20:13:43	MentalAtrophy	Yes, Salvakiya. ex: math.radians(180) -> 3.14~
2014-05-28 20:14:08	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-28 20:14:14	Salvakiya	MentalAtrophy, and math.degrees is the oppositre right?
2014-05-28 20:14:17	Salvakiya	radians to degrees?
2014-05-28 20:14:20	MentalAtrophy	And I'm pretty sure all of the basic trig stuff wants things in radians.  math.sin(), for example.
2014-05-28 20:14:21	MentalAtrophy	Yes.
2014-05-28 20:14:28	<--	cashnguns (~cashnguns@184.78.58.91) has quit (Remote host closed the connection)
2014-05-28 20:14:40	MentalAtrophy	I have to double-check on that.  I tend to get these things backwards.
2014-05-28 20:14:40	-->	theRealGent (~theRealGe@c-67-173-136-172.hsd1.il.comcast.net) has joined #python
2014-05-28 20:14:48	-->	kingoftrex (411c653a@gateway/web/freenode/ip.65.28.101.58) has joined #python
2014-05-28 20:15:05	Salvakiya	when you import math where is it importing from?
2014-05-28 20:15:09	Salvakiya	where is math.py?
2014-05-28 20:15:11	<--	taion809 (~Nick@ool-43526e1b.dyn.optonline.net) has quit (Quit: 明天见)
2014-05-28 20:15:15	kingoftrex	does anyone here know how to get the text values from multiple elements with the same class?
2014-05-28 20:15:17	kingoftrex	i'm using selenium
2014-05-28 20:15:24	-->	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has joined #python
2014-05-28 20:15:43	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Remote host closed the connection)
2014-05-28 20:15:46	kingoftrex	math.py is in the scripts folder
2014-05-28 20:15:47	kingoftrex	Salvakiya:
2014-05-28 20:15:56	kingoftrex	if you go to the python27 or python34 directory
2014-05-28 20:16:29	Salvakiya	hmm
2014-05-28 20:16:33	Salvakiya	is it nested in another file?
2014-05-28 20:16:37	<--	theRealGent (~theRealGe@c-67-173-136-172.hsd1.il.comcast.net) has quit (Client Quit)
2014-05-28 20:16:40	Salvakiya	because I dont see math.py in my scripts folder
2014-05-28 20:16:45	MentalAtrophy	I'm not sure where it is exactly.
2014-05-28 20:16:48	kingoftrex	oh
2014-05-28 20:16:50	kingoftrex	its in the lib folder
2014-05-28 20:16:51	kingoftrex	nvm
2014-05-28 20:16:54	MentalAtrophy	But it's standard-library so you don't need to worry about others not having it.
2014-05-28 20:16:55	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-28 20:17:03	kingoftrex	or not
2014-05-28 20:17:04	MentalAtrophy	If that was your concern.
2014-05-28 20:17:05	kingoftrex	its there somewhere
2014-05-28 20:17:07	<--	mahmoud (~Mahmoud@unaffiliated/mahmoud) has quit (Ping timeout: 240 seconds)
2014-05-28 20:17:12	Salvakiya	right.. but.. I was wanting to see the source =P
2014-05-28 20:17:34	Salvakiya	its not important though
2014-05-28 20:17:40	Salvakiya	I am making a GML math library
2014-05-28 20:17:43	kingoftrex	hm
2014-05-28 20:17:51	kingoftrex	it appears to not be there
2014-05-28 20:17:54	Salvakiya	thought it would be nice to make sure I am not creating functions that already exist
2014-05-28 20:17:54	kingoftrex	at least on my computer
2014-05-28 20:17:56	kingoftrex	i searched it
2014-05-28 20:18:04	kingoftrex	you could just consult the documentation on the python website
2014-05-28 20:18:06	Salvakiya	maybe its in a dll?
2014-05-28 20:18:10	kingoftrex	for all the classes
2014-05-28 20:18:13	kingoftrex	and functions
2014-05-28 20:18:17	kingoftrex	in the math library
2014-05-28 20:19:09	<--	Polymorphism (~textual@68.204.154.30) has quit (Read error: Connection reset by peer)
2014-05-28 20:19:11	Remram	Does pep8.py have an extension mechanism? It looks like it doesn't. Should flake8 be extended instead?
2014-05-28 20:19:43	sproingie	not sure how you'd do an extension mechanism for a style guide
2014-05-28 20:19:47	<--	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has quit (Quit: Leaving.)
2014-05-28 20:20:11	--	CyrilPeponnet is now known as CP|AFK
2014-05-28 20:21:10	<--	sepero (~none@117.sub-75-202-236.myvzw.com) has quit (Disconnected by services)
2014-05-28 20:21:11	-->	apg (~Thunderbi@unaffiliated/apg) has joined #python
2014-05-28 20:21:26	-->	sepero (~none@117.sub-75-202-236.myvzw.com) has joined #python
2014-05-28 20:21:36	Salvakiya	XD
2014-05-28 20:21:36	Salvakiya	def degtorad(USE_STD_MATH_RADIANS_INSTEAD):
2014-05-28 20:21:36	Salvakiya	    return radians(USE_STD_MATH_RADIANS_INSTEAD)
2014-05-28 20:21:41	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Ping timeout: 255 seconds)
2014-05-28 20:22:13	sproingie	wat?
2014-05-28 20:22:38	Salvakiya	degtorad is a gml function
2014-05-28 20:22:48	Salvakiya	I am making a library to help people merge from GML to python
2014-05-28 20:23:01	-->	n0arch (~noarch@renim.queryordie.net) has joined #python
2014-05-28 20:23:29	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-28 20:23:33	<--	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-28 20:25:04	<--	carebeer_ (~snxt@gateway/tor-sasl/carebeer) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	_joe_ (~joe@wikimedia/GLavagetto-WMF) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	MouldyOldBones (~mob@gateway/tor-sasl/mouldyoldbones) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	sr (~smrgr@shellium/member/samruger) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	smue (~smue@gateway/tor-sasl/smue) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	flax (~flax@gateway/tor-sasl/flax) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Remote host closed the connection)
2014-05-28 20:25:05	<--	rabidfurby (~zack@gateway/tor-sasl/rabidfurby) has quit (Write error: Broken pipe)
2014-05-28 20:25:06	<--	causasui (~causasui@wikipedia/causa-sui) has quit (Write error: Broken pipe)
2014-05-28 20:25:06	<--	Ankhers (~user@gateway/tor-sasl/ankhers) has quit (Write error: Connection reset by peer)
2014-05-28 20:25:06	<--	gazprom (~gazprom@gateway/tor-sasl/gazprom) has quit (Write error: Broken pipe)
2014-05-28 20:25:06	<--	isomorphic (~isomorphi@gateway/tor-sasl/isomorphic) has quit (Write error: Broken pipe)
2014-05-28 20:25:06	<--	z0ran (~z0ran@gateway/tor-sasl/z0ran) has quit (Write error: Broken pipe)
2014-05-28 20:25:11	MentalAtrophy	Salvakya, the math module is built into the interpreter.
2014-05-28 20:25:13	sproingie	laudable goal i suppose.  pretty straightforward translation, though i'm not sure what that weird parameter is about
2014-05-28 20:25:14	<--	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has quit (Quit: ArcTanSusan)
2014-05-28 20:25:15	MentalAtrophy	Which is why you can't find it.
2014-05-28 20:25:47	sproingie	not in the interpreter, but it is probably in C
2014-05-28 20:26:10	MentalAtrophy	I guess I should say linked?
2014-05-28 20:26:23	sproingie	gets built as a standard module, yeh
2014-05-28 20:26:38	-->	il (~not_mike@unaffiliated/not-mike/x-4399907) has joined #python
2014-05-28 20:26:52	ssbr	it can be in the interpreter
2014-05-28 20:27:00	ssbr	I thought it always was, actually
2014-05-28 20:28:19	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Quit: Leaving)
2014-05-28 20:29:51	sproingie	hm, does say built-in
2014-05-28 20:30:41	<--	Guest98019 (~max@172.56.33.52) has quit (Ping timeout: 255 seconds)
2014-05-28 20:30:42	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 20:31:58	<--	johnkevinmbasco (~johnkevin@203.215.121.216) has quit (Ping timeout: 240 seconds)
2014-05-28 20:32:18	<--	introom (~introom@wf077-185.ust.hk) has quit (Ping timeout: 240 seconds)
2014-05-28 20:32:18	<--	ffledgling (~anhad@50.56.129.170) has quit (Quit: leaving)
2014-05-28 20:34:16	-->	nguyt (~nguyt@c-24-16-77-218.hsd1.wa.comcast.net) has joined #python
2014-05-28 20:34:16	-->	smue (~smue@gateway/tor-sasl/smue) has joined #python
2014-05-28 20:34:35	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 20:35:09	-->	isomorphic (~isomorphi@gateway/tor-sasl/isomorphic) has joined #python
2014-05-28 20:35:30	-->	_joe_ (~joe@wikimedia/GLavagetto-WMF) has joined #python
2014-05-28 20:35:32	-->	gazprom (~gazprom@gateway/tor-sasl/gazprom) has joined #python
2014-05-28 20:35:49	-->	sr (~smrgr@shellium/member/samruger) has joined #python
2014-05-28 20:36:38	-->	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has joined #python
2014-05-28 20:36:41	-->	Ankhers (~user@gateway/tor-sasl/ankhers) has joined #python
2014-05-28 20:36:46	-->	MouldyOldBones (~mob@gateway/tor-sasl/mouldyoldbones) has joined #python
2014-05-28 20:37:01	-->	fuzeman|away (~fuzeman@unaffiliated/fuzeman) has joined #python
2014-05-28 20:37:03	-->	flax (~flax@gateway/tor-sasl/flax) has joined #python
2014-05-28 20:37:48	-->	XStatik (~XStatik@173-24-184-195.client.mchsi.com) has joined #python
2014-05-28 20:37:50	-->	carebeer (~snxt@gateway/tor-sasl/carebeer) has joined #python
2014-05-28 20:38:25	<--	mike_af (~mike_af@unaffiliated/mike-af/x-5454762) has quit (Quit: Leaving...)
2014-05-28 20:39:30	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 276 seconds)
2014-05-28 20:40:33	-->	McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined #python
2014-05-28 20:40:45	-->	rabidfurby (~zack@gateway/tor-sasl/rabidfurby) has joined #python
2014-05-28 20:41:04	-->	xcesariox (~xcesariox@101.127.20.151) has joined #python
2014-05-28 20:41:05	<--	xcesariox (~xcesariox@101.127.20.151) has quit (Max SendQ exceeded)
2014-05-28 20:41:10	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-28 20:41:38	<--	matelot (~rchin@ool-44c4b2bd.dyn.optonline.net) has left #python ("PONG :barjavel.freenode.net")
2014-05-28 20:43:18	-->	sgviking (~sgviking@gateway/tor-sasl/sgviking) has joined #python
2014-05-28 20:44:03	-->	Guest98019 (~max@c-71-231-120-93.hsd1.wa.comcast.net) has joined #python
2014-05-28 20:44:38	-->	xcesariox (~xcesariox@101.127.20.151) has joined #python
2014-05-28 20:44:42	<--	shadok (~muaddib@unaffiliated/shadok) has quit (Ping timeout: 276 seconds)
2014-05-28 20:45:28	<--	GGMethos (~methos@162.243.233.180) has quit (Quit: WeeChat 0.4.3)
2014-05-28 20:45:29	<--	apg (~Thunderbi@unaffiliated/apg) has quit (Ping timeout: 252 seconds)
2014-05-28 20:45:31	<--	mac_ified (~mac_ified@67.9.155.198) has quit (Remote host closed the connection)
2014-05-28 20:47:16	-->	snyp (~snyp@223.29.204.2) has joined #python
2014-05-28 20:47:21	-->	Bird|otherbox (~Da@unaffiliated/htt-bird) has joined #python
2014-05-28 20:47:54	-->	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has joined #python
2014-05-28 20:48:19	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2014-05-28 20:48:51	-->	ColorStorm (~inhahe@adsl-074-186-083-219.sip.mia.bellsouth.net) has joined #python
2014-05-28 20:49:32	Salvakiya	I need some help... this script is wrong
2014-05-28 20:49:33	Salvakiya	http://paste.pound-python.org/show/4cs84yNE3PPvUTlSK3tY/
2014-05-28 20:49:38	Salvakiya	mthod*
2014-05-28 20:49:41	Salvakiya	method*
2014-05-28 20:50:08	Salvakiya	print(lengthdir3d(10,0,90))
2014-05-28 20:50:10	-->	ragsagar (~ragsagar@unaffiliated/ragsagar) has joined #python
2014-05-28 20:50:15	Salvakiya	returns.. 10,0,10
2014-05-28 20:50:19	Salvakiya	and it should not return that
2014-05-28 20:50:27	Salvakiya	it should be 0,0,10
2014-05-28 20:51:41	<--	inhahe (~inhahe@adsl-074-186-083-219.sip.mia.bellsouth.net) has quit (Ping timeout: 265 seconds)
2014-05-28 20:51:43	<--	SJr (~sjr@S010600fb42f573f0.vc.shawcable.net) has quit (Ping timeout: 252 seconds)
2014-05-28 20:53:18	-->	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has joined #python
2014-05-28 20:53:42	<--	jamphat (~jamphat@66-44-29-175.c3-0.129-ubr1.lnh-129.md.cable.rcn.com) has quit (Quit: x)
2014-05-28 20:53:58	-->	northfurr (~northfurr@unaffiliated/northfurr) has joined #python
2014-05-28 20:54:00	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-28 20:54:46	<--	Wild_Cat (~Max@108.161.125.246) has quit (Read error: Connection reset by peer)
2014-05-28 20:55:02	-->	pretty_function (~pretty_fu@61.12.96.10) has joined #python
2014-05-28 20:55:17	-->	bikeshedder_ (~bikeshedd@dslb-178-004-069-251.pools.arcor-ip.net) has joined #python
2014-05-28 20:55:22	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-28 20:55:23	-->	taloszerg (~taloszerg@ool-1826eaa2.dyn.optonline.net) has joined #python
2014-05-28 20:55:49	-->	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has joined #python
2014-05-28 20:57:05	-->	donspaulding (~donspauld@71.201.172.43) has joined #python
2014-05-28 20:57:17	Remram	pep8 is written as a collection of checks (which are separate functions) so
2014-05-28 20:58:19	<--	taloszer_ (~taloszerg@c62e6602.cst.lightpath.net) has quit (Ping timeout: 252 seconds)
2014-05-28 20:59:25	<--	bikeshedder (~bikeshedd@dslb-088-069-140-254.pools.arcor-ip.net) has quit (Ping timeout: 265 seconds)
2014-05-28 20:59:38	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 240 seconds)
2014-05-28 20:59:44	<--	kingoftrex (411c653a@gateway/web/freenode/ip.65.28.101.58) has left #python
2014-05-28 21:00:17	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 245 seconds)
2014-05-28 21:00:38	-->	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has joined #python
2014-05-28 21:01:45	<--	shackra (~shackra@186.32.192.206) has quit (Read error: Connection reset by peer)
2014-05-28 21:02:34	-->	byte48 (~byte48@unaffiliated/byte48) has joined #python
2014-05-28 21:03:00	-->	shackra (~shackra@186.32.192.206) has joined #python
2014-05-28 21:04:03	-->	wolrah (~wolrah@24.239.210.140) has joined #python
2014-05-28 21:04:43	-->	czapla (~czapla@2a02:8109:8380:1298:9013:2df1:3110:bac6) has joined #python
2014-05-28 21:04:53	<--	wolrah_ (~wolrah@24.239.210.140) has quit (Ping timeout: 255 seconds)
2014-05-28 21:04:55	desophos	in the opinion of #python, is Scala worth learning?
2014-05-28 21:05:01	<--	jabbott (~axel@c-71-228-56-7.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2014-05-28 21:05:02	<--	Siberian_Tiger (~Nicholas@67-210-183-162.fidnet.com) has quit (Disconnected by services)
2014-05-28 21:05:49	-->	Tiger|0 (~Nicholas@67-210-183-162.fidnet.com) has joined #python
2014-05-28 21:05:53	xiaomiao	desophos: why not, learning is rarely bad
2014-05-28 21:06:02	desophos	haha true
2014-05-28 21:06:24	xiaomiao	I had a look at it and find it quite ugly, plus there's the jvm nearby, which also doesn't motivate me
2014-05-28 21:06:34	-->	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has joined #python
2014-05-28 21:06:57	<--	stymo (~stymo@pool-71-174-188-132.bstnma.east.verizon.net) has quit (Quit: This computer has gone to sleep)
2014-05-28 21:07:06	-->	onthestairs (~austin@217.138.44.210) has joined #python
2014-05-28 21:07:57	-->	introom (~introom@wf078-225.ust.hk) has joined #python
2014-05-28 21:08:28	<--	Yoriz (~chatzilla@cpc23-farn5-2-0-cust23.6-2.cable.virginm.net) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 29.0.1/20140506152807])
2014-05-28 21:09:34	<--	czapla (~czapla@2a02:8109:8380:1298:9013:2df1:3110:bac6) has quit (Ping timeout: 265 seconds)
2014-05-28 21:12:01	<--	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has quit (Remote host closed the connection)
2014-05-28 21:13:08	-->	kingplusplus (~kingplusp@41.58.218.75) has joined #python
2014-05-28 21:13:27	<--	taloszerg (~taloszerg@ool-1826eaa2.dyn.optonline.net) has quit (Remote host closed the connection)
2014-05-28 21:13:59	desophos	well xiaomiao, it appears to be one of the few languages to merge FP and OOP
2014-05-28 21:14:02	desophos	which appeals to me
2014-05-28 21:14:18	xiaomiao	hrm, have a look at OpenDylan maybe
2014-05-28 21:14:27	<--	galactic_pretty_ (~aaa@210.223.154.133) has quit (Ping timeout: 245 seconds)
2014-05-28 21:16:13	sproingie	if you like dead languages, sure
2014-05-28 21:16:23	sproingie	Icon is also worth a look in that case
2014-05-28 21:16:25	<--	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Remote host closed the connection)
2014-05-28 21:16:35	-->	mac_ified (~mac_ified@67.9.155.198) has joined #python
2014-05-28 21:16:39	-->	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has joined #python
2014-05-28 21:17:51	<--	thinkxl (~Adium@207-91-184-235.nstci.net) has quit (Ping timeout: 276 seconds)
2014-05-28 21:17:54	kingplusplus	cdunklau, hi sorry to botter you, its about the unicode error you tried help me solve unfortunately am getting same error as you were talking of byte and unicode when writting to fileshttp://pastebin.com/S25jDnPy
2014-05-28 21:17:55	desophos	honestly i'd rather work with living languages :p
2014-05-28 21:17:57	infobob	http://paste.pound-python.org/show/rZwliftjRBWINKflEfOS/ (repasted for kingplusplus)
2014-05-28 21:18:28	sproingie	me i'm looking at various languages that compile to JS
2014-05-28 21:20:26	<--	arescorpio (~arescorpi@204-27-245-190.fibertel.com.ar) has quit (Read error: Connection reset by peer)
2014-05-28 21:21:18	<--	mac_ified (~mac_ified@67.9.155.198) has quit (Ping timeout: 240 seconds)
2014-05-28 21:21:46	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-28 21:22:19	-->	dash (~washort@greyface.org) has joined #python
2014-05-28 21:22:20	-->	mac_ified (~mac_ified@67.9.155.198) has joined #python
2014-05-28 21:23:34	-->	gortat (~josh@cpe-72-228-129-121.buffalo.res.rr.com) has joined #python
2014-05-28 21:23:54	desophos	hmm. well i think i'll check out scala
2014-05-28 21:23:54	-->	tmbg (~quassel@108.166.64.62) has joined #python
2014-05-28 21:24:06	-->	norn_ (~norn@cgn-pool-83-219-138-155.tis-dialog.ru) has joined #python
2014-05-28 21:24:11	-->	norn (~norn@cgn-pool-83-219-138-155.tis-dialog.ru) has joined #python
2014-05-28 21:24:15	-->	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has joined #python
2014-05-28 21:24:42	-->	hoot (~hoot@5.140.177.254) has joined #python
2014-05-28 21:24:42	<--	hoot (~hoot@5.140.177.254) has quit (Client Quit)
2014-05-28 21:25:00	--	wkmanire_ is now known as wkmanire
2014-05-28 21:26:49	dash	hmm scala
2014-05-28 21:27:06	dash	isn't that where some guy took a look at java and said "i like it, but it could be _more_ complicated"
2014-05-28 21:27:21	sproingie	there's a lot in scala that's far less complicated than java
2014-05-28 21:27:22	<--	mac_ified (~mac_ified@67.9.155.198) has quit (Ping timeout: 258 seconds)
2014-05-28 21:28:33	sproingie	but if you want to bend your brain and expand your horizons, i'd say learn haskell
2014-05-28 21:28:45	<--	nande (~quassel@190.183.4.91) has quit (Read error: Connection reset by peer)
2014-05-28 21:29:19	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2014-05-28 21:29:41	-->	gopar (~gopar@c-76-102-222-91.hsd1.ca.comcast.net) has joined #python
2014-05-28 21:31:23	dash	it's good for that yep
2014-05-28 21:31:56	<--	emperorcezar (~emperorce@c-24-14-228-224.hsd1.il.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 21:32:37	-->	Tecan (~fasdf@unaffiliated/unit41) has joined #python
2014-05-28 21:33:28	<--	dunkel2 (~dunkel2@189.158.61.126) has quit (Quit: dunkel2)
2014-05-28 21:33:32	<--	gortat (~josh@cpe-72-228-129-121.buffalo.res.rr.com) has quit (Quit: gortat)
2014-05-28 21:34:06	<--	wagnerrp (~wagnerrp_@mythtv/developer/wagnerrp) has quit (Ping timeout: 276 seconds)
2014-05-28 21:34:36	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 21:34:45	<--	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 21:35:33	-->	nande (~quassel@190.183.4.91) has joined #python
2014-05-28 21:36:13	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-28 21:36:20	sproingie	another good language to learn that's basically the polar opposite is forth
2014-05-28 21:36:36	sproingie	and it'll only take you a day or so to learn forth
2014-05-28 21:38:10	-->	kushal (~kdas@fedora/kushal) has joined #python
2014-05-28 21:38:47	sproingie	Mozart/Oz if you get yourself a copy of CTM
2014-05-28 21:39:07	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-28 21:39:26	<--	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has quit (Quit: Nettalk6 - www.ntalk.de)
2014-05-28 21:39:36	<--	cirwin (~Adium@wiktionary/ConradIrwin) has quit (Quit: Leaving.)
2014-05-28 21:39:52	-->	thelinuxkid (~thelinuxk@99-118-212-48.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-28 21:39:59	<--	QBob (~qbob@amarok/developer/qbob) has quit (Ping timeout: 255 seconds)
2014-05-28 21:40:02	kingplusplus	http://pastebin.com/S25jDnPy please i need help why am still get this Unicode error when writing to file and printing to screen
2014-05-28 21:40:02	infobob	http://paste.pound-python.org/show/rZwliftjRBWINKflEfOS/ (repasted for kingplusplus)
2014-05-28 21:40:08	-->	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has joined #python
2014-05-28 21:40:09	-->	furoido (~Thunderbi@112.207.132.84) has joined #python
2014-05-28 21:41:08	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-28 21:41:18	<--	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has quit (Ping timeout: 240 seconds)
2014-05-28 21:41:32	-->	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has joined #python
2014-05-28 21:41:55	<--	pingbat_ (~pingbat@g226210041.adsl.alicedsl.de) has quit (Ping timeout: 240 seconds)
2014-05-28 21:41:57	sproingie	well first of all i don't see logs() anywhere in that traceback
2014-05-28 21:42:25	-->	pingbat (~pingbat@f051066148.adsl.alicedsl.de) has joined #python
2014-05-28 21:42:33	sproingie	but in general, you need to .encode(your_terminal_encoding_here) anything you print to stdout
2014-05-28 21:42:41	<--	kcj (~kcj@unaffiliated/kcj) has quit (Ping timeout: 252 seconds)
2014-05-28 21:42:45	sproingie	if in doubt, just pick utf8
2014-05-28 21:42:52	-->	Infant (~thomas@78-56-194-78.static.zebra.lt) has joined #python
2014-05-28 21:46:12	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-28 21:46:23	<--	thelinuxkid (~thelinuxk@99-118-212-48.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Leaving.)
2014-05-28 21:47:07	<--	mattallmill (1000@129.130.175.163) has quit (Quit: Konversation terminated!)
2014-05-28 21:47:31	-->	cirwin (~Adium@wiktionary/ConradIrwin) has joined #python
2014-05-28 21:47:37	-->	randomshop (~Random@220-244-125-22.static.tpgi.com.au) has joined #python
2014-05-28 21:49:58	<--	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-05-28 21:50:11	kingplusplus	sproingie thanks
2014-05-28 21:51:07	<--	spossiba (~spossiba@unaffiliated/stryx/x-3871776) has quit (Ping timeout: 240 seconds)
2014-05-28 21:52:37	-->	phatina (~phatina@bband-dyn223.178-41-37.t-com.sk) has joined #python
2014-05-28 21:54:37	-->	spossiba (~spossiba@unaffiliated/stryx/x-3871776) has joined #python
2014-05-28 21:55:17	<--	txtsd (txtsd@27.0.52.42) has quit (Read error: No route to host)
2014-05-28 21:55:33	<--	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 21:55:41	-->	Fnatic9910 (7aa109f4@gateway/web/freenode/ip.122.161.9.244) has joined #python
2014-05-28 21:56:11	<--	eoss (~e0s@pdpc/supporter/student/eoss) has quit (Remote host closed the connection)
2014-05-28 21:56:12	<--	__class__ (~class@98.207.86.101) has quit (Ping timeout: 276 seconds)
2014-05-28 21:56:20	<--	Fnatic9910 (7aa109f4@gateway/web/freenode/ip.122.161.9.244) has left #python
2014-05-28 21:56:27	-->	Fnatic9910 (7aa109f4@gateway/web/freenode/ip.122.161.9.244) has joined #python
2014-05-28 21:56:35	-->	txtsd (txtsd@27.0.52.42) has joined #python
2014-05-28 21:56:40	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-28 21:57:39	Fnatic9910	I have some doubt in python regular expression documentation. Can anyone help me.
2014-05-28 21:58:29	edunham	Fnatic9910: use the link from /topic to pastebin the code that confuses you, and explain what you expected vs what it did?
2014-05-28 21:58:31	JamesNZ	Fnatic9910: Just ask your question, someone will answer if they can.
2014-05-28 22:00:16	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Quit: Computer has gone to sleep.)
2014-05-28 22:01:01	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 252 seconds)
2014-05-28 22:01:04	-->	Miyrah (~01239@d205-250-233-246.bchsia.telus.net) has joined #python
2014-05-28 22:01:14	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-28 22:01:38	<--	spossiba (~spossiba@unaffiliated/stryx/x-3871776) has quit (Ping timeout: 240 seconds)
2014-05-28 22:01:55	<--	werdna (werdna@wikimedia/Werdna) has quit (Ping timeout: 240 seconds)
2014-05-28 22:01:58	kingplusplus	sproingie, http://pastebin.com/46mdHYti this is the complete code... sorry i did not copy it correctly.... someone said since am writing to file by default its in bytes so i don't know maybe i mis-understood the person should... between do you mean i should uncomment line 4
2014-05-28 22:02:01	kingplusplus	???
2014-05-28 22:02:02	infobob	http://paste.pound-python.org/show/iC8VmeUsGB1UQ9DWMGSi/ (repasted for kingplusplus)
2014-05-28 22:02:20	-->	werdna (werdna@wikimedia/Werdna) has joined #python
2014-05-28 22:02:38	-->	__class__ (~class@98.207.86.101) has joined #python
2014-05-28 22:02:41	<--	kosh (~kosh@aesaeion.com) has quit (Ping timeout: 264 seconds)
2014-05-28 22:03:09	-->	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has joined #python
2014-05-28 22:03:28	dash	kingplusplus: the error is in ali.py on line 270
2014-05-28 22:03:33	dash	kingplusplus: this is not that file
2014-05-28 22:03:40	-->	spossiba (~spossiba@unaffiliated/stryx/x-3871776) has joined #python
2014-05-28 22:04:43	-->	sxn (~sxn@mnch-5d87aa29.pool.mediaWays.net) has joined #python
2014-05-28 22:06:00	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-28 22:06:06	-->	bocaneri (~bocaneri_@about/linux/staff/sauvin) has joined #python
2014-05-28 22:07:11	-->	dvx (~dvx@mail.genicad.cz) has joined #python
2014-05-28 22:07:17	kingplusplus	dash yes, but that is a unicode error
2014-05-28 22:07:53	kingplusplus	line 270 is calling cmd()  --- that is  cmd("Unknow error: {0}".format(contact))
2014-05-28 22:08:39	kingplusplus	line 271 is cmd(e)
2014-05-28 22:09:30	-->	andenixa (~chatzilla@79-172-125-85.dyn.broadband.iskratelecom.ru) has joined #python
2014-05-28 22:09:33	kingplusplus	both lines are surpose to execute after an exception which is caught on line 269
2014-05-28 22:09:47	andenixa	Hello gentlemen, what is the best way to embed python in my progam?
2014-05-28 22:10:09	andenixa	I want my program to be able to run python scripts from within, which inthemselves can access its API
2014-05-28 22:10:32	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-28 22:12:24	-->	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has joined #python
2014-05-28 22:12:53	<--	Vutral (~ss@mirbsd/special/Vutral) has quit (Ping timeout: 265 seconds)
2014-05-28 22:13:04	-->	Gambit- (~Gambit-@unaffiliated/gambit-) has joined #python
2014-05-28 22:13:21	dash	kingplusplus: show us the file the error occurs in
2014-05-28 22:13:22	<--	QBob (~qbob@amarok/developer/qbob) has quit (Ping timeout: 258 seconds)
2014-05-28 22:13:26	dash	andenixa: what does your program do?
2014-05-28 22:13:45	kingplusplus	dash it scraps international sites
2014-05-28 22:14:01	dash	kingplusplus: ok. are you using scrapy?
2014-05-28 22:14:50	andenixa	dash: its a server that serves clients through socked connections
2014-05-28 22:15:06	dash	andenixa: ok. and it's written in python?
2014-05-28 22:15:15	andenixa	dash its written on c++
2014-05-28 22:15:21	dash	andenixa: Oh :(
2014-05-28 22:15:22	kingplusplus	dash know, am new to programming nearly 3months so i decided to try something but with scrapy it can be better but its worth learning lxml and requests plus now am getting to know unicode errors which are not in my book
2014-05-28 22:15:27	kingplusplus	no**
2014-05-28 22:15:28	dash	andenixa: i would try to fix that first
2014-05-28 22:15:32	dash	kingplusplus: OK
2014-05-28 22:15:32	-->	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has joined #python
2014-05-28 22:15:41	andenixa	dash I want to embed python inside
2014-05-28 22:15:47	dash	kingplusplus: well, we can help you fix the code only if you show it to us :)
2014-05-28 22:15:55	dash	andenixa: i recommend not doing that at all
2014-05-28 22:16:06	<--	mordonez (~mordonez@190.102.132.14) has quit (Quit: Computer has gone to sleep.)
2014-05-28 22:16:06	kingplusplus	dash no probs
2014-05-28 22:16:10	andenixa	dash Why?
2014-05-28 22:16:25	dash	andenixa: it's complicated, error-prone, and overall unnecessary
2014-05-28 22:16:34	-->	mordonez (~mordonez@190.102.132.11) has joined #python
2014-05-28 22:16:38	andenixa	I will be easier to provide python scripting
2014-05-28 22:16:39	dash	andenixa: what does your program do?
2014-05-28 22:16:55	<--	snyp (~snyp@223.29.204.2) has quit (Quit: Leaving)
2014-05-28 22:17:01	andenixa	dash its a like a very specialized HTTP server
2014-05-28 22:17:14	dash	andenixa: it will probably be easier long-term to write that in python rather than keep it in C++
2014-05-28 22:17:30	dash	andenixa: is your workload cpu-bound?
2014-05-28 22:17:43	andenixa	dash impossible its a way mature project maintained for over than 10 years
2014-05-28 22:17:48	andenixa	dash not really
2014-05-28 22:17:51	kingplusplus	dash here it is http://pastebin.com/vwjh9QRt
2014-05-28 22:17:54	infobob	http://paste.pound-python.org/show/mspiKqs9TZAoXjCu8Dn1/ (repasted for kingplusplus)
2014-05-28 22:17:55	dash	andenixa: oh. which project?
2014-05-28 22:18:00	andenixa	dash its not cpu-bound
2014-05-28 22:18:06	<--	andenixa (~chatzilla@79-172-125-85.dyn.broadband.iskratelecom.ru) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 29.0.1/20140506152807])
2014-05-28 22:18:13	<--	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has quit (Client Quit)
2014-05-28 22:18:15	<--	cesar_bo (uid17588@gateway/web/irccloud.com/x-rifnwtpddcqykgns) has quit (Quit: Connection closed for inactivity)
2014-05-28 22:18:36	<--	rybczynski (~rybczynsk@unaffiliated/rybczynski) has quit (Quit: Lost terminal)
2014-05-28 22:18:45	<--	cirwin (~Adium@wiktionary/ConradIrwin) has quit (Quit: Leaving.)
2014-05-28 22:18:57	dash	kingplusplus: OK
2014-05-28 22:19:08	<--	jalaziz (~jalaziz@76-217-208-122.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 255 seconds)
2014-05-28 22:19:36	Tecan	lsof needs a gui
2014-05-28 22:19:45	dash	i need a pony
2014-05-28 22:20:00	dash	kingplusplus: 'contact' is a unicode string, since it came from the html
2014-05-28 22:20:11	Tecan	dash how large ?
2014-05-28 22:20:16	<--	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has quit (Ping timeout: 258 seconds)
2014-05-28 22:20:45	dash	kingplusplus: so, you need to encode it before putting it in the byte string you're logging
2014-05-28 22:20:49	<--	mordonez (~mordonez@190.102.132.11) has quit (Ping timeout: 252 seconds)
2014-05-28 22:21:26	-->	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has joined #python
2014-05-28 22:21:33	-->	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-28 22:21:43	kingplusplus	dash, hence do i need to uncomment line 25
2014-05-28 22:21:45	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-28 22:21:46	kingplusplus	?
2014-05-28 22:22:04	<--	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has quit (Remote host closed the connection)
2014-05-28 22:23:15	dash	Tecan: normal size, between 0.8 and 1.2 pony³
2014-05-28 22:24:04	kingplusplus	dash, it seem to have raised problem before when line 25 was not commented... after this fix i do need to read unicode, ascii, utf8 and byte code am not too familiar about which is which
2014-05-28 22:24:15	dash	kingplusplus: that's unrelated
2014-05-28 22:24:24	dash	kingplusplus: as you can see, 'logs' is not in the traceback
2014-05-28 22:24:29	dash	so it is not part of this error at all
2014-05-28 22:25:17	-->	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has joined #python
2014-05-28 22:25:19	<--	Zigtalk (~Zigtalk@cpe-72-182-60-182.austin.res.rr.com) has quit (Remote host closed the connection)
2014-05-28 22:25:23	-->	johnkevinmbasco (~johnkevin@203.215.121.216) has joined #python
2014-05-28 22:25:49	-->	Vutral (~ss@mirbsd/special/Vutral) has joined #python
2014-05-28 22:25:59	-->	jalaziz (~jalaziz@76-217-208-122.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-28 22:26:05	<--	Alina-malina (Alina-mali@unaffiliated/alina-malina) has quit (Ping timeout: 264 seconds)
2014-05-28 22:26:13	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Quit: Lost terminal)
2014-05-28 22:26:38	<--	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-05-28 22:27:04	<--	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has quit (Remote host closed the connection)
2014-05-28 22:27:21	Fnatic9910	regex doubt: http://pastebin.com/jrnftqp3
2014-05-28 22:27:25	infobob	http://paste.pound-python.org/show/epFSxiqgDOLonYsbXIiM/ (repasted for Fnatic9910)
2014-05-28 22:28:12	<--	oleo (~oleo@xdsl-78-35-146-104.netcologne.de) has quit (Ping timeout: 240 seconds)
2014-05-28 22:28:22	-->	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has joined #python
2014-05-28 22:28:44	-->	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has joined #python
2014-05-28 22:28:45	-->	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-28 22:28:46	dash	Fnatic9910: do not use regexes to extract data from html, use lxml.html instead
2014-05-28 22:28:48	-->	kellevan (~kellevan@S01061c7ee53bea4b.ok.shawcable.net) has joined #python
2014-05-28 22:30:01	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-28 22:30:03	<--	MOSCOW (vladivosto@unaffiliated/vladivostok) has left #python ("Leaving")
2014-05-28 22:30:15	Fnatic9910	dash: i was reading the documentaion and got this doubt
2014-05-28 22:30:20	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-28 22:30:45	kingplusplus	dash, well, its hard to replicate the problem because the program has gone through thousands of site b4 it got to this halt... i hate to bug ppl so i will say this is my last question since i am bugging i guess... so doing ...  contact = contact.encode('utf-8').strip() under line 251 within the loop should fix it right?
2014-05-28 22:31:06	<--	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has quit (Remote host closed the connection)
2014-05-28 22:31:32	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-28 22:31:47	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-28 22:32:09	<--	russw (~russ@bas1-ottawa01-3096651492.dsl.bell.ca) has quit (Ping timeout: 258 seconds)
2014-05-28 22:32:18	<--	johnkevinmbasco (~johnkevin@203.215.121.216) has quit (Ping timeout: 240 seconds)
2014-05-28 22:32:25	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 22:32:53	dash	Fnatic9910: documentation of what?
2014-05-28 22:32:56	dash	kingplusplus: yes
2014-05-28 22:33:44	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-28 22:33:52	kingplusplus	dash thanks, you are a saviour
2014-05-28 22:33:54	<--	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Manjaro-KDE user leaving!)
2014-05-28 22:34:05	kellevan	kingplusplus: dont worry about bugging people, we sit in irc for a reason :)
2014-05-28 22:34:05	Fnatic9910	dash: python regular expression
2014-05-28 22:34:35	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 22:34:48	dash	Fnatic9910: what do you want to do?
2014-05-28 22:35:38	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 240 seconds)
2014-05-28 22:36:03	kingplusplus	kellevan, yeah i know, i wish i can be here too to help and not ask... eventhough it hurts my head it is not working... the moment dash said 'yes' am like WOW so it is finally going to work... programming is fun and i wish i can swap my head with you guys here :)'
2014-05-28 22:36:28	-->	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-28 22:36:41	-->	cirwin (~Adium@wiktionary/ConradIrwin) has joined #python
2014-05-28 22:36:55	-->	shunya_chakra (~shunya@59.89.11.50) has joined #python
2014-05-28 22:37:19	kellevan	here but for hours of time invested, sit you :) stick with amigo
2014-05-28 22:37:27	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 22:37:30	shunya_chakra	comprehensions are awesome!!!
2014-05-28 22:37:34	<--	nande (~quassel@190.183.4.91) has quit (Read error: Connection reset by peer)
2014-05-28 22:38:13	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 22:38:57	--	Salvakiya is now known as salvakiya_afk
2014-05-28 22:39:15	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-28 22:39:27	kingplusplus	dash, kellevan i don't get feedback for my code am trying to get better so i can get a job i don't know if with what i have done anyone can give feedback --- so i know what i did a little right and what i should improve... i have this feeling employers would look down on me as a no brainer if i am on irc trying to solve their problem
2014-05-28 22:40:11	preaction	i'd look down on you only if you couldn't (or didn't want) ask anyone for help/feedback/input
2014-05-28 22:40:16	kingplusplus	probably, they would block irc on their networks... bad for me
2014-05-28 22:40:40	preaction	yeah, that's a tough one. i frequently wish i could ask the experts while i'm at work :(
2014-05-28 22:40:48	-->	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has joined #python
2014-05-28 22:41:01	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Client Quit)
2014-05-28 22:41:33	<--	frothnicator (~frothy@unaffiliated/frothnicator) has quit (Quit: Leaving.)
2014-05-28 22:41:48	<--	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2014-05-28 22:41:54	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-28 22:42:01	kingplusplus	preaction, so what happens when you run into problems? Do just postpone it till you get home so you can ask and find out?
2014-05-28 22:42:05	-->	oleo (~oleo@xdsl-78-35-161-221.netcologne.de) has joined #python
2014-05-28 22:42:06	Fnatic9910	dash: in the searchObj if we dont use '?' then it matches the whole string i.e. '<H1>title</H1>' ( that i understood) but when we put '?' in searchObj then i am not able to understand how is '*?' behaving together and i won't be able to use *?  anywhere
2014-05-28 22:42:15	<--	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has quit (Remote host closed the connection)
2014-05-28 22:42:56	preaction	kingplusplus: usually i come up with an answer that is "good enough", though it takes a lot longer. don't be afraid to be wrong, a lot
2014-05-28 22:43:04	kellevan	you seem like a motivated dude, and your head is in the right place... they'd be super impressed if they knew you took your time to come seek nerds for assistance (i would)... one thing you can do to bolster your chances is to let them know you've committed x amount of daily time to learning python... two resources i recommend are codecademy.com and learnpythonthehardware.org/book
2014-05-28 22:43:44	preaction	Fnatic9910: with .*?, the ? make it "non-greedy", so it will try to match the fewest number of characters as possible. still, though, use an HTML parser to parse HTML
2014-05-28 22:44:03	kellevan	anywho, keep the questiosn coming and we'll get ya through this first one :)
2014-05-28 22:44:06	<--	robvdl (~robvdl@2404:130:0:1000:280c:cfb2:6b78:4e7f) has quit (Quit: Leaving)
2014-05-28 22:44:40	-->	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has joined #python
2014-05-28 22:45:42	kingplusplus	kellevan thanks, i have finished codeacademy excercise and learn python the hardway book so far -- unicode wasn't discussed which i don't expect them to because they can't put it all in one book realworld is different
2014-05-28 22:46:20	-->	nande (~quassel@190.183.4.91) has joined #python
2014-05-28 22:46:41	<--	northfurr (~northfurr@unaffiliated/northfurr) has quit (Quit: northfurr)
2014-05-28 22:46:54	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Quit: aljohri)
2014-05-28 22:47:46	Fnatic9910	preaction thanks
2014-05-28 22:47:51	preaction	most of the time, character encoding doesn't matter. but when it does, it's a right pain in the arse...
2014-05-28 22:48:14	-->	CodePulsar (~code@unaffiliated/shiningthrough) has joined #python
2014-05-28 22:49:33	<--	nande (~quassel@190.183.4.91) has quit (Read error: Connection reset by peer)
2014-05-28 22:50:14	-->	Josse|BNC (uid29288@gateway/web/irccloud.com/x-smgoqsdpghvugdwz) has joined #python
2014-05-28 22:50:38	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-28 22:51:24	-->	lony (~user@183.82.3.32) has joined #python
2014-05-28 22:51:36	-->	dark_lord (~Harsh@123.239.86.71) has joined #python
2014-05-28 22:52:13	<--	Fnatic9910 (7aa109f4@gateway/web/freenode/ip.122.161.9.244) has quit (Quit: Page closed)
2014-05-28 22:52:37	<--	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has quit (Remote host closed the connection)
2014-05-28 22:52:43	<--	eevee (~eevee@perushian.veekun.com) has quit (Ping timeout: 252 seconds)
2014-05-28 22:52:56	-->	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has joined #python
2014-05-28 22:53:16	<--	xcesariox (~xcesariox@101.127.20.151) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 22:54:38	-->	eevee (~eevee@perushian.veekun.com) has joined #python
2014-05-28 22:54:51	-->	nande (~quassel@190.183.4.91) has joined #python
2014-05-28 22:55:02	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Client Quit)
2014-05-28 22:57:29	<--	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2014-05-28 22:58:26	-->	johnkevinmbasco (~johnkevin@203.215.121.216) has joined #python
2014-05-28 22:58:31	-->	macieks (~macieks@ip-222-135.ists.pl) has joined #python
2014-05-28 22:59:52	<--	Gambit- (~Gambit-@unaffiliated/gambit-) has quit (Ping timeout: 245 seconds)
2014-05-28 23:01:20	<--	Arctico (~Arctico@12.175.218.87.dynamic.jazztel.es) has quit (Quit: Saliendo)
2014-05-28 23:03:36	-->	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has joined #python
2014-05-28 23:03:49	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined #python
2014-05-28 23:04:03	-->	spade (~spade@109.201.154.191) has joined #python
2014-05-28 23:04:24	<--	cloudster (~cloudster@cloudster.wks.krivokuca.net) has quit (Quit: Screw you hippies, I'm going home!)
2014-05-28 23:04:27	<--	lasers (~lasers@unaffiliated/lasers) has quit (Ping timeout: 276 seconds)
2014-05-28 23:04:35	-->	chaobin (chaobin@nat/redhat/x-wvkevkuygdhobtkc) has joined #python
2014-05-28 23:05:29	-->	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has joined #python
2014-05-28 23:06:01	-->	tech-desk (~tech@nat5.broadband.bnmedia.ru) has joined #python
2014-05-28 23:06:03	<--	Vutral (~ss@mirbsd/special/Vutral) has quit (Ping timeout: 265 seconds)
2014-05-28 23:06:12	<--	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has quit (Ping timeout: 240 seconds)
2014-05-28 23:06:17	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Ping timeout: 252 seconds)
2014-05-28 23:06:39	<--	shunya_chakra (~shunya@59.89.11.50) has quit (Ping timeout: 252 seconds)
2014-05-28 23:08:00	-->	codex0 (~anonymous@173.254.198.179) has joined #python
2014-05-28 23:08:10	-->	Lattes (~j@gateway/tor-sasl/lattes) has joined #python
2014-05-28 23:09:52	<--	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has quit (Ping timeout: 245 seconds)
2014-05-28 23:10:30	<--	Burgundy (~burgundy@188.25.126.27) has quit (Remote host closed the connection)
2014-05-28 23:11:33	-->	Vutral (~ss@mirbsd/special/Vutral) has joined #python
2014-05-28 23:11:58	<--	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has quit (Quit: ArcTanSusan)
2014-05-28 23:12:10	<--	sepero (~none@117.sub-75-202-236.myvzw.com) has quit (Disconnected by services)
2014-05-28 23:12:28	-->	sepero (~none@7.sub-75-203-116.myvzw.com) has joined #python
2014-05-28 23:13:42	--	Derpitiz0r is now known as CAPACITATOR
2014-05-28 23:13:57	-->	bal1 (~Thunderbi@86.125.63.66) has joined #python
2014-05-28 23:14:05	-->	lemarc (~scotty@123.252.212.13) has joined #python
2014-05-28 23:14:14	-->	cloudster (~cloudster@cloudster.wks.krivokuca.net) has joined #python
2014-05-28 23:14:22	lemarc	is there any module to save excel sheet as image?
2014-05-28 23:14:52	-->	Wytshadow (~Wytshadow@unaffiliated/wytshadow) has joined #python
2014-05-28 23:15:03	<--	nande (~quassel@190.183.4.91) has quit (Remote host closed the connection)
2014-05-28 23:15:29	<--	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has quit (Remote host closed the connection)
2014-05-28 23:16:00	-->	EcoGiko (~EcoGiko@unaffiliated/ecogiko) has joined #python
2014-05-28 23:16:14	<--	introom (~introom@wf078-225.ust.hk) has quit (Ping timeout: 258 seconds)
2014-05-28 23:16:31	-->	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has joined #python
2014-05-28 23:16:35	-->	n1x (~n1x@unaffiliated/n1xnc0d3) has joined #python
2014-05-28 23:20:41	-->	iLiFo (~david@41.23.107.130) has joined #python
2014-05-28 23:20:44	-->	nande (~quassel@190.183.4.91) has joined #python
2014-05-28 23:20:55	-->	Alina-malina (Alina-mali@unaffiliated/alina-malina) has joined #python
2014-05-28 23:22:26	<--	reference (~reference@122.172.198.131) has quit (Read error: Connection reset by peer)
2014-05-28 23:22:55	Lacriatch	lemarc: Not that I'm aware of. That's a very specific thing you want to do.
2014-05-28 23:23:21	-->	legless399 (~samtur@195.81.28.46) has joined #python
2014-05-28 23:24:17	<--	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 258 seconds)
2014-05-28 23:26:28	--	salvakiya_afk is now known as Salvakiya
2014-05-28 23:26:49	<--	Tecan (~fasdf@unaffiliated/unit41) has quit (Ping timeout: 252 seconds)
2014-05-28 23:27:27	-->	lasers (~lasers@unaffiliated/lasers) has joined #python
2014-05-28 23:28:03	<--	glebihan_ (~glebihan@unaffiliated/glebihan) has quit (Remote host closed the connection)
2014-05-28 23:28:36	<--	mmikeym (~mikeym@184.70.65.118) has quit (Ping timeout: 240 seconds)
2014-05-28 23:30:13	-->	glebihan_ (~glebihan@unaffiliated/glebihan) has joined #python
2014-05-28 23:30:40	-->	foxygrandpa (chubbychub@bb116-15-18-75.singnet.com.sg) has joined #python
2014-05-28 23:30:55	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-28 23:31:07	foxygrandpa	hi, is this the place to seek help for pip installation?
2014-05-28 23:31:08	-->	`mist (~mist@c-74fa70d5.034-4-67626721.cust.bredbandsbolaget.se) has joined #python
2014-05-28 23:31:25	<--	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-28 23:31:40	--	CodePulsar is now known as CodePulsaro
2014-05-28 23:31:44	`mist	Hey guys, can i write "for filename in files:  if os.path.isfile(failedFolder + '/' + filename):" in one line?
2014-05-28 23:31:44	--	CodePulsaro is now known as CodePulsar
2014-05-28 23:32:43	<--	supernaut (~supernaut@unaffiliated/supernaut) has quit (Ping timeout: 258 seconds)
2014-05-28 23:32:43	<--	Ex0deus (~Exodeus@unaffiliated/ex0deus) has quit (Ping timeout: 258 seconds)
2014-05-28 23:33:21	<--	gopar (~gopar@c-76-102-222-91.hsd1.ca.comcast.net) has quit (Quit: Leaving)
2014-05-28 23:34:33	<--	dvx (~dvx@mail.genicad.cz) has quit (Read error: Connection reset by peer)
2014-05-28 23:34:39	-->	mcsontos (mcsontos@nat/redhat/x-wrrzwsisgmexhksz) has joined #python
2014-05-28 23:34:42	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 23:34:43	lemarc	Lacriatch, yeah even I couldnt find anything, anyways thanks
2014-05-28 23:35:25	Lacriatch	`mist: Have a look at list comprehensions
2014-05-28 23:35:32	Lacriatch	foxygrandpa: What's the problem?
2014-05-28 23:35:45	dash	foxygrandpa: sure. what OS?
2014-05-28 23:36:49	foxygrandpa	I'm using windows 7. I've downloaded pip, but the problem is that when I type pip into cmd, nothing is returned. I'm thinking it may have to do with the environment variables.
2014-05-28 23:37:34	-->	timkofu (~timkofu@196.200.18.30) has joined #python
2014-05-28 23:37:38	timkofu	hello
2014-05-28 23:37:46	-->	olskolirc (~olskolirc@gateway/tor-sasl/olskolirc) has joined #python
2014-05-28 23:37:47	-->	pld (~pld@unaffiliated/pld) has joined #python
2014-05-28 23:37:48	-->	skaflem (~skaflem@ti0099a430-0965.bb.online.no) has joined #python
2014-05-28 23:38:21	olskolirc	I'm trying to install pylibpcap from source.  Can someone look at my paste please? https://www.refheap.com/86049
2014-05-28 23:39:17	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-28 23:39:52	<--	cnj (cnj@unaffiliated/cnj) has quit (Quit: Quit)
2014-05-28 23:40:23	-->	cnj (cnj@unaffiliated/cnj) has joined #python
2014-05-28 23:40:51	Lacriatch	foxygrandpa: The problem is the PATH variable. Do you know how to set that up?
2014-05-28 23:41:43	-->	introom (~introom@wf127-005.ust.hk) has joined #python
2014-05-28 23:41:49	Lacriatch	olskolirc: You need the Python development package installed
2014-05-28 23:42:10	foxygrandpa	Lacriatch: I've tried to modify the PATH variables for both pip and django, but I can't seem to get it right. I know how to access it, but I don't know what's the right address to give.
2014-05-28 23:42:29	`mist	i don't understand the "expression" part Lacriatch =/ been trying to read this: http://www.pythonforbeginners.com/basics/list-comprehensions-in-python
2014-05-28 23:42:33	olskolirc	oh ok Lacriatch and what is the package called there is so many
2014-05-28 23:43:12	-->	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has joined #python
2014-05-28 23:43:39	<--	koz (~koz@2601:8:a900:88a:1e6f:65ff:fe31:7fcb) has quit (Quit: koz)
2014-05-28 23:43:51	Lacriatch	Wait `mist : Basically you do [<call function or something here on x> for x in <list> if x.blah] type thing
2014-05-28 23:44:20	Lacriatch	olskolirc: Depends entirely on your OS. If you're on anything other than Arch I can't really help you there. Just search your package manager.
2014-05-28 23:45:07	`mist	so i specificly have to call a function?
2014-05-28 23:45:16	-->	jargon (~jargon@unaffiliated/jargon-) has joined #python
2014-05-28 23:45:45	`mist	i can just do for x in list if x.blah do these 10 things. i have to put the 10 things in a fucntion?
2014-05-28 23:45:53	<--	dt3k (~dt3k@unaffiliated/dt3k) has quit (Ping timeout: 264 seconds)
2014-05-28 23:45:56	<--	dark_lord (~Harsh@123.239.86.71) has quit (Quit: Leaving)
2014-05-28 23:46:02	`mist	can't*
2014-05-28 23:46:25	salparadise	`mist: what are 10 things?
2014-05-28 23:46:35	olskolirc	would this be it Lacriatch libpython2.7-dev I'm on ubuntu
2014-05-28 23:46:49	Lacriatch	`mist: Or you can do it in a normal for loop with two lines.
2014-05-28 23:47:11	`mist	i'll just indent the entire thing instead with the normal loops
2014-05-28 23:47:18	`mist	sigh =(
2014-05-28 23:47:22	Lacriatch	olskolirc: Probably. I have no clue with Ubuntu packages. Their naming schemes are insane.
2014-05-28 23:47:25	olskolirc	oh I found it Lacriatch python-dev
2014-05-28 23:48:06	Lacriatch	foxygrandpa: Can't really help I'm afraid, you'll need someone who uses Windows :
2014-05-28 23:48:18	 *	Lacriatch doesn't touch it except for gaming
2014-05-28 23:48:31	Lacriatch	(Because of things like this making it hell to develop on)
2014-05-28 23:49:24	foxygrandpa	Lacriatch: Ah okay I see. Thanks for your help anyway.
2014-05-28 23:49:53	<--	bgs100 (~bgs@unaffiliated/bgs100) has quit (Quit: bgs100)
2014-05-28 23:51:01	<--	ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 252 seconds)
2014-05-28 23:52:47	<--	EntropyArchive (~Thunderbi@cpe-071-071-210-252.carolina.res.rr.com) has quit (Quit: EntropyArchive)
2014-05-28 23:53:02	-->	exicer_ (~exicer@cpc1-cmbg14-2-0-cust355.5-4.cable.virginm.net) has joined #python
2014-05-28 23:53:11	olskolirc	yeah it worked Lacriatch thanks!
2014-05-28 23:53:33	-->	supernaut (~supernaut@unaffiliated/supernaut) has joined #python
2014-05-28 23:54:12	<--	pikaren (~ren@unaffiliated/pikaren) has quit (Quit: Lost terminal)
2014-05-28 23:55:06	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-28 23:55:39	-->	ValicekB_ (~tbox@dot.snat.baz.cz) has joined #python
2014-05-28 23:55:50	-->	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has joined #python
2014-05-28 23:56:35	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-28 23:57:17	--	ValicekB_ is now known as ValicekB
2014-05-28 23:57:48	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-28 23:58:09	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-28 23:59:00	<--	olskolirc (~olskolirc@gateway/tor-sasl/olskolirc) has quit (Ping timeout: 272 seconds)
2014-05-28 23:59:51	-->	shp11 (~shp@122.177.162.36) has joined #python
2014-05-29 00:00:19	<--	aquinas (~aquinas_@unaffiliated/aquinas) has quit (Read error: Connection reset by peer)
2014-05-29 00:00:34	-->	eggsmiao (~cat@114.221.213.80) has joined #python
2014-05-29 00:00:43	-->	edofso (~edofso@a80-100-189-109.adsl.xs4all.nl) has joined #python
2014-05-29 00:00:43	<--	Salvakiya (~Salvakiya@pool-74-100-213-151.lsanca.dsl-w.verizon.net) has quit (Ping timeout: 240 seconds)
2014-05-29 00:00:49	<--	wkmanire (~wkmanire@wsip-24-234-189-66.lv.lv.cox.net) has quit (Quit: Leaving.)
2014-05-29 00:00:55	-->	Salvakiya (~Salvakiya@pool-74-100-213-151.lsanca.dsl-w.verizon.net) has joined #python
2014-05-29 00:00:56	<--	cirwin (~Adium@wiktionary/ConradIrwin) has quit (Quit: Leaving.)
2014-05-29 00:01:12	-->	aquinas (~aquinas_@unaffiliated/aquinas) has joined #python
2014-05-29 00:01:17	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-29 00:02:18	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit
2014-05-29 00:02:22	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 00:02:22	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 245 seconds)
2014-05-29 00:03:17	-->	mateNz (~mateNz@unaffiliated/matenz) has joined #python
2014-05-29 00:05:03	<--	Lattes (~j@gateway/tor-sasl/lattes) has quit (Quit: leaving)
2014-05-29 00:05:28	<--	exicer_ (~exicer@cpc1-cmbg14-2-0-cust355.5-4.cable.virginm.net) has left #python
2014-05-29 00:06:37	-->	evil_gordita (robert@ip70-188-56-12.rn.hr.cox.net) has joined #python
2014-05-29 00:06:51	<--	Salvakiya (~Salvakiya@pool-74-100-213-151.lsanca.dsl-w.verizon.net) has quit (Ping timeout: 276 seconds)
2014-05-29 00:10:01	<--	semigloss (~semigloss@d192-24-132-200.try.wideopenwest.com) has quit (Quit: leaving)
2014-05-29 00:11:04	-->	krisd (krisd@gateway/shell/mydevil.net/x-wwpevcmiaprnuekt) has joined #python
2014-05-29 00:12:26	<--	arosen (~arosen@geni/support/arosen) has quit (Quit: Leaving.)
2014-05-29 00:12:44	-->	w0lphBR (~w0lph@177.42.230.191) has joined #python
2014-05-29 00:12:55	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-29 00:13:58	-->	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has joined #python
2014-05-29 00:14:11	<--	w0lphBR (~w0lph@177.42.230.191) has left #python
2014-05-29 00:14:20	<--	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has quit (Ping timeout: 255 seconds)
2014-05-29 00:15:26	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 00:16:02	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 00:16:26	<--	codex0 (~anonymous@173.254.198.179) has quit (Quit: codex0)
2014-05-29 00:17:01	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Client Quit)
2014-05-29 00:17:25	-->	leomark (~leomark@121.96.234.90) has joined #python
2014-05-29 00:17:36	-->	thomi (quassel@conference/canonical/x-kcnedxyspkdzkwlp) has joined #python
2014-05-29 00:17:46	<--	leomark (~leomark@121.96.234.90) has quit (Client Quit)
2014-05-29 00:17:58	<--	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-29 00:18:04	-->	leomark (~leomark@222.127.240.7) has joined #python
2014-05-29 00:18:38	<--	johnkevinmbasco (~johnkevin@203.215.121.216) has quit (Ping timeout: 240 seconds)
2014-05-29 00:21:27	<--	introom (~introom@wf127-005.ust.hk) has quit (Ping timeout: 265 seconds)
2014-05-29 00:21:27	<--	Infant (~thomas@78-56-194-78.static.zebra.lt) has quit (Ping timeout: 265 seconds)
2014-05-29 00:21:34	-->	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has joined #python
2014-05-29 00:21:48	<--	smue (~smue@gateway/tor-sasl/smue) has quit (Ping timeout: 272 seconds)
2014-05-29 00:22:01	-->	johnkevinmbasco (~johnkevin@203.215.121.216) has joined #python
2014-05-29 00:22:12	<--	Ankhers (~user@gateway/tor-sasl/ankhers) has quit (Remote host closed the connection)
2014-05-29 00:22:34	-->	smue (~smue@gateway/tor-sasl/smue) has joined #python
2014-05-29 00:23:53	<--	shackra (~shackra@186.32.192.206) has quit (Read error: Connection reset by peer)
2014-05-29 00:23:55	<--	umair (~umair@182.178.81.161) has quit (Quit: Leaving)
2014-05-29 00:24:11	-->	leomark_ (~leomark@222.127.240.7) has joined #python
2014-05-29 00:24:21	<--	ValicekB (~tbox@dot.snat.baz.cz) has quit (Ping timeout: 265 seconds)
2014-05-29 00:25:26	-->	thebearbear (~iamthebem@adsl-69-105-10-60.dsl.chic01.pacbell.net) has joined #python
2014-05-29 00:26:02	-->	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has joined #python
2014-05-29 00:26:10	-->	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has joined #python
2014-05-29 00:26:53	-->	EntropyArchive (~Thunderbi@cpe-071-071-210-252.carolina.res.rr.com) has joined #python
2014-05-29 00:27:21	<--	donspaulding (~donspauld@71.201.172.43) has quit (Quit: donspaulding)
2014-05-29 00:27:22	<--	leomark (~leomark@222.127.240.7) has quit (Ping timeout: 245 seconds)
2014-05-29 00:27:41	<--	jalaziz (~jalaziz@76-217-208-122.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2014-05-29 00:28:08	-->	yak (~yak@isper-224-24.isper.sk) has joined #python
2014-05-29 00:28:17	-->	introom (~introom@wf224-031.ust.hk) has joined #python
2014-05-29 00:28:19	-->	crucl0 (~alekzp@78.165.95.41) has joined #python
2014-05-29 00:28:39	-->	bollullera (~ana@95.63.152.106) has joined #python
2014-05-29 00:29:32	ffualo	why does numpy's loadtext return an ndarray that's not two dimensional?
2014-05-29 00:29:44	-->	pyon (~user@unaffiliated/pyon) has joined #python
2014-05-29 00:29:44	ffualo	when loading in tab delimited files
2014-05-29 00:30:08	-->	Salvakiya (~Salvakiya@pool-74-100-213-151.lsanca.dsl-w.verizon.net) has joined #python
2014-05-29 00:30:12	-->	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has joined #python
2014-05-29 00:30:40	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 00:31:14	<--	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has quit (Remote host closed the connection)
2014-05-29 00:32:54	-->	le0 (~l30@unaffiliated/le0) has joined #python
2014-05-29 00:33:05	-->	laserbeam (~laserbeam@62.61.128.153.generic-hostname.arrownet.dk) has joined #python
2014-05-29 00:33:05	<--	laserbeam (~laserbeam@62.61.128.153.generic-hostname.arrownet.dk) has quit (Client Quit)
2014-05-29 00:33:25	<--	spal (~susam@pdpc/supporter/active/spal) has quit (Disconnected by services)
2014-05-29 00:33:44	-->	spal_ (~susam@pdpc/supporter/active/spal) has joined #python
2014-05-29 00:34:44	<--	_ken_ (~ken@c-24-2-211-80.hsd1.ct.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-29 00:35:05	<--	tterlet__ (~le_tropic@194.44.148.76) has quit (Ping timeout: 264 seconds)
2014-05-29 00:35:06	-->	avoinea (~avoinea@85.9.55.194) has joined #python
2014-05-29 00:35:40	-->	greenbelt (Elite10504@gateway/shell/elitebnc/x-gdrrsoiiesgrzkmn) has joined #python
2014-05-29 00:35:54	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #python
2014-05-29 00:36:09	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 00:37:06	<--	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has quit (Remote host closed the connection)
2014-05-29 00:37:07	greenbelt	try:
2014-05-29 00:37:08	greenbelt	    from gettext import gettext
2014-05-29 00:37:08	greenbelt	except ImportError:
2014-05-29 00:37:08	greenbelt	    def gettext(message):
2014-05-29 00:37:08	greenbelt	        return message
2014-05-29 00:37:08	greenbelt	_ = gettext
2014-05-29 00:37:23	<--	eggsmiao (~cat@114.221.213.80) has quit (Remote host closed the connection)
2014-05-29 00:37:54	greenbelt	Hello. I want to ask above snippet from optparse module ..
2014-05-29 00:38:02	<--	iamayam (~yamiam@192.3.160.145) has quit (Ping timeout: 252 seconds)
2014-05-29 00:38:10	greenbelt	What mean the last part?
2014-05-29 00:38:16	<--	CrypticByte (~manjaro-k@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Read error: No route to host)
2014-05-29 00:38:49	-->	leomark (~leomark@121.96.234.90) has joined #python
2014-05-29 00:39:36	<--	glebihan_ (~glebihan@unaffiliated/glebihan) has quit (Read error: Connection reset by peer)
2014-05-29 00:40:33	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 00:40:38	-->	dumdedum (~dumdedum@85.251.33.38.dyn.user.ono.com) has joined #python
2014-05-29 00:41:12	<--	leomark (~leomark@121.96.234.90) has quit (Client Quit)
2014-05-29 00:41:18	<--	leomark_ (~leomark@222.127.240.7) has quit (Ping timeout: 240 seconds)
2014-05-29 00:41:18	<--	iLiFo (~david@41.23.107.130) has quit (Ping timeout: 276 seconds)
2014-05-29 00:41:47	<--	Guest98019 (~max@c-71-231-120-93.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-29 00:42:50	-->	iLiFo (~david@41.23.107.130) has joined #python
2014-05-29 00:43:07	-->	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined #python
2014-05-29 00:43:27	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-29 00:43:41	<--	nielsle (~nielsle@3239078-cl69.boa.fiberby.dk) has quit (Ping timeout: 265 seconds)
2014-05-29 00:43:49	k_sze[work]	Is there more concise way to write this: (for color in (fruit.color for fruit in fruit_list))
2014-05-29 00:43:55	<--	SushiDude (~SushiDude@unaffiliated/sushidude) has quit (Ping timeout: 240 seconds)
2014-05-29 00:44:24	<--	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 258 seconds)
2014-05-29 00:44:33	rivarun	k_sze[work]: each fruit has multiple colors or is this a simplified example?
2014-05-29 00:44:46	rivarun	*each color
2014-05-29 00:44:47	k_sze[work]	rivarun: each fruit has only one color.
2014-05-29 00:45:11	rivarun	k_sze[work]: so fruit.color is what you want. doesn't seem that this needs to be nested
2014-05-29 00:46:03	-->	Josse (53863f49@gateway/web/freenode/ip.83.134.63.73) has joined #python
2014-05-29 00:46:08	-->	SushiDude (~SushiDude@unaffiliated/sushidude) has joined #python
2014-05-29 00:46:13	k_sze[work]	rivarun: but it gets slightly more annoying when I need to reference fruit.color multiple times in an outer comprehension.
2014-05-29 00:46:26	Josse	I have downloaded python and pywikipedia, but what i now have to do?
2014-05-29 00:46:42	<--	introom (~introom@wf224-031.ust.hk) has quit (Ping timeout: 258 seconds)
2014-05-29 00:46:44	-->	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-29 00:46:50	-->	sphenxes (~sphenxes@91-119-49-221.dynamic.xdsl-line.inode.at) has joined #python
2014-05-29 00:47:16	rivarun	k_sze[work]: i prefer assigning the generator to a name and then work on a second comprehension
2014-05-29 00:47:20	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-29 00:47:29	<--	Porkepix (~Porkepix@159.175.24.109.rev.sfr.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2014-05-29 00:47:59	-->	nielsle (~nielsle@3239078-cl69.boa.fiberby.dk) has joined #python
2014-05-29 00:48:13	-->	magicflakes (~cellopin@202.78.127.130) has joined #python
2014-05-29 00:48:18	rivarun	k_sze[work]: but if you really have complex things to do, then a for-loop might be more readable
2014-05-29 00:48:24	k_sze[work]	rivarun: something like (fruit.color as color for fruit in fruit_list) would be quite elegant
2014-05-29 00:49:10	rivarun	k_sze[work]: the outer comprehension doesn't know what names the inner comprehension uses. if it did, things would get really complicated and you would start confusing names
2014-05-29 00:49:47	rivarun	k_sze[work]: all the outer one knows is that data is popping out of it
2014-05-29 00:49:52	Josse	I have downloaded python and pywikipedia, but what i now have to do?
2014-05-29 00:50:07	-->	ayaz (~Ayaz@linuxpakistan/ayaz) has joined #python
2014-05-29 00:50:15	<--	ayaz (~Ayaz@linuxpakistan/ayaz) has quit (Max SendQ exceeded)
2014-05-29 00:50:27	-->	bosie (~bosie@unaffiliated/bosie) has joined #python
2014-05-29 00:50:33	rivarun	Josse: can read what you said
2014-05-29 00:50:41	<--	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-05-29 00:51:01	<--	TheFakeazneD525 (~denza252@unaffiliated/denza252) has quit (Quit: Leaving...)
2014-05-29 00:51:02	<--	Gaan (~textual@12-141.207-68.elmore.res.rr.com) has quit
2014-05-29 00:51:34	-->	TheFakeazneD525 (~denza252@unaffiliated/denza252) has joined #python
2014-05-29 00:52:12	bosie	http://pastebin.com/zUvXfAWZ
2014-05-29 00:52:14	infobob	http://paste.pound-python.org/show/QpEEl9zh755ITmHw17CY/ (repasted for bosie)
2014-05-29 00:52:19	bosie	anyone got an idea how to pull that off?
2014-05-29 00:52:44	-->	Mizar (~benjamin@host98-75-static.225-95-b.business.telecomitalia.it) has joined #python
2014-05-29 00:53:33	rivarun	bosie: foo(*foo2(8))
2014-05-29 00:53:43	-->	SJr (~sjr@S0106c43dc7a31386.vf.shawcable.net) has joined #python
2014-05-29 00:53:44	-->	eggsmiao (~cat@114.221.213.80) has joined #python
2014-05-29 00:54:06	bosie	*reads up on \**
2014-05-29 00:54:09	-->	the_rat (~the_rat@217.200.185.254) has joined #python
2014-05-29 00:54:27	-->	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has joined #python
2014-05-29 00:55:06	bosie	is there a name for this concept?
2014-05-29 00:55:25	<--	Josse (53863f49@gateway/web/freenode/ip.83.134.63.73) has left #python
2014-05-29 00:55:30	rivarun	bosie: try not to abuse * and ** too much. they can end up making your code less clear. "argument unpacking"
2014-05-29 00:55:41	-->	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has joined #python
2014-05-29 00:55:43	Lacriatch	bosie: The 'splay' operator
2014-05-29 00:55:45	<--	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has quit (Max SendQ exceeded)
2014-05-29 00:55:46	Lacriatch	*splat
2014-05-29 00:55:49	Lacriatch	Or that
2014-05-29 00:55:54	bosie	ok
2014-05-29 00:56:01	bosie	rivarun: less clear in what sense?
2014-05-29 00:56:04	Lacriatch	https://docs.python.org/2/tutorial/controlflow.html#unpacking-argument-lists
2014-05-29 00:56:24	-->	murk_ (~nnscript@D97A9253.cm-3-3c.dynamic.ziggo.nl) has joined #python
2014-05-29 00:56:33	Draconis	looks like 1 argument rather than a tuple
2014-05-29 00:56:52	bosie	http://pastebin.com/iijMFYFL is the second version prefered?
2014-05-29 00:56:52	infobob	http://paste.pound-python.org/show/mYU9vlZdB5e7QSoa9U9V/ (repasted for bosie)
2014-05-29 00:57:11	bosie	thanks Lacriatch
2014-05-29 00:57:26	Draconis	2nd way looks easier to read to me
2014-05-29 00:57:35	Lacriatch	bosie: Yup, easier to read
2014-05-29 00:57:37	rivarun	bosie: in that sense exactly. you know what your passing and how many
2014-05-29 00:57:45	<--	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has quit (Client Quit)
2014-05-29 00:57:51	Lacriatch	bosie: Especially since you'll give a,b more sensible names
2014-05-29 00:58:01	bosie	ok
2014-05-29 00:58:04	-->	quetzakubica (~redsky@94.42.194.58) has joined #python
2014-05-29 00:58:59	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 00:59:10	-->	Porkepix (~Porkepix@159.175.24.109.rev.sfr.net) has joined #python
2014-05-29 00:59:20	<--	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-05-29 00:59:41	-->	tom94 (~tom@152.78.171.10) has joined #python
2014-05-29 01:00:06	-->	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has joined #python
2014-05-29 01:02:05	bosie	thanks
2014-05-29 01:02:26	<--	qiemem (uid14911@gateway/web/irccloud.com/x-svlvblqtwwdchwrh) has quit (Quit: Connection closed for inactivity)
2014-05-29 01:02:38	<--	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has quit (Client Quit)
2014-05-29 01:03:15	<--	pretty_function (~pretty_fu@61.12.96.10) has quit (Ping timeout: 252 seconds)
2014-05-29 01:03:37	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 252 seconds)
2014-05-29 01:03:47	<--	thmcmahon (ca0e5133@gateway/web/freenode/ip.202.14.81.51) has quit (Quit: Page closed)
2014-05-29 01:04:04	-->	pretty_function (~pretty_fu@61.12.96.10) has joined #python
2014-05-29 01:04:08	-->	jpj (~jpj@115.244.231.180) has joined #python
2014-05-29 01:04:15	<--	jpj (~jpj@115.244.231.180) has quit (Client Quit)
2014-05-29 01:04:21	<--	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has quit (Quit: ArcTanSusan)
2014-05-29 01:04:47	<--	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-05-29 01:05:10	<--	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has quit (Quit: leaving)
2014-05-29 01:05:34	-->	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has joined #python
2014-05-29 01:06:05	<--	johnkevinmbasco (~johnkevin@203.215.121.216) has quit (Ping timeout: 255 seconds)
2014-05-29 01:06:15	-->	reference (~reference@122.167.181.212) has joined #python
2014-05-29 01:06:22	-->	czapla (~czapla@2a02:8109:8380:1298:4578:2c19:352b:33ba) has joined #python
2014-05-29 01:06:36	-->	mulander (uid1766@gateway/web/irccloud.com/x-wsqvmxsddecbvowm) has joined #python
2014-05-29 01:07:02	-->	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has joined #python
2014-05-29 01:07:08	-->	plutoniix (~plutoniix@node-5uo.pool-125-25.dynamic.totbb.net) has joined #python
2014-05-29 01:07:17	<--	Jordan_U (~jordan@c-50-173-14-225.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-29 01:07:39	<--	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has quit (Ping timeout: 252 seconds)
2014-05-29 01:08:11	-->	johnkevinmbasco (~johnkevin@203.215.121.216) has joined #python
2014-05-29 01:08:30	<--	n1x (~n1x@unaffiliated/n1xnc0d3) has quit (Read error: Connection reset by peer)
2014-05-29 01:09:00	-->	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined #python
2014-05-29 01:09:09	-->	nixmaniack (~n1x@unaffiliated/n1xnc0d3) has joined #python
2014-05-29 01:10:36	<--	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has quit (Client Quit)
2014-05-29 01:10:38	<--	gazprom (~gazprom@gateway/tor-sasl/gazprom) has quit (Remote host closed the connection)
2014-05-29 01:10:41	-->	gazprom_ (~gazprom@gateway/tor-sasl/gazprom) has joined #python
2014-05-29 01:10:43	-->	glebihan_ (~glebihan@unaffiliated/glebihan) has joined #python
2014-05-29 01:11:14	<--	czapla (~czapla@2a02:8109:8380:1298:4578:2c19:352b:33ba) has quit (Ping timeout: 265 seconds)
2014-05-29 01:11:14	<--	reference (~reference@122.167.181.212) has quit (Ping timeout: 265 seconds)
2014-05-29 01:12:00	-->	Fare (fare@nat/google/x-pvqwgcnspumvfvpu) has joined #python
2014-05-29 01:12:21	Fare	what's the difference between the iadd and the __iadd__ method? which is "more" primitive?
2014-05-29 01:12:41	-->	hdra (~hdra@121.122.72.21) has joined #python
2014-05-29 01:15:05	-->	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has joined #python
2014-05-29 01:15:43	<--	naught101 (~naught101@uniwide-pat-pool-129-94-8-31.gw.unsw.edu.au) has quit (Ping timeout: 252 seconds)
2014-05-29 01:15:46	-->	wwnnbb (~wwnnbb@85.112.113.2) has joined #python
2014-05-29 01:16:09	<--	wwnnbb (~wwnnbb@85.112.113.2) has quit (Client Quit)
2014-05-29 01:17:11	<--	johnkevinmbasco (~johnkevin@203.215.121.216) has quit (Ping timeout: 252 seconds)
2014-05-29 01:17:13	-->	the_drow (5250ab1f@gateway/web/freenode/ip.82.80.171.31) has joined #python
2014-05-29 01:17:20	<--	Seppy (~Seppy@unaffiliated/silentpenguin) has quit (Ping timeout: 255 seconds)
2014-05-29 01:17:21	the_drow	How do I customize a named tuple?
2014-05-29 01:18:14	<--	FZombie (~gplgeek@pdpc/supporter/student/GPLGeek) has quit (Ping timeout: 255 seconds)
2014-05-29 01:20:35	-->	mn3monic (~xxwa@unaffiliated/mn3monic) has joined #python
2014-05-29 01:21:09	<--	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has quit (Quit: Wychodzi)
2014-05-29 01:21:35	<--	nixmaniack (~n1x@unaffiliated/n1xnc0d3) has quit (Ping timeout: 252 seconds)
2014-05-29 01:21:55	-->	OOPMan (~adamj@41.2.214.60) has joined #python
2014-05-29 01:21:58	-->	umair (~umair@182.178.81.161) has joined #python
2014-05-29 01:22:28	-->	andtorg (~andtorg@ppp-242-158.98-62.inwind.it) has joined #python
2014-05-29 01:22:31	-->	Boudreaux (Boudreaux@71-81-35-196.dhcp.slid.la.charter.com) has joined #python
2014-05-29 01:22:31	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-29 01:22:42	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 01:23:36	-->	johnkevinmbasco (~johnkevin@203.215.121.216) has joined #python
2014-05-29 01:24:01	<--	Lemony (~textual@cpc50-slam6-2-0-cust27.2-4.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 01:24:46	-->	fenre (~fenre@78.213-167-126.customer.lyse.net) has joined #python
2014-05-29 01:25:07	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-29 01:25:36	-->	FunkyAss (~Funky@unaffiliated/funkyass) has joined #python
2014-05-29 01:26:25	<--	EntropyArchive (~Thunderbi@cpe-071-071-210-252.carolina.res.rr.com) has quit (Quit: EntropyArchive)
2014-05-29 01:26:31	<--	TheFakeazneD525 (~denza252@unaffiliated/denza252) has quit (Read error: Connection reset by peer)
2014-05-29 01:27:20	<--	XStatik (~XStatik@173-24-184-195.client.mchsi.com) has quit (Ping timeout: 258 seconds)
2014-05-29 01:27:53	-->	jooools (~ejulfit@194.237.142.7) has joined #python
2014-05-29 01:28:43	aidan	what's the best way to get StagingMediaStorage.foo from 'abas.utils.s3storages.StagingMediaStorage'
2014-05-29 01:28:47	aidan	(the string)
2014-05-29 01:29:00	-->	lucian (~lucian@194.74.244.130) has joined #python
2014-05-29 01:29:12	-->	tyll (~till@fedora/tyll) has joined #python
2014-05-29 01:29:13	<--	FunkyAss (~Funky@unaffiliated/funkyass) has left #python ("Free your mind and your ass will follow")
2014-05-29 01:29:20	<--	pyon (~user@unaffiliated/pyon) has quit (Quit: restart)
2014-05-29 01:30:17	<--	cwillu_borken (~cwillu@216-197-168-135.sktn.hsdb.sasknet.sk.ca) has quit (Ping timeout: 252 seconds)
2014-05-29 01:30:53	Lacriatch	aidan: string.split('.')[-1] + '.foo'
2014-05-29 01:30:53	<--	kushal (~kdas@fedora/kushal) has quit (Quit: Leaving)
2014-05-29 01:31:04	-->	Dharmit (shahdharmi@nat/redhat/x-prdokaguyiygwkat) has joined #python
2014-05-29 01:32:17	-->	pyon (~user@unaffiliated/pyon) has joined #python
2014-05-29 01:32:51	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Leaving)
2014-05-29 01:33:03	aidan	Lacriatch: heh. okay
2014-05-29 01:33:18	-->	SittingShiva (~textual@68.204.154.30) has joined #python
2014-05-29 01:33:21	timkofu	the_drow: what do you mean, modify it?
2014-05-29 01:33:24	aidan	What's the best way to take 'abas.utils.s3storages.StagingMediaStorage' and access the value of the property StagingMediaStorage.foo
2014-05-29 01:33:56	Lacriatch	aidan: Are you asking how to import using a string?
2014-05-29 01:34:32	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined #python
2014-05-29 01:34:44	<--	jleclanche (~adys@unaffiliated/adys) has quit (Remote host closed the connection)
2014-05-29 01:34:47	timkofu	sounds like a library
2014-05-29 01:35:07	<--	cardboard (~cardboard@DHCP-159-220.caltech.edu) has quit (Remote host closed the connection)
2014-05-29 01:35:11	aidan	Lacriatch: I guess ... I don't really care about importing it, I just want to cheekily access the value
2014-05-29 01:35:21	aidan	I can split then importlib.import_class('abas.utils.s3storages')
2014-05-29 01:35:31	<--	nshlol (~unf@wikipedia/nsh) has quit (Ping timeout: 252 seconds)
2014-05-29 01:35:40	-->	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has joined #python
2014-05-29 01:35:52	Lacriatch	aidan: From abas.utils.s3storages import StagingMediaStorage; StagingMediaStorage.foo
2014-05-29 01:36:01	aidan	Lacriatch: right but I have a string
2014-05-29 01:36:24	Lacriatch	Then yeah, just use importlib
2014-05-29 01:36:57	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 245 seconds)
2014-05-29 01:37:14	aidan	so split the class off the end?
2014-05-29 01:37:45	-->	yaw (~yaw@41.215.170.21) has joined #python
2014-05-29 01:37:49	<--	eggsmiao (~cat@114.221.213.80) has quit (Quit: Leaving.)
2014-05-29 01:38:13	-->	eggsmiao (~cat@114.221.213.80) has joined #python
2014-05-29 01:38:20	Lacriatch	I'm honestly not sure. I haven't imported using strings before. Haven't had the need.
2014-05-29 01:38:33	<--	johnkevinmbasco (~johnkevin@203.215.121.216) has quit
2014-05-29 01:38:35	<--	weuolululu (~zhouwe@118.228.153.194) has quit (Remote host closed the connection)
2014-05-29 01:38:39	<--	nande (~quassel@190.183.4.91) has quit (Read error: Connection reset by peer)
2014-05-29 01:38:40	-->	ayaz (~Ayaz@linuxpakistan/ayaz) has joined #python
2014-05-29 01:40:31	anddam	how can I inspect the classes imported from a package?
2014-05-29 01:40:50	anddam	I'm doing    import models    and I'd like to iterate on the imported class
2014-05-29 01:40:55	<--	eggsmiao (~cat@114.221.213.80) has quit (Client Quit)
2014-05-29 01:41:10	aidan	module_path, class_name = dotted_path.rsplit('.', 1) klass = getattr(module, class_name) klass.foo
2014-05-29 01:41:20	aidan	that works, thanks all
2014-05-29 01:41:37	timkofu	aidan: have a look at getattr too
2014-05-29 01:41:41	timkofu	yea that
2014-05-29 01:41:49	-->	JotaK (~ViV@unaffiliated/jotak) has joined #python
2014-05-29 01:42:58	-->	chiui (~chiui@2001:470:71:41b:7024:8e4c:42da:1002) has joined #python
2014-05-29 01:43:11	-->	blipped (~blipped@14.18.147.237) has joined #python
2014-05-29 01:45:07	-->	exicer_ (~exicer@global-1-27.nat.csx.cam.ac.uk) has joined #python
2014-05-29 01:45:15	<--	exicer_ (~exicer@global-1-27.nat.csx.cam.ac.uk) has left #python
2014-05-29 01:45:44	-->	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has joined #python
2014-05-29 01:47:05	-->	deniska (~denis@unaffiliated/deniska) has joined #python
2014-05-29 01:47:36	<--	lemarc (~scotty@123.252.212.13) has quit (Ping timeout: 276 seconds)
2014-05-29 01:48:03	<--	fenre (~fenre@78.213-167-126.customer.lyse.net) has quit (Remote host closed the connection)
2014-05-29 01:48:07	-->	[diablo]_ (~diablo]@unaffiliated/miles/x-000000001) has joined #python
2014-05-29 01:48:12	-->	fenre (~fenre@78.213-167-126.customer.lyse.net) has joined #python
2014-05-29 01:48:23	-->	jleclanche (~adys@unaffiliated/adys) has joined #python
2014-05-29 01:49:19	-->	flub (~flub@host217-41-56-26.in-addr.btopenworld.com) has joined #python
2014-05-29 01:50:32	<--	[diablo]_ (~diablo]@unaffiliated/miles/x-000000001) has quit (Client Quit)
2014-05-29 01:51:47	-->	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has joined #python
2014-05-29 01:52:02	-->	ivonunes (~ivonunes@194.65.5.235) has joined #python
2014-05-29 01:52:39	Alan	anddam: you could probably use the "inspect" module to do that...  something like "inspect.getmembers(module, inspect.isclass)"
2014-05-29 01:53:00	-->	Elek101 (~textual@133.103-240-81.adsl-dyn.isp.belgacom.be) has joined #python
2014-05-29 01:53:04	-->	nixmaniack (~n1x@unaffiliated/n1xnc0d3) has joined #python
2014-05-29 01:53:24	Alan	anddam: you may want to filter that down further to exclude classes imported from other modules
2014-05-29 01:54:18	-->	TheFakeazneD525 (~denza252@unaffiliated/denza252) has joined #python
2014-05-29 01:55:12	<--	shp11 (~shp@122.177.162.36) has quit (Read error: No route to host)
2014-05-29 01:55:23	-->	VladVP (~VladVP@185.37.87.102) has joined #python
2014-05-29 01:56:57	-->	ionelmc (uid20175@gateway/web/irccloud.com/x-fgupwinhcslettvj) has joined #python
2014-05-29 01:57:20	-->	the_rat_ (~the_rat@217.200.185.227) has joined #python
2014-05-29 01:57:59	<--	Terminus- (~null@unaffiliated/terminus) has quit (Ping timeout: 252 seconds)
2014-05-29 01:58:00	<--	the_rat (~the_rat@217.200.185.254) has quit (Ping timeout: 276 seconds)
2014-05-29 01:58:53	<--	Vivekananda (~Vivekanan@69.251.189.107) has quit (Quit: Ex-Chat)
2014-05-29 01:59:32	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 258 seconds)
2014-05-29 02:00:47	<--	Boudreaux (Boudreaux@71-81-35-196.dhcp.slid.la.charter.com) has quit
2014-05-29 02:00:57	-->	shp11 (~shp@122.177.162.36) has joined #python
2014-05-29 02:01:14	<--	txtsd (txtsd@27.0.52.42) has quit (Read error: No route to host)
2014-05-29 02:01:34	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-29 02:01:42	anddam	Alan: thanks, that works
2014-05-29 02:02:16	<--	fenre (~fenre@78.213-167-126.customer.lyse.net) has quit (Remote host closed the connection)
2014-05-29 02:02:52	-->	txtsd (txtsd@27.0.52.42) has joined #python
2014-05-29 02:02:53	<--	bluedreams (~bluedream@24-205-95-34.dhcp.psdn.ca.charter.com) has quit (Remote host closed the connection)
2014-05-29 02:03:57	-->	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has joined #python
2014-05-29 02:04:42	anddam	I needed to fetch the models I'm defining in models.py with SQLA
2014-05-29 02:04:59	anddam	actually their __table__ property
2014-05-29 02:05:09	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 276 seconds)
2014-05-29 02:05:13	anddam	tables = [k[1].__table__ for k in inspect.getmembers(models, inspect.isclass)]
2014-05-29 02:05:40	<--	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has quit (Ping timeout: 272 seconds)
2014-05-29 02:05:42	<--	eeriegeek (~eeriegeek@c-98-244-112-229.hsd1.va.comcast.net) has quit (Quit: Leaving.)
2014-05-29 02:07:32	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 02:07:35	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit (Client Quit)
2014-05-29 02:08:12	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-29 02:10:54	-->	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has joined #python
2014-05-29 02:11:08	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-29 02:11:16	-->	TenshiLyle (~Tenshi@unaffiliated/tenshilyle) has joined #python
2014-05-29 02:11:18	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Max SendQ exceeded)
2014-05-29 02:11:35	pawroman	guys, is there a way to dynamically overwrite function/method signature (from *args, **kwargs to a custom dict of args)
2014-05-29 02:11:45	anddam	I'm using a module that does             except NotImplementedError:
2014-05-29 02:11:47	anddam	            return str(col.type)
2014-05-29 02:11:54	-->	greg_f (~greg@altlinux/developer/greg) has joined #python
2014-05-29 02:11:55	<--	theslow1 (~theslow1@host-173-255-076-249.tcc.on.ca) has quit (Remote host closed the connection)
2014-05-29 02:12:04	anddam	when running I'm getting an AttributeError exception instead
2014-05-29 02:12:11	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-29 02:13:02	anddam	is possibly NotImplementedError following some old recommendation and can I just catch AttributeError there as well or is that a clue that something is broken deeper inside?
2014-05-29 02:13:23	anddam	this is a package programmatically accesssing the SQLA tables to generate a diagram
2014-05-29 02:13:38	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-29 02:14:08	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-29 02:14:29	<--	nihilista (~nihilista@89-164-126-48.dsl.iskon.hr) has quit (Ping timeout: 258 seconds)
2014-05-29 02:14:40	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined #python
2014-05-29 02:14:42	<--	alem0lars (~alem0lars@host118-243-dynamic.13-79-r.retail.telecomitalia.it) has quit (Quit: Going AFK...)
2014-05-29 02:15:38	-->	soixante (b3df81e1@gateway/web/freenode/ip.179.223.129.225) has joined #python
2014-05-29 02:15:51	soixante	hello guys , what does this mean: set(extract_timestamp(user) for user in userobj)           ?
2014-05-29 02:16:08	soixante	Im familiar with sets and for in loops ..... but i've never seen a function before the loop
2014-05-29 02:16:09	<--	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-29 02:16:27	soixante	* function call
2014-05-29 02:16:37	-->	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has joined #python
2014-05-29 02:16:56	-->	nihilista (~nihilista@187-16.dsl.iskon.hr) has joined #python
2014-05-29 02:17:00	<--	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has quit (Ping timeout: 240 seconds)
2014-05-29 02:17:22	pawroman	it's a set created from generator
2014-05-29 02:17:31	pawroman	set() accepts any iterable
2014-05-29 02:17:45	<--	shp11 (~shp@122.177.162.36) has quit (Read error: Connection reset by peer)
2014-05-29 02:17:57	pawroman	soixante: it's like set(i for i in range(10))
2014-05-29 02:18:09	-->	dougjam (~textual@174-20-234-54.mpls.qwest.net) has joined #python
2014-05-29 02:18:13	pawroman	soixante: or set(str(i) for i in range(10))
2014-05-29 02:18:23	soixante	pawroman: thx.... never seen this syntax b4.... will investigate
2014-05-29 02:18:53	<--	umair (~umair@182.178.81.161) has quit (Ping timeout: 264 seconds)
2014-05-29 02:18:58	<--	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Remote host closed the connection)
2014-05-29 02:18:58	<--	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has quit (Ping timeout: 272 seconds)
2014-05-29 02:19:11	-->	umair (~umair@182.178.60.218) has joined #python
2014-05-29 02:19:29	-->	insel (~insel@static.116.253.47.78.clients.your-server.de) has joined #python
2014-05-29 02:19:43	-->	tech2 (~tech2@bb01403756101.pndsl.co.uk) has joined #python
2014-05-29 02:19:54	pawroman	soixante: generator expressions work like list comprehensions, but instead of a list they create a "lazy iterator"
2014-05-29 02:20:37	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 252 seconds)
2014-05-29 02:20:39	pawroman	soixante: this syntax is also perfectly valid for other functions that accept iterables, such as sum, list, etc
2014-05-29 02:20:43	<--	bollullera (~ana@95.63.152.106) has left #python
2014-05-29 02:20:46	-->	eiyalx (~na@anon-34-187.vpn.ipredator.se) has joined #python
2014-05-29 02:21:57	-->	vlt (~nobody@lvps87-230-93-209.dedicated.hosteurope.de) has joined #python
2014-05-29 02:22:05	-->	shp11 (~shp@122.177.162.36) has joined #python
2014-05-29 02:22:16	tech2	Hi all, I have some test code running a subprocess, I have need of something akin to the shell "tee" command that works in place of subprocess.PIPE such that stderr output is intermingled with stdout, but if the returncode is non-zero that I can pull just the stderr data out.
2014-05-29 02:22:34	insel	how can i transform (in python3) a string "foo" stored in a variable into a byte literal b"foo"
2014-05-29 02:22:38	-->	nigelb (~nigel@ubuntu/member/nigelb) has joined #python
2014-05-29 02:22:46	nigelb	I've just seen the weirdest bug.
2014-05-29 02:22:49	-->	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has joined #python
2014-05-29 02:22:57	tech2	insel: foo.encode("utf-8") for example?
2014-05-29 02:23:07	nigelb	using a virtualenv, python.setup.py develop seems to "cache" the source code
2014-05-29 02:23:13	nigelb	i.e. doesn't run the new code.
2014-05-29 02:23:40	tech2	insel: depends which encoding you wanted to use, of course, but utf-8's normally a good start (depending entirely on the platform this code is running :) )
2014-05-29 02:23:41	insel	tech2: ty
2014-05-29 02:24:08	-->	ztane (ztane@lakka.kapsi.fi) has joined #python
2014-05-29 02:24:13	<--	dougjam (~textual@174-20-234-54.mpls.qwest.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 02:24:15	pawroman	tech2: you want to redirect stderr to stdout?
2014-05-29 02:24:20	ztane	hi, was there any change to csv in 3.4?
2014-05-29 02:24:43	ztane	there was something that was dumping binary data, now we get b'' in csv
2014-05-29 02:24:51	ztane	*encoded text strings even
2014-05-29 02:24:52	soixante	pawroman: thx for the input. i'm investigating generators now...  seems pretty cool ahah. im liking python more and more every day ;)
2014-05-29 02:25:07	pawroman	soixante: glad to hear that :)
2014-05-29 02:25:09	-->	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined #python
2014-05-29 02:25:19	-->	adorver (~adorver@58.125.237.138) has joined #python
2014-05-29 02:25:38	-->	freeman_u (~freeman_u@gw.quart-soft.net) has joined #python
2014-05-29 02:25:47	<--	magicflakes (~cellopin@202.78.127.130) has quit (Quit: Sleeping)
2014-05-29 02:26:01	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-29 02:26:27	<--	ciurkut (~ciurkut@89-66-64-111.dynamic.chello.pl) has quit (Quit: Wychodzi)
2014-05-29 02:26:59	<--	adorver (~adorver@58.125.237.138) has quit (Client Quit)
2014-05-29 02:27:17	-->	adorver (~adorver@58.125.237.138) has joined #python
2014-05-29 02:27:37	tech2	pawroman: I have p = subprocess.Popen([some, command, here], stdout=subprocess.PIPE, stderr=subprocess.STDIN), what I want is stdout, stderr = p.communicate()  such that stdout contains all the output (both stdout and stderr) but I _also_ want to be able to extract just the content of stderr when the returncode is non-zero (hence I'd like to replace stderr with a pipe that write to both stderr and a StringIO)
2014-05-29 02:28:02	<--	Ancient (~ancient@irc-nl1.whatbox.ca) has left #python ("Leaving")
2014-05-29 02:29:02	-->	daniel-s (~daniel-s@AToulouse-552-1-156-101.w86-206.abo.wanadoo.fr) has joined #python
2014-05-29 02:29:22	-->	mijicd (~mijicd@cable-188-246-42-190.dynamic.kdsinter.net) has joined #python
2014-05-29 02:29:46	pawroman	tech2: ugh, seems like you'll need to manually read and copy the stream... check out this SO answer: http://stackoverflow.com/questions/2996887/how-to-replicate-tee-behavior-in-python-when-using-subprocess
2014-05-29 02:30:06	-->	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has joined #python
2014-05-29 02:30:39	pawroman	tech2: I don't know if there's any easier way to do this, apart from "manual" copying
2014-05-29 02:31:06	-->	Calle__Lid (~Ailongam@h-111-17.a323.priv.bahnhof.se) has joined #python
2014-05-29 02:31:08	<--	saml (~sam@adfb12c6.cst.lightpath.net) has quit (Ping timeout: 255 seconds)
2014-05-29 02:31:11	-->	rdorgueil (~rd@symfony/developer/hartym) has joined #python
2014-05-29 02:31:37	<--	sq (~mj@unaffiliated/squirrel) has quit (Ping timeout: 252 seconds)
2014-05-29 02:31:38	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-29 02:31:44	tech2	pawroman: damn, thanks. I was kinda hoping there was a way to make a nice clean file-like object which has an actual file number.
2014-05-29 02:31:47	-->	jeffisabelle (~jeffisabe@193.140.108.138) has joined #python
2014-05-29 02:31:52	-->	sec_ (fami@unaffiliated/sec/x-020333) has joined #python
2014-05-29 02:31:59	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-29 02:32:22	pawroman	tech2: maybe you could subclass StringIO to copy any content written to it elsewhere
2014-05-29 02:32:47	<--	Mizar (~benjamin@host98-75-static.225-95-b.business.telecomitalia.it) has left #python
2014-05-29 02:32:58	<--	sepero (~none@7.sub-75-203-116.myvzw.com) has quit (Ping timeout: 240 seconds)
2014-05-29 02:33:10	tech2	pawroman: sadly StringIO is merely file-like (has read/write etc.) but is not an actual file (like pipe, or the result of a call to open) and as such doesn't have a file descriptor.
2014-05-29 02:33:25	CatKiller	Why don't you use a temporary file instead?
2014-05-29 02:33:39	CatKiller	Here I redirect the output of stderr and stdout to temporary files
2014-05-29 02:33:50	CatKiller	when the return code is non zero, I read that to pass the error back to the user
2014-05-29 02:33:56	CatKiller	it's similar to what you want to do
2014-05-29 02:34:10	pawroman	tech2: you could have something like CopyingIO(file_handle), and then it would copy any stuff on write() to that file
2014-05-29 02:34:18	tech2	CatKiller: yeah, I suppose, thanks. Definitely cleaner, just needs a little extra cleanup :)
2014-05-29 02:34:47	pawroman	tech2: you could create a "named pipe" object if you
2014-05-29 02:35:02	pawroman	...are using linux or unix-like system
2014-05-29 02:35:15	-->	z0ran (~z0ran@gateway/tor-sasl/z0ran) has joined #python
2014-05-29 02:35:31	CatKiller	Or rather here you'd need a temporary file for stdout, a StringIO for stderr, and you write the contents of the stringio to stderr as well as to the temp file
2014-05-29 02:35:34	pawroman	but, usually, the simpler the better so an ordinary temp file could also do
2014-05-29 02:35:40	tech2	pawroman: problem with pipes is that they're not "automatic", you need to read from them to prevent buffering from blocking. If you were using x.communicate() that means your process x could just stop when it hit the buffer-limit.
2014-05-29 02:36:11	pawroman	tech2: right...
2014-05-29 02:37:07	-->	SilentGhost (~SilentGho@h51580eb1.seluesp.dyn.perspektivbredband.net) has joined #python
2014-05-29 02:37:29	<--	daniel-s (~daniel-s@AToulouse-552-1-156-101.w86-206.abo.wanadoo.fr) has quit (Ping timeout: 258 seconds)
2014-05-29 02:37:30	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-29 02:37:42	tech2	CatKiller: damn, no, this still doesn't work (tempfile idea) since it means stdout and stderr are still separate. I do need a tee :/ Stupid old tests.
2014-05-29 02:38:04	-->	johnraz (~johnraz@unaffiliated/johnraz) has joined #python
2014-05-29 02:38:13	CatKiller	tech2: I was suggesting one tempfile
2014-05-29 02:38:28	CatKiller	you redirect popen's stdout in it
2014-05-29 02:38:29	tech2	CatKiller: then how would I extract _just_ stderr from that?
2014-05-29 02:38:35	CatKiller	you redirect popen's stderr in a StringIO
2014-05-29 02:38:47	CatKiller	then you read that stringio and "copy" the data to that tempfile
2014-05-29 02:38:52	CatKiller	as well as displaying it to the user
2014-05-29 02:38:59	CatKiller	or whatever you needed stderr only for
2014-05-29 02:39:09	-->	dasmith91 (~david@davidsmith.guru) has joined #python
2014-05-29 02:39:12	CatKiller	essentially, a "manual" tee
2014-05-29 02:39:13	tech2	CatKiller: wouldn't that mean stdout and stderr are out-of-sync with one-another?
2014-05-29 02:39:22	CatKiller	in what sense?
2014-05-29 02:39:24	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 258 seconds)
2014-05-29 02:39:29	CatKiller	ah yes
2014-05-29 02:39:37	CatKiller	stderr would always be displayed after stdout
2014-05-29 02:39:42	CatKiller	maybe not right
2014-05-29 02:40:09	CatKiller	In my case it didn't bother me so much to have them separate (stdout first, stderr after)
2014-05-29 02:41:10	-->	FasTTo (~FasTTo@bl16-177-13.dsl.telepac.pt) has joined #python
2014-05-29 02:41:21	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 02:41:47	tech2	What I want is:  p = Popen([something], stdout=subprocess.PIPE, stderr=Tee(subprocess.STDOUT, some_other_fh)); all_output, _ = p.communicate(); if p.returncode != 0: report_stderr(some_other_fh.read())   return all_output (granted, not perfect, but you get the idea)
2014-05-29 02:42:17	<--	SevenWolf (~SevenWolf@unaffiliated/sevenwolf) has quit (Quit: SevenWolf)
2014-05-29 02:42:46	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Read error: Connection reset by peer)
2014-05-29 02:42:57	-->	Lemony (~textual@80.168.151.198) has joined #python
2014-05-29 02:43:10	-->	saml (~sam@adfb12c6.cst.lightpath.net) has joined #python
2014-05-29 02:43:13	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-29 02:43:44	<--	andtorg (~andtorg@ppp-242-158.98-62.inwind.it) has quit (Ping timeout: 255 seconds)
2014-05-29 02:43:44	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Remote host closed the connection)
2014-05-29 02:43:51	<--	rdorgueil (~rd@symfony/developer/hartym) has quit (Quit: Leaving)
2014-05-29 02:44:05	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-29 02:45:00	<--	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has quit (Ping timeout: 240 seconds)
2014-05-29 02:45:06	-->	yrter (~yrter@unaffiliated/yrter) has joined #python
2014-05-29 02:45:26	<--	falafel (~falafel@pool-72-95-230-92.pitbpa.east.verizon.net) has quit (Remote host closed the connection)
2014-05-29 02:45:59	--	Eyes is now known as Eyess
2014-05-29 02:46:24	<--	Lemony (~textual@80.168.151.198) has quit (Client Quit)
2014-05-29 02:47:00	tech2	Threads... *sigh* :) Thanks for all the help guys.
2014-05-29 02:48:17	<--	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2014-05-29 02:48:36	-->	LeMike (~Thunderbi@ipservice-092-209-110-012.pools.arcor-ip.net) has joined #python
2014-05-29 02:48:39	-->	oubiga (~oubiga@114.225.20.95.dynamic.jazztel.es) has joined #python
2014-05-29 02:48:57	-->	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has joined #python
2014-05-29 02:50:07	<--	Eyess (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Remote host closed the connection)
2014-05-29 02:50:36	-->	iogg (~rpolli@195.223.184.186) has joined #python
2014-05-29 02:51:12	-->	Ancient (~ancient@irc-nl1.whatbox.ca) has joined #python
2014-05-29 02:51:28	<--	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has quit (Quit: Leaving.)
2014-05-29 02:51:45	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-29 02:51:51	-->	emorrow (~Thunderbi@86.44.238.42) has joined #python
2014-05-29 02:52:26	<--	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 258 seconds)
2014-05-29 02:52:49	<--	eiyalx (~na@anon-34-187.vpn.ipredator.se) has quit (Quit: Leaving)
2014-05-29 02:52:53	<--	atolani (Arpit@nat/redhat/x-egqpvsyfqpzirbgk) has quit (Quit: Leaving)
2014-05-29 02:53:04	<--	iLiFo (~david@41.23.107.130) has quit (Quit: Last in Frist out)
2014-05-29 02:53:25	<--	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Remote host closed the connection)
2014-05-29 02:54:33	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-29 02:54:46	-->	mission (~mission@unaffiliated/mission) has joined #python
2014-05-29 02:55:21	-->	krpt (~krpt@ip-93.net-81-220-43.lyon.rev.numericable.fr) has joined #python
2014-05-29 02:56:15	-->	graingert (~graingert@unaffiliated/graingert) has joined #python
2014-05-29 02:56:30	graingert	what's a good way of packaging a dynamicly generated set of code
2014-05-29 02:56:36	<--	tyll (~till@fedora/tyll) has quit (Ping timeout: 265 seconds)
2014-05-29 02:56:37	graingert	eg pyxb bindings
2014-05-29 02:56:44	-->	AcidReign (~AcidReign@unaffiliated/acidreign) has joined #python
2014-05-29 02:56:53	-->	eggsmiao (~cat@114.221.213.80) has joined #python
2014-05-29 02:56:56	graingert	does anyone have a good example of a pyxb created package distributed on PyPI
2014-05-29 02:57:24	-->	likecolacola (~likecolac@54.Red-176-84-0.dynamicIP.rima-tde.net) has joined #python
2014-05-29 02:57:28	<--	hdra (~hdra@121.122.72.21) has quit (Remote host closed the connection)
2014-05-29 02:57:48	<--	Typo (~Typomatic@unaffiliated/typo) has quit (Ping timeout: 240 seconds)
2014-05-29 02:57:58	<--	oubiga (~oubiga@114.225.20.95.dynamic.jazztel.es) has quit (Quit: oubiga)
2014-05-29 02:58:01	<--	wyri (~liz@snf-528332.vm.okeanos.grnet.gr) has quit (Ping timeout: 252 seconds)
2014-05-29 02:58:10	-->	tyll (~till@fedora/tyll) has joined #python
2014-05-29 02:58:18	-->	oubiga (~oubiga@114.225.20.95.dynamic.jazztel.es) has joined #python
2014-05-29 02:58:52	-->	fenre (~fenre@78.213-167-126.customer.lyse.net) has joined #python
2014-05-29 02:58:53	<--	Jucato (~jucato@kde/developer/jucato) has quit (Quit: Konversation terminated!)
2014-05-29 02:59:19	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-29 02:59:48	-->	andtorg (~andtorg@62.196.98.87) has joined #python
2014-05-29 03:00:14	-->	txomon|home (~txomon@unaffiliated/txomon) has joined #python
2014-05-29 03:00:26	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 03:00:30	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-29 03:00:34	<--	soixante (b3df81e1@gateway/web/freenode/ip.179.223.129.225) has quit (Quit: Page closed)
2014-05-29 03:01:02	-->	mangekyo (mangekyo@c211-30-60-1.frank3.vic.optusnet.com.au) has joined #python
2014-05-29 03:01:07	-->	istack (~aomap@mail.xsignnet.com) has joined #python
2014-05-29 03:01:58	<--	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2014-05-29 03:02:07	-->	drvanon (~drvanon@86.85.138.215) has joined #python
2014-05-29 03:02:10	<--	drvanon (~drvanon@86.85.138.215) has left #python
2014-05-29 03:02:18	-->	drvanon (~drvanon@86.85.138.215) has joined #python
2014-05-29 03:02:42	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-29 03:03:28	-->	spergy (~w33nd0x@CPE-124-182-214-254.lns2.way.bigpond.net.au) has joined #python
2014-05-29 03:03:50	<--	chaobin (chaobin@nat/redhat/x-wvkevkuygdhobtkc) has quit (Quit: Leaving...)
2014-05-29 03:03:58	drvanon	Hey guys, I recently found out the nice and proper way to stop threads, but I wrote some code before that (bad boy, bad bad boy) , so now I need to know how I can stop these threads the hard way.
2014-05-29 03:04:02	<--	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has quit (Ping timeout: 245 seconds)
2014-05-29 03:04:16	krpt	Hi, I'm stuck on a novice problem ; http://bpaste.net/show/NE3Urhi40phyf2XMqOh7/ , any help really appreciated :)
2014-05-29 03:04:44	tech2	drvanon: refactor your code to stop them the right way?
2014-05-29 03:05:00	<--	umair (~umair@182.178.60.218) has quit (Ping timeout: 240 seconds)
2014-05-29 03:05:18	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 265 seconds)
2014-05-29 03:05:26	-->	deSilva (~deSilva@c83-254-213-203.bredband.comhem.se) has joined #python
2014-05-29 03:05:52	tech2	krpt: imdb_line = subprocess.check_output(["/bin/grep", "/title", filepath])      perhaps?
2014-05-29 03:06:25	<--	mission (~mission@unaffiliated/mission) has quit (Remote host closed the connection)
2014-05-29 03:06:34	CatKiller	drvanon: Kill the process that spawned them?
2014-05-29 03:07:16	-->	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has joined #python
2014-05-29 03:07:59	krpt	tech2: Thanks a lot !
2014-05-29 03:08:05	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-29 03:09:04	tech2	krpt: the documentation on subprocess has a lot of examples for this kind of thing, it's worth looking over.
2014-05-29 03:09:31	-->	pabardina (~pabardina@128-79-160-198.hfc.dyn.abo.bbox.fr) has joined #python
2014-05-29 03:09:41	<--	emorrow (~Thunderbi@86.44.238.42) has quit (Ping timeout: 258 seconds)
2014-05-29 03:09:51	krpt	tech2: I looked at it , I'm not really awoken yet I guess
2014-05-29 03:10:09	<--	cnj (cnj@unaffiliated/cnj) has quit (*.net *.split)
2014-05-29 03:10:09	<--	jml (~jml@unaffiliated/jml) has quit (*.net *.split)
2014-05-29 03:10:09	<--	deed02392 (~deed02392@ks312604.kimsufi.com) has quit (*.net *.split)
2014-05-29 03:10:09	<--	FabTG (~ftg@AAnnecy-651-1-66-213.w86-209.abo.wanadoo.fr) has quit (*.net *.split)
2014-05-29 03:10:09	<--	wet88 (~wet1988@buntes058.wohnheim.uni-kl.de) has quit (*.net *.split)
2014-05-29 03:10:09	<--	phuh (~phuh@cp66-203-194-42.cp.telus.net) has quit (*.net *.split)
2014-05-29 03:10:10	<--	rickest (~rickest@unaffiliated/rickest) has quit (*.net *.split)
2014-05-29 03:10:10	<--	YS-L (~YS-L@182.19.211.174) has quit (*.net *.split)
2014-05-29 03:10:10	<--	j4m13 (~j4m13@ec2-54-76-37-186.eu-west-1.compute.amazonaws.com) has quit (*.net *.split)
2014-05-29 03:10:19	-->	cnj (cnj@unaffiliated/cnj) has joined #python
2014-05-29 03:10:24	-->	hypha (~hypha@5.63.146.148) has joined #python
2014-05-29 03:10:25	-->	FabTG (~ftg@AAnnecy-651-1-66-213.w86-209.abo.wanadoo.fr) has joined #python
2014-05-29 03:10:27	<--	Elek101 (~textual@133.103-240-81.adsl-dyn.isp.belgacom.be) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2014-05-29 03:10:30	-->	jml (~jml@unaffiliated/jml) has joined #python
2014-05-29 03:10:32	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-29 03:10:34	tech2	krpt: isn't it past midday for you already?
2014-05-29 03:10:35	-->	wet88 (~wet1988@buntes058.wohnheim.uni-kl.de) has joined #python
2014-05-29 03:10:36	<--	gbowyer_ (~gbowyer@cpc22-maid5-2-0-cust171.20-1.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2014-05-29 03:10:39	-->	phuh (~phuh@cp66-203-194-42.cp.telus.net) has joined #python
2014-05-29 03:10:51	drvanon	CatKiller: That works? Okay, I tought that that would only kill the main process
2014-05-29 03:10:53	-->	rickest (~rickest@unaffiliated/rickest) has joined #python
2014-05-29 03:10:56	drvanon	But thanks
2014-05-29 03:11:07	CatKiller	drvanon: I wasn't sure, that's why I added a "?"
2014-05-29 03:11:13	CatKiller	Try it, I think it should
2014-05-29 03:11:17	-->	Zzeiss (~wsy@108.124.104.199) has joined #python
2014-05-29 03:11:20	-->	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has joined #python
2014-05-29 03:11:23	krpt	:) .. yeah yeah .. but it's a not working day in france ;) tech2  , so I overslept some
2014-05-29 03:11:24	<--	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has quit (Ping timeout: 240 seconds)
2014-05-29 03:11:42	-->	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has joined #python
2014-05-29 03:11:55	CatKiller	29th of may not a working day?
2014-05-29 03:12:00	krpt	I'm not familiar with passing '[]' as args to a function yet, now I am
2014-05-29 03:12:16	de-vri-es	something about ascension or something, CatKiller
2014-05-29 03:12:22	CatKiller	I had forgotten this one
2014-05-29 03:13:13	krpt	yes some religious thingie
2014-05-29 03:13:30	tech2	krpt: glad I could help either way :)
2014-05-29 03:13:34	-->	marr (~ccc@78.9.139.204) has joined #python
2014-05-29 03:13:50	krpt	yes thanks
2014-05-29 03:14:06	drvanon	When I use supervisord will it kill it, or just send the 'die' signal?
2014-05-29 03:14:43	CatKiller	No idea drvanon
2014-05-29 03:14:43	greenbelt	What this snippet mean..i found this in optparse in std lib .. " _ = gettext " ... ? What underscore mean ?
2014-05-29 03:15:11	de-vri-es	there's a die signal?
2014-05-29 03:15:25	CatKiller	greenbelt: _ is a variable I guess here
2014-05-29 03:15:39	pawroman	drvanon: supervisor has a configurable signal used to stop processes
2014-05-29 03:15:47	pawroman	by default it's TERM
2014-05-29 03:16:00	<--	Zzeiss (~wsy@108.124.104.199) has quit (Ping timeout: 276 seconds)
2014-05-29 03:16:00	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 276 seconds)
2014-05-29 03:16:12	ionelmc	graingert: just like any other package. what's special about pyxb ?
2014-05-29 03:16:24	-->	emorrow (~Thunderbi@86.44.238.42) has joined #python
2014-05-29 03:16:25	drvanon	pawroman: I know way to little about this stuff, does this mean that it will also kill the threads? (that's the most important thing)
2014-05-29 03:16:27	graingert	ionelmc: auto generated code
2014-05-29 03:16:45	de-vri-es	threads are always killed with their parent process afaik
2014-05-29 03:16:48	greenbelt	CatKiller, yes, i think its seems like that..what is the benefit ?
2014-05-29 03:16:55	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 03:17:01	-->	deed02392 (~deed02392@ks312604.kimsufi.com) has joined #python
2014-05-29 03:17:03	pawroman	drvanon: really depends, usually it should but a process can catch TERM signal and ignore it, or wait for threads to close, etc
2014-05-29 03:17:06	ionelmc	graingert: yeah, what's special about that?
2014-05-29 03:17:17	pawroman	drvanon: KILL signal, however always kills a process in "a brutal way"
2014-05-29 03:17:18	graingert	ionelmc: I want to auto generate the code pre-sdist
2014-05-29 03:17:22	-->	umair (~umair@111.88.13.125) has joined #python
2014-05-29 03:17:24	CatKiller	greenbelt: This SO answer might be right: http://stackoverflow.com/a/5893186/2748028
2014-05-29 03:17:31	-->	j4m13 (~j4m13@ec2-54-76-37-186.eu-west-1.compute.amazonaws.com) has joined #python
2014-05-29 03:17:38	CatKiller	in short: it's just a variable, "_" is a convention for a "throaway variable"
2014-05-29 03:17:40	ionelmc	graingert: you can have your custom sdist command in setup.py
2014-05-29 03:17:57	CatKiller	a variable you're not going to really use
2014-05-29 03:17:59	drvanon	pawroman: Can I use the pid given to me by supervisord to kill the process without supervisord dieing on me?
2014-05-29 03:18:03	CatKiller	just put there for convenience purposes
2014-05-29 03:18:07	the_drow	timkofu: Nevermind, got it
2014-05-29 03:18:08	pawroman	drvanon: look at: http://supervisord.org/configuration.html#program-x-section-settings section "stopsignal"
2014-05-29 03:18:13	-->	Joost`away (~Joost@unaffiliated/joost) has joined #python
2014-05-29 03:18:16	--	Joost`away is now known as Joost
2014-05-29 03:18:18	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 240 seconds)
2014-05-29 03:18:49	pawroman	drvanon: if you kill a process outside supervisor, I guess it will re-start it, treating that stop as unexpected
2014-05-29 03:19:09	ionelmc	graingert: eg http://stackoverflow.com/a/18418524/23658
2014-05-29 03:19:32	greenbelt	CatKiller: so whats us throwaway variable ?
2014-05-29 03:19:33	pawroman	drvanon: but supervisor will continue to run (unless you kill main supervisor process of course)
2014-05-29 03:19:33	--	Joost is now known as Joost`away
2014-05-29 03:19:36	-->	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has joined #python
2014-05-29 03:19:38	<--	venomDev (~venomDev@101.113.9.114) has quit (Ping timeout: 240 seconds)
2014-05-29 03:19:40	greenbelt	Is
2014-05-29 03:19:45	graingert	ionelmc: yeah I knew about that, but hoped to find other packages that generated PYXB bindings
2014-05-29 03:19:54	CatKiller	greenbelt: Ah, by the way, (and I didn't know this), in an interactive shell, "_" also maps to the last executed statement
2014-05-29 03:19:55	<--	deniska (~denis@unaffiliated/deniska) has quit (Quit: Leaving.)
2014-05-29 03:20:21	CatKiller	greenbelt: So, if in an interactive shell you do: "def f(): return 1; f(); print _; it'll print 1
2014-05-29 03:20:35	greenbelt	CatKiller: i can read it in answers
2014-05-29 03:20:52	CatKiller	in answers?
2014-05-29 03:21:12	ionelmc	graingert: it doesn't sound very complicated, it's like 5 lines of code, what's the big deal ?
2014-05-29 03:21:15	greenbelt	CatKiller: in your link above
2014-05-29 03:21:53	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-29 03:22:06	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-29 03:22:07	-->	durut (~root@71-94-128-82.static.mtpk.ca.charter.com) has joined #python
2014-05-29 03:22:40	CatKiller	greenbelt: Ah ok, so you understand the answer?
2014-05-29 03:23:24	greenbelt	CatKiller: some of them..but i dont know what is throwaway variable ..
2014-05-29 03:23:31	-->	NeverGoWest (~Virus2000@93-163-178-102-static.dk.customer.tdc.net) has joined #python
2014-05-29 03:23:32	CatKiller	a variable you don't need
2014-05-29 03:24:00	CatKiller	counter = 0; for _ in someiterable: counter += 10
2014-05-29 03:24:07	CatKiller	an example. Here we don't care about "_"
2014-05-29 03:24:24	-->	gbowyer_ (~gbowyer@cpc22-maid5-2-0-cust171.20-1.cable.virginm.net) has joined #python
2014-05-29 03:24:30	CatKiller	obviously we could have done "len" or len(list(iterable)) or something, but it's just an example
2014-05-29 03:25:00	-->	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has joined #python
2014-05-29 03:25:01	greenbelt	Why its there if not needed ?
2014-05-29 03:25:01	<--	emorrow (~Thunderbi@86.44.238.42) has quit (Ping timeout: 258 seconds)
2014-05-29 03:25:03	ionelmc	graingert: use the generator directly, like here http://sourceforge.net/p/pyxb/code/ci/master/tree/scripts/pyxbgen
2014-05-29 03:25:27	-->	mission (~mission@unaffiliated/mission) has joined #python
2014-05-29 03:25:28	CatKiller	greenbelt: In my example, all we care about is incrementing "counter" by 10 for each iteration of "someiterable"
2014-05-29 03:25:49	CatKiller	So we don't care about what the value of each iteration is
2014-05-29 03:25:53	CatKiller	we only care about doing something
2014-05-29 03:26:03	CatKiller	as you can see above, "_" is defined but never used
2014-05-29 03:26:11	CatKiller	so it's a throwaway variable
2014-05-29 03:26:16	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-29 03:26:23	CatKiller	it's just here for convenience
2014-05-29 03:26:34	-->	a7ndrew (~andrew@psr1257.be) has joined #python
2014-05-29 03:26:38	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 240 seconds)
2014-05-29 03:27:14	<--	flub (~flub@host217-41-56-26.in-addr.btopenworld.com) has left #python ("bye")
2014-05-29 03:27:17	CatKiller	Another SO answer, dedicated to just that: http://stackoverflow.com/a/1419082/2748028
2014-05-29 03:27:55	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Client Quit)
2014-05-29 03:28:12	<--	thomi (quassel@conference/canonical/x-kcnedxyspkdzkwlp) has quit (Ping timeout: 240 seconds)
2014-05-29 03:28:19	CatKiller	It's just a convention anyways, they could have called it "some_unused_variable_name" instead.
2014-05-29 03:28:22	greenbelt	CatKiller: yes, i can understand in for loop context. Here is full part of snipet: "  try:
2014-05-29 03:28:23	greenbelt	from gettext import gettext
2014-05-29 03:28:23	greenbelt	except ImportError:
2014-05-29 03:28:23	greenbelt	def gettext(message):
2014-05-29 03:28:23	greenbelt	 return message
2014-05-29 03:28:23	greenbelt	  _ = gettext
2014-05-29 03:28:24	greenbelt	 "
2014-05-29 03:28:27	CatKiller	My guess is that "_" was much faster
2014-05-29 03:28:55	CatKiller	the identation is all screwed up
2014-05-29 03:29:00	CatKiller	I can't really tell what your code is about
2014-05-29 03:29:10	CatKiller	from topic: Don't paste, use http://bpaste.net/+python
2014-05-29 03:29:33	greenbelt	CatKiller: its from optparse in std lib ..
2014-05-29 03:29:42	greenbelt	Sorry
2014-05-29 03:30:44	greenbelt	CatKillet: here is the paste: http://bpaste.net/show/gIcUmdYm6IWxLGtuxPLn/
2014-05-29 03:31:00	-->	shadok (~muaddib@unaffiliated/shadok) has joined #python
2014-05-29 03:31:01	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Ping timeout: 252 seconds)
2014-05-29 03:31:59	-->	emorrow (~Thunderbi@176.12.107.139) has joined #python
2014-05-29 03:32:17	greenbelt	CatKiller: in the context of code, what the benefit of the last line ? ...
2014-05-29 03:33:29	greenbelt	So "unused_var_names" assigned to gettext ?
2014-05-29 03:34:09	CatKiller	greenbelt: That could be a workaround for the interactive shell
2014-05-29 03:34:24	CatKiller	as I explained earlier, _ also corresponds to the last executed statement
2014-05-29 03:34:56	greenbelt	Is it used for interactive shell ?
2014-05-29 03:34:57	-->	includex (~includex@194.65.5.235) has joined #python
2014-05-29 03:34:58	-->	iamayam (~yamiam@192.3.160.145) has joined #python
2014-05-29 03:35:16	CatKiller	I don't really know here why they put it there. Does it matter?
2014-05-29 03:35:23	<--	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has quit (Quit: WeeChat 0.4.2)
2014-05-29 03:35:39	CatKiller	and no, "_" maps to "gettext"
2014-05-29 03:37:05	nanonyme	Which is pretty horrible design
2014-05-29 03:37:14	<--	petercommand (~peter@unaffiliated/petercommand) has quit (Remote host closed the connection)
2014-05-29 03:37:19	greenbelt	CatKiller: its no matter..it was resides in standard module .. So, i think i'm trying to grasp some basical thing ..
2014-05-29 03:38:08	CatKiller	greenbelt: It's just a variable
2014-05-29 03:38:12	CatKiller	I think is the answer :p
2014-05-29 03:38:19	CatKiller	I don't know why they used that variable particularly
2014-05-29 03:38:26	greenbelt	Okey ..
2014-05-29 03:38:28	CatKiller	They must have had their bad reason
2014-05-29 03:38:36	CatKiller	or good but still looking bad
2014-05-29 03:38:46	CatKiller	It's either some hack/workaround or lazyness
2014-05-29 03:38:49	<--	foxygrandpa (chubbychub@bb116-15-18-75.singnet.com.sg) has quit
2014-05-29 03:38:53	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 03:39:08	<--	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has quit (Ping timeout: 265 seconds)
2014-05-29 03:39:11	greenbelt	So, i would stick with this reason :)
2014-05-29 03:39:12	CatKiller	not everything in the stdlib is of top quality
2014-05-29 03:39:47	timkofu	yea
2014-05-29 03:39:50	CatKiller	Just make sure not to be reading stdlib hoping to pick up best Python practises ;)
2014-05-29 03:40:02	CatKiller	Find good projects well written instead
2014-05-29 03:40:07	-->	Pushkar_Raj (~rajpushka@42.104.27.210) has joined #python
2014-05-29 03:40:24	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit (Client Quit)
2014-05-29 03:40:49	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-29 03:41:28	pawroman	greenbelt: here's a pretty good guide http://docs.python-guide.org/en/latest/
2014-05-29 03:42:04	<--	Pushkar_Raj (~rajpushka@42.104.27.210) has quit (Read error: Connection reset by peer)
2014-05-29 03:42:16	greenbelt	CatKiller: yes, maybe you're right .. But i think, module in stdlib was well tested and written by the experts
2014-05-29 03:42:23	-->	kl0_ (~void@unaffiliated/rf14) has joined #python
2014-05-29 03:42:42	CatKiller	greenbelt: OK but that doesn't make them well *written* ;)
2014-05-29 03:42:55	CatKiller	some probably are, some probably aren't
2014-05-29 03:43:04	-->	ifdm_ (~ifdm@unaffiliated/ifdm/x-0713806) has joined #python
2014-05-29 03:43:06	greenbelt	pawroman: i just ask a simple thing ..
2014-05-29 03:43:30	CatKiller	in any case I find some of them are written by forgoing a lot of conventions that you should find in a good program. So I would recommend against it
2014-05-29 03:43:40	<--	blipped (~blipped@14.18.147.237) has quit
2014-05-29 03:43:42	pawroman	I just got onto "help a fellow beginner" train :)
2014-05-29 03:43:52	CatKiller	^
2014-05-29 03:44:02	<--	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Quit: Lost terminal)
2014-05-29 03:44:03	CatKiller	the link he provided you will allow you to write good code
2014-05-29 03:44:13	CatKiller	and not by looking up a reference that's possibly tainted
2014-05-29 03:44:24	CatKiller	the whole point of this guide is to explain how to write good code ;)
2014-05-29 03:44:24	greenbelt	Its too bloated and in broad range of spectrum ..
2014-05-29 03:44:26	pawroman	yep, there are some good guidelines for writing great python
2014-05-29 03:44:54	pawroman	why? http://docs.python-guide.org/en/latest/writing/style/
2014-05-29 03:44:54	<--	oubiga (~oubiga@114.225.20.95.dynamic.jazztel.es) has quit (Quit: oubiga)
2014-05-29 03:44:56	-->	frostschutz (~frostschu@p4FFF4C3A.dip0.t-ipconnect.de) has joined #python
2014-05-29 03:44:57	<--	yaw (~yaw@41.215.170.21) has quit (Ping timeout: 252 seconds)
2014-05-29 03:45:00	pawroman	it's super helpful IMHO
2014-05-29 03:45:21	pawroman	it's long, but quite well-structured
2014-05-29 03:45:37	greenbelt	Yes, you're right .. Its very good and very helpful ...
2014-05-29 03:45:57	CatKiller	hummmm
2014-05-29 03:46:09	CatKiller	Glad we could be of assistance so...
2014-05-29 03:46:14	-->	Pushkar_Raj (~rajpushka@42.104.27.210) has joined #python
2014-05-29 03:46:48	<--	Pushkar_Raj (~rajpushka@42.104.27.210) has quit (Read error: Connection reset by peer)
2014-05-29 03:46:52	greenbelt	Maybe, others can explain 'the reason' for it ..
2014-05-29 03:47:04	CatKiller	I think others won't care
2014-05-29 03:47:08	-->	Pushkar_Raj (~rajpushka@42.104.27.210) has joined #python
2014-05-29 03:47:10	CatKiller	to explain it further
2014-05-29 03:47:19	greenbelt	:-D
2014-05-29 03:47:20	-->	blipped (~blipped@14.18.147.237) has joined #python
2014-05-29 03:47:27	CatKiller	I think if you really want the intricate reason for using "_" as a variable name, you should ask the developpers directly
2014-05-29 03:47:44	CatKiller	In a way, your question is "Why did they use <variable name> for this variable?"
2014-05-29 03:47:45	CatKiller	:p
2014-05-29 03:47:46	durut	is that code style link for 2.7?
2014-05-29 03:47:53	-->	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has joined #python
2014-05-29 03:47:56	greenbelt	Okey. Thanks CatKiller for the great response ..
2014-05-29 03:47:58	CatKiller	Both I think
2014-05-29 03:48:02	durut	i guess the same principles would apply
2014-05-29 03:48:12	<--	jml (~jml@unaffiliated/jml) has quit (Remote host closed the connection)
2014-05-29 03:48:44	<--	fenre (~fenre@78.213-167-126.customer.lyse.net) has quit (Remote host closed the connection)
2014-05-29 03:48:45	-->	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has joined #python
2014-05-29 03:48:59	<--	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has quit (Ping timeout: 252 seconds)
2014-05-29 03:49:39	<--	mijicd (~mijicd@cable-188-246-42-190.dynamic.kdsinter.net) has quit (Quit: leaving)
2014-05-29 03:49:43	<--	bosie (~bosie@unaffiliated/bosie) has quit (Ping timeout: 252 seconds)
2014-05-29 03:50:13	<--	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-05-29 03:50:21	<--	DrIDK (~quassel@brc29-3-88-189-64-212.fbx.proxad.net) has quit (Remote host closed the connection)
2014-05-29 03:51:22	<--	drvanon (~drvanon@86.85.138.215) has left #python
2014-05-29 03:51:24	<--	Pushkar_Raj (~rajpushka@42.104.27.210) has quit (Read error: Connection reset by peer)
2014-05-29 03:52:17	-->	ddsl (~kvirc@5.254.239.119) has joined #python
2014-05-29 03:53:14	-->	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has joined #python
2014-05-29 03:53:42	-->	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined #python
2014-05-29 03:54:04	-->	taion809 (~Nick@ool-43526e1b.dyn.optonline.net) has joined #python
2014-05-29 03:55:00	<--	NeverGoWest (~Virus2000@93-163-178-102-static.dk.customer.tdc.net) has quit (Ping timeout: 240 seconds)
2014-05-29 03:55:00	<--	blipped (~blipped@14.18.147.237) has quit (Read error: Connection reset by peer)
2014-05-29 03:55:13	<--	localhost00 (~lo@2602:43:2952:6f00::1) has quit (Ping timeout: 252 seconds)
2014-05-29 03:55:13	-->	blipped (~blipped@204.45.158.210) has joined #python
2014-05-29 03:55:26	<--	blipped (~blipped@204.45.158.210) has quit (Remote host closed the connection)
2014-05-29 03:55:30	-->	jml (jml@nat/google/x-sxdvvacelimjcogb) has joined #python
2014-05-29 03:55:43	<--	the_rat_ (~the_rat@217.200.185.227) has quit (Read error: Connection reset by peer)
2014-05-29 03:56:24	-->	blipped (~blipped@118.140.73.130) has joined #python
2014-05-29 03:56:38	<--	blipped (~blipped@118.140.73.130) has quit (Remote host closed the connection)
2014-05-29 03:56:48	-->	the_rat (~the_rat@217.200.185.227) has joined #python
2014-05-29 03:56:50	-->	blipped (~blipped@174.139.110.138) has joined #python
2014-05-29 03:57:10	-->	MrShell (~mrshell@HSI-KBW-109-192-133-122.hsi6.kabel-badenwuerttemberg.de) has joined #python
2014-05-29 03:57:36	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 03:57:56	<--	JotaK (~ViV@unaffiliated/jotak) has quit (Quit: ChatZilla 0.9.90.1-rdmsoft [XULRunner 1.9.2.19/20110707195905])
2014-05-29 03:58:04	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-29 03:58:43	<--	Dan39 (~ddan39@unaffiliated/dan39) has quit (Ping timeout: 240 seconds)
2014-05-29 03:58:46	<--	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has quit (Remote host closed the connection)
2014-05-29 03:59:04	--	Rev|SleepingFox is now known as TheReverend403
2014-05-29 03:59:12	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-29 04:00:55	-->	Pushkar_Raj (~rajpushka@42.104.27.210) has joined #python
2014-05-29 04:00:56	-->	BlaXpirit (~blaxpirit@250-42-132-95.pool.ukrtel.net) has joined #python
2014-05-29 04:01:02	-->	Shakyj (~Shakyj@Shakyj.co.uk) has joined #python
2014-05-29 04:02:02	-->	shunya_chakra (~shunya@117.200.77.51) has joined #python
2014-05-29 04:02:37	-->	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has joined #python
2014-05-29 04:02:38	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 04:02:59	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-29 04:03:17	<--	OOPMan (~adamj@41.2.214.60) has quit (Ping timeout: 252 seconds)
2014-05-29 04:03:24	<--	reference (~reference@122.172.198.131) has quit (Ping timeout: 240 seconds)
2014-05-29 04:03:28	-->	JotaK (~WTF@unaffiliated/jotak) has joined #python
2014-05-29 04:03:54	-->	DrLou (~DrLou@c-76-117-177-86.hsd1.nj.comcast.net) has joined #python
2014-05-29 04:04:16	<--	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 265 seconds)
2014-05-29 04:04:30	<--	TheFakeazneD525 (~denza252@unaffiliated/denza252) has quit (Quit: Off to do something more interestinger.)
2014-05-29 04:04:41	<--	MrShell (~mrshell@HSI-KBW-109-192-133-122.hsi6.kabel-badenwuerttemberg.de) has quit (Quit: Leaving)
2014-05-29 04:04:47	-->	DaneoShiga (~drshiga@201.23.92.102.dedicated.neoviatelecom.com.br) has joined #python
2014-05-29 04:04:57	<--	Pushkar_Raj (~rajpushka@42.104.27.210) has quit (Read error: Connection reset by peer)
2014-05-29 04:04:58	-->	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has joined #python
2014-05-29 04:05:02	-->	le_tropico (~le_tropic@nat/cisco/x-lultuiligsnbvkbo) has joined #python
2014-05-29 04:05:24	<--	Macuser (~textual@unaffiliated/macuser) has quit (Client Quit)
2014-05-29 04:06:29	-->	eka (~eka@190.237.10.159) has joined #python
2014-05-29 04:07:19	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 04:07:35	-->	decoponio (~decoponio@pon059-128.kcn.ne.jp) has joined #python
2014-05-29 04:07:47	<--	Samb2 (~Sammysama@2.121.203.77) has quit (Ping timeout: 252 seconds)
2014-05-29 04:07:58	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-29 04:08:11	-->	Pushkar_Raj (~rajpushka@42.104.27.210) has joined #python
2014-05-29 04:09:00	<--	jml (jml@nat/google/x-sxdvvacelimjcogb) has quit (Quit: Computer has gone to sleep.)
2014-05-29 04:09:24	<--	shp11 (~shp@122.177.162.36) has quit (Ping timeout: 252 seconds)
2014-05-29 04:09:31	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Ping timeout: 252 seconds)
2014-05-29 04:10:43	<--	Fare (fare@nat/google/x-pvqwgcnspumvfvpu) has quit (Ping timeout: 240 seconds)
2014-05-29 04:10:49	-->	matthias_ (543b973a@gateway/web/freenode/ip.84.59.151.58) has joined #python
2014-05-29 04:10:53	<--	wet88 (~wet1988@buntes058.wohnheim.uni-kl.de) has quit (Quit: Quiting the chat)
2014-05-29 04:11:13	<--	Pushkar_Raj (~rajpushka@42.104.27.210) has quit (Read error: Connection reset by peer)
2014-05-29 04:11:17	-->	DaEvil1 (~DaEvil1@ti0004a400-0098.bb.online.no) has joined #python
2014-05-29 04:12:22	matthias_	i am having some problems with parsing a website. getting the events from the first url is working fine, but i can't get these from the second one: http://bpaste.net/show/EHqyTbvpDQGofTHWIz0E/
2014-05-29 04:12:53	-->	northfurr (~northfurr@unaffiliated/northfurr) has joined #python
2014-05-29 04:13:27	<--	VladVP (~VladVP@185.37.87.102) has quit (Ping timeout: 265 seconds)
2014-05-29 04:13:31	Lacriatch	matthias_: We need tracebacks  as well as code
2014-05-29 04:13:43	-->	rodfersou (~RoADRuNNE@177.16.92.35) has joined #python
2014-05-29 04:14:03	<--	hypha (~hypha@5.63.146.148) has left #python
2014-05-29 04:14:14	-->	Abhijit (~abhijit@unaffiliated/abhijit) has joined #python
2014-05-29 04:14:16	<--	sxn (~sxn@mnch-5d87aa29.pool.mediaWays.net) has quit (Remote host closed the connection)
2014-05-29 04:14:24	<--	Abhijit (~abhijit@unaffiliated/abhijit) has left #python
2014-05-29 04:14:24	matthias_	the browser clicks on "nur tage mit termin anzeigen"  to remove the dates with no events. after that it clicks on "alle termine ausklappen" to show the contents of the events.
2014-05-29 04:14:42	-->	sxn (~sxn@mnch-5d87aa29.pool.mediaWays.net) has joined #python
2014-05-29 04:15:06	matthias_	Lacriatch: code is on bpaste, above, and i don't get any errors at the moments, the issue is that i don't know how to parse the events the right way
2014-05-29 04:15:27	<--	DaneoShiga (~drshiga@201.23.92.102.dedicated.neoviatelecom.com.br) has quit (Read error: Connection reset by peer)
2014-05-29 04:15:51	-->	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has joined #python
2014-05-29 04:16:29	<--	DistantStar (~star@unaffiliated/distantstar) has quit (Ping timeout: 264 seconds)
2014-05-29 04:16:32	Lacriatch	matthias_: Do you care about those little expandable things?
2014-05-29 04:16:59	<--	icecream (~icecream@unaffiliated/icecream-) has quit (Quit: ZNC - http://znc.in)
2014-05-29 04:17:02	Lacriatch	I have no idea what this is saying because German
2014-05-29 04:18:00	-->	guilhermebr (~guilherme@186.226.67.36) has joined #python
2014-05-29 04:18:17	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-29 04:19:05	<--	blipped (~blipped@174.139.110.138) has quit (Remote host closed the connection)
2014-05-29 04:19:14	matthias_	Lacriatch: the expanded things give me the time of the event and some additional infos. it's a calendar from my school. for example: 02. Mai 2014, Freitag is the date, Elternsprechabend is the title of the event and
2014-05-29 04:19:19	<--	wong2 (~wong2@124.205.66.195) has quit (Quit: wong2)
2014-05-29 04:19:23	-->	p1ro (~p1ro@gentoo/user/p1ro) has joined #python
2014-05-29 04:19:31	matthias_	17:00 - 20:00 Uhr the additional info
2014-05-29 04:19:44	Lacriatch	In other words yes you care about the expandy things
2014-05-29 04:19:56	matthias_	Lacriatch: right
2014-05-29 04:20:35	matthias_	Lacriatch: and on the 06. Mai 2014, Dienstag for example are two events on the same day
2014-05-29 04:20:59	<--	fluter (~fluter@fedora/fluter) has quit (Ping timeout: 252 seconds)
2014-05-29 04:21:13	-->	thomi (quassel@conference/canonical/x-xwhgevswxkjegzvq) has joined #python
2014-05-29 04:21:43	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 252 seconds)
2014-05-29 04:22:33	-->	samphippen (~textual@37.157.33.78) has joined #python
2014-05-29 04:22:40	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-29 04:24:22	<--	igordcard (~igordcard@av-217-129-141-66.netvisao.pt) has quit (Read error: Connection reset by peer)
2014-05-29 04:24:49	<--	emorrow (~Thunderbi@176.12.107.139) has quit (Ping timeout: 258 seconds)
2014-05-29 04:25:04	Lacriatch	matthias_: If you grab the event elements with the indis_simpleevents_eventwrap css class, you should be right
2014-05-29 04:25:27	<--	tom94 (~tom@152.78.171.10) has quit (Quit: Konversation terminated!)
2014-05-29 04:25:35	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 258 seconds)
2014-05-29 04:26:20	-->	hypha (~hypha@cpc1-sgyl30-2-0-cust752.sgyl.cable.virginm.net) has joined #python
2014-05-29 04:26:36	-->	BeholdMyGlory (~behold@unaffiliated/beholdmyglory) has joined #python
2014-05-29 04:26:38	<--	semberal (~semberal@216.240.161.68) has quit (Quit: ZNC - http://znc.in)
2014-05-29 04:26:52	-->	dowwie (~Dowwie@pool-108-5-114-141.nwrknj.fios.verizon.net) has joined #python
2014-05-29 04:27:00	<--	nedbat (~nedbat@python/psf/nedbat) has left #python
2014-05-29 04:27:26	dowwie	when the need to manage state+functionality arises, do you implement a callable object or implement a clojure
2014-05-29 04:28:24	Lacriatch	dowwie: I'd say callable object but I'm not qualified to answer that question and unsure why I'm attempting to anyway.
2014-05-29 04:28:33	dowwie	hah
2014-05-29 04:28:38	dowwie	it's an open discussion
2014-05-29 04:28:38	matthias_	Lacriatch: with     print browser.find_element_by_css_selector('indis_simpleevents_eventwrap') i get a not found exception
2014-05-29 04:28:55	timkofu	dowwie: I only know clojure the programming language, so im out too
2014-05-29 04:29:06	Lacriatch	matthias_: Are you waiting until it's there?
2014-05-29 04:29:07	dowwie	closure
2014-05-29 04:29:08	dowwie	bah
2014-05-29 04:29:21	Lacriatch	dowwie: Well I'd say it depends how advanced it is
2014-05-29 04:29:41	dowwie	it's 1 method and state
2014-05-29 04:29:42	Lacriatch	Can you describe it as an object in a way that would make sense to someone reading the code?
2014-05-29 04:29:51	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Remote host closed the connection)
2014-05-29 04:29:55	Lacriatch	There's always lambdas
2014-05-29 04:30:03	Lacriatch	I dunno if that helps
2014-05-29 04:30:26	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-29 04:31:01	matthias_	Lacriatch:     print WebDriverWait(browser, 10).until(lambda d: d.find_element_by_css_selector('indis_simpleevents_eventwrap')) same thing
2014-05-29 04:31:16	Lacriatch	Ah
2014-05-29 04:31:24	Lacriatch	matthias_: Well it's there
2014-05-29 04:32:03	dowwie	I dont use lambdas enough
2014-05-29 04:32:36	dowwie	is there a good source for use cases of lambda's
2014-05-29 04:32:47	<--	kingplusplus (~kingplusp@41.58.218.75) has quit (Ping timeout: 245 seconds)
2014-05-29 04:32:53	matthias_	Lacriatch: do you get output from this line?
2014-05-29 04:33:02	-->	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has joined #python
2014-05-29 04:33:13	Lacriatch	As in matthias_: I don't hate myself enough to use Selenium unless work forces me to
2014-05-29 04:33:21	Lacriatch	matthias_: I'm reading the HTML
2014-05-29 04:33:31	Lacriatch	And using the Javascript console in my browser
2014-05-29 04:33:47	dowwie	Lacriatch:  how could we lambda-ize this simple example?  I illustrate closure and callable object examples:  https://gist.github.com/Dowwie/f7220536a523938e2eac
2014-05-29 04:33:49	<--	badon (~badon@pdpc/supporter/active/badon) has quit (Ping timeout: 252 seconds)
2014-05-29 04:33:54	nanonyme	dowwie, lambda is for short stuff that doesn't span too far to the right marginal. Otherwise use a named function
2014-05-29 04:34:03	dowwie	yeah
2014-05-29 04:34:06	-->	naxa (~chatzilla@catv-89-135-155-20.catv.broadband.hu) has joined #python
2014-05-29 04:34:15	dowwie	thats why I haven't worked with them too much
2014-05-29 04:34:26	Lacriatch	matthias_: If you curl that URL you can see it there
2014-05-29 04:34:27	dowwie	I'm sure they're great for particular uses
2014-05-29 04:34:33	Lacriatch	matthias_: Why are you using Selenium in the first place?
2014-05-29 04:34:35	timkofu	dowwie: (lambda x: x*x for x in range(10))
2014-05-29 04:34:46	naxa	looking for some reference: when were dictionary displays introduced in python?
2014-05-29 04:35:02	timkofu	dowwie: just any place that an anonymous function would be useful
2014-05-29 04:35:04	dowwie	naxa:  in other words?
2014-05-29 04:35:05	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Ping timeout: 264 seconds)
2014-05-29 04:35:20	matthias_	Lacriatch: i was using urllib2 before, but the i was told to use selenium b/ of the javascript
2014-05-29 04:35:24	naxa	dowwie: https://docs.python.org/2/reference/expressions.html#dictionary-displays
2014-05-29 04:35:37	naxa	dowwie: doesn't say which version introduced it
2014-05-29 04:35:59	nanonyme	naxa, you can consider them having been in Python so long it doesn't matter
2014-05-29 04:36:06	Lacriatch	matthias_: That'd make sense if the Javascript is necessary for the data you're using but in this case at least it isn't
2014-05-29 04:36:21	-->	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has joined #python
2014-05-29 04:36:27	nanonyme	naxa, all Python versions you will use have them
2014-05-29 04:36:36	-->	badon (~badon@pdpc/supporter/active/badon) has joined #python
2014-05-29 04:37:00	-->	Jordan_U (~jordan@c-50-173-14-225.hsd1.ca.comcast.net) has joined #python
2014-05-29 04:37:08	nanonyme	Well, not the dict comprehension part but the key_datum_list part
2014-05-29 04:37:12	naxa	nanonyme: not that I use 2.2 but does it have them?
2014-05-29 04:37:13	matthias_	Lacriatch: so i can use urllib2 again? it would be much faster
2014-05-29 04:37:25	-->	dray3 (~daaray@cpe-066-057-017-201.nc.res.rr.com) has joined #python
2014-05-29 04:37:29	matthias_	Lacriatch: and parse the html with beautiful soup?
2014-05-29 04:37:32	-->	russw (~russ@bas1-ottawa01-3096651492.dsl.bell.ca) has joined #python
2014-05-29 04:37:38	naxa	nanonyme: generator expressions seem to be added in 2.4, for example...
2014-05-29 04:37:52	Lacriatch	matthias_: from lxml import html; x = html.parse(url); elements = x.xpath('//div[@class="indis_simpleevents_eventwrap"]')
2014-05-29 04:37:54	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 276 seconds)
2014-05-29 04:38:11	nanonyme	naxa, the dict comprehensions came with 2.7
2014-05-29 04:38:12	-->	alem0lars (~alem0lars@mail.spot.it) has joined #python
2014-05-29 04:38:14	nanonyme	Iirc
2014-05-29 04:38:40	nanonyme	I didn't immediately spot that the page mentioned comprehensions
2014-05-29 04:38:49	nanonyme	Set comprehensions and dict comprehensions are pretty new, yes
2014-05-29 04:38:55	nanonyme	(well, relatively)
2014-05-29 04:38:57	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 04:39:44	Lacriatch	matthias_: You can get the parent from each element and get the date from there. You can get the children to get the title and details.
2014-05-29 04:39:53	naxa	nanonyme: thanks. turns out it's worth asking then, because you use 2.6 on some linux distro versions put on production machines, there is jython being abandoned on 2.6 and many java projects using it embedded
2014-05-29 04:40:14	dowwie	can an anonymous function maintain state between calls
2014-05-29 04:40:16	naxa	nanonyme: I've also seen 2.5 usage but it's more obscure
2014-05-29 04:40:28	timkofu	dowwie: no
2014-05-29 04:40:29	<--	semberal (~semberal@216.240.161.68) has quit (Client Quit)
2014-05-29 04:40:34	timkofu	it's used its gone
2014-05-29 04:40:36	nanonyme	naxa, right. Don't use dict comprehensions and set comprehensions for maximum portability. Only if you don't actually care of older than 2.7
2014-05-29 04:40:38	-->	vlakarados (~quassel@146.185.158.160) has joined #python
2014-05-29 04:40:48	naxa	nanonyme: okay, thank you!
2014-05-29 04:41:00	timkofu	dowwie: I could be wrong but to maintain state you want static variables
2014-05-29 04:41:06	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-29 04:41:12	dowwie	so that rejects lambdas as an alternative use case to closure/callables
2014-05-29 04:41:13	nanonyme	naxa, you can roughly the same thing by feeding a generator expression to set() or dict()
2014-05-29 04:41:17	--	johnraz is now known as johnraz|away
2014-05-29 04:41:31	nanonyme	(and that's available on pretty old versions of Python)
2014-05-29 04:41:34	matthias_	Lacriatch: thanks, never used lxml before, so i will have to read docs
2014-05-29 04:41:43	dowwie	Lacriatch:  what do you think
2014-05-29 04:41:55	timkofu	dowwie: a class is best, yes
2014-05-29 04:42:30	dowwie	matthias_ have you tried beautifulsoup
2014-05-29 04:42:31	Lacriatch	matthias_: it's good for HTML I've found. I've never liked BeautifulSoup.
2014-05-29 04:42:36	Lacriatch	dowwie: Class works
2014-05-29 04:42:48	dowwie	why dislike bs?
2014-05-29 04:43:00	dowwie	lxml is powerful but not as friendly
2014-05-29 04:43:01	<--	pretty_function (~pretty_fu@61.12.96.10) has quit (Remote host closed the connection)
2014-05-29 04:43:06	matthias_	Lacriatch: well, i have used BS before
2014-05-29 04:43:12	timkofu	could be the aristocratic rabbit
2014-05-29 04:43:22	Lacriatch	dowwie: He has, he's using it in his paste
2014-05-29 04:43:59	Lacriatch	dowwie: Because I'm used to XPath and BeautifulSoup doesn't seem to add anything I actually need
2014-05-29 04:44:05	-->	OOPMan (~adamj@41.13.204.254) has joined #python
2014-05-29 04:44:16	-->	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has joined #python
2014-05-29 04:45:14	-->	centrapheta (ampharmex@2a00:dcc0:eda:3748:247:48:123:b33f) has joined #python
2014-05-29 04:45:24	naxa	nanonyme: yes, thanks!
2014-05-29 04:45:27	<--	evil_gordita (robert@ip70-188-56-12.rn.hr.cox.net) has quit
2014-05-29 04:45:30	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 04:45:58	<--	reference (~reference@122.172.198.131) has quit (Ping timeout: 240 seconds)
2014-05-29 04:46:07	<--	deSilva (~deSilva@c83-254-213-203.bredband.comhem.se) has quit
2014-05-29 04:46:15	centrapheta	I was playing around with Python and I got the strange idea of trying to print out a million numbers (1-to-1,000,000) in the fastest way possible. Anybody got a lovely ways of doing this out of interest? :) I've just tried to play about with generators and I got it to print out pretty instantly (Takes a lot longer if running in Idle).
2014-05-29 04:46:17	centrapheta	http://pastebin.com/VBbVQqU7
2014-05-29 04:46:17	dowwie	calibre -- the awesome open source ebook manager/viewer -- uses quite a bit of lxml
2014-05-29 04:46:19	infobob	http://paste.pound-python.org/show/u7GsiGzWm6v7pZX4oM1d/ (repasted for centrapheta)
2014-05-29 04:46:48	nanonyme	Yeah, lxml.html is really good unless it's HTML5. lxml also has a wrapper for html5lib so you can use xpath with it but it's pretty far from perfect
2014-05-29 04:47:02	-->	ghostlines (~ghostline@92.109.90.61) has joined #python
2014-05-29 04:47:08	nanonyme	(also, html5lib is slower than lxml.html core parser as far as I've heard)
2014-05-29 04:47:10	<--	sgviking (~sgviking@gateway/tor-sasl/sgviking) has quit (Ping timeout: 272 seconds)
2014-05-29 04:47:33	nanonyme	ie http://lxml.de/html5parser.html
2014-05-29 04:47:51	-->	IceCream (~icecream@unaffiliated/icecream-) has joined #python
2014-05-29 04:48:13	<--	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has quit (Remote host closed the connection)
2014-05-29 04:48:26	-->	Paradisee (~Paradisee@2.239.28.120) has joined #python
2014-05-29 04:48:41	-->	Wiz_KeeD (~wiz@5-12-144-4.residential.rdsnet.ro) has joined #python
2014-05-29 04:48:42	Wiz_KeeD	hey guys
2014-05-29 04:48:43	Lacriatch	I haven't needed to use HTML5 so far
2014-05-29 04:48:45	Lacriatch	Yey
2014-05-29 04:48:52	Wiz_KeeD	how do I eliminate all the whitespace at the end of a string?
2014-05-29 04:48:58	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-29 04:49:00	-->	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has joined #python
2014-05-29 04:49:03	Wiz_KeeD	"adsad cxsc adsa  " <= eliminate last two whitespaces
2014-05-29 04:49:04	Lacriatch	Wiz_KeeD: string.strip() :)
2014-05-29 04:49:12	Wiz_KeeD	doesn't that strip all whitepaces?
2014-05-29 04:49:13	nanonyme	Lacriatch, I always use HTML5 for new pages though I don't really use the new features
2014-05-29 04:49:24	Lacriatch	Wiz_KeeD: Yup. You mean specifically only the end?
2014-05-29 04:49:28	Wiz_KeeD	yes sir
2014-05-29 04:49:30	--	IceCream is now known as icecream
2014-05-29 04:49:33	CatKiller	centrapheta: "For i in xrange(1000000): print i"?
2014-05-29 04:49:49	CatKiller	you could use "rstrip"
2014-05-29 04:49:50	<--	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has quit (Client Quit)
2014-05-29 04:49:51	CatKiller	or "lstrip"
2014-05-29 04:49:55	Lacriatch	nanonyme: I use HTML5 for writing pages but I haven't seen one I've had to work with in the wild so far
2014-05-29 04:49:58	CatKiller	to choose whether to strip on the right or left
2014-05-29 04:50:05	nanonyme	Lacriatch, ah, okay :)
2014-05-29 04:50:14	Wiz_KeeD	that's it!, rstrip thanks CatKiller !
2014-05-29 04:50:17	<--	flubby_nanabo (~flubby_na@unaffiliated/tonnynerd) has quit (Ping timeout: 245 seconds)
2014-05-29 04:50:19	-->	alexsnake (~alexsnake@200.79.231.98) has joined #python
2014-05-29 04:50:26	-->	killer (~killer@124.253.210.163) has joined #python
2014-05-29 04:50:33	nanonyme	Lacriatch, just, it's imo more effort *not* to use HTML5 than to use it. Eg <!doctype html> is pretty awesome
2014-05-29 04:50:35	Lacriatch	nanonyme: And when I say 'use HTML5' I mean I treat it like HTML4 but put a HTML5 doctype on it :P
2014-05-29 04:50:44	Lacriatch	Exactly
2014-05-29 04:50:47	centrapheta	CatKiller, Did you benchmark it?
2014-05-29 04:50:57	centrapheta	To see the speed.
2014-05-29 04:51:07	CatKiller	centrapheta: No, but you could use "timeit" to do so
2014-05-29 04:51:11	<--	alexsnake (~alexsnake@200.79.231.98) has quit (Remote host closed the connection)
2014-05-29 04:51:13	nanonyme	Lacriatch, seems Github uses HTML5 extensively
2014-05-29 04:51:19	centrapheta	CatKiller, Or just time on linux
2014-05-29 04:51:23	killer	Hey , is there a way to send ctrl-Z signal within program script
2014-05-29 04:51:31	Lacriatch	nanonyme: Github has an API. No need to scrape it ;)
2014-05-29 04:51:36	nanonyme	Well, that
2014-05-29 04:51:46	-->	ItsMeLenny (~Lenny@CPE-121-217-142-92.lnse2.cht.bigpond.net.au) has joined #python
2014-05-29 04:51:58	CatKiller	centrapheta: Your question is a bit strange. Do you want to find the fastest way to output  a million incremental ints on screen, or you want to print one million ints using python?
2014-05-29 04:52:04	dowwie	is it possible to change a generator mid-iteration before its next call , injecting/overriding variables used in the next iteration?
2014-05-29 04:52:21	centrapheta	CatKiller, Python.
2014-05-29 04:52:27	CatKiller	Is it a question of "is print faster than stdout.write(something)"?
2014-05-29 04:52:28	nanonyme	Lacriatch, I was actually thinking of scraping directory structures from Apache. I guess that's probably nuts
2014-05-29 04:52:30	centrapheta	But the quickest
2014-05-29 04:52:38	centrapheta	Most optimized/fastest
2014-05-29 04:52:44	ItsMeLenny	ok, something really bizarre is happening, in python terminal this works, yet in my program it doesnt, i clone a list by going: b = list(a)    but in my program the cloned list is still controlling the original list
2014-05-29 04:52:50	-->	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has joined #python
2014-05-29 04:52:56	CatKiller	centrapheta: You don't have many options here. If you had asked me about an algorithm that has many possible implementations, some faster than others, ok
2014-05-29 04:53:08	CatKiller	but here you're basically saying: "How do I call "print" efficiently"
2014-05-29 04:53:21	Lacriatch	nanonyme: It could work
2014-05-29 04:53:23	CatKiller	I dunno. Call "print". Write to stdout?
2014-05-29 04:53:24	timkofu	ItsMeLenny: a is also a list or?
2014-05-29 04:53:36	ItsMeLenny	timkofu, correct
2014-05-29 04:53:42	timkofu	ItsMeLenny: to clone you need deep_copy
2014-05-29 04:53:46	timkofu	otherwise
2014-05-29 04:53:49	ItsMeLenny	in the terminal it works fine, yet in my pygame game it doesnt
2014-05-29 04:53:52	greenbelt	Its just add references
2014-05-29 04:53:55	CatKiller	b = a[:]
2014-05-29 04:54:08	-->	donspaulding (~donspauld@71.201.172.43) has joined #python
2014-05-29 04:54:09	ItsMeLenny	b = a[:] doesnt work either
2014-05-29 04:54:26	timkofu	x = [1,4,5]; l = x; l[0] = 33, x is now [33,4,5]
2014-05-29 04:54:43	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-29 04:54:44	centrapheta	CatKiller, real	0m0.366s
2014-05-29 04:54:44	CatKiller	ItsMeLenny: Can you paste code?
2014-05-29 04:54:44	centrapheta	user	0m0.292s
2014-05-29 04:54:45	centrapheta	sys	0m0.072s
2014-05-29 04:54:46	ItsMeLenny	correct, but im not doing l = x
2014-05-29 04:54:50	centrapheta	That is my solution
2014-05-29 04:55:11	CatKiller	what is the solution, and more importantly: to what problem? :p
2014-05-29 04:55:17	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-29 04:55:19	timkofu	ItsMeLenny: https://docs.python.org/2/library/copy.html
2014-05-29 04:55:26	centrapheta	CatKiller, http://paste.pound-python.org/show/u7GsiGzWm6v7pZX4oM1d/
2014-05-29 04:55:32	nanonyme	Lacriatch, probably a bad idea since there's nothing in Apache from which you can detect something is a directory listing
2014-05-29 04:55:58	killer	is it possible to send ctrl-Zsignal with the python script
2014-05-29 04:56:04	CatKiller	centrapheta: You're not printing here, you're writing to a file.
2014-05-29 04:56:06	<--	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2014-05-29 04:56:20	-->	lduros (~user@fsf/member/lduros) has joined #python
2014-05-29 04:56:22	centrapheta	CatKiller, Yes, which is quicker.
2014-05-29 04:56:24	Lacriatch	nanonymen: Yes there is
2014-05-29 04:56:26	killer	so as to terminate itself , sys.exit isn't the solution
2014-05-29 04:56:34	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-29 04:56:36	ItsMeLenny	timkofu, thanks, i'll look into it, but why would it work in terminal but not in a script when its done exactly the same
2014-05-29 04:56:49	<--	the_rat (~the_rat@217.200.185.227) has quit (Ping timeout: 252 seconds)
2014-05-29 04:56:58	CatKiller	centrapheta: I don't understand the question. Is it faster to write a million numbers in a file or print them on the terminal?
2014-05-29 04:57:15	ItsMeLenny	ohh, i think i know, is it because it's a list of lists
2014-05-29 04:57:26	Lacriatch	nanonyme: A quick Google: http://gawisp.com/perry/
2014-05-29 04:57:30	CatKiller	ItsMeLenny: Ctrl-z will pause the process not kill it
2014-05-29 04:57:35	CatKiller	At least on my Linux machine
2014-05-29 04:57:35	-->	agjacome (~agjacome@181.217.11.37.dynamic.jazztel.es) has joined #python
2014-05-29 04:57:41	CatKiller	it can even be resumed with "fg"
2014-05-29 04:57:46	Lacriatch	nanonyme: Note the 'Apache Server at' at the bottom and 'Index of <path>' in the title
2014-05-29 04:57:53	CatKiller	Sorry I meant "killer"
2014-05-29 04:57:54	nanonyme	Yeah...
2014-05-29 04:58:18	Lacriatch	nanonyme: That's pretty unique to Apache directory listings
2014-05-29 04:58:29	ItsMeLenny	CatKiller, ctrl Z for what
2014-05-29 04:58:32	--	johnraz|away is now known as johnraz
2014-05-29 04:58:51	CatKiller	ItsMeLenny: I meant to highight "killer" instead of you
2014-05-29 04:59:01	killer	CatKiller: well I am using subprocess and threads in my script and sys.exit is n't just killing th script
2014-05-29 04:59:30	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 04:59:30	CatKiller	killer: You mean "sys.exit" isn't killing your subprocesses maybe?
2014-05-29 04:59:36	<--	claptor (~avarice@107-134-134-100.lightspeed.irvnca.sbcglobal.net) has quit (Quit: this channel is bakas)
2014-05-29 04:59:38	CatKiller	Which is normal
2014-05-29 04:59:56	-->	rquid (~sashka@94.41.177.225) has joined #python
2014-05-29 04:59:57	timkofu	ItsMeLenny: well, they are different environments
2014-05-29 04:59:58	<--	position88 (~position8@92.246.1.130) has quit (Read error: Connection reset by peer)
2014-05-29 05:00:03	CatKiller	you need to kill the individual subprocesses using "kill()"
2014-05-29 05:00:09	timkofu	ItsMeLenny: the details of that i forget
2014-05-29 05:00:17	CatKiller	or "terminate"
2014-05-29 05:00:19	-->	the_rat (~the_rat@217.200.185.245) has joined #python
2014-05-29 05:00:21	-->	NeverGoWest (~Virus2000@93-163-178-102-static.dk.customer.tdc.net) has joined #python
2014-05-29 05:01:28	killer	CatKiller: ok , let me try it
2014-05-29 05:02:30	ItsMeLenny	timkofu, that deepcopy has worked for me, thanks very much, but that must be the problem, a list of lists, maybe i should be going:  b = a[:][:]
2014-05-29 05:02:49	-->	lorenzosu (~lorenzosu@149.154.157.185) has joined #python
2014-05-29 05:02:54	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 05:03:20	timkofu	ItsMeLenny: deepcopy is a more surefire way to do it
2014-05-29 05:03:24	-->	Typo (~Typomatic@unaffiliated/typo) has joined #python
2014-05-29 05:03:47	<--	k_sze[work] (~kvirc@unaffiliated/kira) has quit (Ping timeout: 252 seconds)
2014-05-29 05:04:17	nanonyme	killer, if you have nondaemonic threads running, main thread will block on exit until they close
2014-05-29 05:04:29	<--	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has quit (Quit: MindlessDrone)
2014-05-29 05:04:34	killer	http://pastebin.com/9FSQefBr
2014-05-29 05:04:36	infobob	http://paste.pound-python.org/show/pghfCPOSRsKgZeeTEpml/ (repasted for killer)
2014-05-29 05:04:37	nanonyme	killer, try to run less threads
2014-05-29 05:04:57	<--	Numinex (~namynaxx@unaffiliated/numinex) has quit (Ping timeout: 256 seconds)
2014-05-29 05:05:10	<--	Edoxile (~Edoxile@edoxile.net) has quit (Ping timeout: 265 seconds)
2014-05-29 05:05:31	-->	Numinex (~namynaxx@unaffiliated/numinex) has joined #python
2014-05-29 05:05:32	killer	It seems that threads are not getting killed with the sys.exit
2014-05-29 05:05:47	nanonyme	You cannot kill threads, ever
2014-05-29 05:05:56	<--	alem0lars (~alem0lars@mail.spot.it) has quit (Quit: Going AFK...)
2014-05-29 05:06:07	timkofu	any time you use threads, you shall gnash teeth long time
2014-05-29 05:06:09	killer	They will run in the background forever ?
2014-05-29 05:06:34	gsnedders	The existance of setuptools is all a bit annoying. Either we support setuptools and deal with the result increase in the test matrix size or people complain.
2014-05-29 05:06:37	nanonyme	No, the entire process keeps running until nondaemonic threads exit. If there's only daemonic threads, the process exits sooner
2014-05-29 05:06:37	matthias_	Lacriatch: can you help me please with lxml, i can't figure out how to get the attributes: http://bpaste.net/show/Ywa5piGr39E6tkJU8HCA/
2014-05-29 05:06:43	-->	fcodiaz (~fcodiaz@adsl-184-47-230-90.asm.bellsouth.net) has joined #python
2014-05-29 05:07:01	nanonyme	killer, you might want to look at using Twisted. You can handle subprocesses without threading there easily
2014-05-29 05:07:09	Lacriatch	matthias_: That's right. That'll get you the text of the element
2014-05-29 05:07:14	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-29 05:07:29	Lacriatch	matthias_: You'll want to call getchildren() on each element so you can get the text of the subelements though
2014-05-29 05:07:49	-->	Edoxile (~Edoxile@edoxile.net) has joined #python
2014-05-29 05:07:57	nanonyme	gsnedders, I thought this was a nonissue starting from Python3.4
2014-05-29 05:08:03	-->	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has joined #python
2014-05-29 05:08:07	-->	czapla (~czapla@2a02:8109:8380:1298:40fb:b67d:a96a:992a) has joined #python
2014-05-29 05:08:16	gsnedders	nanonyme: Yes, it is. But plenty of us support older versions. :)
2014-05-29 05:08:23	nanonyme	Heh
2014-05-29 05:08:29	-->	Wr4i7h (~abc@207.125.249.5.rev.vodafone.pt) has joined #python
2014-05-29 05:08:43	-->	mac_ified (~mac_ified@68.200.200.101) has joined #python
2014-05-29 05:08:50	nanonyme	Well, you could bundle setuptools in your installer
2014-05-29 05:09:02	-->	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has joined #python
2014-05-29 05:09:05	nanonyme	Such that setuptools will not get installed
2014-05-29 05:09:21	matthias_	Lacriatch:         print element[0].getchildren() gives me 7 empty lists
2014-05-29 05:09:32	gsnedders	nanonyme: That always seems pretty ugly, though.
2014-05-29 05:09:42	nanonyme	gsnedders, well, you can thank core devs for that
2014-05-29 05:09:49	gsnedders	nanonyme: Indeed.
2014-05-29 05:09:59	nanonyme	gsnedders, they care more of getting everyone to use latest Python3 than fixing Python packaging
2014-05-29 05:10:11	<--	Wharncliffe (~coffee@unaffiliated/ridout) has quit (Quit: Lost terminal)
2014-05-29 05:10:22	gsnedders	I'd be happy if I could drop everything else. :)
2014-05-29 05:10:42	-->	Frosh (uid4206@gateway/web/irccloud.com/x-rszcyfurbuodlrur) has joined #python
2014-05-29 05:10:55	gsnedders	That be a massive decrease in test matrix size. :)
2014-05-29 05:11:00	Lacriatch	matthias_: Get rid of the [1]
2014-05-29 05:11:04	nanonyme	I wonder if Twisted Python3 porting has continued any
2014-05-29 05:11:08	-->	emorrow (~Thunderbi@185.7.185.250) has joined #python
2014-05-29 05:11:17	gsnedders	Probably slowly, as eer.
2014-05-29 05:11:26	murk_	Anyone know why I get this error? http://pastebin.com/Ufuwwx4e
2014-05-29 05:11:27	infobob	http://paste.pound-python.org/show/WJMO7OTZfEGYj9bPfnaX/ (repasted for murk_)
2014-05-29 05:11:33	nanonyme	Blah! Looks like twisted.protocols.amp is still unported
2014-05-29 05:12:54	<--	czapla (~czapla@2a02:8109:8380:1298:40fb:b67d:a96a:992a) has quit (Ping timeout: 265 seconds)
2014-05-29 05:13:36	<--	furoido (~Thunderbi@112.207.132.84) has quit (Quit: furoido)
2014-05-29 05:13:48	<--	untitaker (~untitaker@194-118-139-225.adsl.highway.telekom.at) has quit (Ping timeout: 240 seconds)
2014-05-29 05:13:58	nanonyme	Oh, right, if trial isn't yet available, guess it's very much WiP
2014-05-29 05:14:42	-->	log` (~rockit@80-71-132-48.u.parknet.dk) has joined #python
2014-05-29 05:15:07	-->	Siegel (~kvirc@dsl-197-245-51-253.voxdsl.co.za) has joined #python
2014-05-29 05:15:43	Siegel	hello is there a way to use "if 'a' in mylist" with a list of object instances?
2014-05-29 05:15:45	 *	gsnedders wonders if it's worthwhile to support setuptools in setup.py…
2014-05-29 05:16:11	-->	R0b0t1` (~dev@unaffiliated/r0b0t1) has joined #python
2014-05-29 05:17:42	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-29 05:18:09	nanonyme	gsnedders, if you have a choice, no
2014-05-29 05:18:10	-->	shello (~shello@bl14-187-207.dsl.telepac.pt) has joined #python
2014-05-29 05:18:27	<--	R0b0t1 (~dev@unaffiliated/r0b0t1) has quit (Ping timeout: 252 seconds)
2014-05-29 05:19:19	nanonyme	Only support setuptools if you need some functionality from setuptools
2014-05-29 05:19:23	-->	fenre (~fenre@78.213-167-126.customer.lyse.net) has joined #python
2014-05-29 05:19:29	-->	untitaker (~untitaker@88-117-53-247.adsl.highway.telekom.at) has joined #python
2014-05-29 05:19:45	-->	zvyn (~milan@141.70.27.60) has joined #python
2014-05-29 05:20:15	<--	krisd (krisd@gateway/shell/mydevil.net/x-wwpevcmiaprnuekt) has quit (Quit: Lost terminal)
2014-05-29 05:20:25	-->	yorick (~yorick@oftn/member/yorick) has joined #python
2014-05-29 05:20:26	-->	ValicekB (~tbox@dot.snat.baz.cz) has joined #python
2014-05-29 05:21:02	matthias_	Lacriatch: with http://bpaste.net/show/DDKKO4i1mYDiCuw8ms9g/ i get the correct, but now i need the dates and the body/content
2014-05-29 05:21:08	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 05:21:14	-->	czapla (~czapla@2a02:8109:8380:1298:28de:283:14de:68b4) has joined #python
2014-05-29 05:21:31	-->	hdra (~hdra@14.1.210.189) has joined #python
2014-05-29 05:21:33	Lacriatch	matthias_: Look at the DOM in your browser. You need parent/child nodes.
2014-05-29 05:21:43	Lacriatch	matthias_: It might be worth looking up an XPath tutorial
2014-05-29 05:22:04	<--	istack (~aomap@mail.xsignnet.com) has quit
2014-05-29 05:22:19	<--	crazymykl (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Read error: Connection reset by peer)
2014-05-29 05:22:33	-->	crazymykl (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined #python
2014-05-29 05:22:47	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-29 05:23:05	<--	dnikolai (~wiseman@82.209.203.245) has quit (Ping timeout: 258 seconds)
2014-05-29 05:24:27	--	jjmojo^away is now known as jjmojojjmojo
2014-05-29 05:25:19	-->	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has joined #python
2014-05-29 05:26:04	<--	killer (~killer@124.253.210.163) has quit (Quit: WeeChat 0.3.7)
2014-05-29 05:27:24	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 265 seconds)
2014-05-29 05:27:44	-->	monostop (~quassel@h-79-136-64-176.na.cust.bahnhof.se) has joined #python
2014-05-29 05:27:58	<--	fenre (~fenre@78.213-167-126.customer.lyse.net) has quit (Remote host closed the connection)
2014-05-29 05:27:58	<--	JamesNZ (~james@fedora/JamesNZ) has quit (Quit: Busying myself...)
2014-05-29 05:29:20	<--	nixmaniack (~n1x@unaffiliated/n1xnc0d3) has quit (Ping timeout: 265 seconds)
2014-05-29 05:29:26	<--	randomshop (~Random@220-244-125-22.static.tpgi.com.au) has quit (Read error: Connection reset by peer)
2014-05-29 05:30:33	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Ping timeout: 252 seconds)
2014-05-29 05:30:44	<--	ayaz (~Ayaz@linuxpakistan/ayaz) has quit (Read error: Connection reset by peer)
2014-05-29 05:30:46	<--	onthestairs (~austin@217.138.44.210) has quit (Remote host closed the connection)
2014-05-29 05:30:59	-->	sgviking (~sgviking@gateway/tor-sasl/sgviking) has joined #python
2014-05-29 05:31:18	<--	ggp (~guilherme@177.188.48.117) has quit (Ping timeout: 240 seconds)
2014-05-29 05:31:41	<--	monostop (~quassel@h-79-136-64-176.na.cust.bahnhof.se) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2014-05-29 05:31:47	-->	Ariel_Calzada (~aricalso@181.137.145.79) has joined #python
2014-05-29 05:32:37	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-29 05:32:43	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-29 05:32:43	-->	onthestairs (~austin@217.138.44.210) has joined #python
2014-05-29 05:33:19	-->	monostop (~quassel@h-79-136-64-176.na.cust.bahnhof.se) has joined #python
2014-05-29 05:33:27	-->	blipped (~blipped@14.18.147.237) has joined #python
2014-05-29 05:33:31	blipped	Why doesn't this work: return [column.append(row[1]) for row in self.data], but if I do: for row in self.data: column.append(row[1]) it does?
2014-05-29 05:33:36	-->	reference (~reference@122.167.181.212) has joined #python
2014-05-29 05:33:52	shunya_chakra	one book of Learning Python was released in 31 Dec 1899
2014-05-29 05:34:06	timkofu	I knew it
2014-05-29 05:34:08	shunya_chakra	http://oi60.tinypic.com/25jcozc.jpg
2014-05-29 05:34:12	<--	mission (~mission@unaffiliated/mission) has quit (Ping timeout: 240 seconds)
2014-05-29 05:34:28	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #python
2014-05-29 05:34:33	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-29 05:34:36	monostop	python is oldschool man
2014-05-29 05:34:41	-->	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has joined #python
2014-05-29 05:34:46	shunya_chakra	aha!
2014-05-29 05:34:50	blipped	no wonder it's so expensive
2014-05-29 05:35:05	--	zz_whg is now known as whg
2014-05-29 05:35:16	timkofu	blipped: in the first instance, you'll get a list of nones
2014-05-29 05:35:20	-->	Mkster (~Mkster@i577B58DB.versanet.de) has joined #python
2014-05-29 05:35:27	-->	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has joined #python
2014-05-29 05:35:29	timkofu	but stuff should be appended to column
2014-05-29 05:36:12	blipped	yup I do, timokofu, but why does it do that?
2014-05-29 05:36:13	timkofu	so it returns nones
2014-05-29 05:36:33	blipped	can I only do operations such as a * b using that notation?
2014-05-29 05:36:43	-->	ggp (~guilherme@187.88.201.22) has joined #python
2014-05-29 05:36:52	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-29 05:36:56	-->	Zzeiss (~wsy@mumble144109.merl.com) has joined #python
2014-05-29 05:37:00	-->	VladVP (~VladVP@185.37.87.102) has joined #python
2014-05-29 05:37:10	-->	kylls (~rootc0rp@unaffiliated/kylls) has joined #python
2014-05-29 05:37:29	-->	dnikolai (~wiseman@82.209.203.245) has joined #python
2014-05-29 05:37:45	timkofu	blipped: well, append returns none if successful iirc
2014-05-29 05:37:48	<--	reference (~reference@122.167.181.212) has quit (Ping timeout: 240 seconds)
2014-05-29 05:38:07	timkofu	so: what you want is to return column after the appending ends
2014-05-29 05:38:20	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Client Quit)
2014-05-29 05:39:01	<--	donspaulding (~donspauld@71.201.172.43) has quit (Quit: donspaulding)
2014-05-29 05:39:09	timkofu	blipped: the list comprehension takes the result of the opeartion in that section and makes a new list
2014-05-29 05:39:18	<--	MilkmanDan (~dan@wilug/expat/MilkmanDan) has quit (Ping timeout: 240 seconds)
2014-05-29 05:39:22	-->	spec_ed (~spec_ed@c-98-203-32-130.hsd1.fl.comcast.net) has joined #python
2014-05-29 05:40:21	monostop	If column is empty to begin with, you can do return [row[1] for row in self.data]
2014-05-29 05:40:29	<--	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2014-05-29 05:40:30	monostop	Else is probably nicer to do it in two steps
2014-05-29 05:40:35	-->	MilkmanDan (~dan@wilug/expat/MilkmanDan) has joined #python
2014-05-29 05:41:03	<--	blipped (~blipped@14.18.147.237) has quit (Remote host closed the connection)
2014-05-29 05:41:05	<--	Ariel_Calzada (~aricalso@181.137.145.79) has quit (Ping timeout: 264 seconds)
2014-05-29 05:41:07	<--	ggp (~guilherme@187.88.201.22) has quit (Ping timeout: 245 seconds)
2014-05-29 05:41:19	-->	blipped (~blipped@174.139.110.138) has joined #python
2014-05-29 05:41:42	blipped	ahh makes sense, thanks
2014-05-29 05:41:51	monostop	i.e. column.extend([row[1] for row in self.data]); return column
2014-05-29 05:41:59	-->	jml_ (jml@nat/google/x-yvqtipsmfrtjcvtj) has joined #python
2014-05-29 05:42:11	-->	ggp (~guilherme@189.79.252.145) has joined #python
2014-05-29 05:42:12	<--	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has quit (Ping timeout: 240 seconds)
2014-05-29 05:42:56	<--	darkf (~darkf___@unaffiliated/darkf) has quit (Quit: Leaving)
2014-05-29 05:43:15	-->	kevinb (~europa-zn@99-166-106-52.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-29 05:43:22	<--	northfurr (~northfurr@unaffiliated/northfurr) has quit (Quit: northfurr)
2014-05-29 05:44:13	<--	ItsMeLenny (~Lenny@CPE-121-217-142-92.lnse2.cht.bigpond.net.au) has left #python ("Leaving")
2014-05-29 05:45:13	<--	le_tropico (~le_tropic@nat/cisco/x-lultuiligsnbvkbo) has quit (Ping timeout: 252 seconds)
2014-05-29 05:45:15	--	iogg is now known as ioggstream
2014-05-29 05:45:32	-->	amigo (~amigo@unaffiliated/amigo) has joined #python
2014-05-29 05:45:58	-->	jnoob22 (~jnoob@c-76-25-106-67.hsd1.co.comcast.net) has joined #python
2014-05-29 05:46:25	<--	Alina-malina (Alina-mali@unaffiliated/alina-malina) has quit (Ping timeout: 252 seconds)
2014-05-29 05:46:27	<--	Wr4i7h (~abc@207.125.249.5.rev.vodafone.pt) has quit
2014-05-29 05:47:07	-->	mission (~mission@unaffiliated/mission) has joined #python
2014-05-29 05:48:34	-->	sarina (~sarina@18.189.42.134) has joined #python
2014-05-29 05:48:38	<--	txtsd (txtsd@27.0.52.42) has quit (Ping timeout: 240 seconds)
2014-05-29 05:49:02	<--	czapla (~czapla@2a02:8109:8380:1298:28de:283:14de:68b4) has quit (Remote host closed the connection)
2014-05-29 05:49:35	-->	introom (~introom@202.125.231.120) has joined #python
2014-05-29 05:51:27	<--	mac_ified (~mac_ified@68.200.200.101) has quit (Remote host closed the connection)
2014-05-29 05:51:58	<--	sarina (~sarina@18.189.42.134) has quit (Read error: Connection reset by peer)
2014-05-29 05:52:31	-->	juantwo (~juantwo@50.56.228.65) has joined #python
2014-05-29 05:52:44	--	Eyes is now known as Eyess
2014-05-29 05:52:59	<--	hdra (~hdra@14.1.210.189) has quit (Ping timeout: 258 seconds)
2014-05-29 05:52:59	--	Rev|SleepingFox is now known as TheReverend403
2014-05-29 05:53:38	-->	Infant (~thomas@78.56.159.193) has joined #python
2014-05-29 05:54:53	<--	juantwo (~juantwo@50.56.228.65) has quit (Remote host closed the connection)
2014-05-29 05:56:19	-->	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has joined #python
2014-05-29 05:56:19	-->	txtsd (txtsd@115.69.254.32) has joined #python
2014-05-29 05:56:23	-->	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has joined #python
2014-05-29 05:57:15	-->	dcrosta (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has joined #python
2014-05-29 05:57:39	<--	DrewbieDoo (~DrewbieDo@pool-96-241-202-210.washdc.fios.verizon.net) has quit (Read error: Connection reset by peer)
2014-05-29 05:58:00	<--	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has quit (Quit: BBye)
2014-05-29 05:58:12	<--	dcrosta (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has quit (Client Quit)
2014-05-29 05:58:54	-->	donspaulding (~donspauld@c-50-158-56-97.hsd1.il.comcast.net) has joined #python
2014-05-29 05:59:20	-->	cmheisel_ (~cheisel@cei-gla-cpk2.coxinc.com) has joined #python
2014-05-29 05:59:37	<--	Paradisee (~Paradisee@2.239.28.120) has quit (Remote host closed the connection)
2014-05-29 06:02:04	-->	jamphat (~jamphat@66-44-29-175.c3-0.129-ubr1.lnh-129.md.cable.rcn.com) has joined #python
2014-05-29 06:02:34	<--	phatina (~phatina@bband-dyn223.178-41-37.t-com.sk) has quit (Quit: Leaving)
2014-05-29 06:02:38	--	spec_ed is now known as ed_spec
2014-05-29 06:02:55	-->	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has joined #python
2014-05-29 06:03:09	stealthii	Hi there.  I'm looking to generate a simple, (x,-y) graph, with named coordinates, taking input from a dictionary.
2014-05-29 06:03:14	-->	sbuettner (Scott@2600:3c00::f03c:91ff:feae:9b3a) has joined #python
2014-05-29 06:03:33	stealthii	the only libraries I can find are for function ploting, and none seem to support naming the coordinate points.
2014-05-29 06:03:38	<--	R0b0t1` (~dev@unaffiliated/r0b0t1) has quit (Ping timeout: 240 seconds)
2014-05-29 06:04:05	Lacriatch	stealthii: Matplotlib can do it. I can't walk you through it though because I need sleep.
2014-05-29 06:04:09	<--	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has quit (Quit: kenbolton)
2014-05-29 06:04:25	<--	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 06:04:32	stealthii	heh.  awesome, I'll look into that, will read up on the docs first
2014-05-29 06:05:53	<--	czapla (~czapla@37-5-38-115-dynip.superkabel.de) has quit (Remote host closed the connection)
2014-05-29 06:06:11	Lacriatch	stealthii: There's this: http://stackoverflow.com/questions/5147112/matplotlib-how-to-put-individual-tags-for-a-scatter-plot
2014-05-29 06:06:42	Lacriatch	stealthii: The annotate function should do what you need
2014-05-29 06:06:43	-->	RDustinB (~RDustinB@c-174-51-210-114.hsd1.co.comcast.net) has joined #python
2014-05-29 06:06:55	stealthii	ah wicked, this will save much time!
2014-05-29 06:06:58	stealthii	thanks for your help
2014-05-29 06:07:06	Lacriatch	Welcome!
2014-05-29 06:07:13	<--	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2014-05-29 06:07:32	-->	Ankhers (~user@gateway/tor-sasl/ankhers) has joined #python
2014-05-29 06:07:40	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-29 06:08:11	greenbelt	I have asked it before...and get some answsr
2014-05-29 06:08:55	greenbelt	Answer here.. I stick with the answer ..its just throwaway variable..
2014-05-29 06:09:23	greenbelt	This is code snippet i want to ask ..  http://bpaste.net/show/Xmyjr3JV2Sv2VTqHdx1q/
2014-05-29 06:10:20	-->	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has joined #python
2014-05-29 06:10:26	<--	dumby_PC (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-29 06:10:36	greenbelt	What the last part mean ? Why they (developer) placed it ? What the benefit/usage of this part ?
2014-05-29 06:10:50	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-29 06:10:51	<--	ua (~ua@unaffiliated/uniqanomaly) has quit (Quit: Leaving)
2014-05-29 06:11:09	SilentGhost	greenbelt: shorter variable name, traditionally used with gettext
2014-05-29 06:12:09	<--	thoolihan (~thoolihan@2605:a000:f4e1:8d01:ac86:5464:b5b9:913) has quit (Ping timeout: 258 seconds)
2014-05-29 06:12:09	greenbelt	SilentGhost: yes, someone talks to me,its just variable ..
2014-05-29 06:12:34	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 06:12:39	-->	ecthiender (~ecthiende@unaffiliated/ecthiender) has joined #python
2014-05-29 06:12:45	greenbelt	SilentGhost: its come from optparse module in std lib
2014-05-29 06:12:53	<--	Ankhers (~user@gateway/tor-sasl/ankhers) has quit (Remote host closed the connection)
2014-05-29 06:12:53	-->	joaofelix (~joaofelix@177.17.230.178.dynamic.adsl.gvt.net.br) has joined #python
2014-05-29 06:13:26	CatKiller	greenbelt: Maybe you should ask everyday to see the percentage of the same answer you're going to get ;)
2014-05-29 06:13:36	<--	ghostlines (~ghostline@92.109.90.61) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 06:13:37	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 06:13:47	CatKiller	greenbelt: Read the module description to understand what SilentGhost meant with "traditionally used with gettext"
2014-05-29 06:13:48	CatKiller	https://docs.python.org/2/library/gettext.html
2014-05-29 06:13:48	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-29 06:14:05	greenbelt	Thanks CatKiller.. I'm asking the same one before :)
2014-05-29 06:14:05	-->	Cuppa_coffee (~Beast@5ED4E499.cm-7-5d.dynamic.ziggo.nl) has joined #python
2014-05-29 06:14:07	CatKiller	you will see that here, having a small variable name is useful to avoid typing too much
2014-05-29 06:14:16	-->	Ark444 (~ark@2001:41d0:8:b71d::1) has joined #python
2014-05-29 06:14:27	<--	VladVP (~VladVP@185.37.87.102) has quit (Ping timeout: 258 seconds)
2014-05-29 06:14:35	CatKiller	But that variable could have also been called "translate" and it would have worked just as well
2014-05-29 06:14:36	<--	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has quit (Ping timeout: 240 seconds)
2014-05-29 06:14:52	-->	sthirugn (~suresh@cpe-098-027-057-148.nc.res.rr.com) has joined #python
2014-05-29 06:15:06	<--	sthirugn (~suresh@cpe-098-027-057-148.nc.res.rr.com) has left #python
2014-05-29 06:15:25	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-29 06:15:48	-->	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has joined #python
2014-05-29 06:15:52	--	Rev|SleepingFox is now known as TheReverend403
2014-05-29 06:15:58	-->	alexsnake (~alexsnake@200.79.231.98) has joined #python
2014-05-29 06:16:13	-->	Moonlightning (~blackl@unaffiliated/moonlightning) has joined #python
2014-05-29 06:16:36	-->	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has joined #python
2014-05-29 06:16:41	-->	AaronMT (~AaronMT@66.207.208.102) has joined #python
2014-05-29 06:16:45	<--	rcombs (~rcombs@rcombs.me) has quit (Read error: Connection reset by peer)
2014-05-29 06:16:46	Moonlightning	Is it okay to use a triple-quoted string for literals with both single and double quotes in them, even if they don't need to span multiple lines?
2014-05-29 06:16:58	Moonlightning	It just seems more readable to me than having backslashes littered about.
2014-05-29 06:17:07	greenbelt	CatKiller: i'm trying read your link ..sorry for my bad english, its too slow to get understand :(
2014-05-29 06:17:19	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 06:17:34	sbuettner	Moonlightning, I do it all the time, personally. I can't speak to what the style guide says, though.
2014-05-29 06:17:39	-->	mgrouchy (~mgrouchy@CPE68b6fc44a453-CM68b6fc44a450.cpe.net.cable.rogers.com) has joined #python
2014-05-29 06:17:53	Moonlightning	I don't think it says anything about it.
2014-05-29 06:18:22	sbuettner	I'm particularly found of an r'''string''' for things like SQL (when I'm not using Alchemy) and Regex
2014-05-29 06:18:33	CatKiller	Moonlightning: I've seen this done in numerous places and it "felt" OK
2014-05-29 06:18:48	<--	alexsnake (~alexsnake@200.79.231.98) has quit (Remote host closed the connection)
2014-05-29 06:19:11	sbuettner	Yea, generally anytime you can avoid backslash-hell I feel like is a good plan
2014-05-29 06:19:23	-->	rcombs (~rcombs@rcombs.me) has joined #python
2014-05-29 06:19:27	--	zhost_ is now known as zhost
2014-05-29 06:19:45	greenbelt	CatKiller: i see its used in a lot of places in gettext module
2014-05-29 06:19:49	-->	collectek (~collectek@69.54.63.217) has joined #python
2014-05-29 06:20:40	<--	collectek (~collectek@69.54.63.217) has left #python
2014-05-29 06:21:04	<--	Anxi80 (Anxi80@unaffiliated/anxi80) has quit (Read error: Connection reset by peer)
2014-05-29 06:21:17	-->	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-29 06:21:39	-->	condy (~condy@2001:da8:4004:253:3e97:eff:fe2d:1e82) has joined #python
2014-05-29 06:22:17	-->	zooz (~zooz@87.85.173.82) has joined #python
2014-05-29 06:22:19	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined #python
2014-05-29 06:22:43	-->	bluedreams (~bluedream@24-205-95-34.dhcp.psdn.ca.charter.com) has joined #python
2014-05-29 06:23:03	-->	kosh (~kosh@aesaeion.com) has joined #python
2014-05-29 06:23:07	-->	mon5ter (~utilita@91-66-183-218-dynip.superkabel.de) has joined #python
2014-05-29 06:23:24	-->	krisd (krisd@gateway/shell/mydevil.net/x-zjjekmgbjvuihmhh) has joined #python
2014-05-29 06:23:39	-->	taloszerg (~taloszerg@c62e6602.cst.lightpath.net) has joined #python
2014-05-29 06:23:40	dowwie	what is a pythonic way to check for integers so to avoid None/zero values in a fraction
2014-05-29 06:23:41	<--	RDustinB (~RDustinB@c-174-51-210-114.hsd1.co.comcast.net) has quit (Quit: Computer has gone to sleep)
2014-05-29 06:23:45	-->	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has joined #python
2014-05-29 06:24:17	<--	HelPiNgU2 (~EA08BA8F5@unaffiliated/ea08ba8f51) has quit (Quit: rage quit)
2014-05-29 06:24:39	<--	semberal (~semberal@216.240.161.68) has quit (Quit: ZNC - http://znc.in)
2014-05-29 06:25:00	-->	winegoddess (~winegodde@64.58.240.210) has joined #python
2014-05-29 06:25:18	-->	Like2HlpU-Laptop (~EA08BA8F5@unaffiliated/ea08ba8f51) has joined #python
2014-05-29 06:25:18	-->	neurosnap (~ubuntu@ec2-54-201-22-212.us-west-2.compute.amazonaws.com) has joined #python
2014-05-29 06:25:29	<--	DammitJim (~DammitJim@99-75-56-172.lightspeed.dybhfl.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2014-05-29 06:25:29	-->	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has joined #python
2014-05-29 06:25:39	-->	ua (~ua@unaffiliated/uniqanomaly) has joined #python
2014-05-29 06:25:44	winegoddess	is there a simple way to use print " ".join(somelist)  and is an item is an empty string, not have a space on either side?
2014-05-29 06:26:47	SilentGhost	winegoddess: filter out empty strings
2014-05-29 06:27:14	timkofu	print " ".join([x for x in somelist if x])
2014-05-29 06:27:17	<--	bluedreams (~bluedream@24-205-95-34.dhcp.psdn.ca.charter.com) has quit (Ping timeout: 264 seconds)
2014-05-29 06:27:31	-->	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has joined #python
2014-05-29 06:27:33	nanonyme	Well, imo  " ".join(s for s in somelist if s) looks nicer
2014-05-29 06:27:45	nanonyme	But whatever :)
2014-05-29 06:27:57	timkofu	yea, a genrator is always prefferable
2014-05-29 06:27:59	pawroman	how about this: print " ".join(filter(None, somelist))
2014-05-29 06:28:01	stranac	nanonyme: but it's less efficient
2014-05-29 06:28:05	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 06:28:12	pawroman	filter None does boolean check ;)
2014-05-29 06:28:20	-->	Debnet (marc@2a01:e35:2e9c:d7f0:35f9:dc75:8f07:e639) has joined #python
2014-05-29 06:28:31	nanonyme	stranac, in an uninteresting magnitude
2014-05-29 06:28:53	<--	Ark444 (~ark@2001:41d0:8:b71d::1) has left #python ("WeeChat 0.4.2")
2014-05-29 06:28:59	SilentGhost	pawroman: join joins on strings
2014-05-29 06:28:59	nanonyme	Unless you've a completely ridiculously long list and then you probably aren't going to print it anyway
2014-05-29 06:29:04	-->	EPG (~EPG@p4FD5E056.dip0.t-ipconnect.de) has joined #python
2014-05-29 06:29:17	-->	rocky (~rocky@crbknf0209w-142162011178.dhcp-dynamic.FibreOp.nl.bellaliant.net) has joined #python
2014-05-29 06:29:17	<--	adorver (~adorver@58.125.237.138) has quit (Quit: Leaving)
2014-05-29 06:29:20	stranac	sure
2014-05-29 06:29:23	SilentGhost	pawroman: that is it joins strings on stric
2014-05-29 06:29:33	SilentGhost	pawroman: that is it joins strings on a string
2014-05-29 06:29:38	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 255 seconds)
2014-05-29 06:29:41	-->	Ankhers (~user@gateway/tor-sasl/ankhers) has joined #python
2014-05-29 06:29:52	pawroman	In [7]: print " ".join(filter(None, ["A", "B", "C", "", "D"]))
2014-05-29 06:29:52	pawroman	A B C D
2014-05-29 06:30:31	-->	k_sze[work] (~kvirc@unaffiliated/kira) has joined #python
2014-05-29 06:30:50	timkofu	SilentGhost: filter returns a list
2014-05-29 06:31:25	<--	txtsd (txtsd@115.69.254.32) has quit (Ping timeout: 252 seconds)
2014-05-29 06:31:43	SilentGhost	timkofu: and if this list contains something an integer, for example, join is going to scream at you. so the "boolean check" is irrelevant
2014-05-29 06:31:48	<--	blipped (~blipped@174.139.110.138) has quit
2014-05-29 06:32:30	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-29 06:33:20	-->	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has joined #python
2014-05-29 06:34:18	<--	MilkmanDan (~dan@wilug/expat/MilkmanDan) has quit (Remote host closed the connection)
2014-05-29 06:34:26	-->	MilkmanDan (~dan@wilug/expat/MilkmanDan) has joined #python
2014-05-29 06:34:29	timkofu	print " ".join([str(x) for x in somelist if x])
2014-05-29 06:34:52	<--	k_sze[work] (~kvirc@unaffiliated/kira) has quit (Ping timeout: 245 seconds)
2014-05-29 06:34:53	timkofu	or the prettie version nanonyme wants
2014-05-29 06:35:02	timkofu	*prettier
2014-05-29 06:35:09	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 06:35:30	-->	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has joined #python
2014-05-29 06:35:43	CatKiller	But what if you have 0 in that list?
2014-05-29 06:35:46	CatKiller	it will be omitted
2014-05-29 06:35:49	<--	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has quit (Remote host closed the connection)
2014-05-29 06:35:55	<--	lamar (~Adium@AAnnecy-158-1-104-225.w86-200.abo.wanadoo.fr) has quit (Ping timeout: 258 seconds)
2014-05-29 06:36:05	timkofu	your fix?
2014-05-29 06:36:06	CatKiller	if x != "" might be what's needed
2014-05-29 06:36:18	timkofu	print " ".join([str(x) for x in somelist if x != ""])
2014-05-29 06:36:38	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-29 06:36:49	CatKiller	The requirements initially was to skip empty strings, no specs about removing anything esle
2014-05-29 06:36:51	CatKiller	*else
2014-05-29 06:37:00	-->	qiemem (uid14911@gateway/web/irccloud.com/x-jjwxlsdvxvaeratz) has joined #python
2014-05-29 06:37:00	timkofu	that will work then
2014-05-29 06:37:01	<--	l4cr0ss (~Jefferson@unaffiliated/l4cr0ss) has quit (Disconnected by services)
2014-05-29 06:37:12	SilentGhost	timkofu: you're missing the point. somelist needs to contain only strings, all things fixes is superfluous
2014-05-29 06:37:19	SilentGhost	s/is/are/
2014-05-29 06:37:26	-->	mattallmill (1000@129.130.175.163) has joined #python
2014-05-29 06:37:29	<--	rocky (~rocky@crbknf0209w-142162011178.dhcp-dynamic.FibreOp.nl.bellaliant.net) has quit (Remote host closed the connection)
2014-05-29 06:37:51	-->	l4cr0ss (~l4cr0ss@unaffiliated/l4cr0ss) has joined #python
2014-05-29 06:37:56	-->	txtsd (txtsd@115.69.254.32) has joined #python
2014-05-29 06:38:00	timkofu	SilentGhost: she said nothing about only strings
2014-05-29 06:38:05	-->	jb (corrupt@shell.vaerchi.com) has joined #python
2014-05-29 06:38:07	timkofu	but whatever
2014-05-29 06:38:11	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 06:38:17	timkofu	she gets the gist of how to solve it
2014-05-29 06:38:21	-->	dennisw (~dennis@nat-168-7-212-118.rice.edu) has joined #python
2014-05-29 06:38:47	jb	could someone help me extract "test_http_vip" from the following string? http://bpaste.net/show/OymLuFwoehUcc3pU2iOP/
2014-05-29 06:39:02	-->	rocky (~rocky@crbknf0209w-142162011178.dhcp-dynamic.FibreOp.nl.bellaliant.net) has joined #python
2014-05-29 06:39:05	<--	mcsontos (mcsontos@nat/redhat/x-wrrzwsisgmexhksz) has quit (Quit: Leaving)
2014-05-29 06:39:58	<--	semberal (~semberal@216.240.161.68) has quit (Quit: ZNC - http://znc.in)
2014-05-29 06:40:30	-->	gelignite (~gelignite@i528C327D.versanet.de) has joined #python
2014-05-29 06:40:31	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 06:40:39	jr3	im looking at 3D libs and it looks like VPython is really simple stuff
2014-05-29 06:40:58	jr3	anyone here use VPython?
2014-05-29 06:41:01	-->	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has joined #python
2014-05-29 06:41:18	<--	ts33kr_ (~ts33kr@46-164-190-78-dynamic.retail.datagroup.ua) has quit (Ping timeout: 240 seconds)
2014-05-29 06:41:19	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 252 seconds)
2014-05-29 06:41:31	-->	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has joined #python
2014-05-29 06:42:09	<--	txtsd (txtsd@115.69.254.32) has quit (Ping timeout: 252 seconds)
2014-05-29 06:42:16	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-29 06:42:40	<--	ultrasardine (~Adium@a79-168-132-29.cpe.netcabo.pt) has quit (Quit: Leaving.)
2014-05-29 06:42:43	<--	semberal (~semberal@216.240.161.68) has quit (Client Quit)
2014-05-29 06:42:46	-->	flubby_nanabo (~flubby_na@unaffiliated/tonnynerd) has joined #python
2014-05-29 06:42:47	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 245 seconds)
2014-05-29 06:43:01	-->	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has joined #python
2014-05-29 06:43:12	<--	seagreen (~seagreen@short.csc.ncsu.edu) has left #python ("WeeChat 0.4.3")
2014-05-29 06:43:16	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 06:43:31	<--	SilentGhost (~SilentGho@h51580eb1.seluesp.dyn.perspektivbredband.net) has quit (Ping timeout: 252 seconds)
2014-05-29 06:43:53	-->	juantwo (juantwo@nat/rackspace/x-dkhntgctgzojiecd) has joined #python
2014-05-29 06:44:16	-->	frothnicator (~frothy@unaffiliated/frothnicator) has joined #python
2014-05-29 06:44:21	<--	semberal (~semberal@216.240.161.68) has quit (Client Quit)
2014-05-29 06:44:28	-->	SilentGhost (~SilentGho@h51580eb1.seluesp.dyn.perspektivbredband.net) has joined #python
2014-05-29 06:44:29	<--	cmheisel_ (~cheisel@cei-gla-cpk2.coxinc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 06:44:54	--	Rev|SleepingFox is now known as TheReverend403
2014-05-29 06:45:57	-->	dcrosta (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has joined #python
2014-05-29 06:45:59	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 06:46:19	-->	emperorcezar (~emperorce@c-24-14-228-224.hsd1.il.comcast.net) has joined #python
2014-05-29 06:46:49	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 252 seconds)
2014-05-29 06:47:01	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-29 06:47:08	<--	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has quit
2014-05-29 06:47:14	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Read error: Connection reset by peer)
2014-05-29 06:47:37	-->	czapla (~czapla@2a02:8109:8380:1298:5017:eaf0:cb31:5b91) has joined #python
2014-05-29 06:47:49	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-29 06:47:57	-->	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has joined #python
2014-05-29 06:48:05	-->	smccully (~smccully@192.65.45.20) has joined #python
2014-05-29 06:48:18	-->	Lemony (~textual@80.168.151.198) has joined #python
2014-05-29 06:48:31	-->	Lattes (~j@gateway/tor-sasl/lattes) has joined #python
2014-05-29 06:48:57	<--	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-05-29 06:49:16	-->	R0b0t1 (~dev@unaffiliated/r0b0t1) has joined #python
2014-05-29 06:49:23	-->	devdazed (~russ_nyc@rrcs-24-136-119-106.nyc.biz.rr.com) has joined #python
2014-05-29 06:49:34	<--	OOPMan (~adamj@41.13.204.254) has quit (Ping timeout: 265 seconds)
2014-05-29 06:50:14	-->	flosch (~flosch@unaffiliated/flosch) has joined #python
2014-05-29 06:50:28	-->	faldridge (~faldridge@172.56.9.130) has joined #python
2014-05-29 06:50:50	-->	Jucato (~jucato@kde/developer/jucato) has joined #python
2014-05-29 06:51:11	-->	boos3y (~boos3y@50.246.90.45) has joined #python
2014-05-29 06:52:08	Moonlightning	winegoddess, timkofu: you don't need the brackets there.
2014-05-29 06:52:17	-->	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-29 06:52:43	-->	dape (~dani@freenode/sponsor/dape) has joined #python
2014-05-29 06:52:57	Moonlightning	CatKiller, timkofu: empty strings are falsey
2014-05-29 06:53:30	-->	deniska (~denis@unaffiliated/deniska) has joined #python
2014-05-29 06:53:31	CatKiller	Brackets?
2014-05-29 06:53:36	CatKiller	where
2014-05-29 06:54:02	<--	timkofu (~timkofu@196.200.18.30) has quit (Quit: Lost terminal)
2014-05-29 06:54:37	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-29 06:54:58	<--	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has quit (Ping timeout: 240 seconds)
2014-05-29 06:55:01	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 06:55:08	<--	eggsmiao (~cat@114.221.213.80) has quit (Quit: Leaving.)
2014-05-29 06:55:16	-->	lvh (~lvh@python/psf/lvh) has joined #python
2014-05-29 06:55:25	lvh	Yhg1s: Thanks for the typo note; you're entirely correct and I've fixed it :)
2014-05-29 06:55:53	-->	VladVP (~VladVP@185.37.87.102) has joined #python
2014-05-29 06:57:04	-->	cmheisel_ (~cheisel@cei-gla-cpk2.coxinc.com) has joined #python
2014-05-29 06:57:06	<--	Lemony (~textual@80.168.151.198) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 06:57:07	-->	treehug88 (~treehug88@cpe-67-247-18-224.nyc.res.rr.com) has joined #python
2014-05-29 06:57:16	<--	treehug88 (~treehug88@cpe-67-247-18-224.nyc.res.rr.com) has quit (Max SendQ exceeded)
2014-05-29 06:58:08	-->	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has joined #python
2014-05-29 06:58:22	<--	rostam (~zartoosh@nat/cisco/x-bvksjhhnqzihpvjc) has quit (Remote host closed the connection)
2014-05-29 06:58:53	-->	alemedeiros (~alemedeir@187.10.22.149) has joined #python
2014-05-29 06:59:23	-->	rostam (~zartoosh@nat/cisco/x-qiuddyeevczabhto) has joined #python
2014-05-29 06:59:58	--	zz_veatch is now known as veatch
2014-05-29 07:00:17	<--	Infant (~thomas@78.56.159.193) has quit (Quit: Leaving)
2014-05-29 07:00:20	-->	wong2 (~wong2@117.79.232.233) has joined #python
2014-05-29 07:00:26	-->	scottferg (~scottferg@c-98-226-208-95.hsd1.il.comcast.net) has joined #python
2014-05-29 07:01:10	<--	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has quit (Ping timeout: 265 seconds)
2014-05-29 07:01:43	-->	MikOo (~Icedove@2a01:e35:8a39:2a50:225:22ff:fe59:a088) has joined #python
2014-05-29 07:01:53	-->	commandocoding (~commandoc@106.202.67.214) has joined #python
2014-05-29 07:02:19	<--	commandocoding (~commandoc@106.202.67.214) has left #python
2014-05-29 07:02:34	-->	samyn (~quassel@95.211.149.236) has joined #python
2014-05-29 07:02:49	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-29 07:02:55	-->	TkTech (~TkTech@irc.tkte.ch) has joined #python
2014-05-29 07:03:13	<--	`mist (~mist@c-74fa70d5.034-4-67626721.cust.bredbandsbolaget.se) has left #python
2014-05-29 07:03:15	-->	amargherio (~MarioEIU@69.197.156.5) has joined #python
2014-05-29 07:04:13	-->	Vorpal (~Vorpal@unaffiliated/vorpal) has joined #python
2014-05-29 07:05:32	-->	thoolihan (~thoolihan@cpe-107-10-22-116.neo.res.rr.com) has joined #python
2014-05-29 07:05:39	<--	andtorg (~andtorg@62.196.98.87) has quit (Quit: WeeChat 0.4.3)
2014-05-29 07:05:42	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-29 07:06:10	-->	Deithrian (~Deithrian@unaffiliated/deithrian) has joined #python
2014-05-29 07:06:26	-->	michaelis (~michael@5.57.241.137) has joined #python
2014-05-29 07:06:32	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-29 07:06:32	-->	kuramanga (~Kura@unaffiliated/kuramanga) has joined #python
2014-05-29 07:06:41	<--	kuramanga (~Kura@unaffiliated/kuramanga) has left #python
2014-05-29 07:06:44	-->	froex (1f0a014a@gateway/web/freenode/ip.31.10.1.74) has joined #python
2014-05-29 07:06:51	--	swebb is now known as zz_swebb
2014-05-29 07:07:04	michaelis	Hi. If I want to ask questions about PyGObject, where do I go then?
2014-05-29 07:07:27	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 265 seconds)
2014-05-29 07:07:29	-->	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has joined #python
2014-05-29 07:09:11	-->	Mrokii (~Mrokii@planeshift/bugs/Mrokii) has joined #python
2014-05-29 07:09:20	-->	aberrant (~aberrant@unaffiliated/aberrant) has joined #python
2014-05-29 07:09:31	l4cr0ss	When I do virtualenv ENV, is everything I do with python after that automatically put into the new virtual environment?
2014-05-29 07:11:08	agrajag42	l4cr0ss: like installing new packages?
2014-05-29 07:12:03	l4cr0ss	agrajag42: yes, like doing `pip install django`
2014-05-29 07:12:05	agrajag42	l4cr0ss: You just need to make sure you activate your virtualenv before you do any installs,
2014-05-29 07:12:15	Juhaz	michaelis, #python in irc.gnome.org
2014-05-29 07:12:16	anddam	is there a pandas-specific channel?
2014-05-29 07:12:23	l4cr0ss	agrajag42: so, `source bin/activate`?
2014-05-29 07:12:23	<--	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has quit (Quit: jr3)
2014-05-29 07:12:26	agrajag42	exactly
2014-05-29 07:12:32	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 07:12:42	l4cr0ss	agrajag42: when I do `pip install ...` after that, i get the error pkg_resources.DistributionNotFound: pip==1.2.1
2014-05-29 07:13:30	-->	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has joined #python
2014-05-29 07:13:43	anddam	l4cr0ss: also check that the activate script is correct for your running shell
2014-05-29 07:13:44	<--	firecat53 (~firecat53@198.15.108.186) has quit (Ping timeout: 265 seconds)
2014-05-29 07:14:12	-->	jwhisnant (~jwhisnant@unaffiliated/jwhisnant) has joined #python
2014-05-29 07:14:31	Avaris	anddam: not that i know of
2014-05-29 07:14:41	<--	lifty (~lifty@092-111-174-199.static.chello.nl) has quit (Ping timeout: 252 seconds)
2014-05-29 07:15:02	-->	tesuji (~tesuji@unaffiliated/tesuji) has joined #python
2014-05-29 07:15:34	Juhaz	michaelis, nothing wrong with asking here either, though the questions in less-known subjects may get lost in the chatter with so many people around.
2014-05-29 07:15:41	anddam	Avaris: I see
2014-05-29 07:16:13	Avaris	anddam: you can ask here
2014-05-29 07:16:13	michaelis	Juhaz, Thank you. But maybe I'm on right track now.
2014-05-29 07:16:16	-->	kempe (~smuxi@c83-253-166-20.bredband.comhem.se) has joined #python
2014-05-29 07:16:18	-->	guhcampos (~guhcampos@186.249.5.2) has joined #python
2014-05-29 07:16:19	-->	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has joined #python
2014-05-29 07:16:29	<--	kempe (~smuxi@c83-253-166-20.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2014-05-29 07:16:36	-->	knesenko (~knesenko@redhat/knesenko) has joined #python
2014-05-29 07:16:57	-->	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has joined #python
2014-05-29 07:17:20	<--	alemedeiros (~alemedeir@187.10.22.149) has quit (Ping timeout: 255 seconds)
2014-05-29 07:17:34	-->	Elek101 (~textual@133.103-240-81.adsl-dyn.isp.belgacom.be) has joined #python
2014-05-29 07:17:39	-->	`Reflector` (~pritishc@182.68.162.45) has joined #python
2014-05-29 07:17:42	-->	SrPx (b162647c@gateway/web/freenode/ip.177.98.100.124) has joined #python
2014-05-29 07:17:50	<--	faldridge (~faldridge@172.56.9.130) has quit (Remote host closed the connection)
2014-05-29 07:18:24	SrPx	Hello, I am opening a C TCP server from Python using `call(['./server &'], shell=True)`. How do I close that process ?
2014-05-29 07:18:35	<--	knesenko (~knesenko@redhat/knesenko) has quit (Client Quit)
2014-05-29 07:18:58	<--	guhcampos (~guhcampos@186.249.5.2) has left #python
2014-05-29 07:19:11	CatKiller	SrPx: You shouldn't use "call" since the process won't return
2014-05-29 07:19:18	CatKiller	If it's a server it'll keep listening
2014-05-29 07:19:27	SrPx	CatKiller: so how do I do this?
2014-05-29 07:19:33	-->	tedoc2000 (~tedoc2000@nat/yahoo/x-aqkcmjpcqvtjzhvd) has joined #python
2014-05-29 07:19:54	CatKiller	you could use subprocess.Popen
2014-05-29 07:20:12	CatKiller	p = subprocess.Popen(["server"])
2014-05-29 07:20:20	CatKiller	when you want to kill it, p.terminate()
2014-05-29 07:20:24	SrPx	thanks!
2014-05-29 07:20:28	-->	alemedeiros (~alemedeir@187.10.22.149) has joined #python
2014-05-29 07:20:29	CatKiller	Also never use "shell = True"
2014-05-29 07:20:34	SrPx	why?
2014-05-29 07:20:41	CatKiller	It's insecure and not useful
2014-05-29 07:20:46	SrPx	I see!
2014-05-29 07:20:48	SrPx	thanks
2014-05-29 07:20:50	CatKiller	Also here, don't call "&" to "fork" your program
2014-05-29 07:21:01	anddam	Avaris: right now I solved my issue by reading the docs so my question stand as of general interest
2014-05-29 07:21:01	CatKiller	or rather to "daemonize" it
2014-05-29 07:21:07	<--	infernix (nix@unaffiliated/infernix) has quit (Ping timeout: 245 seconds)
2014-05-29 07:21:14	SrPx	(I have no idea what it does)
2014-05-29 07:21:15	anddam	Avaris: I will ask here should I have other issue
2014-05-29 07:21:19	anddam	actually I'm pretty sure I will
2014-05-29 07:21:19	SrPx	thank you (:
2014-05-29 07:21:22	CatKiller	you're already creating an independent process
2014-05-29 07:21:48	Avaris	anddam: ok :)
2014-05-29 07:21:49	<--	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has quit (Quit: WeeChat 0.4.2)
2014-05-29 07:21:53	<--	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has quit (Ping timeout: 264 seconds)
2014-05-29 07:21:54	anddam	in my case I had two column in a csv file, a date and a time column in short ISO8601 format
2014-05-29 07:22:07	<--	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has quit (Quit: Leaving.)
2014-05-29 07:22:24	anddam	the way to merge two columns when calling pandas.read_csv is passing parse_dates= arg
2014-05-29 07:22:43	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-29 07:22:47	anddam	in my case  parse_dates=[[0, 1]]  merged the two columns providing correct timestamps
2014-05-29 07:23:09	SrPx	CatKiller: just a last question, how do I send args to subprocess.Popen?
2014-05-29 07:23:25	-->	ghostlines (~ghostline@92.109.90.61) has joined #python
2014-05-29 07:23:33	CatKiller	SrPx: Popen(["binary", "arg1", "arg2"])
2014-05-29 07:23:42	sbuettner	SrPx: I usually use shlex.split() for that
2014-05-29 07:23:42	CatKiller	Popen(["ls", "-la"])
2014-05-29 07:23:46	SrPx	simple enough, thanks! (:
2014-05-29 07:24:00	<--	MikOo (~Icedove@2a01:e35:8a39:2a50:225:22ff:fe59:a088) has quit (Remote host closed the connection)
2014-05-29 07:24:09	<--	techdragon (~techdrago@106-69-164-17.dyn.iinet.net.au) has quit (*.net *.split)
2014-05-29 07:24:26	-->	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-29 07:24:44	-->	techdragon (~techdrago@106-69-164-17.dyn.iinet.net.au) has joined #python
2014-05-29 07:25:02	-->	faldridg_ (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-29 07:25:16	CatKiller	SrPx: Reference: n item is an
2014-05-29 07:25:21	-->	armlesshobo (~ahobo@unaffiliated/armlesshobo) has joined #python
2014-05-29 07:25:33	SrPx	?
2014-05-29 07:25:34	CatKiller	sorry: https://docs.python.org/2/library/subprocess.html#popen-constructor
2014-05-29 07:25:45	SrPx	ty (:
2014-05-29 07:26:20	-->	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has joined #python
2014-05-29 07:26:41	<--	fcodiaz (~fcodiaz@adsl-184-47-230-90.asm.bellsouth.net) has quit (Ping timeout: 264 seconds)
2014-05-29 07:27:33	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 276 seconds)
2014-05-29 07:27:55	-->	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has joined #python
2014-05-29 07:28:31	-->	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has joined #python
2014-05-29 07:28:34	<--	ascarter (~ascarter@c-24-22-157-14.hsd1.wa.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 07:28:36	<--	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-29 07:28:43	michaelis	If I use the help() in console, is it possible to search for a keyword if the text span several pages?
2014-05-29 07:28:48	-->	knesenko (~knesenko@redhat/knesenko) has joined #python
2014-05-29 07:28:49	<--	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has quit (Max SendQ exceeded)
2014-05-29 07:29:29	-->	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has joined #python
2014-05-29 07:29:33	-->	quake_guy (~brett@gos-bketter-d3.uwm.edu) has joined #python
2014-05-29 07:30:02	-->	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has joined #python
2014-05-29 07:30:36	<--	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has quit (Ping timeout: 240 seconds)
2014-05-29 07:30:44	-->	Burrito (~Burrito@unaffiliated/burrito) has joined #python
2014-05-29 07:31:18	<--	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has quit (Ping timeout: 240 seconds)
2014-05-29 07:31:36	-->	cesarkawakami (~cesarkawa@177.45.91.199) has joined #python
2014-05-29 07:31:47	<--	jnhghy (~jalexandr@86.125.114.50) has quit (Quit: Ex-Chat)
2014-05-29 07:32:42	-->	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has joined #python
2014-05-29 07:33:04	<--	gimps (~noone@unaffiliated/gimps) has quit (Read error: Connection reset by peer)
2014-05-29 07:33:11	-->	lmpyspaceprncs (~noone@unaffiliated/gimps) has joined #python
2014-05-29 07:33:23	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 07:33:40	-->	AeroNotix (~AeroNotix@37.139.18.183) has joined #python
2014-05-29 07:33:42	mon5ter	would this work: http://bpaste.net/show/iVbxbOtDu9kNsBDokkjh/
2014-05-29 07:33:54	mon5ter	or do i have to place "get_name()" above my "__init__"
2014-05-29 07:34:02	mon5ter	looks so unnatural to me :(
2014-05-29 07:35:09	<--	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has quit (*.net *.split)
2014-05-29 07:35:09	<--	kylls (~rootc0rp@unaffiliated/kylls) has quit (*.net *.split)
2014-05-29 07:35:09	<--	Numinex (~namynaxx@unaffiliated/numinex) has quit (*.net *.split)
2014-05-29 07:35:09	<--	DarkOrb (~DarkOrb@2406:e000:970b:0:dde9:75cc:2f01:5fe0) has quit (*.net *.split)
2014-05-29 07:35:09	<--	Adran (adran@botters/staff/adran) has quit (*.net *.split)
2014-05-29 07:35:10	<--	cibs (~cibs@118-163-170-73.HINET-IP.hinet.net) has quit (*.net *.split)
2014-05-29 07:35:10	<--	caughtinflux (~flux@unaffiliated/caughtinflux) has quit (*.net *.split)
2014-05-29 07:35:10	<--	merlin83 (~merlin83@unaffiliated/merlin83) has quit (*.net *.split)
2014-05-29 07:35:10	<--	Kaltiz (~Kaltiz@198.15.111.34) has quit (*.net *.split)
2014-05-29 07:35:10	<--	oculux (~oculux@CPE-124-178-243-219.static.qld.bigpond.net.au) has quit (*.net *.split)
2014-05-29 07:35:21	Avaris	mon5ter: it'll work (but get_name sets the name rather than getting it)
2014-05-29 07:35:30	-->	merlin83 (~merlin83@unaffiliated/merlin83) has joined #python
2014-05-29 07:35:31	-->	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has joined #python
2014-05-29 07:35:31	mon5ter	yeah i know
2014-05-29 07:35:34	-->	Kaltiz (~Kaltiz@198.15.111.34) has joined #python
2014-05-29 07:35:37	<--	kevin-brown (~kbrown@unaffiliated/kevin-brown) has quit (Read error: Connection reset by peer)
2014-05-29 07:35:41	mon5ter	it's just about placing my methods
2014-05-29 07:35:47	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-29 07:35:50	-->	sqrrl (~mj@unaffiliated/squirrel) has joined #python
2014-05-29 07:35:53	-->	Sevith (~Sevith@unaffiliated/sevith) has joined #python
2014-05-29 07:35:56	mon5ter	thanks
2014-05-29 07:35:58	mon5ter	av0idz
2014-05-29 07:35:59	mon5ter	äh
2014-05-29 07:36:01	mon5ter	Avaris
2014-05-29 07:36:02	mon5ter	:)
2014-05-29 07:36:03	-->	kevin-brown (~kbrown@unaffiliated/kevin-brown) has joined #python
2014-05-29 07:36:08	-->	mmikeym (~mikeym@184.70.65.118) has joined #python
2014-05-29 07:36:10	jkbbwr	Long shot but does anyone here have a paid python contract going in London?
2014-05-29 07:36:17	-->	dvx (~dvx@igw.obsm.cz) has joined #python
2014-05-29 07:36:36	-->	nande (~quassel@190.183.4.91) has joined #python
2014-05-29 07:36:40	-->	kylls (~rootc0rp@184.106.81.76) has joined #python
2014-05-29 07:36:40	-->	DarkOrb (~DarkOrb@2406:e000:970b:0:a145:843d:2b37:6321) has joined #python
2014-05-29 07:36:52	-->	buck1 (~buck1@c-98-248-112-191.hsd1.ca.comcast.net) has joined #python
2014-05-29 07:37:14	-->	Numinex (~namynaxx@unaffiliated/numinex) has joined #python
2014-05-29 07:37:18	<--	kosh (~kosh@aesaeion.com) has quit (Ping timeout: 240 seconds)
2014-05-29 07:37:25	<--	ragsagar (~ragsagar@unaffiliated/ragsagar) has quit (Ping timeout: 265 seconds)
2014-05-29 07:37:50	<--	crapp (~quassel@unaffiliated/saedelaere) has quit (Read error: Connection reset by peer)
2014-05-29 07:38:06	<--	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has quit (*.net *.split)
2014-05-29 07:38:06	<--	Kaltiz (~Kaltiz@198.15.111.34) has quit (*.net *.split)
2014-05-29 07:38:06	<--	merlin83 (~merlin83@unaffiliated/merlin83) has quit (*.net *.split)
2014-05-29 07:38:06	<--	techdragon (~techdrago@106-69-164-17.dyn.iinet.net.au) has quit (*.net *.split)
2014-05-29 07:38:06	<--	derek_v (~derek_v@cpe-75-80-57-182.san.res.rr.com) has quit (*.net *.split)
2014-05-29 07:38:06	<--	Zespre (~starbops@winpc13.cs.nctu.edu.tw) has quit (*.net *.split)
2014-05-29 07:38:06	<--	Rundll (~ircrelay@rs.tasgn.com) has quit (*.net *.split)
2014-05-29 07:38:06	<--	chihhsin (~chihhsin@linux3.cs.nctu.edu.tw) has quit (*.net *.split)
2014-05-29 07:38:12	<--	tesuji (~tesuji@unaffiliated/tesuji) has quit (Ping timeout: 245 seconds)
2014-05-29 07:38:12	-->	Rundll_ (~ircrelay@rs.tasgn.com) has joined #python
2014-05-29 07:38:19	-->	techdragon (~techdrago@106-69-164-17.dyn.iinet.net.au) has joined #python
2014-05-29 07:38:25	anddam	I'm trying to run talib in pypi with pandas Series, from https://github.com/mrjbq7/ta-lib I see "For convenience, the Function API supports both numpy.ndarray and pandas.Series types."
2014-05-29 07:38:27	-->	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has joined #python
2014-05-29 07:38:34	-->	Kaltiz (~Kaltiz@198.15.111.34) has joined #python
2014-05-29 07:38:35	-->	Adran (adran@botters/staff/adran) has joined #python
2014-05-29 07:38:40	<--	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has quit (Client Quit)
2014-05-29 07:39:00	-->	merlin83_ (~merlin83@128.199.250.142) has joined #python
2014-05-29 07:39:04	anddam	but then trying to call talib.SMA(d) results in    TypeError: Argument 'real' has incorrect type (expected numpy.ndarray, got Series)
2014-05-29 07:39:11	<--	edofso (~edofso@a80-100-189-109.adsl.xs4all.nl) has quit (Remote host closed the connection)
2014-05-29 07:39:17	-->	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has joined #python
2014-05-29 07:39:23	<--	sec_ (fami@unaffiliated/sec/x-020333) has left #python
2014-05-29 07:39:28	<--	condy (~condy@2001:da8:4004:253:3e97:eff:fe2d:1e82) has quit (Quit: WeeChat 0.4.3)
2014-05-29 07:39:31	<--	ChristianS (~Christian@h1774509.stratoserver.net) has quit (Excess Flood)
2014-05-29 07:39:31	--	johnraz is now known as johnraz|away
2014-05-29 07:39:54	<--	thomi (quassel@conference/canonical/x-xwhgevswxkjegzvq) has quit (Remote host closed the connection)
2014-05-29 07:39:56	anddam	oh my bad, https://github.com/mrjbq7/ta-lib/issues/56
2014-05-29 07:40:04	--	johnraz|away is now known as johnraz
2014-05-29 07:40:27	-->	GGMethos (~methos@162.243.233.180) has joined #python
2014-05-29 07:40:34	-->	fcodiaz (~fcodiaz@32.sub-70-193-132.myvzw.com) has joined #python
2014-05-29 07:40:49	<--	merlin83_ (~merlin83@128.199.250.142) has quit (Changing host)
2014-05-29 07:40:49	-->	merlin83_ (~merlin83@unaffiliated/merlin83) has joined #python
2014-05-29 07:41:05	<--	dcrosta (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2014-05-29 07:41:14	-->	ChristianS (~Christian@h1774509.stratoserver.net) has joined #python
2014-05-29 07:42:31	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #python
2014-05-29 07:42:44	<--	SittingShiva (~textual@68.204.154.30) has quit (Ping timeout: 265 seconds)
2014-05-29 07:43:04	-->	thiderman (~thiderman@192.121.140.145) has joined #python
2014-05-29 07:43:05	-->	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has joined #python
2014-05-29 07:44:12	<--	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2014-05-29 07:44:21	<--	ua (~ua@unaffiliated/uniqanomaly) has quit (Quit: Leaving)
2014-05-29 07:44:35	<--	shello (~shello@bl14-187-207.dsl.telepac.pt) has quit (Quit: shello)
2014-05-29 07:44:46	-->	chihhsin (~chihhsin@linux3.cs.nctu.edu.tw) has joined #python
2014-05-29 07:45:22	<--	guilhermebr (~guilherme@186.226.67.36) has quit (Remote host closed the connection)
2014-05-29 07:45:40	-->	ua (~ua@unaffiliated/uniqanomaly) has joined #python
2014-05-29 07:45:44	-->	DrDamnit (~michael@highpoweredhelp.com) has joined #python
2014-05-29 07:45:44	anddam	and if someone gets into the same issue "Passing a Series directly to a cython function expecting an ndarray type will no long work directly, you must pass Series.values, " from http://pandas.pydata.org/pandas-docs/stable/whatsnew.html#whatsnew-0130-refactoring
2014-05-29 07:45:51	shunya_chakra	is python irc log messages?
2014-05-29 07:45:53	<--	mven_ (~textual@ip68-104-38-84.lv.lv.cox.net) has quit (Ping timeout: 264 seconds)
2014-05-29 07:46:08	-->	derek_v (~derek_v@cpe-75-80-57-182.san.res.rr.com) has joined #python
2014-05-29 07:46:30	CatKiller	shunya_chakra: What do you mean?
2014-05-29 07:46:36	<--	`Reflector` (~pritishc@182.68.162.45) has quit (Quit: Leaving)
2014-05-29 07:46:50	-->	thomi (quassel@conference/canonical/x-ppcgxafevyfuyqwi) has joined #python
2014-05-29 07:46:52	-->	aholmberg (~aholmberg@64.202.160.233) has joined #python
2014-05-29 07:47:25	shunya_chakra	CatKiller, i mean are they is python irc channel store all messages and can i access it?
2014-05-29 07:47:41	shunya_chakra	chat
2014-05-29 07:47:41	--	Joost`away is now known as Joost
2014-05-29 07:47:56	wwnnbb	hi guys please can some one tip what library i must use for site scraping?
2014-05-29 07:48:06	wwnnbb	lxml is my solution?
2014-05-29 07:48:08	greenbelt	Do you mean for logs ?
2014-05-29 07:48:15	CatKiller	shunya_chakra: I have no idea what you mean sorry
2014-05-29 07:48:26	Avaris	wwnnbb: lxml is good
2014-05-29 07:48:35	greenbelt	Wwnnbb: scrapy
2014-05-29 07:48:38	-->	digicyc (~digicyc@unaffiliated/digicyc) has joined #python
2014-05-29 07:48:59	CatKiller	shunya_chakra: Are you asking whether the FreeNode IRC channel #python has online logs somewhere (like on http://pound-python.org/)?
2014-05-29 07:49:48	shunya_chakra	Thanks CatKiller
2014-05-29 07:49:50	greenbelt	CatKiller:  i think seems like that :)
2014-05-29 07:50:10	CatKiller	shunya_chakra: I haven't answered the question yet, I was actually asking you one :p
2014-05-29 07:50:33	-->	drvanon (~drvanon@86.85.138.215) has joined #python
2014-05-29 07:50:36	shunya_chakra	i thought that link was my answer.. i was reading that... :P
2014-05-29 07:50:43	<--	Ard1t (~Ardit@unaffiliated/ard1t) has quit (Ping timeout: 252 seconds)
2014-05-29 07:50:45	shunya_chakra	yup that was the question
2014-05-29 07:50:50	<--	nielsle (~nielsle@3239078-cl69.boa.fiberby.dk) has quit (Quit: Ex-Chat)
2014-05-29 07:50:51	-->	txtsd (txtsd@115.69.254.65) has joined #python
2014-05-29 07:51:02	CatKiller	I don't know of any, sorry
2014-05-29 07:51:12	shunya_chakra	I think i didn't asked that time quesiton clearly
2014-05-29 07:51:18	shunya_chakra	np Catkiller :)
2014-05-29 07:51:48	-->	thedodd (~Anthony@rrcs-67-78-97-126.sw.biz.rr.com) has joined #python
2014-05-29 07:51:59	<--	nande (~quassel@190.183.4.91) has quit (Quit: No Ping reply in 180 seconds.)
2014-05-29 07:52:00	drvanon	I had a case some time ago where the thread kept going, even after the main program ended. I am in a situation where I am not sure if the thread was created or not and need to check if it still exists. How do I do this?
2014-05-29 07:52:16	--	Joost is now known as Joost`away
2014-05-29 07:52:16	<--	legless399 (~samtur@195.81.28.46) has quit (Read error: Connection reset by peer)
2014-05-29 07:52:48	<--	semberal (~semberal@216.240.161.68) has quit (Quit: ZNC - http://znc.in)
2014-05-29 07:52:55	<--	frothnicator (~frothy@unaffiliated/frothnicator) has quit (Quit: Leaving.)
2014-05-29 07:53:08	CatKiller	drvanon: Presumably if you kill the process that spawned the thread, that thread will cease to exist too
2014-05-29 07:53:11	<--	thiderman (~thiderman@192.121.140.145) has quit (Ping timeout: 252 seconds)
2014-05-29 07:53:11	<--	michaelis (~michael@5.57.241.137) has quit (Ping timeout: 252 seconds)
2014-05-29 07:53:14	-->	nande (~quassel@190.183.4.91) has joined #python
2014-05-29 07:53:16	CatKiller	But I'm not good with threads
2014-05-29 07:53:19	-->	bfig (~bruno@srvexchange.datamatic.com.uy) has joined #python
2014-05-29 07:53:35	keypusher	depends, it can become zombie
2014-05-29 07:53:42	keypusher	https://pypi.python.org/pypi/psutil perhaps
2014-05-29 07:53:44	bfig	hello, I'm trying to understand what's going on on a function on my code and I want to explore it. Can I do this with pdb?
2014-05-29 07:53:53	keypusher	yes
2014-05-29 07:54:05	bfig	ie, i've already went past it in the execution flow, I want to manually execute it and step into it from pdb
2014-05-29 07:54:07	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 07:54:11	nanonyme	drvanon, yeah, nondaemon threads prevent process from terminating. Killing it works as expected
2014-05-29 07:54:22	-->	OverNord (~brn@host-091-097-122-121.ewe-ip-backbone.de) has joined #python
2014-05-29 07:54:46	nanonyme	Threads in Python conceptually are such that their termination is waited
2014-05-29 07:54:53	<--	rquid (~sashka@94.41.177.225) has quit (Quit: Leaving.)
2014-05-29 07:55:02	-->	rquid (~sashka@94.41.177.225) has joined #python
2014-05-29 07:55:05	keypusher	bfig: you can step through from whatever point you set the break
2014-05-29 07:55:22	CatKiller	nanonyme: Are python threads "real" OS threads by the way? Or they are internal to the interpreter?
2014-05-29 07:55:29	nanonyme	CatKiller, real threads
2014-05-29 07:55:31	CatKiller	I guess "real", but not sure
2014-05-29 07:55:38	<--	cesarkawakami (~cesarkawa@177.45.91.199) has quit (Ping timeout: 240 seconds)
2014-05-29 07:55:48	nanonyme	CatKiller, or rather, real threads with limitations
2014-05-29 07:55:49	CatKiller	Ok, and stackless python "threads" like greenlets are "fake"?
2014-05-29 07:56:04	CatKiller	as in they only live in the scope of the Python interpreter
2014-05-29 07:56:36	<--	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has quit (Ping timeout: 240 seconds)
2014-05-29 07:56:37	bfig	keypusher: i am right now on pdb, debugging still in scope of the offending function, but how do I execute it and follow it with pdb?
2014-05-29 07:56:50	-->	rafagomes (~rafagomes@177.157.205.190) has joined #python
2014-05-29 07:57:08	CatKiller	bfig: You call "pdb" in the place you want to start debugging from
2014-05-29 07:57:11	bfig	ie, my function is fun, and it just gave False, now that I know that is the function I need to look I don't want to go back and reexecute everything, I just want to reexecute this particular function
2014-05-29 07:57:15	CatKiller	and you can "step" the execution with "n"
2014-05-29 07:57:21	--	elyezer is now known as elyezer|lunch
2014-05-29 07:57:23	-->	eriko (~eriko@50-192-202-145-static.hfc.comcastbusiness.net) has joined #python
2014-05-29 07:57:33	nanonyme	CatKiller, well, greenlets are pretty much a hack and an inferior implementation of in-process-threading. Stackless has tasklets which are the real thing. PyPy supports these
2014-05-29 07:57:46	-->	dcrosta (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has joined #python
2014-05-29 07:57:48	CatKiller	bfig: You can also go to "previous" as well to go back
2014-05-29 07:57:58	bfig	ohh let me try that
2014-05-29 07:58:14	bfig	how can I do that CatKiller ?
2014-05-29 07:58:14	CatKiller	nanonyme: Interesting, I didn't know about that, I thought greenlet was the concrete implementation of the stackless concept
2014-05-29 07:58:21	-->	bkuberek (~bkuberek@2600:c0e:3002:118:d4e0:1f6:a730:6ea0) has joined #python
2014-05-29 07:58:39	CatKiller	bfig: https://docs.python.org/2/library/pdb.html#pdb.set_trace
2014-05-29 07:58:41	<--	bkuberek (~bkuberek@2600:c0e:3002:118:d4e0:1f6:a730:6ea0) has quit (Remote host closed the connection)
2014-05-29 07:58:58	bfig	but I don't want to set_trace, I already know how that works
2014-05-29 07:59:03	CatKiller	And once in pdb, call that: https://docs.python.org/2/library/pdb.html#debugger-commands
2014-05-29 07:59:08	bfig	this is code that I don't control and i'm pretty deep on the execution flow
2014-05-29 07:59:14	-->	jkyle3 (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-29 07:59:18	-->	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has joined #python
2014-05-29 07:59:20	bfig	i've already set_trace()'d
2014-05-29 07:59:29	CatKiller	bfig: So you want to debug a running program without altering it in any way?
2014-05-29 07:59:32	bfig	but i just went past the offending function
2014-05-29 07:59:36	keypusher	bfig: use s to step in, or n to step over
2014-05-29 07:59:51	nanonyme	CatKiller, anyway, Python threads are OS threads. greenlets are green threads. There's a Wikipedia article of green threads, it's a cross-language concept
2014-05-29 07:59:53	-->	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has joined #python
2014-05-29 07:59:59	keypusher	bfig: you can also call functions like "debug funcName()"
2014-05-29 08:00:09	bfig	I think i'm not communicating what i want to do appropriately. Consider this, you ahve 10 sentences, you know the error is there, but don't know here. Once you go past sentence 5, you realize the error was on a function call on sentence 3
2014-05-29 08:00:15	CatKiller	nanonyme: I'll read about it, thought it was a Python only thing
2014-05-29 08:00:19	-->	MarderIII (~marderii@enneman.demon.nl) has joined #python
2014-05-29 08:00:26	-->	asarch (~asarch@189.148.168.202) has joined #python
2014-05-29 08:00:32	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 08:00:35	asarch	How do you debug a Python-based application
2014-05-29 08:00:37	<--	dape (~dani@freenode/sponsor/dape) has left #python ("Leaving")
2014-05-29 08:00:42	nanonyme	CatKiller, nope. Even early JVM's had green threads. They were abandoned in favour of OS threads
2014-05-29 08:00:49	asarch	I am having some issues after an upgrade process with m64py
2014-05-29 08:00:51	jr3	when you multiply a velocity vector by "dt" say: velocity = (0,1,0) dt = .005   velocity*dt = rate of change, so dt determines rate at which the position changes
2014-05-29 08:01:00	bfig	does that make sene CatKiller ? I don't want to go back and execute everything again, I'm stepping on sentence 6 and I want to execute sentence 3 with the debugger support (while already being on pdb!)
2014-05-29 08:01:02	-->	cesarkawakami (~cesarkawa@177.148.191.31) has joined #python
2014-05-29 08:01:25	keypusher	bfig: "debug your_func()"
2014-05-29 08:01:33	<--	shunya_chakra (~shunya@117.200.77.51) has quit (Quit: Leaving)
2014-05-29 08:01:36	CatKiller	bfig: Since the debugger allows you to go back through the previous frames
2014-05-29 08:01:39	<--	graingert (~graingert@unaffiliated/graingert) has quit (Read error: Connection reset by peer)
2014-05-29 08:01:43	<--	bal1 (~Thunderbi@86.125.63.66) has quit (Quit: bal1)
2014-05-29 08:01:47	CatKiller	even if your debug entry point is later, maybe you can go back
2014-05-29 08:01:50	jr3	I guess what I'm asking is do I think of dt as the speed component to velocity
2014-05-29 08:01:51	CatKiller	to that level
2014-05-29 08:02:00	-->	stranac (d46cd398@gateway/web/freenode/ip.212.108.211.152) has joined #python
2014-05-29 08:02:14	bfig	the call is on this frame, if I execute the function from pdb i get a return 'False' but I want to see why it returns false, ie, inspect the code
2014-05-29 08:02:17	nanonyme	CatKiller, but yeah, Python threads while native come with the limitation that only one thread at a time can touch Python objects (due to design decisions to implement certain atomicity guarantees that come with the language)
2014-05-29 08:02:21	bfig	without having to go back and do everything again to get to that point
2014-05-29 08:02:39	<--	dumdedum (~dumdedum@85.251.33.38.dyn.user.ono.com) has quit (Quit: foo)
2014-05-29 08:02:41	CatKiller	nanonyme: That I knew of ;) I just had confused stackless' microthreads and greenthreads it seems
2014-05-29 08:02:42	<--	ddsl (~kvirc@5.254.239.119) has quit (Read error: Connection reset by peer)
2014-05-29 08:03:21	asarch	Or at least, do more verbose its execution?
2014-05-29 08:03:31	bfig	(Pdb) fun(self,cr,uid,ids)
2014-05-29 08:03:31	bfig	False
2014-05-29 08:03:38	-->	evilbanana (~Unknown@unaffiliated/erectbanana) has joined #python
2014-05-29 08:03:42	<--	rafagomes (~rafagomes@177.157.205.190) has quit (Read error: Connection reset by peer)
2014-05-29 08:03:52	<--	jb (corrupt@shell.vaerchi.com) has left #python
2014-05-29 08:03:52	nanonyme	CatKiller, I'm not sure if anyone really has Real stackless implemented. It involves, obviously, function call stack that is not bound by C stack. Hence stackless
2014-05-29 08:04:01	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-29 08:04:03	bfig	i want to step through this 'fun' function, inspect it's code, etc. but i don't want to get out of the current pdb session. Makes sense?
2014-05-29 08:04:10	-->	bwreilly (~bwreilly@20.sub-70-199-135.myvzw.com) has joined #python
2014-05-29 08:04:13	--	veatch is now known as zz_veatch
2014-05-29 08:04:16	<--	bwreilly (~bwreilly@20.sub-70-199-135.myvzw.com) has quit (Remote host closed the connection)
2014-05-29 08:04:25	dash	bfig: 'debug fun(self, ...)'
2014-05-29 08:04:26	nanonyme	CatKiller, PyPy left this out as well afaik since it was too complex to do
2014-05-29 08:04:30	CatKiller	nanonyme: I thought EVE online relied exclusively on stackless
2014-05-29 08:04:34	--	zz_veatch is now known as veatch
2014-05-29 08:04:36	<--	Biopandemic (~jake@unaffiliated/biopandemic) has quit (Quit: Leaving.)
2014-05-29 08:04:48	dash	CatKiller: yes.
2014-05-29 08:04:50	bfig	ohh nice I didn't understand that was an actual command :p
2014-05-29 08:05:03	dash	bfig: yeah pity it's not documented or mentioned anywhere
2014-05-29 08:05:28	-->	solidus-river (~solidus-r@207.170.224.131) has joined #python
2014-05-29 08:05:34	-->	bwreilly (~bwreilly@20.sub-70-199-135.myvzw.com) has joined #python
2014-05-29 08:05:38	-->	budrose (~budrose@50.198.150.254) has joined #python
2014-05-29 08:06:08	bfig	cool, recursive debugger :p
2014-05-29 08:06:24	bfig	i can't see the code apparently for some reason, I guess I'll just have to go back and do this all again
2014-05-29 08:06:28	bfig	well, thanks for the help! :)
2014-05-29 08:06:30	-->	revoohc (~chrish@12.150.6.65) has joined #python
2014-05-29 08:06:39	nanonyme	CatKiller, well, the point is that Stackless isn't just something you can shoehorn into any arbitrary Python as an installable package. Stackless Python is its own Python implementation afaik
2014-05-29 08:06:40	bfig	(list doesn't work!)
2014-05-29 08:07:22	<--	CodePulsar (~code@unaffiliated/shiningthrough) has quit (Quit: Konversation terminated!)
2014-05-29 08:07:56	dash	what stackless provides is coroutines
2014-05-29 08:07:58	nanonyme	dash, remind me, does Monte rely on C stack for function stack?
2014-05-29 08:08:00	dash	aka "threads but worse"
2014-05-29 08:08:21	dash	nanonyme: not sure how that would matter one way or the other
2014-05-29 08:08:41	dash	nanonyme: there's no hard requirement that it do so... but also no reason not to
2014-05-29 08:08:51	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Remote host closed the connection)
2014-05-29 08:08:51	CatKiller	nanonyme: That's the stackless name that's confusing me I guess.
2014-05-29 08:08:58	dash	CatKiller: yes, it is confusing.
2014-05-29 08:09:04	<--	emorrow (~Thunderbi@185.7.185.250) has quit (Ping timeout: 258 seconds)
2014-05-29 08:09:11	-->	moarrr (~long64@host109-145-205-34.range109-145.btcentralplus.com) has joined #python
2014-05-29 08:09:14	-->	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has joined #python
2014-05-29 08:09:17	-->	mkster_ (~Mkster@i577B7A29.versanet.de) has joined #python
2014-05-29 08:09:21	dash	nanonyme: why do you ask?
2014-05-29 08:09:23	CatKiller	So right now, stackless python is not a stackless python implementation but it basically provides what ammounts to greenthreads ;)
2014-05-29 08:09:25	nanonyme	CatKiller, yeah. C-Stackless would be a fairly silly name
2014-05-29 08:09:27	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-29 08:09:50	nanonyme	dash, mainly since it's one of the core functionalities of Stackless, was wondering how Monte sits with that
2014-05-29 08:09:55	-->	DammitJim (~DammitJim@173.227.148.6) has joined #python
2014-05-29 08:10:02	--	moarrr is now known as moarrr_bitcoins
2014-05-29 08:10:05	nanonyme	Can't get stack overflow by having a deep function stack
2014-05-29 08:10:11	nanonyme	(well, from OS level anyway)
2014-05-29 08:10:13	-->	kjn (~kjn@168.93.96.5) has joined #python
2014-05-29 08:10:19	DammitJim	is there a way to deal with authenticating a user on a portal and then making a web request to get a report?
2014-05-29 08:10:26	-->	eggsmiao (~cat@117.136.19.114) has joined #python
2014-05-29 08:10:27	<--	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has quit (Ping timeout: 276 seconds)
2014-05-29 08:10:37	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Quit: Leaving.)
2014-05-29 08:10:41	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #python
2014-05-29 08:10:42	<--	the_rat (~the_rat@217.200.185.245) has quit (Ping timeout: 245 seconds)
2014-05-29 08:11:10	CatKiller	DammitJim: Depends what the web portal is I guess
2014-05-29 08:11:19	-->	thaum (~arun@122.171.113.7) has joined #python
2014-05-29 08:11:22	<--	txtsd (txtsd@115.69.254.65) has quit (Ping timeout: 258 seconds)
2014-05-29 08:11:22	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-29 08:11:31	DammitJim	CatKiller, what kind of information about the portal do I need?
2014-05-29 08:12:02	-->	emorrow (~Thunderbi@185.7.185.250) has joined #python
2014-05-29 08:12:07	DammitJim	I think they use cas authentication?
2014-05-29 08:12:17	CatKiller	DammitJim: What are you trying to achieve exactly? Are you intending on building a web application (that you call portal) that supports authenticating users using some scheme, and allows to generate auth reports?
2014-05-29 08:12:35	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 08:12:53	<--	Mkster (~Mkster@i577B58DB.versanet.de) has quit (Ping timeout: 264 seconds)
2014-05-29 08:13:01	DammitJim	no, I'm writing a python script that gets a report from this portal to verify that certain things are working correctly
2014-05-29 08:13:10	<--	cesarkawakami (~cesarkawa@177.148.191.31) has quit
2014-05-29 08:13:20	DammitJim	one of those things is a report
2014-05-29 08:13:40	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Ping timeout: 258 seconds)
2014-05-29 08:15:02	<--	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has quit (Quit: jr3)
2014-05-29 08:15:09	CatKiller	DammitJim: OK, so you should lookup the specs of the portal
2014-05-29 08:15:10	<--	durut (~root@71-94-128-82.static.mtpk.ca.charter.com) has quit (Quit: Leaving)
2014-05-29 08:15:11	<--	mattallmill (1000@129.130.175.163) has quit (Ping timeout: 252 seconds)
2014-05-29 08:15:24	CatKiller	and you could use the "requests" library to send HTTP GET/POST requests
2014-05-29 08:15:29	-->	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has joined #python
2014-05-29 08:15:33	<--	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has quit (Ping timeout: 252 seconds)
2014-05-29 08:15:58	DammitJim	I should be able to put all the login information in a payload dictionary, right?
2014-05-29 08:16:03	-->	txtsd (txtsd@115.69.254.65) has joined #python
2014-05-29 08:16:13	CatKiller	DammitJim: How would I know? :P
2014-05-29 08:16:24	CatKiller	You're asking: "How do I use this very proprietary unknown portal?"
2014-05-29 08:16:26	DammitJim	LOL
2014-05-29 08:16:32	DammitJim	oh no
2014-05-29 08:16:48	nanonyme	Also, definitely good idea to use requests if login is involved :)
2014-05-29 08:17:14	-->	DTVD (~DTVD@91.144.197.113.dy.bbexcite.jp) has joined #python
2014-05-29 08:17:23	DammitJim	CatKiller, specs of the portal... like knowing how it handles a login?
2014-05-29 08:17:30	--	Eyess is now known as ExCarrie
2014-05-29 08:17:46	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 08:17:48	-->	AlecTaylor (~Alec@unaffiliated/alectaylor) has joined #python
2014-05-29 08:17:51	AlecTaylor	hi
2014-05-29 08:17:53	--	ExCarrie is now known as Eyess
2014-05-29 08:18:06	--	lorenzosu is now known as lorenzosu_
2014-05-29 08:18:11	-->	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has joined #python
2014-05-29 08:18:14	CatKiller	DammitJim: The specifications document for the portal. It defines the API amongst other things
2014-05-29 08:18:26	-->	mordonez (~mordonez@190.102.132.12) has joined #python
2014-05-29 08:18:28	-->	rippa (~rippa@176.100.246.238) has joined #python
2014-05-29 08:18:49	CatKiller	You're asking: "How do I get the X512 form from some website I know of?"?
2014-05-29 08:18:51	<--	introom (~introom@202.125.231.120) has quit (Ping timeout: 252 seconds)
2014-05-29 08:18:59	<--	samphippen (~textual@37.157.33.78) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 08:19:00	DammitJim	oh gosh
2014-05-29 08:19:01	AlecTaylor	I just found Fabric; is that the best Python-based remote SSH execution framework
2014-05-29 08:19:03	AlecTaylor	?
2014-05-29 08:19:13	CatKiller	this is just an example, but see how it's hard for us to help you. We have no idea what you're trying to do exactly
2014-05-29 08:19:22	DammitJim	CatKiller, understood
2014-05-29 08:19:33	<--	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 276 seconds)
2014-05-29 08:19:35	DammitJim	I'm trying to think of how I need to ask the question to the developer in charge of the portal
2014-05-29 08:19:45	nanonyme	AlecTaylor, afaik Twisted Conch isn't bad eitehr
2014-05-29 08:19:51	anddam	I have a pandas.DataFrame and a numpy.ndarray, how can I create a pandas.DataSeries using the same index as the DataFrame?
2014-05-29 08:19:58	CatKiller	DammitJim: If you're trying to interact with a web application, you should request its specification
2014-05-29 08:20:10	anddam	I don't know how to "extract" an existing DataSeries' index column
2014-05-29 08:20:18	<--	matthias_ (543b973a@gateway/web/freenode/ip.84.59.151.58) has quit (Ping timeout: 240 seconds)
2014-05-29 08:20:21	DammitJim	alright
2014-05-29 08:20:24	-->	dcrosta_ (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has joined #python
2014-05-29 08:20:24	AlecTaylor	nanonyme: Cheers, I'll check it out
2014-05-29 08:20:36	<--	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has quit (Ping timeout: 272 seconds)
2014-05-29 08:20:38	CatKiller	DammitJim: That's what I would do
2014-05-29 08:20:53	-->	yiati (~yiati@74.203.188.66) has joined #python
2014-05-29 08:21:17	-->	SteveG- (~SteveG@pdpc/supporter/21for7/steveg) has joined #python
2014-05-29 08:21:19	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-29 08:21:53	anddam	s/DataSeries/Series/g
2014-05-29 08:22:01	<--	txtsd (txtsd@115.69.254.65) has quit (Disconnected by services)
2014-05-29 08:22:22	<--	flosch (~flosch@unaffiliated/flosch) has quit (Ping timeout: 265 seconds)
2014-05-29 08:22:28	<--	SteveG- (~SteveG@pdpc/supporter/21for7/steveg) has quit (Client Quit)
2014-05-29 08:22:42	-->	Gambit- (~Gambit-@unaffiliated/gambit-) has joined #python
2014-05-29 08:23:02	<--	spergy (~w33nd0x@CPE-124-182-214-254.lns2.way.bigpond.net.au) has quit (Ping timeout: 255 seconds)
2014-05-29 08:23:11	--	moarrr_bitcoins is now known as moarrr_darkcoins
2014-05-29 08:23:49	-->	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has joined #python
2014-05-29 08:24:04	--	johnraz is now known as johnraz|away
2014-05-29 08:24:11	<--	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has quit (Quit: WeeChat 0.4.3)
2014-05-29 08:24:32	--	greenbelt is now known as gargeet-shingh
2014-05-29 08:25:19	<--	Sevith (~Sevith@unaffiliated/sevith) has left #python ("Leaving")
2014-05-29 08:25:24	Siegel	is there a way to see if a instance is in a list of instances using a string name of some sort?
2014-05-29 08:26:07	CatKiller	Siegel: You could iterate over that list and use the "is" operator.
2014-05-29 08:26:22	<--	budrose (~budrose@50.198.150.254) has quit (Remote host closed the connection)
2014-05-29 08:26:33	<--	jml_ (jml@nat/google/x-yvqtipsmfrtjcvtj) has quit (Quit: Computer has gone to sleep.)
2014-05-29 08:26:35	-->	zlalanne (~zlalanne@nat/ti/x-inskuqrlybtodtfu) has joined #python
2014-05-29 08:26:42	<--	tyll (~till@fedora/tyll) has quit (Ping timeout: 276 seconds)
2014-05-29 08:26:42	-->	spergy (~w33nd0x@CPE-124-182-214-254.lns2.way.bigpond.net.au) has joined #python
2014-05-29 08:26:45	CatKiller	class C(): pass; c = C(); x = c, y = c, z = c; L = [x, y]; assert z in L
2014-05-29 08:26:58	CatKiller	That might not be what you're asking about
2014-05-29 08:27:01	mic_e	I've just had the strangest heisenbug... I have a webserver (http.server.HTTPServer, BaseHTTPRequestHandler) that handles simple requests. it's running inside a thread. it is installed by setup.py to /usr/local/lib...
2014-05-29 08:27:05	AlecTaylor	l0l, not what you want to see nanonyme - http://shiroyuki.com/work/project-imagination
2014-05-29 08:27:10	mic_e	when running it via python3 -m modulename everythin gworks
2014-05-29 08:27:14	Siegel	is there a way to do it without a loop using "v in x" for example?
2014-05-29 08:27:14	AlecTaylor	Get the actual traceback
2014-05-29 08:27:28	mic_e	when running it via import modulename.__main__, the requests aren't handled correctly
2014-05-29 08:27:39	CatKiller	Siegel: No loop in my example above
2014-05-29 08:27:40	<--	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has quit (Quit: ArcTanSusan)
2014-05-29 08:27:41	mic_e	namely, the clients have to wait eternally for an answer
2014-05-29 08:27:46	--	elyezer|lunch is now known as elyezer
2014-05-29 08:27:47	mic_e	what the hell is going on here
2014-05-29 08:27:48	CatKiller	You can also use "in"
2014-05-29 08:28:04	-->	tyll (~till@fedora/tyll) has joined #python
2014-05-29 08:28:09	-->	frothnicator (~frothy@unaffiliated/frothnicator) has joined #python
2014-05-29 08:28:27	cob	in tests equality, not reference
2014-05-29 08:28:33	-->	ncthom91 (~ncthom91@173.252.71.129) has joined #python
2014-05-29 08:28:37	<--	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has quit (Quit: wwnnbb)
2014-05-29 08:28:53	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 255 seconds)
2014-05-29 08:28:57	cob	me thinks
2014-05-29 08:29:02	<--	macieks (~macieks@ip-222-135.ists.pl) has quit (Ping timeout: 245 seconds)
2014-05-29 08:29:05	-->	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has joined #python
2014-05-29 08:29:18	CatKiller	cob: You're probably right, let me check
2014-05-29 08:29:24	Siegel	CatKiller: is there a way to do that without using the actual object?
2014-05-29 08:29:33	<--	wwnnbb (~wwnnbb@trancom-gw.anders.ru) has quit (Client Quit)
2014-05-29 08:29:52	CatKiller	Siegel: Don't understand
2014-05-29 08:29:53	Siegel	class C(): pass; c = C(); x = c, y = c, z = c; L = [x, y]; assert 'z' in L
2014-05-29 08:30:03	mic_e	plus, the thing only happens on my python3.2 debian box, not on my python3.4 arch machine
2014-05-29 08:30:05	CatKiller	Siegel: nope
2014-05-29 08:30:08	DammitJim	alright... I got some info... it's CAS authentication that is used
2014-05-29 08:30:19	-->	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has joined #python
2014-05-29 08:30:20	<--	mangekyo (mangekyo@c211-30-60-1.frank3.vic.optusnet.com.au) has quit
2014-05-29 08:30:24	CatKiller	The instance is an object. A string is a string
2014-05-29 08:30:26	DammitJim	then a sessionToken is used for further requests
2014-05-29 08:30:28	-->	Alina-malina (Alina-mali@unaffiliated/alina-malina) has joined #python
2014-05-29 08:30:29	CatKiller	unless you have a mapping of string to instance
2014-05-29 08:30:40	-->	cocogrove (~courtney@24.249.102.210) has joined #python
2014-05-29 08:30:42	Siegel	class C(): def __str__(self): return 'z' ; c = C(); x = c, y = c, z = c; L = [x, y]; assert 'z' in L
2014-05-29 08:30:43	CatKiller	instanceDict = {"z":y}
2014-05-29 08:31:01	-->	omgub (~ps@c-69-140-74-117.hsd1.md.comcast.net) has joined #python
2014-05-29 08:31:14	CatKiller	So here as cob said you would be trying to check the equality instead
2014-05-29 08:31:29	CatKiller	not even equality, but the string representation of an object
2014-05-29 08:31:43	CatKiller	Siegel: What problem are you trying to solve?
2014-05-29 08:32:02	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #python
2014-05-29 08:32:15	<--	quetzakubica (~redsky@94.42.194.58) has quit (Quit: Leaving.)
2014-05-29 08:32:25	<--	thomi (quassel@conference/canonical/x-ppcgxafevyfuyqwi) has quit (Remote host closed the connection)
2014-05-29 08:32:28	-->	txtsd (txtsd@115.69.254.65) has joined #python
2014-05-29 08:32:54	-->	AnYaDi (~AnYaDi@eduroam-169-100.dyn.carleton.edu) has joined #python
2014-05-29 08:32:55	-->	andtorg (~andtorg@host81-36-dynamic.41-79-r.retail.telecomitalia.it) has joined #python
2014-05-29 08:33:06	<--	bwreilly (~bwreilly@20.sub-70-199-135.myvzw.com) has quit (Remote host closed the connection)
2014-05-29 08:33:07	Siegel	i just what a simple way to see if an instance is inside a list without actually having a handle on the instance but rather a text name representing that instance
2014-05-29 08:33:11	<--	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Read error: Connection reset by peer)
2014-05-29 08:33:24	cob	a=1; b=a; L=[a,];
2014-05-29 08:33:25	cob	for i in L:
2014-05-29 08:33:25	cob	    if i is a: print 'yes';
2014-05-29 08:33:28	-->	bwreilly (~bwreilly@20.sub-70-199-135.myvzw.com) has joined #python
2014-05-29 08:33:53	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-29 08:34:15	<--	Salvakiya (~Salvakiya@pool-74-100-213-151.lsanca.dsl-w.verizon.net) has quit (Ping timeout: 252 seconds)
2014-05-29 08:34:18	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2014-05-29 08:34:19	Siegel	yeah just thought that maybe you could use __str__ or __repr__ to allow you to avoid using a loop
2014-05-29 08:34:26	Peng	Maybe your 'instances' should have a text_name attribute?
2014-05-29 08:34:37	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-29 08:34:38	Peng	Or, how confused am I?
2014-05-29 08:34:49	-->	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has joined #python
2014-05-29 08:35:07	AlecTaylor	What should I use for configuration management? - Currently I have my own custom code for configuring nginx, uwsgi, my various databases and repositories
2014-05-29 08:35:15	Siegel	Peng: thats right they do they have a .tag attribute
2014-05-29 08:35:17	CatKiller	cob: you were right with "in" checking __eq__ and not identity
2014-05-29 08:35:46	-->	IchEsseDichAuf (~grek@blfd-4d0881c1.pool.mediaWays.net) has joined #python
2014-05-29 08:35:55	-->	xsamurai (~fahad@unaffiliated/xsamurai) has joined #python
2014-05-29 08:36:34	-->	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has joined #python
2014-05-29 08:36:36	-->	paullik (~paullik@unaffiliated/paullik) has joined #python
2014-05-29 08:36:47	CatKiller	Siegel: You could do something like "if tag in [i.tag for i in L]"
2014-05-29 08:37:06	<--	alemedeiros (~alemedeir@187.10.22.149) has quit (Ping timeout: 276 seconds)
2014-05-29 08:37:09	--	zz_swebb is now known as swebb
2014-05-29 08:37:33	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Ping timeout: 252 seconds)
2014-05-29 08:37:43	<--	AlecTaylor (~Alec@unaffiliated/alectaylor) has quit (Quit: Leaving)
2014-05-29 08:37:48	CatKiller	that won't check whether a specific instance that you know of exists in the list, but that an instance with the tag name "tag" exists
2014-05-29 08:37:58	Siegel	would that be better than using a straight forward loop or just an alternative?
2014-05-29 08:38:40	CatKiller	Would what be better?
2014-05-29 08:38:58	<--	txtsd (txtsd@115.69.254.65) has quit (Ping timeout: 240 seconds)
2014-05-29 08:39:13	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-29 08:39:20	--	cmheisel_ is now known as cmheisel|away
2014-05-29 08:39:20	<--	cmheisel|away (~cheisel@cei-gla-cpk2.coxinc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 08:39:48	cob	Siegel: what are you trying to do? because you'll have to be aware of mutable vs immutable types and scope... http://stackoverflow.com/questions/8056130/immutable-vs-mutable-types-python
2014-05-29 08:40:31	-->	[diablo]_ (~diablo]@unaffiliated/miles/x-000000001) has joined #python
2014-05-29 08:40:47	-->	mattallmill (1000@129.130.175.163) has joined #python
2014-05-29 08:40:55	--	jkyle3 is now known as jkyle
2014-05-29 08:40:56	--	faldridg_ is now known as faldridge
2014-05-29 08:41:15	--	johnraz|away is now known as johnraz
2014-05-29 08:41:15	<--	SJr (~sjr@S0106c43dc7a31386.vf.shawcable.net) has quit (Read error: Connection reset by peer)
2014-05-29 08:41:20	Siegel	i just want to make a check that a instance with the same .tag name is not already in a list before trying to add another or remove the one im checking for
2014-05-29 08:41:26	-->	mwally (mwally@kb3tpa.pgh.pa.us) has joined #python
2014-05-29 08:41:42	<--	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has quit (Ping timeout: 265 seconds)
2014-05-29 08:41:44	DrDamnit	shutil.copyfile is yielding an empty file. Why? (http://bpaste.net/show/VYxBlpsy5Wk6YPxMTJIu/) OS: Mac OSX 10.7.5, Python V 2.7.1
2014-05-29 08:41:47	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-29 08:41:50	-->	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has joined #python
2014-05-29 08:42:16	CatKiller	Siegel: In that case, I would actually have a dictionary of {tag:object} instead of a list of objects
2014-05-29 08:42:21	cob	i.tag in [x for x in L]
2014-05-29 08:42:26	-->	kahtahs (~kahtahs@unaffiliated/shathak) has joined #python
2014-05-29 08:42:26	-->	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has joined #python
2014-05-29 08:42:27	CatKiller	therefore you can just do "if sometag in d"
2014-05-29 08:42:31	cob	i.tag in [x for x.tag in L]
2014-05-29 08:42:42	CatKiller	it's fast, and presumably you're going to run this lookup many times to it'll be efficient
2014-05-29 08:42:50	-->	Salvakiya (~Salvakiya@100.32.234.17) has joined #python
2014-05-29 08:43:07	-->	saedelaere (~quassel@unaffiliated/saedelaere) has joined #python
2014-05-29 08:43:12	cob	meh, wtf is wrong with me today
2014-05-29 08:43:24	CatKiller	The problem with the above implementation with the list is that you have to iterate the entire list once and build a list of tags, even if you got the first it
2014-05-29 08:43:25	<--	vt102 (~vt102@h69-131-146-115.cncrtn.broadband.dynamic.tds.net) has quit (Ping timeout: 252 seconds)
2014-05-29 08:43:26	<--	bwreilly (~bwreilly@20.sub-70-199-135.myvzw.com) has quit (Remote host closed the connection)
2014-05-29 08:43:26	cob	just... woke up
2014-05-29 08:43:45	-->	pretty_function (~pretty_fu@115.252.136.3) has joined #python
2014-05-29 08:43:47	CatKiller	you could run "for i in L: if tag == i.tag: return True"
2014-05-29 08:43:52	konradsurf	Siegel: do you get to define the container or are you working with another library that only exposes a list?
2014-05-29 08:44:16	Siegel	i am defining the container
2014-05-29 08:44:22	CatKiller	Then use a dict
2014-05-29 08:44:26	-->	Pushkar_Raj (~rajpushka@42.104.26.3) has joined #python
2014-05-29 08:44:26	CatKiller	it seems well suited here
2014-05-29 08:44:36	CatKiller	{tag:instance}
2014-05-29 08:44:49	Siegel	yeah i get what you are saying thanks
2014-05-29 08:44:50	CatKiller	if you need a list of all the instances: d.values()
2014-05-29 08:44:59	<--	taloszerg (~taloszerg@c62e6602.cst.lightpath.net) has quit (Remote host closed the connection)
2014-05-29 08:45:05	CatKiller	is a tag in there? "is tag in d"
2014-05-29 08:45:18	<--	gazprom_ (~gazprom@gateway/tor-sasl/gazprom) has quit (Ping timeout: 272 seconds)
2014-05-29 08:45:40	<--	freeman_u (~freeman_u@gw.quart-soft.net) has quit (Quit: Leaving.)
2014-05-29 08:45:43	<--	kahtahs_ (~kahtahs@unaffiliated/shathak) has quit (Ping timeout: 252 seconds)
2014-05-29 08:45:46	Siegel	oh lol the other thing is i need the instances to be stored in an ordered manner
2014-05-29 08:45:53	cob	yeah, the return function cuts the iteration, it's perfect
2014-05-29 08:45:57	-->	someprimetime (~someprime@162.245.21.10) has joined #python
2014-05-29 08:46:21	-->	muffer (d849fcad@gateway/web/freenode/ip.216.73.252.173) has joined #python
2014-05-29 08:46:40	-->	gazprom (~gazprom@gateway/tor-sasl/gazprom) has joined #python
2014-05-29 08:46:53	Siegel	which is why i was using a list
2014-05-29 08:47:18	-->	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has joined #python
2014-05-29 08:47:22	Siegel	i guess another way would be to manage two lists one with the instances and one with the tag names
2014-05-29 08:47:27	<--	dumby (~dumby@204.246.140.162) has quit (Ping timeout: 252 seconds)
2014-05-29 08:47:27	<--	fcodiaz (~fcodiaz@32.sub-70-193-132.myvzw.com) has quit (Ping timeout: 252 seconds)
2014-05-29 08:47:30	cob	Siegel: maybe you need to implement your own collection with indexes :)
2014-05-29 08:47:58	<--	pretty_function (~pretty_fu@115.252.136.3) has quit (Ping timeout: 240 seconds)
2014-05-29 08:47:59	-->	cmheisel_ (~cheisel@cei-gla-cpk2.coxinc.com) has joined #python
2014-05-29 08:48:08	CatKiller	Siegel: That's worse I think, it's more prone to error. Just iterate and return as soon as you find
2014-05-29 08:48:22	CatKiller	it'll be efficient and you get to keep the order of the list
2014-05-29 08:48:32	-->	seangrove (~user@c-69-181-197-122.hsd1.ca.comcast.net) has joined #python
2014-05-29 08:48:35	CatKiller	unless your list is millions of elements long
2014-05-29 08:48:39	konradsurf	Siegel: i think CatKiller mentioned a way to get a list of all the items/keys/values in the dict, if you need to send that to another piece of code.
2014-05-29 08:49:00	-->	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has joined #python
2014-05-29 08:49:04	CatKiller	konradsurf: Actually he needs to keep ordering
2014-05-29 08:49:06	cob	Siegel: you can use an ordered dict, storing the instance of the items in your list as key
2014-05-29 08:49:08	<--	Pushkar_Raj (~rajpushka@42.104.26.3) has quit (Remote host closed the connection)
2014-05-29 08:49:17	konradsurf	oh, and a dict would re-order, right? hmm
2014-05-29 08:49:27	<--	mwally (mwally@kb3tpa.pgh.pa.us) has quit (Quit: - https://plus.google.com/+MichaelWally/ -)
2014-05-29 08:49:31	CatKiller	konradsurf: Dicts don't guarantee ordering.
2014-05-29 08:49:32	cob	ordered dict keeps the order
2014-05-29 08:49:40	konradsurf	^ :)
2014-05-29 08:49:43	CatKiller	you might add stuff to a dict and find that your last item was inserted in the middle
2014-05-29 08:50:06	konradsurf	as it probably should. hmmm.
2014-05-29 08:50:14	Siegel	cob: was thinking that too but not sure which would be the lighter process
2014-05-29 08:50:21	cob	https://docs.python.org/2/library/collections.html#collections.OrderedDict
2014-05-29 08:50:30	<--	AnYaDi (~AnYaDi@eduroam-169-100.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 08:50:54	cob	that way you can quickly find the item via tag, and also be able to push and pop to the list on order
2014-05-29 08:50:55	konradsurf	sounds like a job for a database
2014-05-29 08:50:56	CatKiller	cob: Never used it but definitely looks like a solution
2014-05-29 08:50:56	muffer	can someone help me with a global variable scope issue?  http://pastebin.com/BkzpxFu4
2014-05-29 08:51:01	infobob	http://paste.pound-python.org/show/tOY4U9y2GH2HdSKZ1Hk6/ (repasted for muffer)
2014-05-29 08:51:16	-->	jkyle1 (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-29 08:51:19	CatKiller	I agree with konradsurf though, especially if you have a lot of elements
2014-05-29 08:51:31	-->	Pushkar_Raj (~rajpushka@42.104.26.3) has joined #python
2014-05-29 08:51:39	dash	muffer: lines 24/25 don't do anything, removing them won't change your program behavior
2014-05-29 08:52:03	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 08:52:03	muffer	orig and dest global variables are initialized at the top assigned and reassign them from the main function
2014-05-29 08:52:04	-->	jpj (~jpj@101.63.134.134) has joined #python
2014-05-29 08:52:06	<--	jpj (~jpj@101.63.134.134) has quit (Client Quit)
2014-05-29 08:52:20	-->	stw (~Steve@static-71-172-94-66.nwrknj.fios.verizon.net) has joined #python
2014-05-29 08:52:20	dash	muffer: pass those values where they're needed instead
2014-05-29 08:52:28	-->	novist (~novist@tango025.startdedicated.com) has joined #python
2014-05-29 08:52:32	<--	Pushkar_Raj (~rajpushka@42.104.26.3) has quit (Read error: Connection reset by peer)
2014-05-29 08:52:33	cob	konradsurf: i agree, that's why i mentioned indexes as a hint ;)
2014-05-29 08:52:51	dash	muffer: i.e., change f_or_d and rsync_log to take orig and dest args
2014-05-29 08:52:54	-->	Pushkar_Raj (~rajpushka@42.104.26.3) has joined #python
2014-05-29 08:52:59	muffer	ok, so they need to be passed each time to each function?
2014-05-29 08:53:01	muffer	no way around that?
2014-05-29 08:53:47	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 265 seconds)
2014-05-29 08:53:53	Siegel	thanks ppl
2014-05-29 08:54:14	cob	muffer: you must define global inside the scope you wish to pull into
2014-05-29 08:54:29	novist	could someone tell me if building python native modules with mingw on windows is supported? i have such module built (sadly it does not support building with msvc) and it produces very odd behavior. import at one spot produces crash with invalid memory access error. importing in other spot works just fine but some other functions mysteriously fail. .pyd links to both msvcrt.dll and msvcr100.dll, was think
2014-05-29 08:54:29	novist	ing maybe that could be culprit?
2014-05-29 08:54:33	cob	ie. in the function the variable pulls from global
2014-05-29 08:54:38	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-29 08:54:39	dash	muffer: no, you can do otherwise, but it's best to always avoid globals
2014-05-29 08:54:47	<--	Zzeiss (~wsy@mumble144109.merl.com) has quit (Ping timeout: 252 seconds)
2014-05-29 08:54:47	<--	[diablo]_ (~diablo]@unaffiliated/miles/x-000000001) has quit (Ping timeout: 252 seconds)
2014-05-29 08:54:52	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 245 seconds)
2014-05-29 08:55:04	cob	best always avoid globals unless your script is about 2 pages long
2014-05-29 08:55:16	dash	cob: programs grow
2014-05-29 08:55:21	dash	best to start off right :)
2014-05-29 08:55:34	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-29 08:55:40	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 08:56:15	--	johnraz is now known as johnraz|away
2014-05-29 08:56:19	-->	commandocoding (~commandoc@59.180.152.182) has joined #python
2014-05-29 08:56:24	-->	ElCoCo (~IceChat77@ool-6c3a2262.static.optonline.net) has joined #python
2014-05-29 08:56:36	nanonyme	If you have a 2 pages long program with globals, it will be a complete maintanence nightmare and has to be eventually rewritten from scratch
2014-05-29 08:56:39	DrDamnit	shutil.copyfile is yielding an empty file. Why? (http://bpaste.net/show/VYxBlpsy5Wk6YPxMTJIu/)
2014-05-29 08:56:43	MentalAtrophy	Globals are useful and can simplify your code, but they open up potential problems in the future by affecting readability and polluting available namespaces.
2014-05-29 08:56:43	<--	Sergobe (~sergobe@33.146.216.201.dsl.intelnet.net.gt) has quit (Ping timeout: 252 seconds)
2014-05-29 08:56:56	nanonyme	Trust me, I've seen those
2014-05-29 08:57:03	MentalAtrophy	It can be really confusing to troubleshoot or expand a function and see a variable being referenced that you haven't seen elsewhere.
2014-05-29 08:57:18	-->	Sergobe (~sergobe@33.146.216.201.dsl.intelnet.net.gt) has joined #python
2014-05-29 08:57:22	ElCoCo	quick question I have a database I queried the update_time of a table, it returns datetime.datetime(2014, 5, 29, 15, 0, 39) in a string, how do I convert that to an actual time
2014-05-29 08:57:23	nanonyme	MentalAtrophy, no, globals make code *complex*. You have to actually be able to follow flows that are unfollowable
2014-05-29 08:57:23	<--	cmheisel_ (~cheisel@cei-gla-cpk2.coxinc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 08:57:25	MentalAtrophy	And in most programs, locality keeps everything safer, so getting into that habit is good.
2014-05-29 08:57:27	-->	mwally (mwally@kb3tpa.pgh.pa.us) has joined #python
2014-05-29 08:57:36	MentalAtrophy	nanonyme, it depends on the size and scope of the program.
2014-05-29 08:57:41	nanonyme	MentalAtrophy, no, it's always
2014-05-29 08:58:13	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-29 08:58:13	nanonyme	MentalAtrophy, if you write a module global from more than one place, it will turn into a mess
2014-05-29 08:58:14	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 08:58:49	muffer	thanks dash and cob!
2014-05-29 08:58:50	cob	dash: meh, easy use of globals, if program grows i have to make a program, not a script... http://paste.pound-python.org/show/lW8HjrZCcfmQcLrARD8x/
2014-05-29 08:58:54	-->	js1069 (ae6292f7@gateway/web/freenode/ip.174.98.146.247) has joined #python
2014-05-29 08:59:14	-->	tilgovi (~randall@couchdb/committer/tilgovi) has joined #python
2014-05-29 08:59:16	sproingie	if your program is a script it only really has one scope
2014-05-29 08:59:18	nanonyme	cob, that's already a disaster
2014-05-29 08:59:44	dash	cob: bad ideas are still bad, sorry
2014-05-29 08:59:44	nanonyme	cob, if that's something used in a company, the next guys will probably rewrite that
2014-05-29 08:59:52	nanonyme	From scratch
2014-05-29 09:00:13	<--	ghostlines (~ghostline@92.109.90.61) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 09:00:21	cob	ofc, and no it's not used by any company
2014-05-29 09:00:27	-->	cjwilburn (~cjwilburn@slc012.wharton.upenn.edu) has joined #python
2014-05-29 09:00:28	-->	lifty (~lifty@092-111-174-199.static.chello.nl) has joined #python
2014-05-29 09:00:30	MentalAtrophy	Your absolutism isn't a good way to approach problems.
2014-05-29 09:00:39	<--	lony (~user@183.82.3.32) has quit (Remote host closed the connection)
2014-05-29 09:01:00	-->	ormaaj_ (~ormaaj@75-168-181-208.mpls.qwest.net) has joined #python
2014-05-29 09:01:01	-->	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has joined #python
2014-05-29 09:01:01	<--	Pushkar_Raj (~rajpushka@42.104.26.3) has quit (Read error: Connection reset by peer)
2014-05-29 09:01:08	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 09:01:22	<--	semberal (~semberal@216.240.161.68) has quit (Quit: ZNC - http://znc.in)
2014-05-29 09:01:29	Pici	IMO, 'global' is one thing that it is okay to be absolute about.
2014-05-29 09:01:32	<--	ormaaj (~ormaaj@75-168-141-11.mpls.qwest.net) has quit (Ping timeout: 245 seconds)
2014-05-29 09:01:42	<--	talanor (~talanor@ns3282938.ip-5-135-176.eu) has quit (Quit: WeeChat 0.4.2)
2014-05-29 09:02:26	-->	tom94 (~tom@152.78.171.10) has joined #python
2014-05-29 09:02:28	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 09:02:33	-->	Zzeiss (~wsy@mumble144155.merl.com) has joined #python
2014-05-29 09:02:41	<--	Deithrian (~Deithrian@unaffiliated/deithrian) has quit (Ping timeout: 264 seconds)
2014-05-29 09:02:52	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-29 09:03:24	dash	MentalAtrophy: why not
2014-05-29 09:03:33	<--	cjwilburn (~cjwilburn@slc012.wharton.upenn.edu) has quit (Read error: Connection reset by peer)
2014-05-29 09:04:10	-->	fcodiaz (~fcodiaz@adsl-184-47-230-90.asm.bellsouth.net) has joined #python
2014-05-29 09:04:39	<--	buck1 (~buck1@c-98-248-112-191.hsd1.ca.comcast.net) has quit (Ping timeout: 258 seconds)
2014-05-29 09:06:01	-->	codeitloadit (~codeitloa@wsip-68-225-25-202.oc.oc.cox.net) has joined #python
2014-05-29 09:06:09	cob	dash: it's not healthy when you share code with other people
2014-05-29 09:06:11	<--	jargon (~jargon@unaffiliated/jargon-) has quit (Ping timeout: 258 seconds)
2014-05-29 09:06:21	<--	ncthom91 (~ncthom91@173.252.71.129) has quit (Ping timeout: 265 seconds)
2014-05-29 09:06:26	dash	cob: What do you mean?
2014-05-29 09:06:29	cob	dash: but in python the labeling of global is actually a lot safer than in C
2014-05-29 09:06:45	dash	cob: erm... yes? everything is safer than C
2014-05-29 09:06:59	dash	cob: being slightly better than the worst thing possible is not the same as being actually good
2014-05-29 09:07:01	cob	these guys just have bad memories of unresolved hours of debugging only to find out variable was global
2014-05-29 09:07:04	MentalAtrophy	Because sometimes things need to be available to the entire program, and some solutions that avoid them encourage more complex and unnecessary patterns.
2014-05-29 09:07:18	dash	MentalAtrophy: Nah, not true.
2014-05-29 09:07:41	-->	cesarkawakami (~cesarkawa@177.148.191.31) has joined #python
2014-05-29 09:07:46	MentalAtrophy	Start with the rule that you shouldn't use globals, and then sometimes make an exception.
2014-05-29 09:08:04	MentalAtrophy	It depends on how many people are going to be using/modifying your code.
2014-05-29 09:08:07	dash	MentalAtrophy: yes. if you want to make an exception you have to explain why it's a good idea
2014-05-29 09:08:12	dash	MentalAtrophy: No, it really does not.
2014-05-29 09:08:13	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Read error: Connection reset by peer)
2014-05-29 09:08:13	sproingie	every module you import is a global
2014-05-29 09:08:14	MentalAtrophy	Certainly.
2014-05-29 09:08:16	sproingie	you're soaking in it
2014-05-29 09:08:22	dash	sproingie: yes. so don't make it worse
2014-05-29 09:08:30	dash	(did I mention python is terrible? sorry)
2014-05-29 09:08:45	-->	brodul (~brodul@brodul.org) has joined #python
2014-05-29 09:08:49	cob	dash: today we encapsulate globals in singletons and use their properties
2014-05-29 09:09:02	dash	cob: "singleton" is another word for "global"
2014-05-29 09:09:15	cob	it's an oop construct
2014-05-29 09:09:17	dash	cob: so, also a bad idea
2014-05-29 09:09:18	[Tritium]	every name you define at module scope is global.  You should define as few mutable things at module scope as possible
2014-05-29 09:09:21	-->	semberal (~semberal@216.240.161.68) has joined #python
2014-05-29 09:09:23	cob	dash: no, it's not
2014-05-29 09:09:28	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-29 09:09:30	dash	cob: why's that
2014-05-29 09:09:32	cob	maybe... some people don't like singletons
2014-05-29 09:09:41	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-29 09:09:50	<--	andtorg (~andtorg@host81-36-dynamic.41-79-r.retail.telecomitalia.it) has quit (Ping timeout: 255 seconds)
2014-05-29 09:09:55	dropdrive	I'm looking for tox.ini/setup.py/setup.cfg combo that works well with extension modules and multiple testenvs.  Any projects come to mind that I can copy?
2014-05-29 09:09:55	dash	cob: it's not a matter of liking
2014-05-29 09:10:08	dash	cob: it's complication for zero benefit
2014-05-29 09:10:12	dash	in python, anyway
2014-05-29 09:10:29	sproingie	singleton done properly is a lifecycle pattern or an optimization for immutable objects
2014-05-29 09:10:46	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-29 09:10:50	sproingie	None is a singleton because it's easier to check that way.  python just leaks the abstraction by ensuring 'is None' always works
2014-05-29 09:10:51	[Tritium]	dropdrive: coverage.py
2014-05-29 09:10:58	<--	murk_ (~nnscript@D97A9253.cm-3-3c.dynamic.ziggo.nl) has quit (Quit: ( www.nnscript.com :: NoNameScript 4.22 :: www.esnation.com ))
2014-05-29 09:11:17	dash	sproingie: heh, that is a long way from what 'singleton' is typically used to mean :)
2014-05-29 09:11:20	-->	max__ (~max@172.56.32.28) has joined #python
2014-05-29 09:11:25	<--	frothnicator (~frothy@unaffiliated/frothnicator) has quit (Quit: Leaving.)
2014-05-29 09:11:25	<--	mwally (mwally@kb3tpa.pgh.pa.us) has quit (Quit: - https://plus.google.com/+MichaelWally/ -)
2014-05-29 09:11:32	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-29 09:11:35	dropdrive	Did singleton used to mean "don't call this more than once"?
2014-05-29 09:11:41	--	max__ is now known as Guest38787
2014-05-29 09:11:43	-->	Johz (~Johz@94.0.154.49) has joined #python
2014-05-29 09:11:43	sproingie	dash: naw, None's constructor returns the same instance iirc
2014-05-29 09:11:54	dash	sproingie: it doesn't
2014-05-29 09:12:14	-->	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-29 09:12:17	-->	throwinghammers (~hcs@unaffiliated/throwinghammers) has joined #python
2014-05-29 09:12:24	sproingie	dash: mmm that's got to be a lovely way to screw with people then
2014-05-29 09:12:25	--	CP|AFK is now known as CyrilPeponnet
2014-05-29 09:12:26	[Tritium]	TypeError: cannot create 'NoneType' instances
2014-05-29 09:12:33	sproingie	not from python anyway
2014-05-29 09:12:53	dropdrive	[Tritium]: That was a great suggestion, thanks.
2014-05-29 09:12:53	<--	eggsmiao (~cat@117.136.19.114) has quit (Ping timeout: 264 seconds)
2014-05-29 09:12:56	[Tritium]	None's constructor raises a typeerror
2014-05-29 09:13:05	[Tritium]	dropdrive: dont menantion it
2014-05-29 09:13:05	-->	cmheisel_ (~cheisel@169.137.194.252) has joined #python
2014-05-29 09:13:51	-->	arosen (~arosen@geni/support/arosen) has joined #python
2014-05-29 09:13:56	-->	CrypticByte (~CrypticBy@50.157.50.116) has joined #python
2014-05-29 09:14:31	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-29 09:15:13	<--	sgviking (~sgviking@gateway/tor-sasl/sgviking) has quit (Remote host closed the connection)
2014-05-29 09:15:26	-->	vandrew (~vandrew@86.122.229.114) has joined #python
2014-05-29 09:15:34	-->	taloszerg (~taloszerg@198.46.102.2) has joined #python
2014-05-29 09:15:46	-->	sgviking (~sgviking@gateway/tor-sasl/sgviking) has joined #python
2014-05-29 09:15:47	-->	shunya_chakra (~shunya@117.200.77.51) has joined #python
2014-05-29 09:16:43	<--	Orbitrix (~Huevos@c-76-113-30-226.hsd1.nm.comcast.net) has quit (Remote host closed the connection)
2014-05-29 09:16:45	-->	chrislkeller (~chrislkel@63.237.174.130) has joined #python
2014-05-29 09:16:53	<--	paullik (~paullik@unaffiliated/paullik) has quit (Quit: paullik)
2014-05-29 09:17:14	<--	stw (~Steve@static-71-172-94-66.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2014-05-29 09:17:15	-->	guhcampos (~guhcampos@186.249.5.2) has joined #python
2014-05-29 09:17:44	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has left #python
2014-05-29 09:17:53	-->	buck1 (~buck1@72-18-233-166.static-ip.telepacific.net) has joined #python
2014-05-29 09:19:08	-->	kos_tom (~thomas@ks383786.kimsufi.com) has joined #python
2014-05-29 09:19:19	<--	cmheisel_ (~cheisel@169.137.194.252) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 09:19:38	-->	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has joined #python
2014-05-29 09:19:43	--	Guest38787 is now known as Synthead
2014-05-29 09:20:00	kos_tom	considering the following Python program: http://code.bulix.org/tb1e39-86302?raw, if I kill the parent process (i.e the Python script), it doesn't kill the child process created by subprocess.call.
2014-05-29 09:20:07	cob	oh dash, the first time i highlighted you i had meant to highlight muffer, sorry
2014-05-29 09:20:08	dash	kos_tom: Correct.
2014-05-29 09:20:08	kos_tom	and I'd like the child process to automatically disappear.
2014-05-29 09:20:33	-->	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has joined #python
2014-05-29 09:20:37	cob	to explain why globals are a bad idea, we kinda spun off needlessly
2014-05-29 09:20:37	dash	kos_tom: why?
2014-05-29 09:20:38	<--	kl0_ (~void@unaffiliated/rf14) has quit (Ping timeout: 240 seconds)
2014-05-29 09:20:49	kos_tom	manually using .kill() on the process is not really nice, because my specific program will be running multiple processes sequentially, so I don't know which one is running when I kill the global Python script.
2014-05-29 09:20:52	-->	echevemaster (~echevemas@fedora/echevemaster) has joined #python
2014-05-29 09:20:54	-->	flosch (~flosch@unaffiliated/flosch) has joined #python
2014-05-29 09:20:58	dash	kos_tom: tell us about your real use case please
2014-05-29 09:21:21	<--	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has quit (Quit: Zzzzz ...)
2014-05-29 09:21:27	kos_tom	dash: because my Python script is used to start some builds (it runs make and other stuff), and when I abort the Python script, I want all the child processes used to build to get killed
2014-05-29 09:21:43	-->	timini (~chatzilla@83.244.194.220) has joined #python
2014-05-29 09:22:09	--	johnraz|away is now known as johnraz
2014-05-29 09:22:16	dropdrive	When a process ends, is there a signal that is sent to children?
2014-05-29 09:22:19	dash	kos_tom: ok. so what's aborting the python script and how?
2014-05-29 09:22:30	dash	dropdrive: no, SIGCHLD is sent to parents
2014-05-29 09:22:45	kos_tom	dash: I'm running "kill <pid>"
2014-05-29 09:22:52	dropdrive	dash: So there is no SIGPRNT
2014-05-29 09:23:00	-->	bwreilly (~bwreilly@66.193.98.226) has joined #python
2014-05-29 09:23:13	kos_tom	dash: but in practice, it could just as well be Ctrl+C from the command line.
2014-05-29 09:23:14	-->	caughtinflux (~flux@unaffiliated/caughtinflux) has joined #python
2014-05-29 09:23:21	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Remote host closed the connection)
2014-05-29 09:23:25	sproingie	usual idiom is to open a pipe between the parent and child and the child will get SIGPIPE
2014-05-29 09:23:26	-->	siflyn (~siflyn@ip24-254-190-96.rn.hr.cox.net) has joined #python
2014-05-29 09:23:32	dash	kos_tom: ctrl-c from the command line will send SIGINT to every process in the group
2014-05-29 09:23:34	-->	taloszer_ (~taloszerg@c62e6602.cst.lightpath.net) has joined #python
2014-05-29 09:23:43	timini	does anyone know if it's possible to create a nestled columns in a pandas.Dataframe ?
2014-05-29 09:23:46	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-29 09:23:46	sproingie	otherwise the child just gets inherited by init and never knows it
2014-05-29 09:23:48	dropdrive	sproingie: Interesting, I did not know this!
2014-05-29 09:23:49	<--	taloszerg (~taloszerg@198.46.102.2) has quit (Ping timeout: 258 seconds)
2014-05-29 09:24:00	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-29 09:24:15	dash	kos_tom: so, nothing extra needed to handle that case
2014-05-29 09:24:32	kos_tom	dash: right, but since the Python script will usually run detached from a terminal, I will not be able to use Ctrl+C on it.
2014-05-29 09:24:33	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Client Quit)
2014-05-29 09:24:45	dash	kos_tom: you can write a signal handler that ends subprocesses before exit
2014-05-29 09:25:02	sproingie	dropdrive: mind you only if the child reads from it, so if it doesn't have room for that routine, it won't get the signal
2014-05-29 09:25:23	kos_tom	dash: yeah, that's not that easy. I would have preferred something automagic :)
2014-05-29 09:25:24	-->	Ariel_Calzada (~aricalso@181.136.139.111) has joined #python
2014-05-29 09:25:45	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-29 09:25:48	<--	emperorcezar (~emperorce@c-24-14-228-224.hsd1.il.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 09:26:06	<--	stranac (d46cd398@gateway/web/freenode/ip.212.108.211.152) has quit (Quit: Page closed)
2014-05-29 09:26:12	dropdrive	dash: So POSIX doesn't give you a way to kill children automatically if the parent is SIGKILLed?
2014-05-29 09:26:16	SilentGhost	kos_tom: that's pretty automagic
2014-05-29 09:26:19	<--	QBob (~qbob@amarok/developer/qbob) has quit (Client Quit)
2014-05-29 09:27:05	sproingie	if the children need to know about the parent, easiest thing is for the parent to just signal its process group manually
2014-05-29 09:27:08	dash	dropdrive: correct
2014-05-29 09:27:11	<--	czapla (~czapla@2a02:8109:8380:1298:5017:eaf0:cb31:5b91) has quit
2014-05-29 09:27:13	dash	kos_tom: welcome to unix
2014-05-29 09:27:21	sproingie	tho sigkill won't give it a chance
2014-05-29 09:27:22	cob	it's so auto-magic it's 5 lines of code
2014-05-29 09:27:30	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-29 09:27:56	kos_tom	cob: except that my script is going to run multiple subprocesses sequentially, so I have to now at any point in time if there's one running, and kill it.
2014-05-29 09:28:00	dropdrive	With 2.7, is virtualenv still the recommended venv tool -- seems like there is more than one these days
2014-05-29 09:28:44	dash	dropdrive: what else is there
2014-05-29 09:28:55	<--	the_drow (5250ab1f@gateway/web/freenode/ip.82.80.171.31) has left #python
2014-05-29 09:28:56	cob	so keep a list of subprocesses, then fire the SIGTERM to each
2014-05-29 09:29:06	-->	kl0_ (~void@unaffiliated/rf14) has joined #python
2014-05-29 09:29:06	<--	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has quit (Ping timeout: 276 seconds)
2014-05-29 09:29:18	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-29 09:29:57	CatKiller	kos_tom: Add them in a list, and when you kill them remove them from there.
2014-05-29 09:30:05	KirkMcDonald	Or use a process group.
2014-05-29 09:30:20	kos_tom	KirkMcDonald: they are already in a process group, no?
2014-05-29 09:30:38	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 09:30:47	kos_tom	KirkMcDonald: so maybe os.killpg() ?
2014-05-29 09:31:04	KirkMcDonald	kos_tom: No telling what else is in that group.
2014-05-29 09:31:07	CatKiller	KirkMcDonald: I didn't know about this, nice!
2014-05-29 09:31:16	KirkMcDonald	kos_tom: It's best to define your own.
2014-05-29 09:31:25	dash	CatKiller: it's a rather obscure corner of unix
2014-05-29 09:31:25	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-29 09:31:27	<--	timini (~chatzilla@83.244.194.220) has quit (Remote host closed the connection)
2014-05-29 09:31:36	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-29 09:31:42	CatKiller	dash: Yep, but that could be useful to me...maybe... ;)
2014-05-29 09:32:10	krpt	Yop, I'm iterating over a list of objects and for some reason there's one odd sheep ( can't print it with normal method ), how can I view/dump it ? ( TypeError: __str__ returned non-string (type NoneType) )
2014-05-29 09:32:21	<--	ecthiender (~ecthiende@unaffiliated/ecthiender) has quit (Remote host closed the connection)
2014-05-29 09:32:42	KirkMcDonald	krpt: print type(foo)
2014-05-29 09:33:06	<--	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Remote host closed the connection)
2014-05-29 09:33:38	krpt	<class '__main__.movieEntry'>
2014-05-29 09:33:45	krpt	the object I was waiting for
2014-05-29 09:34:06	KirkMcDonald	krpt: This is a class that you defined.
2014-05-29 09:34:07	SilentGhost	krpt: its __str__ method needs to return a string
2014-05-29 09:34:10	-->	[mda] (~daniel@bas1-newmarket85-3096616480.dsl.bell.ca) has joined #python
2014-05-29 09:34:11	-->	aljohri (~atul@wireless-165-124-129-66.nuwlan.northwestern.edu) has joined #python
2014-05-29 09:34:13	-->	ixti (~ixti@77.226.194.200) has joined #python
2014-05-29 09:34:14	KirkMcDonald	krpt: Its __str__ method is broken.
2014-05-29 09:34:14	krpt	yes
2014-05-29 09:34:20	KirkMcDonald	krpt: You should fix that.
2014-05-29 09:34:27	krpt	ok
2014-05-29 09:34:39	<--	jooools (~ejulfit@194.237.142.7) has quit (Quit: Leaving.)
2014-05-29 09:35:07	kos_tom	KirkMcDonald: http://code.bulix.org/llzgj4-86304?raw seems to work fine, though I have two weird "Exception SystemExit:  in  ignored" messages when the parent Python script is killed
2014-05-29 09:35:34	-->	talanor (~talanor@ns3282938.ip-5-135-176.eu) has joined #python
2014-05-29 09:35:46	-->	hassiktir (~schmity@67-0-185-41.albq.qwest.net) has joined #python
2014-05-29 09:35:56	shunya_chakra	in python python byte code will get automatically created when source file is saved?
2014-05-29 09:36:03	<--	mfranzwa (~mike@c-76-20-30-9.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2014-05-29 09:36:08	dash	shunya_chakra: when the module is imported.
2014-05-29 09:36:21	-->	cewing (~cewing@97-113-30-194.tukw.qwest.net) has joined #python
2014-05-29 09:36:38	<--	cewing (~cewing@97-113-30-194.tukw.qwest.net) has quit (Client Quit)
2014-05-29 09:36:49	-->	andtorg (~andtorg@host247-93-dynamic.51-82-r.retail.telecomitalia.it) has joined #python
2014-05-29 09:36:51	<--	emorrow (~Thunderbi@185.7.185.250) has quit (Ping timeout: 258 seconds)
2014-05-29 09:36:51	-->	deSilva (~deSilva@c83-254-213-203.bredband.comhem.se) has joined #python
2014-05-29 09:37:09	--	johnraz is now known as johnraz|away
2014-05-29 09:37:14	-->	oubiga (~oubiga@114.225.20.95.dynamic.jazztel.es) has joined #python
2014-05-29 09:37:20	<--	jhardin (~jhardin@b111-05.engr.colostate.edu) has quit (Remote host closed the connection)
2014-05-29 09:37:33	<--	thaum (~arun@122.171.113.7) has quit (Ping timeout: 276 seconds)
2014-05-29 09:37:37	-->	_andyj_ (uid24906@gateway/web/irccloud.com/x-pjwtgygztwfzinso) has joined #python
2014-05-29 09:37:46	<--	tech2 (~tech2@bb01403756101.pndsl.co.uk) has quit (Ping timeout: 265 seconds)
2014-05-29 09:38:01	shunya_chakra	dash if i define function and save that time bytecode will be created
2014-05-29 09:38:02	shunya_chakra	?
2014-05-29 09:38:07	mon5ter	this http://bpaste.net/show/l8VPW95Ew1yWRrPo62Y1/ is giving me a typeerror: not all arguments converted during string formatting
2014-05-29 09:38:07	-->	Paradisee (~Paradisee@2.239.28.120) has joined #python
2014-05-29 09:38:08	mon5ter	why?
2014-05-29 09:38:43	dash	shunya_chakra: no.
2014-05-29 09:38:52	<--	cesarkawakami (~cesarkawa@177.148.191.31) has quit
2014-05-29 09:38:56	SilentGhost	mon5ter: because you're only passing single argument
2014-05-29 09:39:16	mon5ter	python does not expand the tuple to two function arguments?
2014-05-29 09:39:29	nanonyme	No, a tuple is a data structure on its own right
2014-05-29 09:39:35	mon5ter	too bad
2014-05-29 09:39:38	mon5ter	ok thanks SilentGhost
2014-05-29 09:39:50	-->	emorrow (~Thunderbi@185.7.185.250) has joined #python
2014-05-29 09:39:50	-->	eggsmiao (~cat@222.95.204.99) has joined #python
2014-05-29 09:39:54	<--	jaycedars (~jaycedars@cpe-72-182-35-54.austin.res.rr.com) has quit (Quit: Be excellent to each other)
2014-05-29 09:39:59	[Tritium]	you can expand any sequence into the arguments of a function
2014-05-29 09:40:18	Remram	Okay, pyvenv-3.4 fails on my Debian, what is going on? :(
2014-05-29 09:40:19	<--	kl0_ (~void@unaffiliated/rf14) has quit (Quit: die(0);)
2014-05-29 09:40:20	cob	mon5ter: your `t` variable is a touple, the expansion doesn't match
2014-05-29 09:40:22	nanonyme	There's special syntax for expanding iterables to variable arguments but you should typically avoid that if possible
2014-05-29 09:40:23	cob	tuple
2014-05-29 09:40:26	Remram	Error: Command '['/tmp/venv34/bin/python3.4', '-Im', 'ensurepip', '--upgrade', '--default-pip']' returned non-zero exit status 1
2014-05-29 09:40:34	--	jkyle1 is now known as jkyle
2014-05-29 09:40:34	<--	chrisgeorge (~chrisgeor@unaffiliated/chrisgeorge) has quit
2014-05-29 09:40:36	shunya_chakra	dash, when will it create when i hit enter on repl?
2014-05-29 09:40:46	mon5ter	so i'm giving him a tuple everytime
2014-05-29 09:40:54	KirkMcDonald	mon5ter: You could say: my_func(*t)
2014-05-29 09:40:57	mon5ter	but check inside the function if the tuple has more than 1 member
2014-05-29 09:40:59	dash	shunya_chakra: oh. why are you writing code in the repl?
2014-05-29 09:41:15	cob	KirkMcDonald: he can't, second is a kwarg
2014-05-29 09:41:17	dash	shunya_chakra: put it in a file
2014-05-29 09:41:28	KirkMcDonald	cob: It just has a default argument.
2014-05-29 09:41:41	KirkMcDonald	cob: It can still be used as a positional parameter.
2014-05-29 09:41:42	-->	cewing (~cewing@97-113-30-194.tukw.qwest.net) has joined #python
2014-05-29 09:41:42	mon5ter	cob KirkMcDonald, my_func(arg, optionalarg)
2014-05-29 09:41:44	cob	mmm
2014-05-29 09:41:47	mon5ter	i'd like to implement it like this
2014-05-29 09:42:20	KirkMcDonald	mon5ter: And that is what you have done.
2014-05-29 09:42:27	mon5ter	or maybe like this: my_func(arg); inside my_func: if arg[1]: ... else: ...
2014-05-29 09:42:38	<--	mattallmill (1000@129.130.175.163) has quit (Quit: Konversation terminated!)
2014-05-29 09:43:07	SilentGhost	mon5ter: just use my_func(*t)
2014-05-29 09:43:08	<--	knesenko (~knesenko@redhat/knesenko) has quit (Quit: Leaving)
2014-05-29 09:43:11	<--	jeffisabelle (~jeffisabe@193.140.108.138) has quit (Read error: Connection reset by peer)
2014-05-29 09:43:18	cob	yeah, it does work
2014-05-29 09:43:30	cob	cool, didn't know that
2014-05-29 09:43:34	mon5ter	can u name this: "my_func(*t)"
2014-05-29 09:43:37	mon5ter	i'd like to read up on it
2014-05-29 09:43:40	-->	jhardin (~jhardin@b111-05.engr.colostate.edu) has joined #python
2014-05-29 09:43:41	shunya_chakra	dash, actually I'm reading a book Learning python 5th edition, then there i get confused... in
2014-05-29 09:43:42	-->	mattallmill (1000@129.130.175.163) has joined #python
2014-05-29 09:43:54	mon5ter	the "*t"
2014-05-29 09:43:56	Draconis	mon5ter, argument unpacking
2014-05-29 09:44:03	mon5ter	ok thank you guys
2014-05-29 09:44:18	shunya_chakra	dash:Python automatically checks the last-modified timestamps of
2014-05-29 09:44:18	shunya_chakra	source and byte code files to know when it must recompile—if you edit and resave
2014-05-29 09:44:18	shunya_chakra	your source code, byte code is automatically re-created the next time your program
2014-05-29 09:44:19	shunya_chakra	is run.
2014-05-29 09:44:47	KirkMcDonald	shunya_chakra: That does not apply to the REPL.
2014-05-29 09:44:52	mon5ter	ahhh, i see. it's just like i would handle sys.argv
2014-05-29 09:45:05	KirkMcDonald	shunya_chakra: The REPL always compiles what you enter into it.
2014-05-29 09:46:23	KirkMcDonald	shunya_chakra: (There is no "byte code file" when using the REPL.)
2014-05-29 09:46:29	<--	zooz (~zooz@87.85.173.82) has quit (Ping timeout: 252 seconds)
2014-05-29 09:46:31	-->	Infant (~thomas@78-56-194-78.static.zebra.lt) has joined #python
2014-05-29 09:46:48	-->	cmheisel_ (~cheisel@169.137.193.95) has joined #python
2014-05-29 09:46:48	shunya_chakra	ok got it KirkMcDonald.
2014-05-29 09:46:49	<--	Infant (~thomas@78-56-194-78.static.zebra.lt) has quit (Remote host closed the connection)
2014-05-29 09:46:59	shunya_chakra	thanks dash, KirkMcDonald
2014-05-29 09:47:09	<--	Ariel_Calzada (~aricalso@181.136.139.111) has quit (Quit: Bye all)
2014-05-29 09:47:31	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 09:47:32	-->	the_rat (~the_rat@82.84.158.20) has joined #python
2014-05-29 09:47:38	--	johnraz|away is now known as johnraz
2014-05-29 09:47:39	-->	lpapp (~lpapp@kde/lpapp) has joined #python
2014-05-29 09:47:45	<--	lpapp (~lpapp@kde/lpapp) has left #python
2014-05-29 09:49:00	-->	gocho (~gocho@105.51.86.88) has joined #python
2014-05-29 09:49:26	<--	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 255 seconds)
2014-05-29 09:49:32	-->	cesar_bo (uid17588@gateway/web/irccloud.com/x-pkfaakrjqdqxczgg) has joined #python
2014-05-29 09:50:19	-->	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-29 09:50:24	-->	ToApolytoXaos (~ToApolyto@46.21.62.128) has joined #python
2014-05-29 09:50:52	-->	jorgev (~jorgev@rrcs-67-52-158-66.west.biz.rr.com) has joined #python
2014-05-29 09:50:57	mon5ter	KirkMcDonald, cob, Draconis: and yet i'm not satisifed. the argument i'm passing to my function is always a tuple with variable count of member (len(tuple) can be 1 or 2). so i have to check inside my function, don't i
2014-05-29 09:51:38	<--	froex (1f0a014a@gateway/web/freenode/ip.31.10.1.74) has quit (Quit: Page closed)
2014-05-29 09:51:49	-->	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has joined #python
2014-05-29 09:52:01	KirkMcDonald	mon5ter: What was wrong with the code in your original paste?
2014-05-29 09:52:09	KirkMcDonald	mon5ter: That seems quite reasonable.
2014-05-29 09:52:14	-->	armyriad (~armyriad@198.23.71.93-static.reverse.softlayer.com) has joined #python
2014-05-29 09:52:28	-->	Ox33 (~0x3@unaffiliated/ox3) has joined #python
2014-05-29 09:52:36	mon5ter	ok then
2014-05-29 09:52:39	cob	mon5ter: no, your function works
2014-05-29 09:52:44	cob	just *t
2014-05-29 09:52:47	cob	pass that
2014-05-29 09:52:55	cob	and try it... works here man!
2014-05-29 09:52:58	KirkMcDonald	mon5ter: Or, to tweak it slightly, this: http://bpaste.net/show/lKJuXZL3MkTpS8Op2vOT/
2014-05-29 09:53:02	-->	yobj (~jboy@ool-457e35ac.dyn.optonline.net) has joined #python
2014-05-29 09:53:08	-->	TheFakeazneD525 (~denza252@unaffiliated/denza252) has joined #python
2014-05-29 09:53:12	mon5ter	ah ok
2014-05-29 09:53:14	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-29 09:53:14	mon5ter	now i get it
2014-05-29 09:53:45	mon5ter	i tried to define my function as: myfunc(*t)
2014-05-29 09:53:49	mon5ter	not actually passing *t
2014-05-29 09:53:52	cob	your `if other_value check` should be `if other_string`
2014-05-29 09:54:02	<--	gocho (~gocho@105.51.86.88) has quit (Read error: Connection reset by peer)
2014-05-29 09:54:04	mon5ter	yeah
2014-05-29 09:54:11	mon5ter	thanks again :>
2014-05-29 09:54:11	krpt	I'm at a loss , I've oversimplified my repr function for my class to print( "test" ) , it works for the first object and then 'nonetype' again
2014-05-29 09:54:37	KirkMcDonald	krpt: You want to *return* a string, not print a string.
2014-05-29 09:55:27	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-29 09:55:49	 *	krpt facepalms
2014-05-29 09:56:29	--	Ox33 is now known as H1N1
2014-05-29 09:56:39	-->	cirwin (~Adium@wiktionary/ConradIrwin) has joined #python
2014-05-29 09:56:45	krpt	:) it works KirkMcDonald thanks, was convinced print Returned .. well :)
2014-05-29 09:57:26	-->	boris317_ (~boris317@unaffiliated/boris317) has joined #python
2014-05-29 09:57:35	<--	boris317 (~boris317@unaffiliated/boris317) has quit (Ping timeout: 265 seconds)
2014-05-29 09:58:26	-->	codepython777 (~codepytho@cs1229.cs.fsu.edu) has joined #python
2014-05-29 09:59:02	<--	onthestairs (~austin@217.138.44.210) has quit (Ping timeout: 265 seconds)
2014-05-29 09:59:06	<--	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-29 09:59:25	<--	softwaredoug (~quassel@c-76-104-27-79.hsd1.va.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-29 09:59:27	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-29 09:59:47	<--	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has quit (Ping timeout: 252 seconds)
2014-05-29 09:59:52	<--	lucian (~lucian@194.74.244.130) has quit (Ping timeout: 245 seconds)
2014-05-29 10:00:14	dropdrive	Is there a way to pass an option to "build" when doing a "bdist_wheel"?
2014-05-29 10:00:33	<--	Kayra (~Kayra@2.24.76.87) has quit (Remote host closed the connection)
2014-05-29 10:00:38	-->	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has joined #python
2014-05-29 10:00:40	-->	thelinuxkid (~thelinuxk@99-118-212-48.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-29 10:00:49	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Quit: Leaving.)
2014-05-29 10:00:53	-->	mijicd (~mijicd@cable-188-246-38-127.dynamic.kdsinter.net) has joined #python
2014-05-29 10:01:30	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-29 10:01:35	<--	Zzeiss (~wsy@mumble144155.merl.com) has quit (Ping timeout: 255 seconds)
2014-05-29 10:01:46	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 10:01:57	-->	blakeblade (blakeblade@unaffiliated/blakeblade) has joined #python
2014-05-29 10:02:12	<--	VladVP (~VladVP@185.37.87.102) has quit (Read error: Connection reset by peer)
2014-05-29 10:02:19	<--	ivonunes (~ivonunes@194.65.5.235) has quit (Quit: Leaving)
2014-05-29 10:02:20	<--	rquid (~sashka@94.41.177.225) has quit (Remote host closed the connection)
2014-05-29 10:02:45	<--	codepython777 (~codepytho@cs1229.cs.fsu.edu) has quit (Client Quit)
2014-05-29 10:03:02	-->	sunya7a (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-29 10:03:18	-->	rquid (~sashka@94.41.177.225) has joined #python
2014-05-29 10:03:29	-->	bwreilly_ (~bwreilly@66.193.98.226) has joined #python
2014-05-29 10:04:04	-->	stranac (d46cd398@gateway/web/freenode/ip.212.108.211.152) has joined #python
2014-05-29 10:04:10	-->	drinkycrow (~drinkycro@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-29 10:04:46	-->	thiderman (~thiderman@h-53-108.a165.priv.bahnhof.se) has joined #python
2014-05-29 10:04:50	<--	jgeboski (~jgeboski@unaffiliated/jgeboski) has quit (Ping timeout: 258 seconds)
2014-05-29 10:04:55	<--	bwreilly (~bwreilly@66.193.98.226) has quit (Ping timeout: 252 seconds)
2014-05-29 10:04:58	-->	cwillu_borken (~cwillu@216-197-168-135.sktn.hsdb.sasknet.sk.ca) has joined #python
2014-05-29 10:05:06	<--	cwillu_borken (~cwillu@216-197-168-135.sktn.hsdb.sasknet.sk.ca) has left #python ("Leaving")
2014-05-29 10:05:16	-->	cwillu_borken (~cwillu@216-197-168-135.sktn.hsdb.sasknet.sk.ca) has joined #python
2014-05-29 10:05:32	<--	hakced (~vince@pdpc/supporter/active/vinces) has quit (Quit: Konversation terminated!)
2014-05-29 10:05:36	-->	bgs100 (~bgs@unaffiliated/bgs100) has joined #python
2014-05-29 10:05:40	-->	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has joined #python
2014-05-29 10:06:05	-->	Zzeiss (~wsy@mumble144109.merl.com) has joined #python
2014-05-29 10:06:07	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 245 seconds)
2014-05-29 10:06:38	-->	gocho (~gocho@105.51.86.88) has joined #python
2014-05-29 10:06:40	-->	hakced (~vince@pdpc/supporter/active/vinces) has joined #python
2014-05-29 10:07:06	-->	rails_smith (~rails_smi@136.166.156.64) has joined #python
2014-05-29 10:07:17	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 10:07:27	<--	wong2 (~wong2@117.79.232.233) has quit (Ping timeout: 276 seconds)
2014-05-29 10:07:36	<--	gocho (~gocho@105.51.86.88) has quit (Read error: Connection reset by peer)
2014-05-29 10:07:48	<--	cocogrove (~courtney@24.249.102.210) has quit (Quit: cocogrove)
2014-05-29 10:08:00	--	veatch is now known as zz_veatch
2014-05-29 10:08:19	-->	dmmoody (417ae9a2@gateway/web/freenode/ip.65.122.233.162) has joined #python
2014-05-29 10:08:35	<--	W0rmDr1nk (~wormdrink@unaffiliated/wormdrink) has quit (Ping timeout: 252 seconds)
2014-05-29 10:08:46	<--	le0 (~l30@unaffiliated/le0) has quit (Quit: Leaving)
2014-05-29 10:09:11	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Ping timeout: 265 seconds)
2014-05-29 10:09:13	<--	fcodiaz (~fcodiaz@adsl-184-47-230-90.asm.bellsouth.net) has quit (Ping timeout: 252 seconds)
2014-05-29 10:09:25	<--	includex (~includex@194.65.5.235) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 10:09:33	-->	joshlegs (~josh@unaffiliated/horsehead) has joined #python
2014-05-29 10:09:45	-->	venomDev (~venomDev@101.113.10.30) has joined #python
2014-05-29 10:10:16	citra	i need help with the pad function in numpy
2014-05-29 10:10:17	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-29 10:10:18	<--	gargeet-shingh (Elite10504@gateway/shell/elitebnc/x-gdrrsoiiesgrzkmn) has left #python ("Leaving")
2014-05-29 10:10:20	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Excess Flood)
2014-05-29 10:10:50	<--	asarch (~asarch@189.148.168.202) has quit (Quit: Ex-Chat)
2014-05-29 10:10:50	<--	venomDev (~venomDev@101.113.10.30) has quit (Read error: Connection reset by peer)
2014-05-29 10:11:05	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-29 10:11:17	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-29 10:11:31	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 252 seconds)
2014-05-29 10:12:14	-->	tterlet__ (~le_tropic@194.44.141.34) has joined #python
2014-05-29 10:12:18	<--	Addem (addb4c13@gateway/web/freenode/ip.173.219.76.19) has quit (Ping timeout: 240 seconds)
2014-05-29 10:12:21	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-29 10:12:26	-->	jgeboski (~jgeboski@unaffiliated/jgeboski) has joined #python
2014-05-29 10:12:48	<--	cirwin (~Adium@wiktionary/ConradIrwin) has quit (Quit: Leaving.)
2014-05-29 10:12:52	<--	thelinuxkid (~thelinuxk@99-118-212-48.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Leaving.)
2014-05-29 10:13:00	<--	dmmoody (417ae9a2@gateway/web/freenode/ip.65.122.233.162) has left #python
2014-05-29 10:13:09	-->	Burgundy (~burgundy@5-12-74-32.residential.rdsnet.ro) has joined #python
2014-05-29 10:13:16	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 258 seconds)
2014-05-29 10:13:27	_habnabit	dropdrive, `python setup.py build --option bdist_wheel`
2014-05-29 10:14:01	-->	steego (~steego@88.95.1.63) has joined #python
2014-05-29 10:14:02	<--	emorrow (~Thunderbi@185.7.185.250) has quit (Ping timeout: 258 seconds)
2014-05-29 10:14:11	-->	woodoo (~Ramon@unaffiliated/woodoo) has joined #python
2014-05-29 10:14:12	--	underyx is now known as Underyx|off
2014-05-29 10:14:32	-->	l3lu3 (~l3lu3@unaffiliated/l3lu3) has joined #python
2014-05-29 10:14:43	<--	guhcampos (~guhcampos@186.249.5.2) has quit (Quit: guhcampos)
2014-05-29 10:14:59	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 10:15:00	-->	dfinly (~dfinly@204.120.71.252) has joined #python
2014-05-29 10:15:09	<--	__class__ (~class@98.207.86.101) has quit (Read error: Connection reset by peer)
2014-05-29 10:15:13	<--	dfinly (~dfinly@204.120.71.252) has quit (Max SendQ exceeded)
2014-05-29 10:15:33	<--	DTVD (~DTVD@91.144.197.113.dy.bbexcite.jp) has quit (Remote host closed the connection)
2014-05-29 10:16:06	-->	caleb_ (textual@nat/rackspace/x-frzixtfwnluiohox) has joined #python
2014-05-29 10:16:11	<--	Dharmit (shahdharmi@nat/redhat/x-prdokaguyiygwkat) has quit (Quit: Leaving)
2014-05-29 10:16:19	-->	JordiGH (~jordi@octave/developer/JordiGH) has joined #python
2014-05-29 10:16:44	JordiGH	What do you think about doing imports in the middle of a function only when that function gets called instead of putting all imports at the top of every file?
2014-05-29 10:16:45	-->	guhcampos (~guhcampos@186.249.5.2) has joined #python
2014-05-29 10:16:59	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 10:17:01	-->	pcardune (~pcardune@199.201.64.133) has joined #python
2014-05-29 10:17:11	Draconis	I prefer top personally, but I've seen it both ways
2014-05-29 10:17:20	<--	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-29 10:17:43	-->	txomon|home (~txomon@unaffiliated/txomon) has joined #python
2014-05-29 10:17:43	dropdrive	_habnabit: Hmm, --option isn't recognized by build
2014-05-29 10:17:46	<--	cewing (~cewing@97-113-30-194.tukw.qwest.net) has quit (Quit: Hasta lumbago...)
2014-05-29 10:18:18	<--	hassiktir (~schmity@67-0-185-41.albq.qwest.net) has quit (Quit: Computer has gone to sleep.)
2014-05-29 10:18:22	dropdrive	Maybe you meant --$option...but.,,
2014-05-29 10:18:25	<--	l3lu3 (~l3lu3@unaffiliated/l3lu3) has quit (Client Quit)
2014-05-29 10:18:40	_habnabit	dropdrive, ... what? i mean --put-your-option-here
2014-05-29 10:18:56	-->	thelinuxkid (~thelinuxk@99-118-212-48.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-29 10:19:02	-->	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has joined #python
2014-05-29 10:19:06	_habnabit	JordiGH, why not put your imports at the top of the file?
2014-05-29 10:19:17	dropdrive	_habnabit: That gives me "invalid command bdist_wheel"
2014-05-29 10:19:31	dropdrive	oops it's not installed
2014-05-29 10:19:35	_habnabit	dropdrive, well,
2014-05-29 10:19:47	JordiGH	_habnabit: May needlessly pollutes the namespace? May import something that is only used for a small codepath, thus incur consistent overhead?
2014-05-29 10:19:52	<--	manizzle (~manizzle@c-69-181-7-109.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2014-05-29 10:20:02	JordiGH	You may be paying for something you're not using, I mean.
2014-05-29 10:20:19	-->	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has joined #python
2014-05-29 10:20:56	-->	jasvir (~jasvir@122.173.175.81) has joined #python
2014-05-29 10:21:30	jasvir	hello all. I am just new in python and I want to ask a simple question.
2014-05-29 10:21:37	dash	jasvir: welcome.
2014-05-29 10:21:46	jasvir	If I have a number say 3.5
2014-05-29 10:21:54	-->	hassiktir (~schmity@67-0-185-41.albq.qwest.net) has joined #python
2014-05-29 10:22:28	jasvir	and I want to convert it into 3.50
2014-05-29 10:22:28	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-29 10:22:35	-->	__class__ (~class@98.207.86.101) has joined #python
2014-05-29 10:22:39	jasvir	how can i do that?
2014-05-29 10:22:54	dash	jasvir: those are the same number
2014-05-29 10:23:00	dash	jasvir: what do you want to do with it?
2014-05-29 10:23:10	KirkMcDonald	jasvir: You could, say: f = 3.5; s = "%.2f" % f
2014-05-29 10:23:27	KirkMcDonald	jasvir: Which would give you a string with that representation of the float.
2014-05-29 10:23:43	-->	softwaredoug (~quassel@216.30.179.168) has joined #python
2014-05-29 10:24:10	-->	dmmoody (417ae9a2@gateway/web/freenode/ip.65.122.233.162) has joined #python
2014-05-29 10:24:25	KirkMcDonald	Or, equivalently: s = "{:.2f}".format(f)
2014-05-29 10:24:36	Draconis	god thats ugly heh
2014-05-29 10:25:08	JordiGH	It's certainly not something I can ever figure out without reading the docs every time.
2014-05-29 10:25:09	KirkMcDonald	Draconis: I find it gets clearer as format strings become more complicated.
2014-05-29 10:25:16	H1N1	Hello, i'm wondering if anyone could help me with a problem i'm having with virtualenv; using a setup.py for one of my projects once it gets to the dependency `pycrypt` it fails with this https://gist.github.com/0x3/891398f35f1c232cd1fe anyone know of a work around or a solution?
2014-05-29 10:25:21	<--	Siegel (~kvirc@dsl-197-245-51-253.voxdsl.co.za) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-05-29 10:25:22	-->	cewing (~cewing@97-113-30-194.tukw.qwest.net) has joined #python
2014-05-29 10:25:56	krpt	Thanks to helpers ! I've 'finished' ( it's yet ugly ) a small prog that parses nfo in subdirs, retrieve imdb/rottentomatoes info accordingly and allows to sort by ratings / genre / etc.. :) first prog in python, love it for this practical stuff
2014-05-29 10:26:05	<--	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has quit (Ping timeout: 264 seconds)
2014-05-29 10:26:42	jasvir	KirkMcDonald: I'll try it.
2014-05-29 10:26:43	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 10:26:55	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 252 seconds)
2014-05-29 10:26:57	Draconis	krpt, congratulations
2014-05-29 10:27:11	<--	dvx (~dvx@igw.obsm.cz) has quit (Remote host closed the connection)
2014-05-29 10:27:24	krpt	thx Draconis !
2014-05-29 10:27:32	-->	dvx (~dvx@igw.obsm.cz) has joined #python
2014-05-29 10:27:36	-->	alemedeiros (~alemedeir@187.10.22.149) has joined #python
2014-05-29 10:27:49	<--	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has quit (Quit: jr3)
2014-05-29 10:28:38	<--	dmmoody (417ae9a2@gateway/web/freenode/ip.65.122.233.162) has quit (Quit: Page closed)
2014-05-29 10:28:52	-->	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has joined #python
2014-05-29 10:29:22	-->	dmmoody (~Adium@65-122-233-162.dia.static.qwest.net) has joined #python
2014-05-29 10:29:22	-->	d4t (~rage@190.78.136.124) has joined #python
2014-05-29 10:29:28	<--	thelinuxkid (~thelinuxk@99-118-212-48.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Leaving.)
2014-05-29 10:30:42	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 10:30:44	<--	carebeer (~snxt@gateway/tor-sasl/carebeer) has quit (Remote host closed the connection)
2014-05-29 10:30:46	d4t	hello, how can I easily add a couple of lines to a text configuration file, but I need them to be placed at a specific location inside the configuration (in between two known lines)
2014-05-29 10:30:49	-->	eiyalx (~na@anon-39-71.vpn.ipredator.se) has joined #python
2014-05-29 10:30:56	-->	carebeer (~snxt@gateway/tor-sasl/carebeer) has joined #python
2014-05-29 10:31:14	-->	cmoneylulz (~cmoneylul@24.178.100.74) has joined #python
2014-05-29 10:31:16	<--	E1ven (~E1ven@SQ7/ProjectLead/E1ven) has quit (Read error: Connection reset by peer)
2014-05-29 10:31:20	d4t	what approach would you use for d4t?
2014-05-29 10:31:32	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 10:31:43	KirkMcDonald	d4t: Write a new file, with the lines where you want them.
2014-05-29 10:31:46	<--	caleb_ (textual@nat/rackspace/x-frzixtfwnluiohox) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 10:32:19	<--	Fusxfaranto (~quassel@c-69-181-236-33.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-29 10:32:45	<--	cmoneylulz (~cmoneylul@24.178.100.74) has quit (Client Quit)
2014-05-29 10:32:55	-->	Vivekananda (~Vivekanan@69.251.189.107) has joined #python
2014-05-29 10:32:57	-->	desophos (~desophos@128.149.227.202) has joined #python
2014-05-29 10:33:05	<--	arosen (~arosen@geni/support/arosen) has quit (Ping timeout: 255 seconds)
2014-05-29 10:33:11	<--	stranac (d46cd398@gateway/web/freenode/ip.212.108.211.152) has quit (Quit: Page closed)
2014-05-29 10:33:27	d4t	KirkMcDonald, I'm talking about how to locate the two known lines, and how to express that the line I want written must be between these two flag lines
2014-05-29 10:33:48	d4t	perhaps that's clearer
2014-05-29 10:33:50	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-29 10:33:57	dash	d4t: write a loop over lines
2014-05-29 10:34:11	<--	js1069 (ae6292f7@gateway/web/freenode/ip.174.98.146.247) has quit (Quit: Page closed)
2014-05-29 10:35:04	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-29 10:35:46	Paradisee	hello o/
2014-05-29 10:35:53	Paradisee	i got something like this: http://dpaste.com/3E0EMF2/
2014-05-29 10:36:17	Paradisee	but i can't even run my unittest, it says my import has something wrong
2014-05-29 10:36:24	-->	evrian (~evrian@205-179-152-134.client.dsl.net) has joined #python
2014-05-29 10:36:31	H1N1	how are you importing?
2014-05-29 10:36:38	Paradisee	the package should be right
2014-05-29 10:36:42	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 276 seconds)
2014-05-29 10:36:57	Paradisee	from ircbot.modules import search
2014-05-29 10:37:32	d4t	dash has it.
2014-05-29 10:38:05	<--	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2014-05-29 10:38:07	H1N1	it should be from modules import search. since main.py resigns in ircbot. and tests alway resign there.
2014-05-29 10:38:17	H1N1	also*
2014-05-29 10:38:22	Paradisee	ill try
2014-05-29 10:38:50	H1N1	i would suggest a better ide :p
2014-05-29 10:38:52	Paradisee	nope, same error
2014-05-29 10:39:02	<--	Eyess (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Read error: Connection reset by peer)
2014-05-29 10:39:25	<--	zvyn (~milan@141.70.27.60) has quit (Quit: Leaving)
2014-05-29 10:39:48	evrian	hey, i was wondering if somebody could help me out with a multiprocessing/lxml issue
2014-05-29 10:39:52	H1N1	are you testing them without installing your project from setup.py?
2014-05-29 10:39:55	-->	fcodiaz (~fcodiaz@208.71.232.130) has joined #python
2014-05-29 10:40:01	Paradisee	H1N1: ya
2014-05-29 10:40:30	-->	cocogrove (~courtney@24.249.102.210) has joined #python
2014-05-29 10:40:45	H1N1	Install using setup.py or if you want a dirty trick to test without installing. try: import a Except ImportError: execfile('filename.py')
2014-05-29 10:41:04	-->	VladVP (~VladVP@185.37.87.102) has joined #python
2014-05-29 10:41:08	evrian	i keep getting a PicklingError
2014-05-29 10:41:21	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-29 10:41:29	<--	cocogrove (~courtney@24.249.102.210) has quit (Client Quit)
2014-05-29 10:41:34	Paradisee	H1N1: why should i install the package i am making?
2014-05-29 10:41:45	-->	ncthom91 (~ncthom91@mpk-nat-3.thefacebook.com) has joined #python
2014-05-29 10:41:51	Paradisee	it doesnt make sense
2014-05-29 10:42:07	--	Eyes is now known as Eyess
2014-05-29 10:42:10	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 10:42:15	-->	sl33k_ (~sl33k_@unaffiliated/sl33k-/x-0812184) has joined #python
2014-05-29 10:42:27	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-29 10:42:31	H1N1	python excepts an import to be installed to its packages. you are importing something that is non existent
2014-05-29 10:42:38	--	johnraz is now known as johnraz|away
2014-05-29 10:42:45	sl33k_	Why is __init__.py needed for a folder level?
2014-05-29 10:43:04	dash	sl33k_: that's how python's module system works
2014-05-29 10:43:23	-->	dumby (~dumby@204.246.140.162) has joined #python
2014-05-29 10:43:23	evrian	anybody?
2014-05-29 10:43:30	dash	evrian: ask a question
2014-05-29 10:43:39	wodim	hello, how do i do '{0:,}'.format(1000000) but with dots instead of commas ?
2014-05-29 10:43:50	dash	H1N1: never use execfile
2014-05-29 10:44:10	evrian	I'm getting a pickling error when using lxml and multiprocessing together
2014-05-29 10:44:16	evrian	I don't know what's causing it
2014-05-29 10:44:28	H1N1	dash: aware. but it seems he didn't want to install his own package. i mentioned it was a very dirty trick :p
2014-05-29 10:44:40	dash	H1N1: yes, never mention that.
2014-05-29 10:44:50	dash	H1N1: this is a channel for good ideas.
2014-05-29 10:44:50	-->	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has joined #python
2014-05-29 10:45:02	evrian	how would i go about figuring out what the cause is?
2014-05-29 10:45:18	<--	hassiktir (~schmity@67-0-185-41.albq.qwest.net) has quit (Quit: Computer has gone to sleep.)
2014-05-29 10:45:22	SilentGhost	evrian: look at your traceback
2014-05-29 10:45:28	dash	evrian: read the traceback
2014-05-29 10:45:31	<--	guhcampos (~guhcampos@186.249.5.2) has quit (Quit: guhcampos)
2014-05-29 10:45:38	dash	evrian: alternately: don't use multiprocessing
2014-05-29 10:45:39	-->	jumanji (4646817e@gateway/web/freenode/ip.70.70.129.126) has joined #python
2014-05-29 10:45:42	dash	(it is poorly designed)
2014-05-29 10:45:45	jumanji	hey guys wondering how I can traverse a tree without having to start from the the root every time I want to visit a node. http://stackoverflow.com/questions/23939408/how-to-traverse-a-tree-stored-in-sql-database-with-python
2014-05-29 10:45:45	<--	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 10:45:47	<--	greg_f (~greg@altlinux/developer/greg) has quit (Remote host closed the connection)
2014-05-29 10:45:50	H1N1	dash: understood.
2014-05-29 10:45:58	<--	Elek101 (~textual@133.103-240-81.adsl-dyn.isp.belgacom.be) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2014-05-29 10:46:01	evrian	dash: what would be a good alternative?
2014-05-29 10:46:07	dash	evrian: what are you writing?
2014-05-29 10:46:23	evrian	I'm trying to parse a couple million html files and pull out meta tags from each one
2014-05-29 10:46:37	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Ping timeout: 258 seconds)
2014-05-29 10:46:46	evrian	I have a parser written with lxml that takes in an html file and returns the meta tags
2014-05-29 10:46:54	dash	evrian: ok
2014-05-29 10:46:54	<--	TkTech (~TkTech@irc.tkte.ch) has quit (Quit: -)
2014-05-29 10:47:09	dash	evrian: and is it cpu bound?
2014-05-29 10:47:15	<--	Eyess (~eyes@WiseOS/Founder/NiaTeppelin) has quit (Remote host closed the connection)
2014-05-29 10:47:41	evrian	I don't think so, but I'm not sure
2014-05-29 10:47:58	dash	evrian: then don't use multiprocessing :)
2014-05-29 10:48:04	-->	Eyes (~eyes@WiseOS/Founder/NiaTeppelin) has joined #python
2014-05-29 10:48:09	KirkMcDonald	wodim: "{:n}" will use the separator for the current locale.
2014-05-29 10:48:24	--	Eyes is now known as Eyess
2014-05-29 10:48:25	evrian	dash: how would you go about speeding it up?
2014-05-29 10:48:44	<--	rquid (~sashka@94.41.177.225) has quit (Remote host closed the connection)
2014-05-29 10:48:46	dash	evrian: get an SSD
2014-05-29 10:49:03	dash	evrian: these html files are on your local filesystem?
2014-05-29 10:49:12	evrian	dash: so the bottleneck is in reading the html files?
2014-05-29 10:49:17	evrian	dash: yes
2014-05-29 10:49:19	dash	evrian: you tell me
2014-05-29 10:49:23	dash	evrian: is it?
2014-05-29 10:49:26	-->	TkTech (~TkTech@irc.tkte.ch) has joined #python
2014-05-29 10:49:41	<--	nihilista (~nihilista@187-16.dsl.iskon.hr) has quit (Read error: Connection reset by peer)
2014-05-29 10:50:18	-->	nihilista (~nihilista@187-16.dsl.iskon.hr) has joined #python
2014-05-29 10:50:18	-->	wwnnbb (~wwnnbb@85.112.113.2) has joined #python
2014-05-29 10:50:23	-->	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has joined #python
2014-05-29 10:50:32	-->	hassiktir (~schmity@67-0-185-41.albq.qwest.net) has joined #python
2014-05-29 10:50:32	evrian	dash: how would I go about profiling this?
2014-05-29 10:50:47	evrian	should I be looking at some sort of i/o monitor?
2014-05-29 10:50:50	-->	ompaul (~ompaul@unaffiliated/ompaul) has joined #python
2014-05-29 10:50:59	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 10:51:08	-->	grizwako (~GrizzLy@246-205.dsl.iskon.hr) has joined #python
2014-05-29 10:51:21	KirkMcDonald	evrian: I'd just start by seeing what cProfile has to say.
2014-05-29 10:51:29	[Tritium]	When using a lambda in a key of sorted...does it create the function object once, or for every iteration?
2014-05-29 10:52:04	dash	[Tritium]: it's created when the lambda expression is evaluated
2014-05-29 10:52:07	<--	cmheisel_ (~cheisel@169.137.193.95) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 10:52:11	Avaris	jumanji: i didn't understand that question
2014-05-29 10:52:14	dash	[Tritium]: arguments are evaluated before functions are called
2014-05-29 10:52:32	[Tritium]	...ok, got it.  thank you
2014-05-29 10:52:37	<--	ELFrederich (~ELFrederi@12.54.94.26) has quit (Remote host closed the connection)
2014-05-29 10:52:49	<--	Vivekananda (~Vivekanan@69.251.189.107) has quit (Remote host closed the connection)
2014-05-29 10:52:52	-->	cmheisel_ (~cheisel@169.137.193.95) has joined #python
2014-05-29 10:53:10	jumanji	Avaris: i want to visit each leaf node of a tree recursively
2014-05-29 10:53:19	[Tritium]	sometimes my brain just farts
2014-05-29 10:53:30	jumanji	Avaris: not starting from root each time
2014-05-29 10:53:30	<--	cmheisel_ (~cheisel@169.137.193.95) has quit (Client Quit)
2014-05-29 10:53:39	-->	Wr4i7h (~abc@207.125.249.5.rev.vodafone.pt) has joined #python
2014-05-29 10:53:41	-->	Karpuragauram (~Vivekanan@69.251.189.107) has joined #python
2014-05-29 10:53:47	--	oleo is now known as Guest12785
2014-05-29 10:53:48	-->	Chyros (~Chyros@24-116-194-234.cpe.cableone.net) has joined #python
2014-05-29 10:53:50	dash	jumanji: well, where do you want to start from
2014-05-29 10:54:02	jumanji	root
2014-05-29 10:54:08	Avaris	jumanji: go with breadth-first then not depth-first
2014-05-29 10:54:20	jumanji	ok
2014-05-29 10:54:29	dash	jumanji: do you want to start from the root each time, or from somewhere else?
2014-05-29 10:55:05	<--	thebearbear (~iamthebem@adsl-69-105-10-60.dsl.chic01.pacbell.net) has quit
2014-05-29 10:55:11	jumanji	start at root
2014-05-29 10:55:21	dash	jumanji: ok then what is your question
2014-05-29 10:55:34	<--	Karpuragauram (~Vivekanan@69.251.189.107) has quit (Read error: Connection reset by peer)
2014-05-29 10:55:35	jumanji	i want to visit each leaf node of a tree recursively
2014-05-29 10:55:37	-->	oleo__ (~oleo@xdsl-78-35-143-243.netcologne.de) has joined #python
2014-05-29 10:55:45	jumanji	starting at root
2014-05-29 10:55:48	-->	Karpuragauram (~Vivekanan@69.251.189.107) has joined #python
2014-05-29 10:56:02	dash	OK
2014-05-29 10:56:10	dash	what's the part that you're having trouble with?
2014-05-29 10:56:11	--	oleo__ is now known as oleo
2014-05-29 10:56:12	sl33k_	Pardon my ignorance but why are @property used for methods? I am coming from a Java background where such annotations for getters and setters werent there or did not make sense?
2014-05-29 10:56:17	-->	ovnicraft (~ovnicraft@181.211.97.242) has joined #python
2014-05-29 10:56:26	-->	firecat53 (~firecat53@c-98-225-17-95.hsd1.wa.comcast.net) has joined #python
2014-05-29 10:56:42	KirkMcDonald	sl33k_: @property is for when you want an attribute access to actually invoke a method.
2014-05-29 10:56:48	lvh	sl33k_: @property makes it so that you can do some_object.the_decorated_thing instead of some_object.the_decorated_thing()
2014-05-29 10:57:08	<--	dcrosta_ (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 10:57:17	<--	Guest12785 (~oleo@xdsl-78-35-161-221.netcologne.de) has quit (Ping timeout: 264 seconds)
2014-05-29 10:57:20	-->	infernix (nix@unaffiliated/infernix) has joined #python
2014-05-29 10:57:25	Avaris	if you go depth-first then you have to backtrack (which is what you describe). but it's easier to traverse with breadth-first
2014-05-29 10:57:56	<--	JordiGH (~jordi@octave/developer/JordiGH) has left #python ("Leaving")
2014-05-29 10:57:59	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 10:58:05	jumanji	I need depth first
2014-05-29 10:58:11	<--	eggsmiao (~cat@222.95.204.99) has quit (Ping timeout: 260 seconds)
2014-05-29 10:58:12	jumanji	i want the backtrack
2014-05-29 10:58:14	jumanji	http://en.wikipedia.org/wiki/Depth-first_search
2014-05-29 10:58:15	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-29 10:58:19	sl33k_	KirkMcDonald, lvh: I am assuming it is a syntactic sugar sort of syntax?
2014-05-29 10:58:26	<--	farn (frantk@fran.tk) has quit (Ping timeout: 252 seconds)
2014-05-29 10:58:32	KirkMcDonald	sl33k_: http://paste.pound-python.org/show/2rdlcG2JD0ZcxEVrxWRd/
2014-05-29 10:58:35	Avaris	jumanji: ok, then backtrack... i don't see the issue here
2014-05-29 10:58:42	<--	Score_Under (~Score_Und@97e4d403.skybroadband.com) has quit (Quit: Leaving)
2014-05-29 10:58:47	KirkMcDonald	sl33k_: Yes, the @foo syntax is called the decorator syntax.
2014-05-29 10:59:08	-->	paullik (~paullik@unaffiliated/paullik) has joined #python
2014-05-29 10:59:28	<--	pcardune (~pcardune@199.201.64.133) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 11:00:03	KirkMcDonald	sl33k_: My first example is equivalent to: http://paste.pound-python.org/show/RJOVmWfxLmLLs93jdDaB/
2014-05-29 11:00:20	<--	buck1 (~buck1@72-18-233-166.static-ip.telepacific.net) has quit (Quit: Leaving.)
2014-05-29 11:00:24	<--	tterlet__ (~le_tropic@194.44.141.34) has quit (Quit: Leaving)
2014-05-29 11:00:39	<--	Gambit- (~Gambit-@unaffiliated/gambit-) has quit (Ping timeout: 252 seconds)
2014-05-29 11:02:18	<--	jr3 (~jr3@c-76-30-249-79.hsd1.tx.comcast.net) has quit (Quit: jr3)
2014-05-29 11:02:21	--	johnraz|away is now known as johnraz
2014-05-29 11:02:50	-->	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has joined #python
2014-05-29 11:02:58	<--	seangrove (~user@c-69-181-197-122.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2014-05-29 11:03:13	<--	ioggstream (~rpolli@195.223.184.186) has quit (Ping timeout: 252 seconds)
2014-05-29 11:03:27	-->	Gambit- (~Gambit-@unaffiliated/gambit-) has joined #python
2014-05-29 11:03:56	-->	blochchain (~enigmuria@v-192-223-24-215.unman-vds.internap-nyc.nfoservers.com) has joined #python
2014-05-29 11:04:11	-->	Naeblis (~Naeblis@unaffiliated/naeblis) has joined #python
2014-05-29 11:04:26	-->	pcardune (~pcardune@199.201.64.139) has joined #python
2014-05-29 11:04:30	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-29 11:04:35	<--	ovnicraft (~ovnicraft@181.211.97.242) has quit (Ping timeout: 252 seconds)
2014-05-29 11:04:41	-->	Vivekananda (~Vivekanan@69.251.189.107) has joined #python
2014-05-29 11:04:52	-->	lad13371 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has joined #python
2014-05-29 11:05:11	<--	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2014-05-29 11:05:24	<--	yobj (~jboy@ool-457e35ac.dyn.optonline.net) has left #python ("WeeChat 0.4.3")
2014-05-29 11:06:14	-->	farn (~frantk@fran.tk) has joined #python
2014-05-29 11:06:32	<--	umair (~umair@111.88.13.125) has quit (Ping timeout: 245 seconds)
2014-05-29 11:06:39	<--	EPG (~EPG@p4FD5E056.dip0.t-ipconnect.de) has quit (Quit: EPG)
2014-05-29 11:07:11	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 265 seconds)
2014-05-29 11:07:18	<--	gcbirzan (~gcbirzan@unaffiliated/gcbirzan) has quit (Ping timeout: 240 seconds)
2014-05-29 11:07:28	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 11:07:30	<--	joshlegs (~josh@unaffiliated/horsehead) has quit (Quit: leaving)
2014-05-29 11:08:36	<--	TheFakeazneD525 (~denza252@unaffiliated/denza252) has quit (Quit: Off to do something more interestinger.)
2014-05-29 11:08:43	-->	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has joined #python
2014-05-29 11:08:44	<--	Johz (~Johz@94.0.154.49) has quit (Quit: Leaving)
2014-05-29 11:08:47	<--	Leeds (~richardc@n112118156036.netvigator.com) has quit (Quit: Leaving)
2014-05-29 11:09:11	-->	snyp (~snyp@223.29.204.2) has joined #python
2014-05-29 11:09:16	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 11:09:30	-->	dlman (~dlman@c-24-61-47-4.hsd1.ma.comcast.net) has joined #python
2014-05-29 11:10:07	-->	nanodano (~dtron@99-45-202-166.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-29 11:10:24	-->	kurban (~kai@host71-2.natpool.mwn.de) has joined #python
2014-05-29 11:10:33	<--	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has left #python
2014-05-29 11:10:36	<--	Vivekananda (~Vivekanan@69.251.189.107) has quit (Remote host closed the connection)
2014-05-29 11:10:45	<--	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-05-29 11:10:47	<--	Karpuragauram (~Vivekanan@69.251.189.107) has quit (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
2014-05-29 11:11:21	<--	dmmoody (~Adium@65-122-233-162.dia.static.qwest.net) has quit (Quit: Leaving.)
2014-05-29 11:12:21	-->	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has joined #python
2014-05-29 11:12:29	-->	guhcampos (~guhcampos@186.249.5.2) has joined #python
2014-05-29 11:13:43	-->	frothnicator (~frothy@unaffiliated/frothnicator) has joined #python
2014-05-29 11:13:59	-->	TheFakeazneD525 (~denza252@unaffiliated/denza252) has joined #python
2014-05-29 11:14:04	-->	diverdude (4fa06098@gateway/web/freenode/ip.79.160.96.152) has joined #python
2014-05-29 11:14:12	-->	gcbirzan (~gcbirzan@unaffiliated/gcbirzan) has joined #python
2014-05-29 11:14:13	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-29 11:14:17	-->	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has joined #python
2014-05-29 11:14:22	-->	ffledgling (~anhad@corp-nat.p2p.sfo1.mozilla.com) has joined #python
2014-05-29 11:14:25	-->	evanz_ (~evanz@dhcp162-84.netlab.uky.edu) has joined #python
2014-05-29 11:14:38	-->	roymiloh (~roymiloh@37.142.233.109) has joined #python
2014-05-29 11:14:39	--	moarrr_darkcoins is now known as moarrr
2014-05-29 11:14:46	-->	dmmoody (~Adium@65-122-233-162.dia.static.qwest.net) has joined #python
2014-05-29 11:15:17	<--	Deesl (bsdboy@redhat/deesl) has quit (Ping timeout: 264 seconds)
2014-05-29 11:15:21	<--	fmope (~fmope@80-218-227-138.dclient.hispeed.ch) has quit (Read error: Connection reset by peer)
2014-05-29 11:15:30	--	zz_veatch is now known as veatch
2014-05-29 11:15:53	<--	drinkycrow (~drinkycro@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 264 seconds)
2014-05-29 11:16:45	sl33k_	thanks KirkMcDonald
2014-05-29 11:19:11	<--	roymiloh (~roymiloh@37.142.233.109) has quit (Ping timeout: 260 seconds)
2014-05-29 11:19:29	<--	blochchain (~enigmuria@v-192-223-24-215.unman-vds.internap-nyc.nfoservers.com) has quit (Remote host closed the connection)
2014-05-29 11:19:37	-->	umair (~umair@39.44.45.222) has joined #python
2014-05-29 11:20:18	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-29 11:20:21	<--	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Ping timeout: 258 seconds)
2014-05-29 11:20:31	<--	echevemaster (~echevemas@fedora/echevemaster) has quit (Remote host closed the connection)
2014-05-29 11:20:32	-->	someprimetime_ (~someprime@162.245.21.10) has joined #python
2014-05-29 11:21:19	-->	sepero (~none@7.sub-75-203-116.myvzw.com) has joined #python
2014-05-29 11:21:34	diverdude	Hi. Lets say i have a string like this "abc((id:3))  ((id:6)) djfjf((id:66))" and i want to replace each ((id:xx)) with an entry in a dictionary {3:'a',6:'b',66:'c'}, so that i get a string
2014-05-29 11:21:51	<--	johnraz (~johnraz@unaffiliated/johnraz) has quit (Ping timeout: 260 seconds)
2014-05-29 11:21:58	--	moarrr is now known as moarrr_darkcoin
2014-05-29 11:22:12	<--	someprimetime (~someprime@162.245.21.10) has quit (Ping timeout: 276 seconds)
2014-05-29 11:22:12	--	someprimetime_ is now known as someprimetime
2014-05-29 11:22:20	-->	Deithrian (~Deithrian@unaffiliated/deithrian) has joined #python
2014-05-29 11:22:34	<--	oubiga (~oubiga@114.225.20.95.dynamic.jazztel.es) has quit (Quit: oubiga)
2014-05-29 11:22:46	diverdude	Hi
2014-05-29 11:22:54	Kwpolska	diverdude: where do 'a', 'b', 'c' in the dict come from?
2014-05-29 11:22:58	<--	shunya_chakra (~shunya@117.200.77.51) has quit (Remote host closed the connection)
2014-05-29 11:23:05	<--	gcbirzan (~gcbirzan@unaffiliated/gcbirzan) has quit (Ping timeout: 264 seconds)
2014-05-29 11:23:16	ffledgling	Can anyone help me out with a little celery problem?
2014-05-29 11:23:56	<--	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-05-29 11:24:17	<--	cam (~cam@trivialand/beta/cam) has quit (Ping timeout: 264 seconds)
2014-05-29 11:24:49	<--	lad13371 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-05-29 11:25:14	<--	taloszer_ (~taloszerg@c62e6602.cst.lightpath.net) has quit (Remote host closed the connection)
2014-05-29 11:25:15	-->	niklasb (~codeslay0@p5B313C6E.dip0.t-ipconnect.de) has joined #python
2014-05-29 11:25:34	<--	bocaneri (~bocaneri_@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2014-05-29 11:25:54	<--	dmmoody (~Adium@65-122-233-162.dia.static.qwest.net) has quit (Quit: Leaving.)
2014-05-29 11:26:16	diverdude	How do i replace entries in a string "((id:7)) ((id:8))" with entries in a dictionary {7:'a',8:'b'} such that i get "a b" ? Is there some easy regex way of doing that?
2014-05-29 11:26:40	<--	naxa (~chatzilla@catv-89-135-155-20.catv.broadband.hu) has left #python
2014-05-29 11:26:45	stranac	diverdude: re.sub
2014-05-29 11:26:53	-->	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has joined #python
2014-05-29 11:26:58	<--	siflyn (~siflyn@ip24-254-190-96.rn.hr.cox.net) has quit
2014-05-29 11:27:18	-->	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has joined #python
2014-05-29 11:27:18	diverdude	Stranac can you show me a short example?
2014-05-29 11:27:59	niklasb	diverdude: the regex you want is r'\(\(id:(\d+)\)\)'
2014-05-29 11:28:04	<--	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has quit (Ping timeout: 272 seconds)
2014-05-29 11:28:06	-->	cardboard (~cardboard@DHCP-159-220.caltech.edu) has joined #python
2014-05-29 11:28:34	Kwpolska	diverdude: re.sub(r'…', function_that_takes_the_match_object_and_should_return_the_appropriate_dict_entry())
2014-05-29 11:28:36	-->	l3lu3 (~l3lu3@unaffiliated/l3lu3) has joined #python
2014-05-29 11:28:39	<--	l3lu3 (~l3lu3@unaffiliated/l3lu3) has left #python
2014-05-29 11:29:01	stranac	diverdude: what Kwpolska said, just without ()
2014-05-29 11:29:21	Kwpolska	ah yes, I mistakenly called the function in question
2014-05-29 11:29:27	stranac	diverdude: there are examples in the docs (1 at least)
2014-05-29 11:30:11	desophos	hi everyone, i'm having trouble with HTMLParser threads failing to write data correctly
2014-05-29 11:30:33	-->	SebSemmi (~SebSemmi@e178224191.adsl.alicedsl.de) has joined #python
2014-05-29 11:30:47	desophos	i have several threads, each with a separate HTMLParser instance, each of which is writing to its own file
2014-05-29 11:30:51	-->	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has joined #python
2014-05-29 11:30:51	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 11:30:54	-->	chobojordi (~chobojord@85-127-222-2.dynamic.xdsl-line.inode.at) has joined #python
2014-05-29 11:31:31	-->	rezzack (~rezzack@unaffiliated/rezzack) has joined #python
2014-05-29 11:31:37	desophos	but the written data is sometimes garbled
2014-05-29 11:31:38	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 11:31:55	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 11:31:59	sproingie	<barbie>threading i</barbie>s hard!
2014-05-29 11:32:02	-->	dh1gital (~d1gital@fsf/member/d1gital) has joined #python
2014-05-29 11:32:03	desophos	not as in mixed up but as in written improperly
2014-05-29 11:32:13	desophos	sproingie: :(
2014-05-29 11:32:15	<--	quake_guy (~brett@gos-bketter-d3.uwm.edu) has quit (Remote host closed the connection)
2014-05-29 11:32:29	--	moarrr_darkcoin is now known as moarrr
2014-05-29 11:32:32	<--	FasTTo (~FasTTo@bl16-177-13.dsl.telepac.pt) has quit (Quit: Inactive)
2014-05-29 11:32:43	--	moarrr is now known as moarrr_bitcoin
2014-05-29 11:32:45	--	Joost`away is now known as Joost
2014-05-29 11:32:45	<--	Joost (~Joost@unaffiliated/joost) has left #python
2014-05-29 11:32:52	<--	mordonez (~mordonez@190.102.132.12) has quit (Quit: Computer has gone to sleep.)
2014-05-29 11:32:53	desophos	they're all reading from different pages though
2014-05-29 11:32:55	<--	sunya7a (~pryde@unaffiliated/sunya7a) has quit (Ping timeout: 252 seconds)
2014-05-29 11:33:18	dash	desophos: what's all this for?
2014-05-29 11:33:19	-->	mordonez (~mordonez@190.102.132.14) has joined #python
2014-05-29 11:33:20	diverdude	Stranac if the dictionary is actually a huge list in a database, can i somehow get a list of all the matches... Loop through the list and for each hit make a database lookip and insert that in the corresponding position in the string?
2014-05-29 11:33:21	sproingie	does it work with one thread?
2014-05-29 11:33:52	-->	fossrox (~fossrox@unaffiliated/fossrox) has joined #python
2014-05-29 11:33:53	-->	emorrow (~Thunderbi@185.7.185.250) has joined #python
2014-05-29 11:34:14	stranac	diverdude: the replacement function can do whatever you want, but this sounds like kind of a bad idea...
2014-05-29 11:34:16	desophos	sproingie: using one thread makes it take several hours instead of 20 minutes; it's been a while since i had a single-threaded version
2014-05-29 11:34:30	diverdude	Stranac why?
2014-05-29 11:34:40	desophos	dash: i'm scraping data from a directory of thousands of pages
2014-05-29 11:34:49	stranac	diverdude: sounds very inefficient
2014-05-29 11:35:05	sproingie	desophos: apparently using several makes it fast and wrong
2014-05-29 11:35:06	-->	narkeeso (~narkeeso@108.60.34.124) has joined #python
2014-05-29 11:35:07	diverdude	Stranac ok... What would be more efficient?
2014-05-29 11:35:11	<--	eiyalx (~na@anon-39-71.vpn.ipredator.se) has quit (Quit: Leaving)
2014-05-29 11:35:18	-->	the_rat_ (~the_rat@82.84.142.165) has joined #python
2014-05-29 11:35:18	<--	ompaul (~ompaul@unaffiliated/ompaul) has quit (Quit: and zebedee said its time for other stuff)
2014-05-29 11:35:25	sproingie	desophos: anyway, i asked if it *worked*.  called narrowing down the problem.
2014-05-29 11:35:31	-->	gcbirzan (~gcbirzan@unaffiliated/gcbirzan) has joined #python
2014-05-29 11:35:40	<--	skulltower (~skulltowe@gateway/tor-sasl/skulltower) has quit (Quit: BBye)
2014-05-29 11:35:47	<--	tilgovi (~randall@couchdb/committer/tilgovi) has quit (Remote host closed the connection)
2014-05-29 11:35:57	desophos	sproingie: my answer is that i don't know if it would work if i changed the current version to single-threaded. the last single-threaded version i had was different
2014-05-29 11:36:02	dash	desophos: have you considered using scrapy?
2014-05-29 11:36:14	<--	emorrow (~Thunderbi@185.7.185.250) has quit (Read error: Connection reset by peer)
2014-05-29 11:36:18	<--	ncthom91 (~ncthom91@mpk-nat-3.thefacebook.com) has quit (Ping timeout: 240 seconds)
2014-05-29 11:36:21	stranac	diverdude: either load the entire list at once, or first find all the matches (using findall or something) and load the stuff you want
2014-05-29 11:36:24	desophos	dash: yes, i originally wrote it with scrapy but my boss told me to use stdlib
2014-05-29 11:36:27	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 258 seconds)
2014-05-29 11:36:36	-->	jpj (~jpj@101.63.180.96) has joined #python
2014-05-29 11:36:37	<--	jpj (~jpj@101.63.180.96) has quit (Client Quit)
2014-05-29 11:36:42	sproingie	your boss is a tool
2014-05-29 11:36:44	<--	Naeblis (~Naeblis@unaffiliated/naeblis) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 11:36:55	<--	frothnicator (~frothy@unaffiliated/frothnicator) has quit (Quit: Leaving.)
2014-05-29 11:36:56	dash	desophos: did he have a reason...?
2014-05-29 11:36:56	 *	Pici wonders if it is always the same boss that is asking for stdlib, or if there are just that many tools out there
2014-05-29 11:36:57	desophos	because external libraries can't be relied upon to be maintained apparently
2014-05-29 11:37:00	stranac	diverdude: if you expect very few replacements, your original idea would be fine
2014-05-29 11:37:11	dash	desophos: there's an easy fix for that
2014-05-29 11:37:14	<--	thegrif (~thegrif@ool-44c0788b.dyn.optonline.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 11:37:23	<--	the_rat (~the_rat@82.84.158.20) has quit (Ping timeout: 260 seconds)
2014-05-29 11:37:29	-->	manizzle (~manizzle@107-220-114-180.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-29 11:37:33	desophos	dash: what is it??
2014-05-29 11:37:36	<--	mordonez (~mordonez@190.102.132.14) has quit (Ping timeout: 258 seconds)
2014-05-29 11:37:44	-->	OOPMan (~adamj@41.7.240.87) has joined #python
2014-05-29 11:37:59	desophos	don't say quit my job...
2014-05-29 11:38:12	deepy	desophos: fork them
2014-05-29 11:38:16	deepy	and maintain them
2014-05-29 11:38:22	<--	flosch (~flosch@unaffiliated/flosch) has quit (Quit: Verlassend)
2014-05-29 11:38:37	<--	scottferg (~scottferg@c-98-226-208-95.hsd1.il.comcast.net) has quit (Quit: leaving)
2014-05-29 11:39:01	diverdude	Stranac yeah ok
2014-05-29 11:39:05	sproingie	or just bundle them in a virtualenv
2014-05-29 11:39:07	-->	neataroni (~neataroni@c-67-171-200-129.hsd1.or.comcast.net) has joined #python
2014-05-29 11:39:24	-->	ncthom91 (~ncthom91@mpk-nat-6.thefacebook.com) has joined #python
2014-05-29 11:39:25	<--	jumanji (4646817e@gateway/web/freenode/ip.70.70.129.126) has quit (Quit: Page closed)
2014-05-29 11:39:52	<--	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has quit (Ping timeout: 245 seconds)
2014-05-29 11:39:53	desophos	this script is meant to be portable
2014-05-29 11:39:55	<--	CrypticByte (~CrypticBy@50.157.50.116) has quit (Remote host closed the connection)
2014-05-29 11:39:56	-->	maugzoide (~maugzoide@177.43.249.158) has joined #python
2014-05-29 11:40:08	sproingie	so bundle it
2014-05-29 11:40:15	sproingie	it's not like python itself isn't a dependency
2014-05-29 11:40:21	-->	codepython777 (~codepytho@cs1229.cs.fsu.edu) has joined #python
2014-05-29 11:40:23	maugzoide	What is the easiest way to run coverage in a specific directory containing python files?
2014-05-29 11:40:40	maugzoide	I am trying coverage run --source=my_dir
2014-05-29 11:40:47	Unode	maugzoide, coverage of what?
2014-05-29 11:40:56	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-29 11:41:21	maugzoide	Unode: sorry. I am using coverage.py to test coverage of python files
2014-05-29 11:41:21	desophos	hmm... i don't think my boss would like this to become a package
2014-05-29 11:41:29	sproingie	your problem isn't technical then
2014-05-29 11:41:38	--	Rev|SleepingFox is now known as TheReverend403
2014-05-29 11:41:39	sproingie	"i'm an electrician but my boss won't let me use electricity"
2014-05-29 11:41:40	-->	quake_guy (~brett@gos-bketter-d3.uwm.edu) has joined #python
2014-05-29 11:41:44	Unode	maugzoide, do you have tests for said files?
2014-05-29 11:41:44	-->	enkrypt (~jan@d51A48B68.access.telenet.be) has joined #python
2014-05-29 11:41:45	desophos	"your problem is social, take your boss out for a beer"
2014-05-29 11:41:47	sproingie	sorry, not my problem
2014-05-29 11:41:51	desophos	is what i was told yesterday
2014-05-29 11:41:56	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 255 seconds)
2014-05-29 11:41:59	sproingie	they were right yesterday
2014-05-29 11:42:01	desophos	haha
2014-05-29 11:42:25	_habnabit	the stdlib is not exactly a shining monument to code maintenance
2014-05-29 11:42:35	sproingie	we have no solution that will satisfy your boss
2014-05-29 11:42:36	maugzoide	Unode:  not yet. This is why I am running coverage too see how much is already covered
2014-05-29 11:42:42	maugzoide	Unode:  Am I wrong?
2014-05-29 11:42:47	Unode	maugzoide, yes
2014-05-29 11:42:47	-->	e_d_b (~quassel@ip98-160-102-54.ok.ok.cox.net) has joined #python
2014-05-29 11:42:50	<--	e_d_b (~quassel@ip98-160-102-54.ok.ok.cox.net) has left #python ("http://quassel-irc.org - Chat comfortably. Anywhere.")
2014-05-29 11:42:57	desophos	sproingie: the solution is to fix this HTMLParser issue
2014-05-29 11:43:11	-->	jalaziz (~jalaziz@67-207-118-18.static.wiline.com) has joined #python
2014-05-29 11:43:18	<--	diverdude (4fa06098@gateway/web/freenode/ip.79.160.96.152) has quit (Ping timeout: 240 seconds)
2014-05-29 11:43:21	desophos	sproingie: a better solution would be convincing people that scrapy is ok, but that's my problem
2014-05-29 11:43:27	Unode	maugzoide, you can only compute coverage, if you have some tests. The point of "coverage" is to answer the question "How much of my code is being tested?" (read how much is covered by tests)
2014-05-29 11:43:44	<--	jasvir (~jasvir@122.173.175.81) has left #python
2014-05-29 11:44:02	maugzoide	Unode: you are right. I am losing the concept at all.
2014-05-29 11:44:25	sproingie	coverage gets used for other things, but tests is the only one you need to care about
2014-05-29 11:44:35	-->	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has joined #python
2014-05-29 11:44:40	<--	zhost (~zhost@host-178.215.192.230-internet.zabrze.debacom.pl) has quit (Excess Flood)
2014-05-29 11:44:56	-->	mordonez (~mordonez@190.102.132.14) has joined #python
2014-05-29 11:45:26	Unode	you could use coverage to compute how much of the code is actually executed during a normal execution of the application, but it would be necessary to run through all possible scenarios, which is what tests are supposed to do.
2014-05-29 11:45:44	-->	stupid-1 (~prusakova@96.58.54.102) has joined #python
2014-05-29 11:46:30	sproingie	with production coverage you test real-world usage.  basically finding out what parts are getting used.  usually gets turned into a call graph.
2014-05-29 11:46:45	sproingie	these days profilers do the job better
2014-05-29 11:47:08	-->	blackmondolz (Elite10504@gateway/shell/elitebnc/x-gdrrsoiiesgrzkmn) has joined #python
2014-05-29 11:47:31	<--	paullik (~paullik@unaffiliated/paullik) has quit (Quit: paullik)
2014-05-29 11:47:46	blackmondolz	Anyone have experience with npyscreen library?
2014-05-29 11:48:05	-->	zhost (~zhost@host-178.215.192.230-internet.zabrze.debacom.pl) has joined #python
2014-05-29 11:48:05	-->	SteveG (~SteveG@pdpc/supporter/21for7/steveg) has joined #python
2014-05-29 11:48:55	-->	aeikenberry (~aeikenber@50.247.147.218) has joined #python
2014-05-29 11:49:02	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 11:49:06	<--	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has quit (Ping timeout: 258 seconds)
2014-05-29 11:49:08	<--	MentalAtrophy (~Travis@184-76-29-165.war.clearwire-wmx.net) has left #python
2014-05-29 11:49:48	<--	maugzoide (~maugzoide@177.43.249.158) has quit (Ping timeout: 240 seconds)
2014-05-29 11:50:14	<--	icecream (~icecream@unaffiliated/icecream-) has quit (Max SendQ exceeded)
2014-05-29 11:50:23	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 11:50:29	_habnabit	blackmondolz, just ask your real question
2014-05-29 11:50:41	<--	kayatwork (~kayfox@orca.zerda.net) has quit (Ping timeout: 252 seconds)
2014-05-29 11:51:22	-->	IceCream (~icecream@unaffiliated/icecream-) has joined #python
2014-05-29 11:51:38	<--	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2014-05-29 11:51:57	-->	kingplusplus (~kingplusp@41.58.219.117) has joined #python
2014-05-29 11:52:21	<--	IceCream (~icecream@unaffiliated/icecream-) has quit (Max SendQ exceeded)
2014-05-29 11:52:26	blackmondolz	_habnabit:  is it suited for game (console) interfacing?
2014-05-29 11:52:36	<--	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Ping timeout: 240 seconds)
2014-05-29 11:52:53	-->	IceCream (~icecream@unaffiliated/icecream-) has joined #python
2014-05-29 11:53:08	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 11:53:17	--	moarrr_bitcoin is now known as moarrr
2014-05-29 11:53:18	sproingie	game consoles tend not to have text consoles at all
2014-05-29 11:53:23	--	moarrr is now known as moarrr_darkcoin
2014-05-29 11:53:43	kingplusplus	am getting MemoryError while collecting source code for couple of websites. Am using windows server 2008 32bit is there any way around it? basically, i add each source to previours like this source += new_source .... this happen within a loop
2014-05-29 11:54:10	Jerub	kingplusplus: don't pretend your computer has infinite ram
2014-05-29 11:54:18	Unode	kingplusplus, you know what MemoryError means right?
2014-05-29 11:54:24	blackmondolz	I mean, seem like text ui
2014-05-29 11:54:32	-->	maugzoide (~maugzoide@177.43.249.158) has joined #python
2014-05-29 11:55:01	kingplusplus	Uncode yes i do, its better is it better to catch it in an except?
2014-05-29 11:55:19	-->	scottferg (~scottferg@c-98-226-208-95.hsd1.il.comcast.net) has joined #python
2014-05-29 11:55:27	Unode	kingplusplus, the better solution is to change your strategy.
2014-05-29 11:55:34	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 11:55:51	dash	kingplusplus: MemoryError never makes sense to catch
2014-05-29 11:55:54	Unode	such as saving it directly to a file instead of appending it in memory
2014-05-29 11:57:13	-->	dangayle (~dang@users.spokesman.com) has joined #python
2014-05-29 11:57:22	-->	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has joined #python
2014-05-29 11:57:51	-->	Chiyo (Chiyo@pdpc/supporter/active/chiyo) has joined #python
2014-05-29 11:58:30	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-29 11:58:50	-->	cocogrove (~courtney@ip68-227-112-127.ok.ok.cox.net) has joined #python
2014-05-29 11:59:04	-->	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has joined #python
2014-05-29 11:59:12	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 12:01:48	<--	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has quit (Ping timeout: 265 seconds)
2014-05-29 12:01:56	<--	chobojordi (~chobojord@85-127-222-2.dynamic.xdsl-line.inode.at) has quit (Read error: Connection reset by peer)
2014-05-29 12:02:23	<--	mijicd (~mijicd@cable-188-246-38-127.dynamic.kdsinter.net) has quit (Remote host closed the connection)
2014-05-29 12:02:44	<--	maugzoide (~maugzoide@177.43.249.158) has quit (Quit: Computer has gone to sleep.)
2014-05-29 12:03:06	-->	b4rbz (~barbz@ool-18e42f45.dyn.optonline.net) has joined #python
2014-05-29 12:03:17	<--	avoinea (~avoinea@85.9.55.194) has quit (Ping timeout: 264 seconds)
2014-05-29 12:03:37	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-29 12:03:37	-->	wldcordeiro (~wldcordei@50-200-160-113-static.hfc.comcastbusiness.net) has joined #python
2014-05-29 12:03:44	<--	wldcordeiro (~wldcordei@50-200-160-113-static.hfc.comcastbusiness.net) has left #python
2014-05-29 12:03:54	-->	wldcordeiro (~wldcordei@50-200-160-113-static.hfc.comcastbusiness.net) has joined #python
2014-05-29 12:04:42	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Ping timeout: 265 seconds)
2014-05-29 12:04:53	<--	nande (~quassel@190.183.4.91) has quit (Remote host closed the connection)
2014-05-29 12:06:17	-->	maugzoide (~maugzoide@177.43.249.158) has joined #python
2014-05-29 12:06:19	-->	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has joined #python
2014-05-29 12:06:29	-->	fzombie (KiloJuliet@pdpc/supporter/student/GPLGeek) has joined #python
2014-05-29 12:06:31	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-29 12:06:45	<--	aljohri (~atul@wireless-165-124-129-66.nuwlan.northwestern.edu) has quit (Quit: aljohri)
2014-05-29 12:06:52	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 12:07:10	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 12:07:23	-->	JimmyNeutron (~Jimmy@70-35-54-38.static.wiline.com) has joined #python
2014-05-29 12:07:31	<--	ThiefMaster (~ThiefMast@unaffiliated/thiefmaster) has quit (Ping timeout: 240 seconds)
2014-05-29 12:07:50	<--	pcardune (~pcardune@199.201.64.139) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 12:08:38	-->	jrm2k6_ (~jrm2k6@c-ge1-4-3352.osr0-terez.net.telekom.hu) has joined #python
2014-05-29 12:08:59	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 12:09:08	<--	Chiyo (Chiyo@pdpc/supporter/active/chiyo) has left #python
2014-05-29 12:10:09	<--	the_rat_ (~the_rat@82.84.142.165) has quit (Remote host closed the connection)
2014-05-29 12:10:54	<--	dvx (~dvx@igw.obsm.cz) has quit (Quit: dvx)
2014-05-29 12:11:15	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 12:11:33	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-29 12:12:23	<--	bfig (~bruno@srvexchange.datamatic.com.uy) has quit (Quit: leaving)
2014-05-29 12:12:50	--	sqrrl is now known as sq
2014-05-29 12:13:18	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 12:13:18	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-29 12:13:24	<--	neurosnap (~ubuntu@ec2-54-201-22-212.us-west-2.compute.amazonaws.com) has quit (Quit: Lost terminal)
2014-05-29 12:13:33	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 12:13:34	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-29 12:14:20	<--	Synthead (~max@172.56.32.28) has quit (Ping timeout: 255 seconds)
2014-05-29 12:14:26	-->	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has joined #python
2014-05-29 12:14:27	-->	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has joined #python
2014-05-29 12:15:29	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 12:16:12	-->	buck1 (~buck1@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-29 12:16:18	-->	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has joined #python
2014-05-29 12:16:44	-->	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has joined #python
2014-05-29 12:17:15	-->	roymiloh (~roymiloh@37.142.233.109) has joined #python
2014-05-29 12:18:06	<--	sl33k_ (~sl33k_@unaffiliated/sl33k-/x-0812184) has quit (Ping timeout: 276 seconds)
2014-05-29 12:18:06	<--	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has left #python
2014-05-29 12:18:18	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-29 12:18:49	<--	stupid-1 (~prusakova@96.58.54.102) has left #python
2014-05-29 12:18:58	-->	codex0 (~anonymous@173.254.199.83) has joined #python
2014-05-29 12:19:17	<--	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-05-29 12:19:21	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Quit: Computer has gone to sleep.)
2014-05-29 12:20:14	-->	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has joined #python
2014-05-29 12:20:19	<--	narkeeso (~narkeeso@108.60.34.124) has quit (Ping timeout: 260 seconds)
2014-05-29 12:20:25	-->	Kaedenn1 (~ZettaAdmi@unaffiliated/kaedenn) has joined #python
2014-05-29 12:20:31	-->	norrell (~norrell@pool-108-20-78-135.bstnma.fios.verizon.net) has joined #python
2014-05-29 12:20:51	-->	Zer000 (~phil@216-58-17-59.cpe.distributel.net) has joined #python
2014-05-29 12:21:11	Kaedenn1	How do zip'd packages work? If I have mypackage.zip containing mypackage/__init__.py, mypackage/foo.py can I just do 'import mypackage.foo'?
2014-05-29 12:21:32	<--	roymiloh (~roymiloh@37.142.233.109) has quit (Ping timeout: 245 seconds)
2014-05-29 12:21:40	Kaedenn1	Or is it 'import mypackage.mypackage.foo'?
2014-05-29 12:21:55	-->	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has joined #python
2014-05-29 12:22:08	-->	sl33k_ (~sl33k_@unaffiliated/sl33k-/x-0812184) has joined #python
2014-05-29 12:23:01	-->	TripTastic (~Trip@h19.187.123.208.dynamic.ip.windstream.net) has joined #python
2014-05-29 12:23:39	<--	Wiz_KeeD (~wiz@5-12-144-4.residential.rdsnet.ro) has quit (Remote host closed the connection)
2014-05-29 12:23:41	-->	narkeeso (~narkeeso@108.60.34.124) has joined #python
2014-05-29 12:24:25	<--	plutoniix (~plutoniix@node-5uo.pool-125-25.dynamic.totbb.net) has quit (Quit: จรลี จรลา)
2014-05-29 12:25:37	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 12:25:39	<--	krpt (~krpt@ip-93.net-81-220-43.lyon.rev.numericable.fr) has quit (Quit: segfault)
2014-05-29 12:26:20	<--	flax (~flax@gateway/tor-sasl/flax) has quit (Ping timeout: 272 seconds)
2014-05-29 12:26:39	-->	joshlegs (~josh@unaffiliated/horsehead) has joined #python
2014-05-29 12:26:47	Kaedenn1	Yhg1s: I still would like it if you could mail me your brain. I'd return it when I'm done! I just need it to fix a project of mine.
2014-05-29 12:26:58	<--	_joe_ (~joe@wikimedia/GLavagetto-WMF) has quit (Ping timeout: 272 seconds)
2014-05-29 12:27:27	-->	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has joined #python
2014-05-29 12:27:34	-->	_joe_ (~joe@wikimedia/GLavagetto-WMF) has joined #python
2014-05-29 12:28:05	-->	flax (~flax@gateway/tor-sasl/flax) has joined #python
2014-05-29 12:28:26	<--	quake_guy (~brett@gos-bketter-d3.uwm.edu) has quit (Quit: These are not the channels you are looking for)
2014-05-29 12:28:33	-->	jpj (~jpj@101.63.180.96) has joined #python
2014-05-29 12:28:38	<--	jpj (~jpj@101.63.180.96) has quit (Client Quit)
2014-05-29 12:28:45	<--	ToApolytoXaos (~ToApolyto@46.21.62.128) has quit (Quit: Leaving)
2014-05-29 12:28:49	<--	Fogest (Fogest@2604:180::1458:e4e6) has quit (Quit: Outta here.)
2014-05-29 12:29:12	Salvakiya	question, in python if a class inherits another class which takes parameters... does the inheriting class require those parameters passed to it?
2014-05-29 12:29:38	dash	Salvakiya: __init__ works like other methods in that regard, yes.
2014-05-29 12:30:48	lduros	hi, I'm trying to use sphinx-apidoc and generate html, but the methods don't show the docstrings
2014-05-29 12:30:59	lduros	is there an option with sphinx-apidoc to include the docstrings?
2014-05-29 12:31:20	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit
2014-05-29 12:31:33	-->	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has joined #python
2014-05-29 12:31:33	<--	tortal (tortal@unaffiliated/tortal) has quit (Quit: exit(0))
2014-05-29 12:31:33	<--	Nothing4You (N4Y@Nothing4You.w.tf-w.tf) has quit (Quit: Gone...)
2014-05-29 12:31:44	<--	lad1337 (~Adium@p5DC15D90.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2014-05-29 12:31:47	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 12:31:59	-->	pcardune (~pcardune@199.201.64.130) has joined #python
2014-05-29 12:32:12	-->	rafagomes (~rafagomes@179.218.20.249) has joined #python
2014-05-29 12:32:31	<--	rafagomes (~rafagomes@179.218.20.249) has quit (Remote host closed the connection)
2014-05-29 12:32:41	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-29 12:33:18	<--	jrm2k6_ (~jrm2k6@c-ge1-4-3352.osr0-terez.net.telekom.hu) has quit (Remote host closed the connection)
2014-05-29 12:33:39	-->	Nothing4You (N4Y@Nothing4You.w.tf-w.tf) has joined #python
2014-05-29 12:34:09	-->	tortal (tortal@unaffiliated/tortal) has joined #python
2014-05-29 12:34:16	-->	Ex0deus (~Exodeus@unaffiliated/ex0deus) has joined #python
2014-05-29 12:34:22	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-29 12:35:39	<--	buck1 (~buck1@72-18-233-188.static-ip.telepacific.net) has quit (Ping timeout: 276 seconds)
2014-05-29 12:35:41	joshlegs	can anybody tell me why this is?  http://docs.python-requests.org/en/latest/user/quickstart/#redirection-and-history idk why the response.url is set to be the redirected url.
2014-05-29 12:35:53	joshlegs	i dont see anything really explaining how that works on there
2014-05-29 12:36:12	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 240 seconds)
2014-05-29 12:36:30	-->	macieks (~macieks@ip-222-135.ists.pl) has joined #python
2014-05-29 12:37:31	<--	cardboard (~cardboard@DHCP-159-220.caltech.edu) has quit (Remote host closed the connection)
2014-05-29 12:37:34	-->	moreisee (~monsterdi@cpe-76-90-172-20.socal.res.rr.com) has joined #python
2014-05-29 12:37:52	-->	Ard1t (~Ardit@unaffiliated/ard1t) has joined #python
2014-05-29 12:38:02	Salvakiya	if I have an instance of a class assigned to game_objects[10] and I delete that entry will it append a new instance to 10 when I create a new one?
2014-05-29 12:38:09	Salvakiya	or will it append it to the end of the list?
2014-05-29 12:38:18	<--	rippa (~rippa@176.100.246.238) has quit (Quit: {#`%${%&`+'${`%&NO CARRIER)
2014-05-29 12:38:22	salparadise	joshlegs: "GitHub redirects all HTTP requests to HTTPS." ?
2014-05-29 12:38:48	joshlegs	salparadise: yeah, but why doesnt the response object record the original url passed as a parameter as the url
2014-05-29 12:39:00	<--	ncthom91 (~ncthom91@mpk-nat-6.thefacebook.com) has quit (Ping timeout: 240 seconds)
2014-05-29 12:39:02	-->	Joost`away (~Joost@unaffiliated/joost) has joined #python
2014-05-29 12:39:05	--	Joost`away is now known as Joost
2014-05-29 12:39:06	salparadise	Salvakiya: end of list
2014-05-29 12:39:10	joshlegs	salparadise: any item is appedned to the end of the list
2014-05-29 12:39:29	<--	hassiktir (~schmity@67-0-185-41.albq.qwest.net) has quit (Quit: Leaving...)
2014-05-29 12:39:35	Salvakiya	hmmm
2014-05-29 12:39:36	-->	emorrow (~Thunderbi@176.12.107.139) has joined #python
2014-05-29 12:39:38	<--	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has quit (Ping timeout: 240 seconds)
2014-05-29 12:39:48	--	Joost is now known as Joost`away
2014-05-29 12:40:01	--	veatch is now known as zz_veatch
2014-05-29 12:40:06	--	bwreilly_ is now known as bwreilly
2014-05-29 12:40:15	SilentGhost	joshlegs: but you have that original url, right? why do you need it recorded on the response object?
2014-05-29 12:40:43	<--	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has quit (Remote host closed the connection)
2014-05-29 12:40:44	Salvakiya	this means that even if all instances which were created at the beginning of the game are "destroyed" the list will keep getting larger no matter what
2014-05-29 12:40:46	joshlegs	SilentGhost: yeah i have the original. I just need to understand what's actually happening when the response.url is set so I can make sure there's not going to be any wonky, unexpected behavior
2014-05-29 12:40:52	<--	someprimetime (~someprime@162.245.21.10) has quit (Quit: someprimetime)
2014-05-29 12:40:54	-->	eoss (~e0s@pdpc/supporter/student/eoss) has joined #python
2014-05-29 12:41:08	-->	shackra (~shackra@186.32.192.206) has joined #python
2014-05-29 12:41:11	-->	Itkovian (~Itkovian@vpne214.ugent.be) has joined #python
2014-05-29 12:41:15	<--	emorrow (~Thunderbi@176.12.107.139) has quit (Client Quit)
2014-05-29 12:41:18	<--	Itkovian (~Itkovian@vpne214.ugent.be) has quit (Max SendQ exceeded)
2014-05-29 12:41:21	-->	kanashio (~user@cpe-72-190-37-215.tx.res.rr.com) has joined #python
2014-05-29 12:41:47	-->	Itkovian (~Itkovian@vpne214.ugent.be) has joined #python
2014-05-29 12:41:52	Salvakiya	is there a better way to structure this?
2014-05-29 12:42:05	Salvakiya	salparadise, joshlegs ?
2014-05-29 12:42:05	SilentGhost	joshlegs: uhm, response.url is always set as far as I can see
2014-05-29 12:42:40	SilentGhost	joshlegs: it's just in case of redirect it's not the same value as the original url
2014-05-29 12:42:41	joshlegs	SilentGhost: it looks like response.url is just the most current redirect's url. response.history[0].url gives me the original url
2014-05-29 12:42:47	-->	EntropyArchive (~Thunderbi@cpe-071-071-210-252.carolina.res.rr.com) has joined #python
2014-05-29 12:43:04	SilentGhost	joshlegs: that makes sense, doesn't it?
2014-05-29 12:43:05	salparadise	Salvakiya: len(a)
2014-05-29 12:43:11	salparadise	3
2014-05-29 12:43:19	salparadise	del(a[0])
2014-05-29 12:43:19	salparadise	>>> len(a)
2014-05-29 12:43:20	salparadise	2
2014-05-29 12:43:37	salparadise	if you delete an item, then its gone
2014-05-29 12:43:41	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 12:43:53	Salvakiya	salparadise ok gocha... if I delete an item all items in the list are then shifted?
2014-05-29 12:43:57	<--	evrian (~evrian@205-179-152-134.client.dsl.net) has quit (Quit: Leaving)
2014-05-29 12:44:22	salparadise	right
2014-05-29 12:44:37	-->	ovnicraft (~ovnicraft@181.211.97.242) has joined #python
2014-05-29 12:45:06	joshlegs	SilentGhost: agreed it does
2014-05-29 12:45:30	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 12:46:08	<--	TripTastic (~Trip@h19.187.123.208.dynamic.ip.windstream.net) has left #python ("Leaving")
2014-05-29 12:46:26	<--	decoponio (~decoponio@pon059-128.kcn.ne.jp) has quit (Quit: Leaving...)
2014-05-29 12:46:32	Salvakiya	so if I wanted an id system... to where every instance had an id... the id was their entry number on game_objects[id]... I could have a second list for free slots... so when I "delete" an instance of an object... I write its id to the free_id_list. then when creating a new instance I can check the free_id_list for a value... if there are none it will append to the game_objects list... if there is a slot open it will write to that slot and delete that
2014-05-29 12:46:32	Salvakiya	entry
2014-05-29 12:46:41	Salvakiya	or is that a bad way to do it?
2014-05-29 12:47:16	Salvakiya	salparadise ^
2014-05-29 12:47:17	Pici	Salvakiya: Is there a reason you wouldn't use a dict?
2014-05-29 12:47:18	<--	[mda] (~daniel@bas1-newmarket85-3096616480.dsl.bell.ca) has quit (Quit: leaving)
2014-05-29 12:47:42	joshlegs	salparadise: lists of items that are "available" are a common way of doing things. you could also set a boolean value on the object that is "available = True" or " = False"
2014-05-29 12:47:47	Salvakiya	Pici I assume a list would be faster... I am very new to python though. perhaps a dict is better?
2014-05-29 12:48:02	-->	Vornicus (~Vorn@ip98-176-199-87.sd.sd.cox.net) has joined #python
2014-05-29 12:48:04	joshlegs	dict also works
2014-05-29 12:48:08	salparadise	joshlegs: talking to Salvakiya ?
2014-05-29 12:48:12	-->	alexsnake (~alexsnake@177.237.112.9) has joined #python
2014-05-29 12:48:27	joshlegs	salparadise: yeah sorry :)
2014-05-29 12:48:32	<--	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has quit
2014-05-29 12:48:36	salparadise	np
2014-05-29 12:48:36	Salvakiya	XD
2014-05-29 12:48:37	joshlegs	Salvakiya:  ^^
2014-05-29 12:49:09	Salvakiya	can any of you reccomend a good graphics api?
2014-05-29 12:49:15	Salvakiya	I was thinking about using PyGlet
2014-05-29 12:49:18	Salvakiya	it seems the easiest
2014-05-29 12:49:27	<--	JotaK (~WTF@unaffiliated/jotak) has quit (Read error: Connection reset by peer)
2014-05-29 12:50:20	-->	EvergreenTree (~quassel@unaffiliated/evergreentree) has joined #python
2014-05-29 12:50:22	-->	lostinmalloc (~lostinmal@60.Red-83-61-163.dynamicIP.rima-tde.net) has joined #python
2014-05-29 12:50:32	<--	innertracks (~Thunderbi@c-24-17-64-212.hsd1.wa.comcast.net) has quit (Quit: innertracks)
2014-05-29 12:50:40	-->	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has joined #python
2014-05-29 12:50:41	<--	amigo (~amigo@unaffiliated/amigo) has quit (Quit: leaving)
2014-05-29 12:50:41	-->	koell (~tauron@77.119.130.173.wireless.dyn.drei.com) has joined #python
2014-05-29 12:50:47	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 12:50:55	<--	grizwako (~GrizzLy@246-205.dsl.iskon.hr) has quit (Ping timeout: 252 seconds)
2014-05-29 12:51:54	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 276 seconds)
2014-05-29 12:51:57	-->	Timvde (~tim_vdeyn@193.190.253.145) has joined #python
2014-05-29 12:52:12	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2014-05-29 12:52:15	-->	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined #python
2014-05-29 12:52:24	joshlegs	lol lots of gaming questions? just curious, is this a personal project?
2014-05-29 12:52:33	Timvde	Hi. I am using cv2 to draw an image. I want to have an overlay where my mouse is. At this moment, I am using cv2.setMouseCallback for that with the cv2.EVENT_MOUSEMOVE event. However, it gets called *a lot* and my cpu gets to 100% and the movement is laggy. Is it possible to either a) just update the overlay image instead of drawing everything or b) make it less sensitive to mouse movement (or
2014-05-29 12:52:34	Timvde	something... Not sure how I'd *actually* want that)
2014-05-29 12:52:38	dash	joshlegs: now now
2014-05-29 12:52:42	joshlegs	oy, stupid no-l ol zone. -_-
2014-05-29 12:52:48	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-29 12:52:51	<--	OOPMan (~adamj@41.7.240.87) has quit (Ping timeout: 252 seconds)
2014-05-29 12:52:52	<--	VladVP (~VladVP@185.37.87.102) has quit (Ping timeout: 252 seconds)
2014-05-29 12:52:55	dash	Salvakiya: what are you going to draw?
2014-05-29 12:53:06	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-29 12:53:08	Salvakiya	dash I am porting an RTS engine to Python
2014-05-29 12:53:10	Salvakiya	from GML
2014-05-29 12:53:13	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-29 12:53:23	Salvakiya	for an RTS game
2014-05-29 12:53:30	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 12:53:37	Salvakiya	the engine is something like Tiberian Sun
2014-05-29 12:53:42	Salvakiya	its got an isometric view
2014-05-29 12:53:48	Salvakiya	and will have terrain
2014-05-29 12:53:48	-->	le0 (~l30@unaffiliated/le0) has joined #python
2014-05-29 12:53:51	dash	Salvakiya: ok. pyglet is probably reasonable for that
2014-05-29 12:54:03	<--	SebSemmi (~SebSemmi@e178224191.adsl.alicedsl.de) has quit
2014-05-29 12:54:12	-->	gkap (~gkap@c-71-237-208-229.hsd1.or.comcast.net) has joined #python
2014-05-29 12:54:15	Salvakiya	dash ok cool
2014-05-29 12:54:35	<--	Zzeiss (~wsy@mumble144109.merl.com) has quit (Ping timeout: 252 seconds)
2014-05-29 12:54:52	<--	moarrr_darkcoin (~long64@host109-145-205-34.range109-145.btcentralplus.com) has quit
2014-05-29 12:55:20	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 12:55:26	-->	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-29 12:55:34	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-29 12:55:51	<--	commandocoding (~commandoc@59.180.152.182) has left #python
2014-05-29 12:55:59	Salvakiya	dash does pyglet have built in delta timing?
2014-05-29 12:56:08	dash	no idea.
2014-05-29 12:56:09	<--	john_f (~jwf@unaffiliated/john-f) has quit (Ping timeout: 252 seconds)
2014-05-29 12:56:10	Salvakiya	is that what pyglet.clock.schedule_interval is?
2014-05-29 12:56:34	Salvakiya	hmm
2014-05-29 12:56:50	<--	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has quit (Remote host closed the connection)
2014-05-29 12:56:55	<--	b4rbz (~barbz@ool-18e42f45.dyn.optonline.net) has quit (Remote host closed the connection)
2014-05-29 12:57:04	-->	Ariel_Calzada (~aricalso@181.135.193.5) has joined #python
2014-05-29 12:57:37	Zer000	if I have long lived stateful objects in a WSGI application I have to make sure they are thread safe right?
2014-05-29 12:57:47	<--	Deesl (bsdboy@redhat/deesl) has quit (Ping timeout: 245 seconds)
2014-05-29 12:58:04	<--	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has quit (Read error: No route to host)
2014-05-29 12:58:12	dash	Zer000: what do you mean by "long lived"?
2014-05-29 12:58:25	dash	longer than a single http request?
2014-05-29 12:58:28	Zer000	dash: yes
2014-05-29 12:58:30	-->	ncthom91 (~ncthom91@mpk-nat-6.thefacebook.com) has joined #python
2014-05-29 12:58:31	<--	Itkovian (~Itkovian@vpne214.ugent.be) has quit (Read error: Connection reset by peer)
2014-05-29 12:58:40	dash	Zer000: wsgi says nothing about that
2014-05-29 12:58:44	-->	VladVP (~VladVP@185.37.87.102) has joined #python
2014-05-29 12:58:58	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 12:59:11	Zer000	dash: well are there wsgi servers that will create an instance of my app then have multiple threads call it?
2014-05-29 12:59:16	dash	Zer000: that's up to your specific deployment scenario
2014-05-29 12:59:18	dash	Zer000: some will yes
2014-05-29 12:59:22	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 12:59:27	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 12:59:37	Zer000	I see
2014-05-29 12:59:37	<--	lduros (~user@fsf/member/lduros) has quit (Remote host closed the connection)
2014-05-29 12:59:57	dash	Zer000: What do you want to do?
2014-05-29 12:59:59	<--	kurban (~kai@host71-2.natpool.mwn.de) has quit (Ping timeout: 260 seconds)
2014-05-29 13:00:13	-->	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has joined #python
2014-05-29 13:00:18	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 13:00:48	<--	guhcampos (~guhcampos@186.249.5.2) has quit (Quit: guhcampos)
2014-05-29 13:00:58	-->	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has joined #python
2014-05-29 13:01:04	Zer000	dash: I had an object responsible to make sure data conforms to a schema - instead of making a new instance every request I just kept one around. I'
2014-05-29 13:01:07	-->	tilgovi (~randall@couchdb/committer/tilgovi) has joined #python
2014-05-29 13:01:24	Zer000	m worried it will get called by another thread and let data through that's not about the current request
2014-05-29 13:01:36	Zer000	Dang hit enter for no reason there
2014-05-29 13:01:37	<--	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has quit (Quit: Leaving.)
2014-05-29 13:01:53	dash	Zer000: why are you keeping it around?
2014-05-29 13:02:01	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Ping timeout: 252 seconds)
2014-05-29 13:02:12	-->	quetzakubica (~quetzacot@89-66-203-102.dynamic.chello.pl) has joined #python
2014-05-29 13:02:21	-->	Wonkaewt (Wonkaewt.n@187-78-2-2.user.veloxzone.com.br) has joined #python
2014-05-29 13:02:22	<--	tortal (tortal@unaffiliated/tortal) has quit (Ping timeout: 245 seconds)
2014-05-29 13:03:11	-->	cmplxen (~cmplxen@unaffiliated/cmplxen) has joined #python
2014-05-29 13:03:20	<--	pcardune (~pcardune@199.201.64.130) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 13:03:34	-->	dmmoody (~dmmoody@65-122-233-162.dia.static.qwest.net) has joined #python
2014-05-29 13:03:43	Zer000	dash: its kind of easy to "keep things around" with my particular approach to making web apps - so I'm gonna go through it and make sure i'm not doing that, there's probably other objects that shouldn't be kept around longer than a request
2014-05-29 13:03:43	<--	cocogrove (~courtney@ip68-227-112-127.ok.ok.cox.net) has quit (Quit: cocogrove)
2014-05-29 13:03:45	-->	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has joined #python
2014-05-29 13:03:55	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Read error: Connection reset by peer)
2014-05-29 13:04:03	<--	norn (~norn@cgn-pool-83-219-138-155.tis-dialog.ru) has quit (Remote host closed the connection)
2014-05-29 13:04:04	<--	norn_ (~norn@cgn-pool-83-219-138-155.tis-dialog.ru) has quit (Remote host closed the connection)
2014-05-29 13:04:09	<--	Nothing4You (N4Y@Nothing4You.w.tf-w.tf) has quit (Ping timeout: 265 seconds)
2014-05-29 13:04:10	dash	Zer000: what library are you using to write your app?
2014-05-29 13:04:11	-->	whalesalad (~textual@66-194-23-234.static.twtelecom.net) has joined #python
2014-05-29 13:04:24	-->	ustunozgur (~ustunozgu@li283-143.members.linode.com) has joined #python
2014-05-29 13:04:29	<--	Ariel_Calzada (~aricalso@181.135.193.5) has quit (Ping timeout: 264 seconds)
2014-05-29 13:04:31	-->	Synthead (~max@216.239.55.44) has joined #python
2014-05-29 13:04:35	<--	w66 (~jst@cpe-31-15-138-19.cable.telemach.net) has quit (Ping timeout: 252 seconds)
2014-05-29 13:04:38	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-29 13:04:51	Zer000	dash: a sort of customized pyramid though atm i'm working on replacing the pyramid parts with my own code
2014-05-29 13:05:09	<--	Cuppa_coffee (~Beast@5ED4E499.cm-7-5d.dynamic.ziggo.nl) has quit (Quit: Leaving)
2014-05-29 13:05:11	dash	Zer000: sounds like your approach to making web apps isn't really suited to wsgi at all then
2014-05-29 13:05:17	--	ormaaj_ is now known as ormaaj
2014-05-29 13:05:19	-->	norn (~norn@cgn-pool-83-219-138-155.tis-dialog.ru) has joined #python
2014-05-29 13:05:22	dash	what's wrong with pyramid?
2014-05-29 13:05:23	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 13:05:28	<--	TheFakeazneD525 (~denza252@unaffiliated/denza252) has quit (Quit: Off to do something more interestinger.)
2014-05-29 13:05:38	Salvakiya	can I make an instance inherit a specific class in python?
2014-05-29 13:05:50	Salvakiya	as opposed to a class inheriting another?
2014-05-29 13:05:57	dash	Salvakiya: What would that mean?
2014-05-29 13:06:02	Zer000	dash: pyramid is harder for me to use than to do it from scratch I guess is what it comes down to
2014-05-29 13:06:09	dash	Zer000: Harder in what way?
2014-05-29 13:06:41	Salvakiya	meh I dont think its very pythonistic anyway...
2014-05-29 13:06:53	<--	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has quit (Ping timeout: 264 seconds)
2014-05-29 13:06:59	-->	PJBoy (~fusion@cpc18-aztw24-2-0-cust884.18-1.cable.virginm.net) has joined #python
2014-05-29 13:07:02	-->	chrismed (~chrismed@abjr44.neoplus.adsl.tpnet.pl) has joined #python
2014-05-29 13:07:11	dash	Salvakiya: best to avoid inheritance altogether, when possibl
2014-05-29 13:07:12	dash	e
2014-05-29 13:07:27	Salvakiya	dash I should be implementing an entity/component system
2014-05-29 13:08:01	Zer000	dash: harder to create little bits of web apps that I can customize and compose - that's one of the things I'm doing better. I also don't like the API's for authorization/authentication - every time I use the __acl__ stuff I just get upset
2014-05-29 13:08:03	dash	Salvakiya: sounds good
2014-05-29 13:08:52	<--	vandrew (~vandrew@86.122.229.114) has quit (Remote host closed the connection)
2014-05-29 13:09:01	<--	kanashio (~user@cpe-72-190-37-215.tx.res.rr.com) has quit (Remote host closed the connection)
2014-05-29 13:09:04	-->	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has joined #python
2014-05-29 13:09:10	Zer000	plus rolling your own web framework is pretty fun - you learn and experiment
2014-05-29 13:09:20	<--	skaflem (~skaflem@ti0099a430-0965.bb.online.no) has quit (Quit: Leaving)
2014-05-29 13:09:20	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-29 13:10:07	--	cewing is now known as cewing|away
2014-05-29 13:10:11	dash	Zer000: ick
2014-05-29 13:10:20	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-29 13:10:21	-->	Nothing4You (N4Y@w.tf-w.tf) has joined #python
2014-05-29 13:10:59	-->	lduros (~user@fsf/member/lduros) has joined #python
2014-05-29 13:11:20	<--	rails_smith (~rails_smi@136.166.156.64) has quit (Quit: Leaving.)
2014-05-29 13:11:30	dash	if that's your goal, why limit yourself to WSGI/
2014-05-29 13:11:50	Zer000	dash: how else do you have webserver -- python interaction?
2014-05-29 13:12:03	dash	Zer000: use a python webserver
2014-05-29 13:12:06	dash	twisted.web for example
2014-05-29 13:12:11	<--	rocky (~rocky@crbknf0209w-142162011178.dhcp-dynamic.FibreOp.nl.bellaliant.net) has quit (Ping timeout: 252 seconds)
2014-05-29 13:12:35	-->	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has joined #python
2014-05-29 13:12:59	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 13:13:03	<--	enkrypt (~jan@d51A48B68.access.telenet.be) has quit (Ping timeout: 260 seconds)
2014-05-29 13:13:25	-->	alternot (~alternut@unaffiliated/alternut) has joined #python
2014-05-29 13:13:26	-->	gocho (~gocho@105.163.44.55) has joined #python
2014-05-29 13:13:31	Zer000	dash: I don't see wsgi as somehow holding me back. on the contrary things like webob are making things easy. Plus there's wsgi middleware like debug toolbars that are nice
2014-05-29 13:13:44	-->	guhcampos (~guhcampos@186.249.5.2) has joined #python
2014-05-29 13:13:57	-->	jimklo (~jimklo@192.12.16.119) has joined #python
2014-05-29 13:14:58	-->	enkrypt (~jan@d51A48B68.access.telenet.be) has joined #python
2014-05-29 13:15:13	<--	dray3 (~daaray@cpe-066-057-017-201.nc.res.rr.com) has quit (Ping timeout: 252 seconds)
2014-05-29 13:15:22	<--	gocho (~gocho@105.163.44.55) has quit (Read error: Connection reset by peer)
2014-05-29 13:15:58	<--	norn (~norn@cgn-pool-83-219-138-155.tis-dialog.ru) has quit (Remote host closed the connection)
2014-05-29 13:16:21	<--	jchysk (~yo@wsip-24-234-185-148.lv.lv.cox.net) has quit (Remote host closed the connection)
2014-05-29 13:16:38	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 13:16:52	-->	AnimalFarmPig (~afp@unaffiliated/animalfarmpig) has joined #python
2014-05-29 13:17:17	<--	stranac (d46cd399@gateway/web/freenode/ip.212.108.211.153) has quit (Quit: Page closed)
2014-05-29 13:17:36	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 13:17:40	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 13:17:56	<--	le0 (~l30@unaffiliated/le0) has quit (Quit: Leaving)
2014-05-29 13:17:59	AnimalFarmPig	Maybe silly question-- why/when would I want to use a static method rather than writing a function?
2014-05-29 13:18:07	-->	pydave6367 (~dave@88-105-219-248.dynamic.dsl.as9105.com) has joined #python
2014-05-29 13:18:11	-->	koz (~koz@2601:8:a900:88a:1e6f:65ff:fe31:7fcb) has joined #python
2014-05-29 13:18:17	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 264 seconds)
2014-05-29 13:18:22	dash	Zer000: yeah but you have to deal with object lifetime BS like this
2014-05-29 13:18:22	AnimalFarmPig	or a 'normal' method
2014-05-29 13:18:29	dash	AnimalFarmPig: never
2014-05-29 13:18:38	<--	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has quit (Quit: Zzzzz ...)
2014-05-29 13:18:39	<--	jimklo (~jimklo@192.12.16.119) has quit (Ping timeout: 260 seconds)
2014-05-29 13:19:44	AnimalFarmPig	dash, one of my friends is learning Python, he sent over some code. I noticed a staticmethod decorator and thought, 'hmmm... I've never needed to do that...'
2014-05-29 13:20:22	dash	it's so you can tell if it was written by java programmers
2014-05-29 13:20:52	AnimalFarmPig	haha, I think he was re-writing some Java code as a learning exercise, so that makes sense
2014-05-29 13:21:09	AnimalFarmPig	I can understand why one would want to do that in Java, but seems superfluous in Python
2014-05-29 13:21:11	-->	someprimetime (~someprime@nextdoor.static.monkeybrains.net) has joined #python
2014-05-29 13:21:40	-->	daniel-s (~daniel-s@AToulouse-552-1-156-101.w86-206.abo.wanadoo.fr) has joined #python
2014-05-29 13:22:06	<--	dmmoody (~dmmoody@65-122-233-162.dia.static.qwest.net) has quit (Remote host closed the connection)
2014-05-29 13:22:45	<--	codepython777 (~codepytho@cs1229.cs.fsu.edu) has left #python
2014-05-29 13:23:09	cob	dash: just use a function instead right?
2014-05-29 13:24:00	<--	wldcordeiro (~wldcordei@50-200-160-113-static.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2014-05-29 13:24:05	-->	murk_ (~nnscript@D97A9253.cm-3-3c.dynamic.ziggo.nl) has joined #python
2014-05-29 13:24:18	AnimalFarmPig	I'm not a Java dev, but my understanding is that in Java everything needs to be part of a class, so static methods are their work-around for functions
2014-05-29 13:24:24	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Ping timeout: 276 seconds)
2014-05-29 13:24:51	-->	TheMesquito (~TheMesqui@wikipedia/TheMesquito) has joined #python
2014-05-29 13:24:54	--	Joost`away is now known as Joost
2014-05-29 13:25:20	-->	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has joined #python
2014-05-29 13:25:30	--	Joost is now known as Joost`away
2014-05-29 13:25:36	<--	TheMesquito (~TheMesqui@wikipedia/TheMesquito) has left #python ("Leaving")
2014-05-29 13:25:38	cob	AnimalFarmPig: right, it might well be that it's there to support some glue-functionality
2014-05-29 13:25:51	Salvakiya	can I get an opinion?
2014-05-29 13:25:51	Salvakiya	http://paste.pound-python.org/show/LQrLsBiFAPzsF4WFTldb/
2014-05-29 13:25:51	<--	guhcampos (~guhcampos@186.249.5.2) has quit (Quit: guhcampos)
2014-05-29 13:26:11	-->	wldcordeiro (~wldcordei@50-200-160-113-static.hfc.comcastbusiness.net) has joined #python
2014-05-29 13:26:15	-->	Ariel_Calzada (~aricalso@181.136.132.15) has joined #python
2014-05-29 13:26:26	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 13:26:35	<--	Calle__Lid (~Ailongam@h-111-17.a323.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2014-05-29 13:26:45	<--	kenbolton (~kenbolton@ool-43506645.dyn.optonline.net) has quit (Quit: kenbolton)
2014-05-29 13:26:50	-->	nande (~quassel@190.183.4.91) has joined #python
2014-05-29 13:26:56	-->	jchysk (~yo@wsip-24-234-185-148.lv.lv.cox.net) has joined #python
2014-05-29 13:26:58	whg	AnimalFarmPig: You may want a static method for cases where the functionality is specific to instances of that class, but doesn't need instance data.
2014-05-29 13:26:58	<--	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has quit (Read error: No route to host)
2014-05-29 13:27:08	<--	carebeer (~snxt@gateway/tor-sasl/carebeer) has quit (Ping timeout: 272 seconds)
2014-05-29 13:27:13	-->	_arturo (~arturo@162.210.130.3) has joined #python
2014-05-29 13:27:17	<--	Chyros (~Chyros@24-116-194-234.cpe.cableone.net) has quit
2014-05-29 13:27:22	_arturo	hello #python
2014-05-29 13:27:25	-->	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has joined #python
2014-05-29 13:27:36	--	alternot is now known as alternut
2014-05-29 13:27:41	_arturo	does anyone know what the default mode is for the builtin open() function?
2014-05-29 13:27:47	-->	carebeer (~snxt@gateway/tor-sasl/carebeer) has joined #python
2014-05-29 13:28:03	-->	henbruas_ (~henbruas@unaffiliated/henbruas) has joined #python
2014-05-29 13:28:08	_arturo	I mean, is open( ‘file’ ) equivalent to open( ‘file’, mode=‘r’ )?
2014-05-29 13:28:34	-->	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has joined #python
2014-05-29 13:28:40	<--	BlaXpirit (~blaxpirit@250-42-132-95.pool.ukrtel.net) has quit (Quit: Quit Konversation)
2014-05-29 13:28:46	cob	yes
2014-05-29 13:28:50	<--	sbuettner (Scott@2600:3c00::f03c:91ff:feae:9b3a) has quit (Quit: Leaving)
2014-05-29 13:28:55	cob	file.__doc__ says so
2014-05-29 13:29:10	--	Joost`away is now known as Joost
2014-05-29 13:29:13	Salvakiya	https://docs.python.org/2/library/functions.html#open
2014-05-29 13:29:24	Salvakiya	_arturo ^
2014-05-29 13:30:26	_arturo	:Salvakiya ah yes it says so. Sorry, I should’ve read the dos more carefully. Thanks!
2014-05-29 13:30:26	<--	eoss (~e0s@pdpc/supporter/student/eoss) has quit (Read error: Connection reset by peer)
2014-05-29 13:30:43	AnimalFarmPig	whg, I guess that makes sense. Any examples of when it would be good to use in Python? I love having more tools to work with
2014-05-29 13:30:46	Salvakiya	;)
2014-05-29 13:30:48	<--	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has quit (Read error: No route to host)
2014-05-29 13:30:53	<--	enkrypt (~jan@d51A48B68.access.telenet.be) has quit (Ping timeout: 252 seconds)
2014-05-29 13:31:04	-->	roymiloh (~roymiloh@37.142.233.109) has joined #python
2014-05-29 13:31:13	dowwie	anyone know the syntax to printing out a named tuple as one could print out a dict?
2014-05-29 13:31:16	-->	Addem (addb4c13@gateway/web/freenode/ip.173.219.76.19) has joined #python
2014-05-29 13:31:22	<--	MultiColourPixel (~MultiColo@107.170.179.6) has quit (Quit: Powered by ZNC)
2014-05-29 13:31:38	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 13:31:39	AnimalFarmPig	perhaps if one had a singleton object, and there were some function that should only be called after the singleton were instantiated
2014-05-29 13:31:42	-->	MultiColourPixel (~MultiColo@znc.mcp.io) has joined #python
2014-05-29 13:31:52	-->	scoob (~scoob@fsf/member/scoob) has joined #python
2014-05-29 13:32:20	scoob	Hi, anyone know if there's a way using json import to have a linebreak not after each value pair?
2014-05-29 13:32:23	<--	maugzoide (~maugzoide@177.43.249.158) has left #python
2014-05-29 13:32:29	scoob	Using indent seems to put a linebreak after eavh value in a list
2014-05-29 13:32:36	scoob	Googling hasn't turned anything up just yet
2014-05-29 13:32:40	-->	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has joined #python
2014-05-29 13:32:41	<--	mgrouchy (~mgrouchy@CPE68b6fc44a453-CM68b6fc44a450.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 13:32:57	-->	enkrypt (~jan@d51A48B68.access.telenet.be) has joined #python
2014-05-29 13:34:08	-->	max__ (~max@md12036d0.tmodns.net) has joined #python
2014-05-29 13:34:18	<--	revoohc (~chrish@12.150.6.65) has quit (Quit: revoohc)
2014-05-29 13:34:24	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 13:34:29	--	max__ is now known as Guest24966
2014-05-29 13:34:49	-->	aleray (~aleray@ip-83-101-33-94.customer.schedom-europe.net) has joined #python
2014-05-29 13:35:25	aleray	hi I have this code: http://dpaste.com/1XPPQTK/ I would like to achieve the same thing but have a key made out of too attributes
2014-05-29 13:35:45	<--	roymiloh (~roymiloh@37.142.233.109) has quit (Ping timeout: 252 seconds)
2014-05-29 13:35:55	<--	Wonkaewt (Wonkaewt.n@187-78-2-2.user.veloxzone.com.br) has quit (Max SendQ exceeded)
2014-05-29 13:35:55	quetzakubica	Guys If I'm creating few libs that I want to be reusable, then I can't use relative imports. So do I have to keep all modules in one dir, or add them to PYTHON path, or is there another way?
2014-05-29 13:35:58	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 240 seconds)
2014-05-29 13:35:59	<--	omgub (~ps@c-69-140-74-117.hsd1.md.comcast.net) has left #python
2014-05-29 13:36:03	<--	Timvde (~tim_vdeyn@193.190.253.145) has quit (Ping timeout: 265 seconds)
2014-05-29 13:36:14	<--	Synthead (~max@216.239.55.44) has quit (Ping timeout: 255 seconds)
2014-05-29 13:36:16	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 13:36:28	-->	buck1 (~buck1@72-18-233-188.static-ip.telepacific.net) has joined #python
2014-05-29 13:36:31	whg	AnimalFarmPig: Off the top of my head? Not really. I actually find classmethod to be far more useful.
2014-05-29 13:36:32	aleray	this is a sample of what I print with my code: (<TeachingUnit: Projet>, <itertools._grouper object at 0x43b4510>)
2014-05-29 13:36:40	--	Joost is now known as Joost`away
2014-05-29 13:36:53	whg	AnimalFarmPig: I'm fairly sure such situations exist, just not that they're exceedingly common.
2014-05-29 13:37:06	aleray	I'd like something along ([<TeachingUnit: Passage du diplôme>, anothe_attribute], <itertools._grouper object at 0x409d150>)
2014-05-29 13:37:13	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 13:37:15	buck1	AnimalFarmPig: it's really only useful if you have a bonafide function that you want to be overridable by subclasses
2014-05-29 13:37:21	buck1	but subclassing as api is questiionable
2014-05-29 13:37:23	AnimalFarmPig	whg, I can't think of any off the top of my head, but I guess it's nice to know that it exists
2014-05-29 13:37:37	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-29 13:37:43	-->	atolani (Arpit@nat/redhat/x-ocbygokaeucbdxid) has joined #python
2014-05-29 13:37:44	whg	AnimalFarmPig: Yeah. As a Java programmer by day, I find myself actively wishing for classmethods on a pretty regular basis.
2014-05-29 13:37:48	<--	winegoddess (~winegodde@64.58.240.210) has quit (Quit: winegoddess)
2014-05-29 13:37:55	AnimalFarmPig	https://docs.python.org/2/library/functions.html#classmethod
2014-05-29 13:37:56	-->	tylrr (~textual@rrcs-173-197-114-202.west.biz.rr.com) has joined #python
2014-05-29 13:37:58	AnimalFarmPig	?
2014-05-29 13:37:59	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 13:38:05	whg	AnimalFarmPig: And I mostly use static methods for cases where a module-level function would work in Python.
2014-05-29 13:38:07	-->	Leifr (~Nick@240.64.broadband14.iol.cz) has joined #python
2014-05-29 13:38:25	quetzakubica	whg: for what you need class methods?
2014-05-29 13:38:28	AnimalFarmPig	makes sense
2014-05-29 13:38:36	<--	narkeeso (~narkeeso@108.60.34.124) has quit (Ping timeout: 240 seconds)
2014-05-29 13:38:47	-->	pcardune (~pcardune@199.201.64.129) has joined #python
2014-05-29 13:39:46	whg	quetzakubica: Constants. I have classes that are all different variations on the same thing.
2014-05-29 13:40:00	<--	Leifr (~Nick@240.64.broadband14.iol.cz) has quit (Client Quit)
2014-05-29 13:40:36	whg	quetzakubica: There is data that is the same for all instances of a certain class, but different from other instances of a sibling class in the class hierarchy
2014-05-29 13:40:43	keypusher	scoob: just don't use indent
2014-05-29 13:41:00	whg	And the concept is actually general enough that it goes higher up the inheritance tree.
2014-05-29 13:41:15	<--	mordonez (~mordonez@190.102.132.14) has quit (Quit: Computer has gone to sleep.)
2014-05-29 13:41:15	whg	@classmethod would be ideal in that case.
2014-05-29 13:41:28	whg	(I doubt I'm explaining it well, as I'm short on sleep today. Sorry)
2014-05-29 13:41:37	quetzakubica	there is a staticmethod decorator
2014-05-29 13:41:42	-->	mordonez (~mordonez@190.102.132.13) has joined #python
2014-05-29 13:42:10	-->	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-29 13:42:29	quetzakubica	and classmethod
2014-05-29 13:42:34	<--	Ankhers (~user@gateway/tor-sasl/ankhers) has quit (Remote host closed the connection)
2014-05-29 13:42:36	whg	quetzakubica: I know.
2014-05-29 13:42:54	whg	quetzakubica: But I write Java for a living. That's where I want @classmethod and can't get it.
2014-05-29 13:43:03	quetzakubica	ahh
2014-05-29 13:43:06	quetzakubica	so you are talkinga bout java
2014-05-29 13:43:15	whg	quetzakubica: Yes.
2014-05-29 13:43:16	-->	Watball (~Watball@f124242.upc-f.chello.nl) has joined #python
2014-05-29 13:43:19	quetzakubica	ok :P
2014-05-29 13:43:44	-->	emorrow (~Thunderbi@86.44.238.42) has joined #python
2014-05-29 13:43:46	<--	lostinmalloc (~lostinmal@60.Red-83-61-163.dynamicIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2014-05-29 13:44:09	H1N1	Anybody have any good suggestions on testing an object that runs through a dbus loop?
2014-05-29 13:44:28	muffer	is there a way i can run a subprocess as another user? (origin user is NOT root)
2014-05-29 13:45:48	<--	mordonez (~mordonez@190.102.132.13) has quit (Ping timeout: 240 seconds)
2014-05-29 13:46:29	<--	elyezer (~elyezer@unaffiliated/elyezer) has quit (Ping timeout: 264 seconds)
2014-05-29 13:46:39	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-29 13:46:49	scoob	keypusher, that puts everything one one line
2014-05-29 13:46:51	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-29 13:46:52	scoob	each value pair
2014-05-29 13:47:02	scoob	I'd love to have each value pair on it's own line, but only one line each
2014-05-29 13:47:20	scoob	Found an answer online that said "write your own serializer" but I figured I'd ask here because that was unexpected
2014-05-29 13:47:32	-->	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has joined #python
2014-05-29 13:48:03	-->	nszceta (~nszceta@venezuela.pharm.pitt.edu) has joined #python
2014-05-29 13:48:07	<--	umair (~umair@39.44.45.222) has quit (Ping timeout: 252 seconds)
2014-05-29 13:48:29	Remram	How do I 'decode' sys.argv on Python 3?
2014-05-29 13:48:35	-->	umair (~umair@39.44.14.133) has joined #python
2014-05-29 13:48:39	_habnabit	Remram, it's already decoded
2014-05-29 13:48:54	Remram	okay, how do I get my bytes back?
2014-05-29 13:49:10	_habnabit	Remram, that's more complicated
2014-05-29 13:49:11	KingInTheNorth	L.O.L
2014-05-29 13:49:14	Remram	it looks like it gets decoded assuming some random encoding (which one?)
2014-05-29 13:49:16	KingInTheNorth	Sry had to try^^
2014-05-29 13:49:19	-->	narkeeso (~narkeeso@217.sub-70-197-71.myvzw.com) has joined #python
2014-05-29 13:49:19	<--	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has quit (Client Quit)
2014-05-29 13:49:33	<--	alternut (~alternut@unaffiliated/alternut) has quit (Quit: ZNC - http://znc.in)
2014-05-29 13:49:39	Remram	and uses low surrogates (wtf) for bytes that are not valid UTF-8
2014-05-29 13:49:49	_habnabit	Remram, high surrogates, not low surrogates
2014-05-29 13:49:54	-->	m8 (~m@unaffiliated/m8) has joined #python
2014-05-29 13:50:01	_habnabit	Remram, yes, python3 is kind of insane
2014-05-29 13:50:05	<--	m8 (~m@unaffiliated/m8) has quit (Read error: Connection reset by peer)
2014-05-29 13:50:21	Remram	no, it is a low surrogate
2014-05-29 13:50:23	Remram	by itself
2014-05-29 13:50:33	_habnabit	Remram, nope. it's a high surrogate by itself
2014-05-29 13:50:40	Remram	http://www.charbase.com/dce9-unicode-invalid-character
2014-05-29 13:51:02	-->	mission_ (~mission@unaffiliated/mission) has joined #python
2014-05-29 13:51:09	-->	diverdude (5056d25d@gateway/web/freenode/ip.80.86.210.93) has joined #python
2014-05-29 13:51:20	<--	taion809 (~Nick@ool-43526e1b.dyn.optonline.net) has quit (Quit: 明天见)
2014-05-29 13:51:29	diverdude	Hello, how do i get the value of a SRE_Match object?
2014-05-29 13:51:34	-->	m8 (~m@unaffiliated/m8) has joined #python
2014-05-29 13:51:36	_habnabit	diverdude, which value would you like?
2014-05-29 13:51:56	diverdude	_habnabit: the value in the original string which it mathed
2014-05-29 13:52:03	diverdude	matched
2014-05-29 13:52:16	muffer	is there a way i can run a subprocess as another user? (origin user is NOT root) i've looked into setuid, but it seems the original user needs to be root.
2014-05-29 13:52:21	_habnabit	muffer, no.
2014-05-29 13:52:34	_habnabit	muffer, you need sudo, to be root, or to be setuid
2014-05-29 13:52:41	_habnabit	muffer, (sudo is setuid root)
2014-05-29 13:52:57	-->	kevlarman (~roman@tremulous/officialdevannoyer/kevlarman) has joined #python
2014-05-29 13:53:02	KirkMcDonald	diverdude: m.group()
2014-05-29 13:53:05	-->	briskteafan (~jonathanc@50.244.249.179) has joined #python
2014-05-29 13:53:21	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 252 seconds)
2014-05-29 13:53:31	diverdude	KirkMcDonald: thanks
2014-05-29 13:53:41	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 13:53:43	<--	mission (~mission@unaffiliated/mission) has quit (Ping timeout: 252 seconds)
2014-05-29 13:54:11	<--	wwnnbb (~wwnnbb@85.112.113.2) has quit (Quit: wwnnbb)
2014-05-29 13:54:23	-->	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has joined #python
2014-05-29 13:54:43	<--	Josse|BNC (uid29288@gateway/web/irccloud.com/x-smgoqsdpghvugdwz) has quit (Quit: Connection closed for inactivity)
2014-05-29 13:54:44	-->	bollullera (~ana@95.63.152.106) has joined #python
2014-05-29 13:54:45	<--	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has quit (Client Quit)
2014-05-29 13:54:55	_habnabit	Remram, anyway, http://legacy.python.org/dev/peps/pep-0383/
2014-05-29 13:55:24	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 13:55:38	<--	pcardune (~pcardune@199.201.64.129) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 13:55:43	<--	AaronMT (~AaronMT@66.207.208.102) has quit (Quit: Computer has gone to sleep.)
2014-05-29 13:56:05	-->	guhcampos (~guhcampos@186.249.5.2) has joined #python
2014-05-29 13:56:47	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 13:56:50	<--	spergy (~w33nd0x@CPE-124-182-214-254.lns2.way.bigpond.net.au) has quit (Ping timeout: 265 seconds)
2014-05-29 13:57:02	muffer	thanks habnabit
2014-05-29 13:58:20	-->	nijm (~nick@5ec26896.skybroadband.com) has joined #python
2014-05-29 13:58:48	-->	jooools (~ejulfit@194.237.142.10) has joined #python
2014-05-29 13:59:03	nijm	li = [1, 2, 3]. If li[:] returns a copy of this list, then why does del li[:] delete the original list?
2014-05-29 13:59:04	Remram	'surrogateescape' heh
2014-05-29 13:59:14	-->	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has joined #python
2014-05-29 13:59:17	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-29 13:59:33	<--	discomeats (~squeak@213-152-32-22.dsl.eclipse.net.uk) has quit (Quit: zz)
2014-05-29 13:59:41	<--	Ariel_Calzada (~aricalso@181.136.132.15) has quit (Ping timeout: 264 seconds)
2014-05-29 14:00:00	<--	gkap (~gkap@c-71-237-208-229.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2014-05-29 14:00:10	--	mission_ is now known as mission
2014-05-29 14:00:13	<--	evanz_ (~evanz@dhcp162-84.netlab.uky.edu) has quit (Ping timeout: 252 seconds)
2014-05-29 14:00:17	<--	m8 (~m@unaffiliated/m8) has quit (Ping timeout: 264 seconds)
2014-05-29 14:00:17	<--	juantwo (juantwo@nat/rackspace/x-dkhntgctgzojiecd) has quit (Ping timeout: 264 seconds)
2014-05-29 14:01:09	_habnabit	nijm, what did you expect it to do?
2014-05-29 14:01:21	dlman	If I'm using the docopt module, is there a way to dynamically generate the arguments based on the contents of an input file, so for example 'exec test_1.txt --param1 a' will work but also 'exec test_2.txt --color blue', so being able to have --param1 and --color without hard coding it
2014-05-29 14:01:21	_habnabit	nijm, `del li[:]` is one operation; it's not `x = li[:]; del x`
2014-05-29 14:01:47	Remram	nijm: for the same reason obj.attr gives you the value of the attr while del obj.attr deletes the attribute
2014-05-29 14:02:01	-->	Ariel_Calzada (~aricalso@181.135.222.141) has joined #python
2014-05-29 14:02:49	-->	merlin83 (merlin83@unaffiliated/merlin83) has joined #python
2014-05-29 14:02:56	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Quit: Computer has gone to sleep.)
2014-05-29 14:03:16	<--	scottferg (~scottferg@c-98-226-208-95.hsd1.il.comcast.net) has quit (Quit: leaving)
2014-05-29 14:03:16	nijm	_habnabit, I expected it to appear to do nothing. I expected it to delete the copy of the list that li[:] returned.
2014-05-29 14:03:35	_habnabit	nijm, see my second line
2014-05-29 14:03:36	-->	ZetaBeta25 (ZetaBeta25@c-75-72-131-153.hsd1.mn.comcast.net) has joined #python
2014-05-29 14:05:17	<--	eriko (~eriko@50-192-202-145-static.hfc.comcastbusiness.net) has quit (Quit: eriko)
2014-05-29 14:05:25	-->	elyezer (~elyezer@unaffiliated/elyezer) has joined #python
2014-05-29 14:05:32	<--	rodfersou (~RoADRuNNE@177.16.92.35) has quit (Quit: leaving)
2014-05-29 14:05:41	<--	MarderIII (~marderii@enneman.demon.nl) has quit (Quit: leaving)
2014-05-29 14:05:56	-->	tedoc200_ (~tedoc2000@2001:4998:effd:600:8c8c:5904:8bc4:c817) has joined #python
2014-05-29 14:06:00	-->	AnYaDi (~AnYaDi@eduroam-169-100.dyn.carleton.edu) has joined #python
2014-05-29 14:08:00	nijm	Something about it seems strange. Even if del li[:] operates on the original list, it doesn't do the same thing as del li. del li[:] sets li = [], but del li deletes li completely.
2014-05-29 14:08:22	nijm	It seems inconsistent
2014-05-29 14:08:32	-->	NixMD (~irssi@unaffiliated/timmyt) has joined #python
2014-05-29 14:08:37	kevlarman	nijm: consider del li[0:5]
2014-05-29 14:08:57	-->	alternut (~alternut@unaffiliated/alternut) has joined #python
2014-05-29 14:09:01	<--	konradsurf (~konradsur@65.60.116.2) has quit (Remote host closed the connection)
2014-05-29 14:09:07	dash	nijm: you're making a common mistake
2014-05-29 14:09:17	<--	tedoc2000 (~tedoc2000@nat/yahoo/x-aqkcmjpcqvtjzhvd) has quit (Ping timeout: 264 seconds)
2014-05-29 14:09:17	dash	you're expecting the rules of a programming language to make sense
2014-05-29 14:09:32	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 255 seconds)
2014-05-29 14:09:47	nanonyme	nijm, well, not quite. li = [] would be replacing the old list with a new one. Syntactically del li[:] clears the existing list
2014-05-29 14:09:50	kevlarman	dash: i feel like if people keep expecting things to make sense, eventually someone will make something that does
2014-05-29 14:10:15	nanonyme	Hmm, maybe I meant semantically. Anyway
2014-05-29 14:10:29	<--	tedoc200_ (~tedoc2000@2001:4998:effd:600:8c8c:5904:8bc4:c817) has quit (Ping timeout: 264 seconds)
2014-05-29 14:10:57	_habnabit	nijm, would you expect `del li.spam` to delete 'li' as well?
2014-05-29 14:11:11	<--	likecolacola (~likecolac@54.Red-176-84-0.dynamicIP.rima-tde.net) has quit (Quit: Leaving)
2014-05-29 14:11:20	dash	kevlarman: with all this manure there's got to be a pony in here somewhere
2014-05-29 14:11:34	<--	EcoGiko (~EcoGiko@unaffiliated/ecogiko) has quit (Quit: Leaving)
2014-05-29 14:11:37	<--	the_lalelu (~lalelu@invincible.the-real.org) has quit (Quit: .)
2014-05-29 14:11:39	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-29 14:11:43	ffledgling	How can I write my unit-tests so that they can be run using setup.py or similar from a dir that's a sibling of the src code?
2014-05-29 14:11:46	-->	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has joined #python
2014-05-29 14:11:51	<--	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 276 seconds)
2014-05-29 14:11:55	nanonyme	dash, and if there's not, let's just increase the amount of manure. Surely that will help?
2014-05-29 14:12:17	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-29 14:12:19	<--	AnYaDi (~AnYaDi@eduroam-169-100.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 14:12:20	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 14:12:30	<--	PJBoy (~fusion@cpc18-aztw24-2-0-cust884.18-1.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2014-05-29 14:12:57	-->	AnYaDi (~AnYaDi@eduroam-169-100.dyn.carleton.edu) has joined #python
2014-05-29 14:13:03	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 14:13:10	-->	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has joined #python
2014-05-29 14:13:29	nijm	_habnabit, no, but li.spam is different. li.spam doesn't return a copy of li.spam.
2014-05-29 14:13:41	<--	Vutral (~ss@mirbsd/special/Vutral) has quit (Excess Flood)
2014-05-29 14:13:54	_habnabit	nijm, it _could_, if that's what that attribute was coded to do
2014-05-29 14:14:00	<--	seoul_man (~meh@wilug/newlug/seoul-man) has quit (Ping timeout: 258 seconds)
2014-05-29 14:14:21	Peng	It could also delete it! :D
2014-05-29 14:14:24	dash	nijm: you're forgetting that in python, 'foo.baz' evaluates to whatever foo wants it to
2014-05-29 14:14:25	_habnabit	haha
2014-05-29 14:14:40	dash	due to __getattr__ and descriptors and such
2014-05-29 14:14:45	<--	briskteafan (~jonathanc@50.244.249.179) has left #python
2014-05-29 14:14:45	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined #python
2014-05-29 14:14:50	<--	armlesshobo (~ahobo@unaffiliated/armlesshobo) has left #python ("peace up, A-Town down.")
2014-05-29 14:14:52	<--	spal_ (~susam@pdpc/supporter/active/spal) has quit (Ping timeout: 245 seconds)
2014-05-29 14:14:52	-->	Vutral (~ss@mirbsd/special/Vutral) has joined #python
2014-05-29 14:14:54	-->	Deesl (bsdboy@redhat/deesl) has joined #python
2014-05-29 14:15:18	-->	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has joined #python
2014-05-29 14:15:23	-->	mribeirodantas (~mrd@fedora/mribeirodantas) has joined #python
2014-05-29 14:15:33	mribeirodantas	This is communication.py http://paste.fedoraproject.org/105766/14013980/
2014-05-29 14:15:40	mribeirodantas	This is server.py http://paste.fedoraproject.org/105767/14013981/
2014-05-29 14:15:43	kevlarman	nijm: li[:] doesn't actually turn into a copy of li until later on
2014-05-29 14:15:51	kevlarman	nijm: slice objects are weird
2014-05-29 14:15:51	mribeirodantas	I get AttributeError: 'NoneType' object has no attribute 'listen' when I run server.py
2014-05-29 14:16:03	mribeirodantas	but I do have a socket descriptor .listen :-/
2014-05-29 14:16:06	 *	mribeirodantas is confused
2014-05-29 14:16:32	-->	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has joined #python
2014-05-29 14:16:45	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 14:16:48	VooDooNOFX	mribeirodantas: you should include a pastebin of the full traceback.
2014-05-29 14:16:54	mribeirodantas	one sec
2014-05-29 14:16:54	<--	revolve (~steve@psybernetics.org.uk) has quit (Ping timeout: 240 seconds)
2014-05-29 14:17:05	-->	codepython777 (~codepytho@cs1229.cs.fsu.edu) has joined #python
2014-05-29 14:17:13	-->	mordonez (~mordonez@190.102.132.14) has joined #python
2014-05-29 14:17:13	nanonyme	nijm, to confuse you a little more, have you seen syntax such as li[:] = [1,2,3] yet?
2014-05-29 14:17:16	mribeirodantas	http://paste.fedoraproject.org/105769/39823114/
2014-05-29 14:17:18	mribeirodantas	VooDooNOFX: done.
2014-05-29 14:17:20	VooDooNOFX	mribeirodantas: though, it seems line 54 is indented too fart.
2014-05-29 14:17:22	<--	DFieldFL (~bgroves@node69.seg78.ucf.edu) has quit (Quit: DFieldFL)
2014-05-29 14:17:24	VooDooNOFX	far*. hehe
2014-05-29 14:17:24	<--	codepython777 (~codepytho@cs1229.cs.fsu.edu) has quit (Client Quit)
2014-05-29 14:17:32	diverdude	how do i extract the number 23 from the string '{{id:23}}' ?
2014-05-29 14:17:35	mribeirodantas	can't believe it -.-
2014-05-29 14:17:49	kevlarman	nanonyme: li[0:3] = [1,2,3] probably explains what's going on a lot better (even though it does something else)
2014-05-29 14:17:51	-->	ustunozg_ (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 14:17:52	VooDooNOFX	create_socket isn't returning anything.
2014-05-29 14:17:53	mribeirodantas	Thank you VooDooNOFX!
2014-05-29 14:18:08	mribeirodantas	I hate it when I don't notice things like that :-D
2014-05-29 14:18:22	VooDooNOFX	mribeirodantas: happens to the best of us :)
2014-05-29 14:18:48	<--	muffer (d849fcad@gateway/web/freenode/ip.216.73.252.173) has quit (Ping timeout: 240 seconds)
2014-05-29 14:18:59	nanonyme	kevlarman, yeah, well, point was that the syntax *usually* does not create copies
2014-05-29 14:19:31	-->	[diablo]_ (~diablo]@unaffiliated/miles/x-000000001) has joined #python
2014-05-29 14:19:32	nanonyme	Afaik more ways to use slices so they don't create copies than that they do
2014-05-29 14:19:53	kevlarman	the most common use does end up creating a copy
2014-05-29 14:20:02	-->	exarkun (~exarkun@book.wordeology.com) has joined #python
2014-05-29 14:20:11	<--	alternut (~alternut@unaffiliated/alternut) has quit (Quit: bye)
2014-05-29 14:20:11	--	cewing|away is now known as cewing
2014-05-29 14:20:17	kevlarman	...and then there's numpy slices if you don't have a headache yet
2014-05-29 14:20:18	<--	sl33k_ (~sl33k_@unaffiliated/sl33k-/x-0812184) has quit (Ping timeout: 240 seconds)
2014-05-29 14:20:36	<--	pydave6367 (~dave@88-105-219-248.dynamic.dsl.as9105.com) has quit (Ping timeout: 240 seconds)
2014-05-29 14:20:41	-->	alternut (~alternut@unaffiliated/alternut) has joined #python
2014-05-29 14:20:49	<--	Mustache (~Mustache@p3E9BE6AC.dip0.t-ipconnect.de) has quit
2014-05-29 14:21:00	<--	ustunozgur (~ustunozgu@li283-143.members.linode.com) has quit (Ping timeout: 265 seconds)
2014-05-29 14:21:13	<--	whalesalad (~textual@66-194-23-234.static.twtelecom.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 14:22:25	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 14:22:31	<--	joaofelix (~joaofelix@177.17.230.178.dynamic.adsl.gvt.net.br) has quit (Quit: Computer has gone to sleep.)
2014-05-29 14:22:33	nijm	I think 'slice objects are weird' sums it up nicely.
2014-05-29 14:22:34	exarkun	I have a travis-ci configuration, https://github.com/hybridcluster/machinist/blob/master/.travis.yml, and I want to add steps to build documentation and run doctests.  I wonder if now is a good time to learn about tox.  Can tox do the things that .travis.yml does?  eg, dynamically determine the minimum supported version of a dependency and run the tests against it.
2014-05-29 14:22:46	-->	aeikenbe_ (~aeikenber@50.247.147.218) has joined #python
2014-05-29 14:22:56	<--	tan (~quassel@unaffiliated/tan) has quit (Remote host closed the connection)
2014-05-29 14:23:16	-->	Arctico (~Arctico@12.175.218.87.dynamic.jazztel.es) has joined #python
2014-05-29 14:23:19	<--	boos3y (~boos3y@50.246.90.45) has quit (Ping timeout: 252 seconds)
2014-05-29 14:23:19	<--	jooools (~ejulfit@194.237.142.10) has quit (Quit: Leaving.)
2014-05-29 14:23:37	<--	windyhouser (~windyhous@ip67-90-152-194.z152-90-67.customer.algx.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 14:23:46	-->	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has joined #python
2014-05-29 14:23:54	-->	firemark (~tiramo@cui103.internetdsl.tpnet.pl) has joined #python
2014-05-29 14:24:10	-->	tan (~quassel@unaffiliated/tan) has joined #python
2014-05-29 14:24:14	<--	gkap (~gkap@c-24-21-56-157.hsd1.or.comcast.net) has quit (Client Quit)
2014-05-29 14:24:29	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 14:24:44	desophos	ok, i'm going to try again... i have several threads each running an HTMLParser instance, each reading data from its own page in a directory and writing to its own file. the problem is that, very rarely, a thread will mis-write data to its file. i can give examples. does anyone have an idea of what might be causing this?
2014-05-29 14:24:53	<--	DrDamnit (~michael@highpoweredhelp.com) has quit (Ping timeout: 252 seconds)
2014-05-29 14:24:56	desophos	please do not argue about my use of HTMLParser
2014-05-29 14:25:00	exarkun	desophos: Did you check to see if HTMLParser is thread-safe?
2014-05-29 14:25:10	<--	codex0 (~anonymous@173.254.199.83) has quit (Quit: codex0)
2014-05-29 14:25:19	desophos	exarkun: i have a separate instance in each thread, so it shouldn't matter, right?
2014-05-29 14:25:21	<--	dlman (~dlman@c-24-61-47-4.hsd1.ma.comcast.net) has quit (Remote host closed the connection)
2014-05-29 14:25:31	<--	fcodiaz (~fcodiaz@208.71.232.130) has quit (Ping timeout: 252 seconds)
2014-05-29 14:25:44	exarkun	desophos: Only if HTMLParser only uses instance state (not global or otherwise shared) state.  And only if all of the things HTMLParser depends on do rthe same.
2014-05-29 14:25:45	ssbr_at_work	desophos: Shouldn't doesn't mean doesn't, sadly.
2014-05-29 14:25:50	<--	aeikenberry (~aeikenber@50.247.147.218) has quit (Ping timeout: 265 seconds)
2014-05-29 14:25:56	exarkun	desophos: I don't know that HTMLParser *isn't* thread-safe.  But I don't know that it is, either.
2014-05-29 14:25:59	nijm	Thanks for embracing my pedantry, all. TTFN.
2014-05-29 14:26:03	offby1	exarkun: nicely said, sir/madam
2014-05-29 14:26:03	diverdude	how do i extract the number 23 from the string '{{id:23}}' ?
2014-05-29 14:26:17	-->	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has joined #python
2014-05-29 14:26:17	<--	nijm (~nick@5ec26896.skybroadband.com) has left #python ("Ex-Chat")
2014-05-29 14:26:23	offby1	diverdude: there are about 1,000,000 ways you could do it
2014-05-29 14:26:25	offby1	Most of them bad
2014-05-29 14:26:25	ssbr_at_work	offby1: except for that one typo, of course ;)
2014-05-29 14:26:34	<--	crucl0 (~alekzp@78.165.95.41) has quit (Quit: Leaving.)
2014-05-29 14:26:34	offby1	diverdude: where'd that string come from?  What format is it in?
2014-05-29 14:26:35	desophos	hmm
2014-05-29 14:26:52	exarkun	desophos: Perhaps you could use multiprocessing instead of multithreading.
2014-05-29 14:26:53	ssbr_at_work	diverdude: that would probably depend on what it is you're parsing and what other data you might expect to encounter.
2014-05-29 14:26:59	-->	dude-x (~dude-x@149.sub-70-208-82.myvzw.com) has joined #python
2014-05-29 14:27:07	offby1	wot I said :)
2014-05-29 14:27:09	exarkun	desophos: Process isolation will protect you from any thread-safety issues that might exist.
2014-05-29 14:27:16	ssbr_at_work	offby1: exactly, but twice
2014-05-29 14:27:28	ssbr_at_work	I was also going to say "in the easiest possible case, regexps would work nicely"
2014-05-29 14:27:37	diverdude	ssbr_at_work: nothing else. the string contains only that '{{id:xxxx}}' where xxxx is some number
2014-05-29 14:27:37	exarkun	desophos: Also, running multiple Python processes will actually run faster if you are CPU bound and have multiple CPUs.
2014-05-29 14:27:41	-->	spal_ (~susam@pdpc/supporter/active/spal) has joined #python
2014-05-29 14:27:44	exarkun	desophos: Running multiple threads most likely won't.
2014-05-29 14:27:48	ssbr_at_work	diverdude: then I would pull it out with a regexp.
2014-05-29 14:28:00	diverdude	ssbr_at_work: ok, what pattern?
2014-05-29 14:28:04	offby1	diverdude: if that's always the case, then I'd just throw away for first five characters, and then "rstrip" the trailing }}
2014-05-29 14:28:10	offby1	diverdude: but I bet that's brittle.
2014-05-29 14:28:10	<--	ustunozg_ (~ustunozgu@78.171.103.252) has quit (Remote host closed the connection)
2014-05-29 14:28:12	exarkun	desophos: (Going faster is the reason you're using threads, I expect.)
2014-05-29 14:28:20	offby1	I bet you're actually lying about it always being formatted that way :)
2014-05-29 14:28:24	desophos	exarkun: yes, and it runs much faster with threads
2014-05-29 14:28:26	ssbr_at_work	offby1: bleh, that winds up being a bit unreadable and a bit fragile
2014-05-29 14:28:35	offby1	ssbr_at_work: ultra-fragile!
2014-05-29 14:28:45	ssbr_at_work	well, fragile isn't the word I want
2014-05-29 14:28:48	offby1	lstrip {; rstrip }; split on colon; discard first element
2014-05-29 14:28:49	diverdude	ssbr_at_work: i tried using obj2=re.compile('\{\{id:\d\}\}')
2014-05-29 14:28:51	exarkun	desophos: I suppose you're not CPU-bound, then.
2014-05-29 14:28:54	ssbr_at_work	given incorrect data, rather than failing, it will give you incorrect output
2014-05-29 14:28:55	diverdude	ssbr_at_work: but to no avail
2014-05-29 14:29:00	exarkun	desophos: Are you *also* doing network I/O in these threads?
2014-05-29 14:29:08	ssbr_at_work	diverdude: \d matches a single decimal digit, like 0 or 7
2014-05-29 14:29:10	offby1	diverdude: what format is this data?  i.e., who wrote it out like that, and why?
2014-05-29 14:29:13	desophos	exarkun: unfortunately, yes
2014-05-29 14:29:23	ssbr_at_work	diverdude: you probably want to match one or more decimal digits, and you probably want to extract them in a group
2014-05-29 14:29:26	desophos	exarkun: that's the real bottleneck
2014-05-29 14:29:27	ssbr_at_work	like (\d+)
2014-05-29 14:29:35	dash	desophos: copy scrapy into your project, tell your boss you wrote it
2014-05-29 14:29:37	exarkun	desophos: Maybe you just need to switch to non-blocking I/O.
2014-05-29 14:29:49	desophos	exarkun: urllib.open is a *huge* percentage of the runtime
2014-05-29 14:30:05	dash	yep, that would be a reason to not use threads
2014-05-29 14:30:05	exarkun	You don't have to tell me.  My round-trip time to *anywhere* is 100ms.
2014-05-29 14:30:05	desophos	er urlopen
2014-05-29 14:30:09	diverdude	ssbr_at_work: ah nice...now it works
2014-05-29 14:30:35	exarkun	Leaving the CPU idle for that is certainly a waste.
2014-05-29 14:30:37	desophos	dash: why is that a reason not to use threads? threads let me run multiple urlopens simultaneously
2014-05-29 14:30:43	exarkun	desophos: Sounds like maybe scrapy would help you out a lot.
2014-05-29 14:30:55	-->	davidals (~davidals@179.180.21.178) has joined #python
2014-05-29 14:31:07	nanonyme	desophos, the IO is basically the only thing your threads are doing in parallel
2014-05-29 14:31:10	desophos	exarkun: -____- i wish... this script needs to have python as the only dependency
2014-05-29 14:31:13	<--	dcrosta (~dcrosta@static-72-80-117-250.nycmny.fios.verizon.net) has quit (Quit: Quitting.)
2014-05-29 14:31:18	exarkun	desophos: Oh.
2014-05-29 14:31:23	dash	desophos: quite feasible
2014-05-29 14:31:35	dash	oh, except scrapy does use libxml2
2014-05-29 14:31:38	diverdude	ssbr_at_work: so when i have o = re.compile('\{\{id:(\d+)\}\}'), how can i then extract the value?
2014-05-29 14:31:39	dash	desophos: you're screwed
2014-05-29 14:31:43	desophos	nanonyme: yeah, but that's the time-consuming part
2014-05-29 14:31:48	_habnabit	desophos, you know you can bundle dependencies with your script, right?
2014-05-29 14:32:02	exarkun	There are some problems with my job but at least I don't have arbitrary, pointless restrictions like that on my efforts.
2014-05-29 14:32:06	<--	[diablo]_ (~diablo]@unaffiliated/miles/x-000000001) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 14:32:09	exarkun	Maybe you don't need scrapy, maybe you need a different job.
2014-05-29 14:32:12	_habnabit	desophos, https://github.com/brownhead/superzippy
2014-05-29 14:32:19	<--	bitnumus (~bitnumus@unaffiliated/bitnumus) has quit (Ping timeout: 240 seconds)
2014-05-29 14:32:20	ssbr_at_work	diverdude: have you read the re module docs? re.match will return either None, or a match object, and match objects let you pull out the groups
2014-05-29 14:32:32	davidals	Hi guys, I need some help with pip. I'm trying to install something from git on my virtualenv. It creates the src folder but it doesnt appear on site-packages. Any clue?
2014-05-29 14:32:35	desophos	exarkun: i've had i think 4 different people from here tell me that
2014-05-29 14:32:40	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-29 14:32:56	<--	mishok13 (~mishok13@dhcp-089-098-111-220.chello.nl) has quit (Ping timeout: 255 seconds)
2014-05-29 14:32:57	dash	desophos: what we tell you three times is true
2014-05-29 14:32:59	DammitJim	how does one handle hiding a password in a script?
2014-05-29 14:33:01	 *	offby1 is tempted to get diverdude and [Tritium] together, to see if they create a nice glow-in-the-dark diver's wristwatch
2014-05-29 14:33:05	exarkun	desophos: So sorry :/
2014-05-29 14:33:05	_habnabit	DammitJim, one doesn't
2014-05-29 14:33:06	Jerub	desophos: i'll happily critique your resume and suggest places to send it.
2014-05-29 14:33:10	DammitJim	dammit!
2014-05-29 14:33:11	DammitJim	....jim!
2014-05-29 14:33:15	offby1	Janet!
2014-05-29 14:33:16	DammitJim	so, what should I do?
2014-05-29 14:33:31	dash	DammitJim: in order to do what?
2014-05-29 14:33:33	_habnabit	DammitJim, depends on why you think you want a password
2014-05-29 14:33:37	DammitJim	I just realized I have a script that connects to a server via samba and deletes files and the script has the password for a user
2014-05-29 14:33:40	<--	Deesl (bsdboy@redhat/deesl) has quit (Remote host closed the connection)
2014-05-29 14:33:45	Jerub	DammitJim: the question you need to adequately answer is: what are you trying to achieve overall?
2014-05-29 14:34:01	desophos	_habnabit: hmm thanks, i'll see if i can do that
2014-05-29 14:34:11	DammitJim	I don't want to have someone look at my script and access the share and just delete the files
2014-05-29 14:34:12	dash	DammitJim: well, either store it, or have your script take it as input
2014-05-29 14:34:12	<--	mateNz (~mateNz@unaffiliated/matenz) has quit (Read error: Connection reset by peer)
2014-05-29 14:34:16	<--	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has quit (Quit: WeeChat 0.4.2)
2014-05-29 14:34:29	offby1	DammitJim: I've never used it, but it's possible that https://docs.python.org/2/library/curses.html will let you suppress the echo
2014-05-29 14:34:32	_habnabit	DammitJim, https://pypi.python.org/pypi/keyring
2014-05-29 14:34:35	-->	Back2Basics (~jeremy@76.249.225.205) has joined #python
2014-05-29 14:34:36	DammitJim	ah, dash! store it... where do you guys normally store passwords in a case like this?
2014-05-29 14:34:37	desophos	DammitJim, I'm a doctor, not a cryptographer!
2014-05-29 14:34:40	_habnabit	offby1, that's not exactly the problem
2014-05-29 14:34:44	offby1	desophos++
2014-05-29 14:34:48	diverdude	ssbr_at_work:  hmmm when i do  m = re.match('\{\{id:(\d+)\}\}','{{id:23}}')    m.group()   it yields '{{id:23}}'  and not 23. Did i miss something?
2014-05-29 14:34:51	dash	DammitJim: well, what runs this program
2014-05-29 14:34:54	offby1	DammitJim: it's also possible that someone else has solved this problem already.  I'd spend a bit of time on stackoverflow
2014-05-29 14:34:55	DammitJim	there is no echo... this runs as a scheduled job in windows yikes!
2014-05-29 14:34:55	-->	zooz (~zooz@host86-167-222-90.range86-167.btcentralplus.com) has joined #python
2014-05-29 14:35:02	DammitJim	ha, desophos
2014-05-29 14:35:08	_habnabit	DammitJim, ok, so, what part of this requires a password?
2014-05-29 14:35:12	Back2Basics	whohoo   2 python programming interviews done in one day.
2014-05-29 14:35:22	<--	harobed (~harobed@equ57-1-78-235-121-109.fbx.proxad.net) has quit
2014-05-29 14:35:22	dash	Back2Basics: who'd you hire
2014-05-29 14:35:31	DammitJim	connecting to the windows share on 3 other machines
2014-05-29 14:35:40	Back2Basics	dash: getting hired.
2014-05-29 14:35:47	_habnabit	offby1, also, getpass module
2014-05-29 14:35:59	Jerub	DammitJim: the script: is it run interactively? on a server? what?
2014-05-29 14:36:35	Back2Basics	dash: not telling you who lest you pull out stock out of the company :)  it might be considered insider trading.
2014-05-29 14:36:38	<--	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has quit (Quit: MindlessDrone)
2014-05-29 14:36:41	offby1	sounds like it's a scheduled job in windows yikes.
2014-05-29 14:36:45	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Read error: No route to host)
2014-05-29 14:36:45	<--	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has quit (Quit: Zzzzz ...)
2014-05-29 14:36:49	DammitJim	no, it's on a schedule and runs automatically
2014-05-29 14:36:53	<--	Lattes (~j@gateway/tor-sasl/lattes) has quit (Remote host closed the connection)
2014-05-29 14:36:56	offby1	somehow I missed the release announcement for "Windows Yikes".  Must be the successor to Windows Vista.
2014-05-29 14:37:03	Jerub	DammitJim: 'runs automatically', via cron?
2014-05-29 14:37:04	dash	DammitJim: putting it in a fiel or as a literal in the source is just fine then
2014-05-29 14:37:05	<--	ffledgling (~anhad@corp-nat.p2p.sfo1.mozilla.com) has quit (Quit: leaving)
2014-05-29 14:37:06	DammitJim	I have read that one can save the password in another file that is only accessible by the OS
2014-05-29 14:37:08	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-29 14:37:13	-->	Lattes (~j@gateway/tor-sasl/lattes) has joined #python
2014-05-29 14:37:16	DammitJim	Jerub, via Task Scheduler YIKES!
2014-05-29 14:37:20	Jerub	DammitJim: oh windows?
2014-05-29 14:37:20	offby1	DammitJim: I suspect there's no good way to do it.
2014-05-29 14:37:20	_habnabit	DammitJim, keyring module
2014-05-29 14:37:29	dash	DammitJim: if this was run as part of an interactive session, the keyring module might be good
2014-05-29 14:37:41	dash	doubt that'll help for a scheduled task though
2014-05-29 14:37:43	DammitJim	yeah on the keyring idea, but no... no interaction
2014-05-29 14:38:00	Jerub	DammitJim: slow down
2014-05-29 14:38:09	Jerub	DammitJim: 'task scheduler' sounds like windwos, is this on windows?
2014-05-29 14:38:14	DammitJim	I'm going to investigate saving a different file where one can't read it but only the OS
2014-05-29 14:38:20	DammitJim	yes, Windows Server
2014-05-29 14:38:21	dash	Jerub: he did say that
2014-05-29 14:38:39	<--	_krux (~richard@ool-2f1477ea.dyn.optonline.net) has quit (Remote host closed the connection)
2014-05-29 14:38:43	Jerub	DammitJim: have the script run as a separate user with their files ACL'd such that no other user can read them
2014-05-29 14:38:54	-->	Gamenoob (~Gamenoob@93-136-68-240.adsl.net.t-com.hr) has joined #python
2014-05-29 14:39:03	DammitJim	yeah, I'm leaning towards that
2014-05-29 14:39:18	<--	mmikeym (~mikeym@184.70.65.118) has quit (Ping timeout: 240 seconds)
2014-05-29 14:39:22	DammitJim	I guess one can only run away so far but someone can always catch you with the right credentials
2014-05-29 14:39:25	Jerub	it's the sensible thing to do. if you run it as a user that other people can log in as, they can change the program.
2014-05-29 14:39:26	-->	kadoban (~kadoban@ip70-171-230-183.tc.ph.cox.net) has joined #python
2014-05-29 14:39:53	Jerub	additionally, you should not let anyone write into the directory containing python, and you should probably use py2exe so you're not running the same python interpreter that others can affect.
2014-05-29 14:39:54	DammitJim	I'll have to look into how one does a scheduled job that runs as a different user
2014-05-29 14:40:22	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 14:40:26	Jerub	because if you're going to go to the effort of securing this, it's probably worth actually making it somewhat sensible.
2014-05-29 14:40:43	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 14:40:50	-->	wldcordeiro_work (~wldcordei@50-200-160-113-static.hfc.comcastbusiness.net) has joined #python
2014-05-29 14:40:50	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 14:40:53	offby1	_habnabit: ooh, I never knew about the keyring module!  Looks intriguing.  Thanks.
2014-05-29 14:41:06	-->	nycto (~ale@85.230.171.82) has joined #python
2014-05-29 14:41:11	<--	wldcordeiro (~wldcordei@50-200-160-113-static.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2014-05-29 14:41:12	<--	shortdudey123 (~shortdude@dagmar1.corp.linkedin.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 14:41:15	DammitJim	sweet
2014-05-29 14:41:16	nycto	What's the difference between learning Python 2 and Python 3?
2014-05-29 14:41:18	<--	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-05-29 14:41:20	_habnabit	nycto, 1
2014-05-29 14:41:31	dash	heh
2014-05-29 14:41:36	-->	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has joined #python
2014-05-29 14:41:46	<--	zooz (~zooz@host86-167-222-90.range86-167.btcentralplus.com) has quit (Quit: Leaving IRC)
2014-05-29 14:42:02	dash	nycto: learning a version that's useful vs learning a version that people will make people say nice things to you
2014-05-29 14:42:04	<--	jchysk (~yo@wsip-24-234-185-148.lv.lv.cox.net) has quit (Quit: Leaving)
2014-05-29 14:42:11	-->	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has joined #python
2014-05-29 14:42:11	-->	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has joined #python
2014-05-29 14:42:14	DammitJim	now, different question... what module is good to use for reading/writing a Windows Share from a Linux box?
2014-05-29 14:42:35	nycto	dash: Which one to pick?
2014-05-29 14:42:52	dash	nycto: 2
2014-05-29 14:42:57	Jerub	DammitJim: in my opinion? I would mount the windows share as a filesystem and then use functions like 'open()' 'rename()' and 'unlink()'
2014-05-29 14:43:00	Jerub	:)
2014-05-29 14:43:15	DammitJim	mount it using python or bash?
2014-05-29 14:43:28	DammitJim	I get confused when writing a script that calls another script
2014-05-29 14:43:28	nycto	Are the docs enough?
2014-05-29 14:43:41	<--	chiui (~chiui@2001:470:71:41b:7024:8e4c:42da:1002) has quit (Remote host closed the connection)
2014-05-29 14:43:43	Jerub	DammitJim: i mean mount it at boot time.
2014-05-29 14:43:43	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 14:44:06	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 14:44:08	-->	NightTrain (~coffee@unaffiliated/ridout) has joined #python
2014-05-29 14:44:11	DammitJim	Jerub, I wanted to do that but I haven't been successful at changing the team's mentality on that
2014-05-29 14:44:20	Jerub	DammitJim: but whatever, some program has to call mount -t cifs ...
2014-05-29 14:44:22	DammitJim	so, I have to manually mount them every time I Need to access them
2014-05-29 14:44:22	-->	spergy (~w33nd0x@CPE-124-182-214-254.lns2.way.bigpond.net.au) has joined #python
2014-05-29 14:44:34	--	Underyx|off is now known as underyx
2014-05-29 14:44:50	Jerub	either at boot time or afterwards, it's precisely the same operation.
2014-05-29 14:45:00	<--	AnYaDi (~AnYaDi@eduroam-169-100.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 14:45:07	<--	Yage (~emurphy@107-0-85-186-ip-static.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2014-05-29 14:45:21	<--	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has quit (Quit: WeeChat 0.4.3)
2014-05-29 14:45:48	-->	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has joined #python
2014-05-29 14:45:56	-->	sigint88 (~anash@6cb32e01.cst.lightpath.net) has joined #python
2014-05-29 14:45:57	<--	sigint88 (~anash@6cb32e01.cst.lightpath.net) has quit (Max SendQ exceeded)
2014-05-29 14:45:59	<--	IchEsseDichAuf (~grek@blfd-4d0881c1.pool.mediaWays.net) has left #python ("PART #python.de :PART #python-requests :PART ##russian :QUIT :Leaving.")
2014-05-29 14:46:03	<--	Ariel_Calzada (~aricalso@181.135.222.141) has quit (Quit: Bye all)
2014-05-29 14:46:32	-->	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has joined #python
2014-05-29 14:46:35	-->	mhi^ (~mhi@unaffiliated/mhi/x-9993184) has joined #python
2014-05-29 14:47:05	-->	mijicd (~mijicd@cable-188-246-39-31.dynamic.kdsinter.net) has joined #python
2014-05-29 14:47:09	-->	sigint88 (~anash@6cb32e01.cst.lightpath.net) has joined #python
2014-05-29 14:47:18	<--	sigint88 (~anash@6cb32e01.cst.lightpath.net) has quit (Max SendQ exceeded)
2014-05-29 14:47:48	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 240 seconds)
2014-05-29 14:47:50	<--	samphippen (~textual@host86-184-229-180.range86-184.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 14:47:52	-->	pcardune (~pcardune@199.201.64.137) has joined #python
2014-05-29 14:48:08	-->	sigint88 (~anash@6cb32e01.cst.lightpath.net) has joined #python
2014-05-29 14:48:08	nycto	Are there any famous websites using django?
2014-05-29 14:48:18	<--	sigint88 (~anash@6cb32e01.cst.lightpath.net) has quit (Max SendQ exceeded)
2014-05-29 14:48:19	-->	EvilDMP (~superdmp@django/committer/EvilDMP) has joined #python
2014-05-29 14:48:31	<--	phuh (~phuh@cp66-203-194-42.cp.telus.net) has quit (Remote host closed the connection)
2014-05-29 14:48:59	-->	phuh (~phuh@cp66-203-194-42.cp.telus.net) has joined #python
2014-05-29 14:49:00	_habnabit	define 'famous'
2014-05-29 14:49:02	-->	kaos01_ (~kaos01@12.186.233.220.static.exetel.com.au) has joined #python
2014-05-29 14:49:04	-->	sigint88 (~anash@6cb32e01.cst.lightpath.net) has joined #python
2014-05-29 14:49:04	aleray	hi, for some reason my code for sorting at http://dpaste.com/2M3DCX0/#line-47 doesn't work. Do you have any idea why?
2014-05-29 14:49:14	<--	sigint88 (~anash@6cb32e01.cst.lightpath.net) has quit (Max SendQ exceeded)
2014-05-29 14:49:16	EvilDMP	if I have a dict, and would like to remove from it *any* keys in that appear in some_list - is there a quick way to do that?
2014-05-29 14:49:20	<--	DammitJim (~DammitJim@173.227.148.6) has quit (Quit: Leaving)
2014-05-29 14:49:27	EvilDMP	by quick I mean terse
2014-05-29 14:49:27	_habnabit	EvilDMP, a for loop
2014-05-29 14:49:36	-->	sigint88 (~anash@6cb32e01.cst.lightpath.net) has joined #python
2014-05-29 14:49:51	_habnabit	aleray, "doesn't work"?
2014-05-29 14:50:05	nycto	_habnabit, don't you know what famous means?
2014-05-29 14:50:21	_habnabit	nycto, not quantifiably, no
2014-05-29 14:50:23	aleray	_habnabit, sorry; the sorting is not what I would expect
2014-05-29 14:50:31	EvilDMP	_habnabit: so there’s no remove_any_of(some_list) method? thanks, I shall use a for loop
2014-05-29 14:50:31	_habnabit	aleray, keep going
2014-05-29 14:50:44	-->	TheFakeazneD525 (~denza252@unaffiliated/denza252) has joined #python
2014-05-29 14:50:46	-->	m8 (~m@unaffiliated/m8) has joined #python
2014-05-29 14:50:49	<--	ujjain (~ujjain@unaffiliated/ujjain) has quit (Ping timeout: 252 seconds)
2014-05-29 14:50:54	nycto	_habnabit, Youtube/Google are using Python. Are they using Django?
2014-05-29 14:51:00	_habnabit	nycto, no
2014-05-29 14:51:12	aleray	_habnabit, here is what I get when I print the code of the sorted objects: http://dpaste.com/3J8QY4J/
2014-05-29 14:51:19	nycto	What did they use at the beginning then?
2014-05-29 14:51:21	<--	heavytull (~heavytull@nor87-h03-89-82-92-188.dsl.sta.abo.bbox.fr) has quit (Remote host closed the connection)
2014-05-29 14:51:28	-->	LCyrin (~lynn@50-0-18-180.dsl.static.sonic.net) has joined #python
2014-05-29 14:51:54	-->	simplisity (~simplisit@cpe-108-184-173-172.socal.res.rr.com) has joined #python
2014-05-29 14:52:00	aleray	_habnabit, I would rather expect something along this: http://dpaste.com/2F0ANB9/
2014-05-29 14:52:37	_habnabit	aleray, i think you need to pastebin a minimal runnable example
2014-05-29 14:52:43	kadoban	nycto: I doubt they started with a known, public framework. At the start Google was just a rather crap little website, so probably just apache and a few lines of HTML.
2014-05-29 14:52:52	<--	jwhisnant (~jwhisnant@unaffiliated/jwhisnant) has quit (Read error: Connection reset by peer)
2014-05-29 14:53:17	aleray	_habnabit, ok
2014-05-29 14:53:32	<--	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has quit (Quit: Leaving.)
2014-05-29 14:54:04	-->	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has joined #python
2014-05-29 14:54:04	<--	emorrow (~Thunderbi@86.44.238.42) has quit (Read error: Connection reset by peer)
2014-05-29 14:54:12	<--	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-05-29 14:54:13	-->	emorrow1 (~Thunderbi@86.44.238.42) has joined #python
2014-05-29 14:54:14	KirkMcDonald	nycto: YouTube started in 2005, remember, which predates all of the frameworks of note.
2014-05-29 14:54:20	<--	emorrow1 (~Thunderbi@86.44.238.42) has quit (Client Quit)
2014-05-29 14:54:35	nycto	So what framework did they use with Python?
2014-05-29 14:54:39	nycto	Or did they build their own?
2014-05-29 14:54:40	-->	rafagomes (~rafagomes@179.218.20.249) has joined #python
2014-05-29 14:55:06	KirkMcDonald	nycto: It is substantially its own thing.
2014-05-29 14:55:09	kadoban	nycto: Who says they even used Python for anything web-facing? I doubt they did. Most big websites are custom frameworks anyway.
2014-05-29 14:55:16	dash	once a website is old enough and the codebase is large enough, there's typically not much of any framework remaining inside it :)
2014-05-29 14:55:19	<--	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has quit (Ping timeout: 265 seconds)
2014-05-29 14:55:23	dash	kadoban: youtube's web stuff is python.
2014-05-29 14:55:23	diverdude	i dont get it...why would type(re.match(r'(\d+)','dog2')) return nonetype? I am searching for some decimal value and there is a number in the string 'dog2'
2014-05-29 14:55:24	<--	macieks (~macieks@ip-222-135.ists.pl) has quit (Ping timeout: 276 seconds)
2014-05-29 14:55:32	VooDooNOFX	nycto: No one knows, or more precisely, no one can say in public.
2014-05-29 14:55:39	nycto	Yes we know.
2014-05-29 14:55:40	kadoban	dash: Really? Hmm
2014-05-29 14:55:40	KirkMcDonald	diverdude: You want re.search()
2014-05-29 14:55:41	-->	faldridg_ (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has joined #python
2014-05-29 14:55:44	nycto	Youtube was written in Python.
2014-05-29 14:56:01	nycto	http://en.wikipedia.org/wiki/Programming_languages_used_in_most_popular_websites
2014-05-29 14:56:02	<--	pcardune (~pcardune@199.201.64.137) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 14:56:35	nanonyme	nycto, eh, that doesnt say that
2014-05-29 14:57:03	Jerub	that's out of date anyway.
2014-05-29 14:57:04	nanonyme	nycto, that page says Python is one of the five different languages Google uses in their server-side backend
2014-05-29 14:57:10	Jerub	youtube doesn't use flash anymore. :P
2014-05-29 14:57:10	-->	jkyle (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-29 14:57:11	nycto	nanonyme, maybe go watch the video where the google developers talk about their thousands of python lines.
2014-05-29 14:57:26	_habnabit	Jerub, yes it does
2014-05-29 14:57:27	nanonyme	nycto, thousands of lines of code is not much
2014-05-29 14:57:37	Jerub	_habnabit: not for anyone with a real browser!
2014-05-29 14:57:42	nycto	nanonyme, so 999 thousands is not much?
2014-05-29 14:57:46	nycto	facepalm
2014-05-29 14:57:47	<--	R0b0t1 (~dev@unaffiliated/r0b0t1) has quit (Ping timeout: 245 seconds)
2014-05-29 14:58:27	Jerub	the original question was are there any famous websites that use django.
2014-05-29 14:58:30	-->	mrkz (~mark@187.244.15.18) has joined #python
2014-05-29 14:58:33	dash	sure
2014-05-29 14:58:36	dash	mozilla.org
2014-05-29 14:58:39	-->	Zzeiss (~wsy@dsl092-078-219.bos1.dsl.speakeasy.net) has joined #python
2014-05-29 14:58:44	<--	donspaulding (~donspauld@c-50-158-56-97.hsd1.il.comcast.net) has quit (Quit: donspaulding)
2014-05-29 14:58:46	<--	SilentGhost (~SilentGho@h51580eb1.seluesp.dyn.perspektivbredband.net) has quit (Quit: WeeChat 0.4.3)
2014-05-29 14:58:49	Jerub	a large number of python sites running on app engine do as well.
2014-05-29 14:58:56	Jerub	plus that original newspaper that developed django.
2014-05-29 14:59:00	<--	faldridge (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-29 14:59:10	dash	(code for mozilla.org is here: https://github.com/mozilla/bedrock )
2014-05-29 14:59:18	<--	Back2Basics (~jeremy@76.249.225.205) has quit (Quit: Leaving.)
2014-05-29 14:59:24	H1N1	pintrest uses django.
2014-05-29 14:59:52	_habnabit	Jerub, on safari i sometimes get HTML5 video and sometimes get flash
2014-05-29 14:59:59	<--	faldridg_ (~faldridge@cpe-72-182-35-54.austin.res.rr.com) has quit (Ping timeout: 252 seconds)
2014-05-29 15:00:07	_habnabit	Jerub, aiui it's flash when they want to show ads
2014-05-29 15:00:31	Jerub	seriously? you actually run safari?
2014-05-29 15:00:35	<--	rafagomes (~rafagomes@179.218.20.249) has quit (Ping timeout: 240 seconds)
2014-05-29 15:00:45	<--	guhcampos (~guhcampos@186.249.5.2) has left #python
2014-05-29 15:01:03	nycto	how about web2py?
2014-05-29 15:01:13	-->	Auv (~jack@unaffiliated/auv5) has joined #python
2014-05-29 15:01:13	nycto	I don't want to have an admin django panel for my site..
2014-05-29 15:01:19	_habnabit	Jerub, it's the least-bad browser i've used
2014-05-29 15:01:29	<--	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Quit: Lost terminal)
2014-05-29 15:02:02	Jerub	nycto: turn it off?
2014-05-29 15:02:03	nanonyme	Looks like Mozilla is vendoring their own version of Django https://github.com/mozilla/playdoh-lib/tree/master/lib/python ; possible they have custom modifications
2014-05-29 15:02:07	-->	northfurr (~northfurr@unaffiliated/northfurr) has joined #python
2014-05-29 15:02:15	nanonyme	That's what bedrock uses
2014-05-29 15:02:19	_habnabit	nycto, web2py is hilarious and garbage
2014-05-29 15:02:27	_habnabit	nycto, web.py is just depressing garbage
2014-05-29 15:02:55	dash	nanonyme: huh weird, never seen that
2014-05-29 15:02:58	Jerub	how dare they take open source software and apply patches to it!
2014-05-29 15:03:02	-->	ToeTag (~steve@unaffiliated/toetag) has joined #python
2014-05-29 15:03:04	dash	nanonyme: no modifications, so far as I know
2014-05-29 15:03:16	dash	my team is on django 1.6.5, we don't use playdoh
2014-05-29 15:03:46	nycto	Are there any docs or something for django?
2014-05-29 15:03:58	dash	yes
2014-05-29 15:04:00	nanonyme	dash, https://github.com/mozilla/bedrock there's a dir vendor which is a reference to playdoh
2014-05-29 15:04:01	<--	VladVP (~VladVP@185.37.87.102) has quit (Ping timeout: 265 seconds)
2014-05-29 15:04:05	-->	TheRealJohnGalt (uid29986@gateway/web/irccloud.com/x-amfxmgoszcoplrru) has joined #python
2014-05-29 15:04:07	nanonyme	That's how I found it
2014-05-29 15:04:11	dash	nanonyme: sure, i know bedrock uses it
2014-05-29 15:04:14	nanonyme	Right
2014-05-29 15:04:30	<--	m8 (~m@unaffiliated/m8) has quit (Ping timeout: 276 seconds)
2014-05-29 15:04:35	-->	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has joined #python
2014-05-29 15:04:37	dash	looks like bedrock is still on 1.4.8
2014-05-29 15:04:47	gfortune	nycto: and a good tutorial.  djangoproject.com is probably a better place to start than #python
2014-05-29 15:04:52	EvilDMP	_habnabit, nycto - Google do use Django
2014-05-29 15:04:53	<--	Deithrian (~Deithrian@unaffiliated/deithrian) has quit (Read error: Connection reset by peer)
2014-05-29 15:04:59	EvilDMP	I am not sure exactly what for
2014-05-29 15:05:08	-->	mmikeym (~mikeym@184.70.65.118) has joined #python
2014-05-29 15:05:11	nycto	EvilDMP, nwhat?
2014-05-29 15:05:20	TheRealJohnGalt	Hi all, new to Python3, not to coding or scripting (experienced c/c++ coder). Anyway, I can't seem to find a documented way to cast a string to datetime.datetime. What's the best way of handling that?
2014-05-29 15:05:26	<--	Lattes (~j@gateway/tor-sasl/lattes) has quit (Quit: leaving)
2014-05-29 15:05:46	_habnabit	TheRealJohnGalt, python doesn't have casting
2014-05-29 15:05:48	EvilDMP	nycto: you asked whether Google use Django
2014-05-29 15:05:54	nanonyme	dash, yeah, I have bad experiences of upgrading Django. Seems there's always some compatibility issues with something
2014-05-29 15:05:55	EvilDMP	the answer is yes
2014-05-29 15:05:56	KirkMcDonald	TheRealJohnGalt: datetime.datetime.strptime()
2014-05-29 15:05:57	firemark	TheRealJohnGalt: datetime.strptime
2014-05-29 15:05:58	_habnabit	TheRealJohnGalt, strptime is probably what you want
2014-05-29 15:06:12	<--	Gamenoob (~Gamenoob@93-136-68-240.adsl.net.t-com.hr) has quit (Quit: KVIrc 4.1.3 Equilibrium http://www.kvirc.net/)
2014-05-29 15:06:27	<--	ToeTag (~steve@unaffiliated/toetag) has left #python ("WeeChat 0.4.2")
2014-05-29 15:06:34	dash	nanonyme: hee hee
2014-05-29 15:06:40	-->	le_tropico (~le_tropic@194.44.141.34) has joined #python
2014-05-29 15:06:42	dash	nanonyme: i spent three months upgrading to django 1.6
2014-05-29 15:06:47	nanonyme	Wow
2014-05-29 15:07:01	dash	well
2014-05-29 15:07:11	nanonyme	When'd you do it?
2014-05-29 15:07:20	dash	december-february
2014-05-29 15:07:24	EvilDMP	dash: I’ve spent three years not upgrading from 1.4…
2014-05-29 15:07:45	<--	Frosh (uid4206@gateway/web/irccloud.com/x-rszcyfurbuodlrur) has quit (Quit: Connection closed for inactivity)
2014-05-29 15:07:51	aleray	_habnabit, that would be a minimal example: http://dpaste.com/0M65TBC/
2014-05-29 15:07:54	dash	nanonyme: we had customized several pieces of django internals that had to be updated
2014-05-29 15:08:02	<--	alexsnake (~alexsnake@177.237.112.9) has quit (Remote host closed the connection)
2014-05-29 15:08:10	nycto	Is Django big, much to learn or relevant?
2014-05-29 15:08:15	<--	kjn (~kjn@168.93.96.5) has quit (Quit: Quit)
2014-05-29 15:08:25	-->	mexi_d3 (6d945edd@gateway/web/freenode/ip.109.148.94.221) has joined #python
2014-05-29 15:08:37	-->	Deithrian (~Deithrian@unaffiliated/deithrian) has joined #python
2014-05-29 15:08:41	TheRealJohnGalt	Actually, I should give a bit of a backstory to this issue...I'm taking datetime.datetime.now() and putting it in a sqlite table. I'm then taking it out, populating a list, at which point it's a string. But I'd like to use it for determining delta from another datetime.datetime.now() assignment so it seems I need to to be reassigned to datetime.datetime type
2014-05-29 15:08:58	dash	nycto: it's probably the best place to start for python web development
2014-05-29 15:09:01	_habnabit	TheRealJohnGalt, have you considered using sqlalchemy?
2014-05-29 15:09:08	_habnabit	aleray, line 26 is kind of puzzling
2014-05-29 15:09:09	kevlarman	TheRealJohnGalt: is a real database an option?
2014-05-29 15:09:22	<--	lsocks (~lsocks@2001:1850:1:0:100::10) has quit (Quit: ZNC - http://znc.in)
2014-05-29 15:09:27	dash	kevlarman: sqlite is the most real database
2014-05-29 15:09:31	<--	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has quit (Quit: Leaving.)
2014-05-29 15:09:31	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 252 seconds)
2014-05-29 15:09:37	toothrot	TheRealJohnGalt, sqlite3 module has an adapter for datetime by default, i believe
2014-05-29 15:09:38	TheRealJohnGalt	dash: I think he means using purely sqlite date operations
2014-05-29 15:09:44	nanonyme	dash, ah, okay. For us it's usually Grappelli. Should some day bother creating a proper WYSIWYG editor, just hacked a quick draggable editor in admin with grappelli for our stuff since not really core business
2014-05-29 15:09:46	kevlarman	dash: it doesn't even have proper datetime support
2014-05-29 15:09:55	-->	ustunozg_ (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 15:10:02	nycto	dash, Oh okey then. Would you recommend another language for web development only?
2014-05-29 15:10:07	nycto	backends etc.
2014-05-29 15:10:17	TheRealJohnGalt	It's definitely an option, but I'm trying to learn how I could go about doing this.
2014-05-29 15:10:21	toothrot	and sqlite has date/time funcs anyhow
2014-05-29 15:10:22	dash	nycto: No.
2014-05-29 15:10:28	<--	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2014-05-29 15:10:32	_habnabit	nycto, Ur
2014-05-29 15:10:39	dash	nycto: web development is terrible and there's not been a language invented yet that makes it much better
2014-05-29 15:10:44	TheRealJohnGalt	re: putting datetime.datetime type into a list, pulling it out, then using it as datetime.datetime again
2014-05-29 15:10:47	dash	i guess Ur/Web might count, heh
2014-05-29 15:10:57	toothrot	TheRealJohnGalt, .connect('...', detect_types=sqlite3.PARSE_DECLTYPES)
2014-05-29 15:11:11	-->	kcj (~kcj@unaffiliated/kcj) has joined #python
2014-05-29 15:11:12	_habnabit	aleray, well, you're not actually sorting by the result of calling code_as_list() in this code
2014-05-29 15:11:12	toothrot	TheRealJohnGalt, and declare the column as `timestamp`
2014-05-29 15:11:22	_habnabit	aleray, you're sorting by comparing each method
2014-05-29 15:11:36	mon5ter	how do i terminate a thread?
2014-05-29 15:11:36	nycto	dash, Yes but out of the languages we have right now, which one is the way to go. Don't just say Python becuase you happend to like or be good at it but be reasonable.
2014-05-29 15:11:36	aleray	_habnabit, the reason I wrote it like this is because I'm using Django south for a data migration but south discard any custom Model attributes/methods so I reimplement it on my data migration code
2014-05-29 15:11:41	-->	taion809 (~Nick@ool-43526e1b.dyn.optonline.net) has joined #python
2014-05-29 15:11:46	_habnabit	mon5ter, you can't
2014-05-29 15:11:47	nanonyme	dash, best web development is when you can stop thinking of what you're doing as web development and can just think of API's imo
2014-05-29 15:12:05	<--	yrter (~yrter@unaffiliated/yrter) has quit (Ping timeout: 255 seconds)
2014-05-29 15:12:07	-->	lsocks (~lsocks@2001:1850:1:0:100::10) has joined #python
2014-05-29 15:12:08	<--	frostschutz (~frostschu@p4FFF4C3A.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2014-05-29 15:12:10	dash	nycto: python isn't worse than any of the other popular options
2014-05-29 15:12:12	aleray	_habnabit, how could I fix it?
2014-05-29 15:12:14	_habnabit	aleray, setattr(x, 'y', z) is isomorphic to x.y = z
2014-05-29 15:12:19	mon5ter	_habnabit, ok.
2014-05-29 15:12:21	dash	nanonyme: best is when you can just stop thinking entirely
2014-05-29 15:12:28	KirkMcDonald	dash: It's even better than some!
2014-05-29 15:12:28	TheRealJohnGalt	wait, list does hold type. toothrot you're right on the money, I really appreciate it :)
2014-05-29 15:12:31	_habnabit	aleray, use operator.methodcaller
2014-05-29 15:12:40	-->	faldridge (~faldridge@172.56.9.130) has joined #python
2014-05-29 15:12:42	kevlarman	aleray: ew, i'd migrate to django 1.7's thing over south asap
2014-05-29 15:12:57	dash	yeah i gotta get us on django 1.7 so we can have migrations
2014-05-29 15:13:01	aleray	does django 1.7 support migrations?
2014-05-29 15:13:03	nycto	dash,  How about Java?
2014-05-29 15:13:07	dash	nycto: how about it
2014-05-29 15:13:12	kevlarman	aleray: yup, and it's done more or less properly, unlike south
2014-05-29 15:13:12	nanonyme	kevlarman, I was told the Django 1.7 thing is basically a fork of South
2014-05-29 15:13:15	nycto	Any good for web?
2014-05-29 15:13:15	<--	agrajag42 (uid27336@gateway/web/irccloud.com/x-frkjhsybimwqvmcr) has quit (Quit: Connection closed for inactivity)
2014-05-29 15:13:19	kevlarman	nanonyme: it isn't
2014-05-29 15:13:22	dash	nycto: it's very popular
2014-05-29 15:13:31	exarkun	Okay.  Shell scripts beat tox again.
2014-05-29 15:13:32	<--	exarkun (~exarkun@book.wordeology.com) has left #python
2014-05-29 15:13:34	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined #python
2014-05-29 15:13:34	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 15:13:36	nycto	dash, I don't see why tho.
2014-05-29 15:13:38	nanonyme	kevlarman, I was iirc also told this on #django *shrug*
2014-05-29 15:13:46	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 15:13:48	dash	nycto: it's popular because so many people use it ;)
2014-05-29 15:13:53	kevlarman	nanonyme: there were rumors that it was going to be, my cto that hates all things django and south liked the 1.7 migrations
2014-05-29 15:13:53	aleray	kevlarman, nice!
2014-05-29 15:13:54	nanonyme	Not that I have any idea, I haven't ever read the code
2014-05-29 15:14:03	dash	kevlarman, nanonyme: i think it's basically south 2.0
2014-05-29 15:14:18	dowwie	I'm working with Decimal objects.  I'm getting -0.00 for two decimal place numbers rounded down with quantize.  How do I change the -0.00 to 0.00?
2014-05-29 15:14:32	mon5ter	_habnabit: how can i determine if my programm is still running? so i can break out of my infinite loops
2014-05-29 15:14:33	kevlarman	dash: i only care that it doesn't horribly fuck things up when there is more than 1 developer involved
2014-05-29 15:14:37	dash	kevlarman: heheh
2014-05-29 15:14:44	-->	wilornel (93c20985@gateway/web/freenode/ip.147.194.9.133) has joined #python
2014-05-29 15:14:50	_habnabit	mon5ter, in the general case i would say 'stop using threads'
2014-05-29 15:14:50	nycto	dash, Yea true. Another thing I wonder is, how is C/C++ a part of web backends?
2014-05-29 15:14:55	kevlarman	dash: we're basicly doing it manually still because that sucks less than south
2014-05-29 15:14:57	dash	nycto: yes
2014-05-29 15:15:02	mon5ter	_habnabit: :D
2014-05-29 15:15:03	dash	kevlarman: interesting
2014-05-29 15:15:09	nycto	dash, Yea why?
2014-05-29 15:15:13	dash	nycto: why what?
2014-05-29 15:15:19	dash	nycto: why do people write code in C or C++?
2014-05-29 15:15:26	nycto	dash, Yes for web back ends.
2014-05-29 15:15:29	nanonyme	TBH the worst thing about South and Django I've seen is that migrations ignore model changes completely
2014-05-29 15:15:38	dash	nycto: various combinations of ignorance, necessity, and bloody-mindedness
2014-05-29 15:15:44	toothrot	dowwie, why does it matter?
2014-05-29 15:15:44	dash	nycto: who knows why people do what they do
2014-05-29 15:15:48	dash	nycto: what do you want to do?
2014-05-29 15:15:49	mon5ter	_habnabit: how do i use sockets then? how can i receive data and go on with my program at the same time?
2014-05-29 15:15:52	-->	seaworthy (~seaworthy@unaffiliated/seaworthy) has joined #python
2014-05-29 15:15:53	aleray	_habnabit, thanks it works now but just to be sure this is what you meant: http://dpaste.com/1CHZDP0/#line-39
2014-05-29 15:15:58	_habnabit	mon5ter, have you seen twisted?
2014-05-29 15:16:00	TheRealJohnGalt	weird, that still didn't retain type :/
2014-05-29 15:16:03	mon5ter	_habnabit: no
2014-05-29 15:16:04	_habnabit	aleray, yes
2014-05-29 15:16:09	dowwie	toothrot:  it'll have to be down eventually upstream
2014-05-29 15:16:15	seaworthy	anyone use sublime text here?
2014-05-29 15:16:17	nanonyme	So you can easily have models change enough that if do multiple migrations at the same time, things break *badly*
2014-05-29 15:16:32	nycto	dash, I have done C and C++ before, not pro tho but never for web. Now I try to move from desktop to web development and I thought that Java or Python might be a choice.
2014-05-29 15:16:40	toothrot	TheRealJohnGalt, pastebin an example. it definitely works. did ytou delcare the column type as `timestamp` ?
2014-05-29 15:16:47	EvilDMP	nycto: I’m basic a couple of steps away from being a complete idiot and I was able to learn Django well enough to be useful
2014-05-29 15:16:55	dash	nycto: Sure.
2014-05-29 15:17:01	EvilDMP	and in the process, Python
2014-05-29 15:17:05	<--	Arctico (~Arctico@12.175.218.87.dynamic.jazztel.es) has quit (Ping timeout: 264 seconds)
2014-05-29 15:17:27	-->	Arctico (~Arctico@244.174.218.87.dynamic.jazztel.es) has joined #python
2014-05-29 15:17:29	<--	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2014-05-29 15:17:31	<--	someprimetime (~someprime@nextdoor.static.monkeybrains.net) has quit (Quit: someprimetime)
2014-05-29 15:17:35	-->	michaelis (~michael@5.57.241.137) has joined #python
2014-05-29 15:17:55	VooDooNOFX	seaworthy: I do.
2014-05-29 15:18:03	aleray	_habnabit, many thanks!
2014-05-29 15:18:13	seaworthy	VooDooNOFX: you know the directory for plugins on mac?
2014-05-29 15:18:15	nanonyme	kevlarman, but yeah, 1.7 isn't going to be out Right Now, is it?
2014-05-29 15:18:25	<--	nszceta (~nszceta@venezuela.pharm.pitt.edu) has quit
2014-05-29 15:18:29	nycto	dash, Would I be an idiot if I did Java?
2014-05-29 15:18:45	EvilDMP	nanonyme: a few release blockers
2014-05-29 15:18:50	<--	ustunozg_ (~ustunozgu@78.171.103.252) has quit (Remote host closed the connection)
2014-05-29 15:18:55	nanonyme	Oh
2014-05-29 15:19:11	nanonyme	Okay, so after it's out, probably a month or two of waiting until Grappelli picks up support
2014-05-29 15:19:12	VooDooNOFX	seaworthy: it's unimportant for most things as you can use a package manager to install new packages: https://sublime.wbond.net/installation
2014-05-29 15:19:18	nanonyme	Since something always breaks
2014-05-29 15:19:26	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 15:19:31	<--	softwaredoug (~quassel@216.30.179.168) has quit (Read error: Connection reset by peer)
2014-05-29 15:19:31	TheRealJohnGalt	toothrot: that was indeed my issue, thank you!
2014-05-29 15:19:33	<--	_fmm (~freemymin@pdpc/supporter/professional/freemymind) has quit (Ping timeout: 258 seconds)
2014-05-29 15:19:35	seaworthy	VooDooNOFX: dude i need plugins, i want to write pyhton plugins
2014-05-29 15:19:46	seaworthy	and kinda need to
2014-05-29 15:19:56	EvilDMP	nanonyme: I know, we should fix that wretched something, it would solve all probvlems forever
2014-05-29 15:19:59	nanonyme	seaworthy, you mean like straight.plugin?
2014-05-29 15:20:05	VooDooNOFX	seaworthy: Yes, you can install them without knowing where they are installed.
2014-05-29 15:20:13	<--	mijicd (~mijicd@cable-188-246-39-31.dynamic.kdsinter.net) has quit (Quit: leaving)
2014-05-29 15:20:28	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Remote host closed the connection)
2014-05-29 15:21:08	nanonyme	EvilDMP, well, I have been discussing Django deprecation policies on #django, it's not entirely user-friendly
2014-05-29 15:21:17	nanonyme	Or rather, communication on it isn't :)
2014-05-29 15:21:20	VooDooNOFX	seaworthy: But, I believe they are here: /Users/voodoonofx/Library/Application Support/Sublime Text 2/Packages
2014-05-29 15:21:23	<--	stephenmurby (~stephenmu@host109-145-38-247.range109-145.btcentralplus.com) has quit (Quit: stephenmurby)
2014-05-29 15:21:34	EvilDMP	nanonyme: in what way?
2014-05-29 15:21:57	-->	dlsa (~dlsa@2.83.231.179) has joined #python
2014-05-29 15:22:02	-->	jpadilla (~jpadilla@adsl-64-237-236-222.prtc.net) has joined #python
2014-05-29 15:22:24	toothrot	seaworthy, on windows there's a menu item `browse packages` in preferences menu
2014-05-29 15:22:46	-->	Elek101 (~textual@133.103-240-81.adsl-dyn.isp.belgacom.be) has joined #python
2014-05-29 15:22:46	<--	atolani (Arpit@nat/redhat/x-ocbygokaeucbdxid) has quit (Quit: Leaving)
2014-05-29 15:22:59	<--	chrismed (~chrismed@abjr44.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2014-05-29 15:23:02	<--	Elek101 (~textual@133.103-240-81.adsl-dyn.isp.belgacom.be) has quit (Client Quit)
2014-05-29 15:23:13	nanonyme	EvilDMP, well, Django announces something will be removed couple of releases prior so people have time to prepare. But typically no one actually reacts at that point. Django does *not* tell what was removed in the current release, you have to look a couple of releases back for that. So once things were not fixed well before-hand, you typically notice breakages only some time after taking 3rd-party libraries
2014-05-29 15:23:15	nanonyme	into use
2014-05-29 15:23:38	<--	dude-x (~dude-x@149.sub-70-208-82.myvzw.com) has quit (Ping timeout: 240 seconds)
2014-05-29 15:23:43	EvilDMP	nanonyme: seriously? Can you give me an example?
2014-05-29 15:23:47	EvilDMP	I will fix that
2014-05-29 15:24:03	EvilDMP	have you raised an issue on Trac?
2014-05-29 15:24:42	-->	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has joined #python
2014-05-29 15:24:49	-->	someprimetime (~someprime@162.245.21.10) has joined #python
2014-05-29 15:25:29	<--	eka (~eka@190.237.10.159) has quit (Ping timeout: 264 seconds)
2014-05-29 15:25:53	seaworthy	VooDooNOFX: thansk let me check
2014-05-29 15:26:02	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 15:27:02	-->	_fmm (~freemymin@pdpc/supporter/professional/freemymind) has joined #python
2014-05-29 15:27:18	nanonyme	EvilDMP, the process of finding what's removed: open https://docs.djangoproject.com/en/dev/releases/1.6/, click backwards incompatible changes for https://docs.djangoproject.com/en/dev/releases/1.6/#backwards-incompatible-changes-in-1-6, click deprecation plan for https://docs.djangoproject.com/en/dev/internals/deprecation/, start scrolling for 1.6 for what's removed, follow link to
2014-05-29 15:27:20	nanonyme	https://docs.djangoproject.com/en/dev/releases/1.4/#deprecated-features-1-4 to find out what the heck the removed features actually were about
2014-05-29 15:27:53	nanonyme	I understood that's how it's designed to work
2014-05-29 15:27:59	-->	FreezingCold (~FreezingC@135.0.41.14) has joined #python
2014-05-29 15:28:02	-->	eka (~eka@190.237.10.159) has joined #python
2014-05-29 15:28:24	<--	michaelis (~michael@5.57.241.137) has quit (Quit: Leaving)
2014-05-29 15:28:27	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-29 15:28:31	EvilDMP	nanonyme: ok, give me a moment to understand what you’re saying
2014-05-29 15:28:59	<--	yiati (~yiati@74.203.188.66) has quit
2014-05-29 15:29:18	<--	mhi^ (~mhi@unaffiliated/mhi/x-9993184) has quit (Quit: Lost terminal)
2014-05-29 15:29:35	seaworthy	VooDooNOFX: i dont have that folder
2014-05-29 15:29:36	-->	_Atom_ (~jawat@172.56.8.84) has joined #python
2014-05-29 15:29:57	seaworthy	or its hidden or some shit
2014-05-29 15:29:59	nanonyme	Ie if you want to know what's removed in 1.6, you need to go through four pages to finally end up in 1.4 release notes which tell you what was removed in 1.6
2014-05-29 15:30:17	<--	bipolar (~bipolar@offsite.guru) has quit (Ping timeout: 264 seconds)
2014-05-29 15:30:31	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 15:30:38	dowwie	I'm working with Decimal objects. I'm getting -0.00 for two decimal place numbers rounded down with quantize. How do I change the -0.00 to 0.00?
2014-05-29 15:30:54	<--	sepero (~none@7.sub-75-203-116.myvzw.com) has quit (Disconnected by services)
2014-05-29 15:31:09	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 276 seconds)
2014-05-29 15:31:10	-->	sepero (~none@7.sub-75-203-116.myvzw.com) has joined #python
2014-05-29 15:31:15	-->	\13k (~linhareta@pdpc/supporter/base/-13k) has joined #python
2014-05-29 15:31:42	-->	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has joined #python
2014-05-29 15:32:43	-->	someprimetime_ (~someprime@162.245.21.10) has joined #python
2014-05-29 15:32:54	EvilDMP	nanonyme: https://docs.djangoproject.com/en/dev/releases/1.6/#backwards-incompatible-changes-in-1-6 should tell what has changed or been removed in 1.6 - are you saying that you have to go to (say) the 1.4 docs to find out in more detail what they were about?
2014-05-29 15:33:13	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 15:33:55	-->	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has joined #python
2014-05-29 15:33:59	<--	LCyrin (~lynn@50-0-18-180.dsl.static.sonic.net) has quit (Quit: Ex-Chat)
2014-05-29 15:34:04	<--	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has quit (Max SendQ exceeded)
2014-05-29 15:34:23	-->	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has joined #python
2014-05-29 15:34:23	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Read error: Connection reset by peer)
2014-05-29 15:34:43	-->	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has joined #python
2014-05-29 15:35:03	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Ping timeout: 276 seconds)
2014-05-29 15:35:08	<--	OverNord (~brn@host-091-097-122-121.ewe-ip-backbone.de) has quit (Quit: OverNord)
2014-05-29 15:35:16	<--	amargherio (~MarioEIU@69.197.156.5) has quit (Remote host closed the connection)
2014-05-29 15:35:42	<--	someprimetime (~someprime@162.245.21.10) has quit (Ping timeout: 276 seconds)
2014-05-29 15:35:42	--	someprimetime_ is now known as someprimetime
2014-05-29 15:35:49	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-29 15:35:57	<--	ZombieFeynman (~ZombieFey@wsip-70-166-119-84.ph.ph.cox.net) has quit (Client Quit)
2014-05-29 15:36:53	<--	aberrant (~aberrant@unaffiliated/aberrant) has quit (Ping timeout: 265 seconds)
2014-05-29 15:36:53	<--	mrkz (~mark@187.244.15.18) has quit (Ping timeout: 264 seconds)
2014-05-29 15:36:57	<--	TheFuzzball (~TheFuzzba@cpc4-ward10-2-0-cust737.10-2.cable.virginm.net) has quit (Quit: Leaving...)
2014-05-29 15:37:18	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined #python
2014-05-29 15:37:22	nanonyme	EvilDMP, iirc back couple of months ago when I upgraded Django that list did not contain all dropped items. Is it supposed to?
2014-05-29 15:37:32	-->	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has joined #python
2014-05-29 15:37:32	-->	mrkz (~mark@187.244.15.18) has joined #python
2014-05-29 15:37:38	nanonyme	I don't remember anymore which ones it was missing
2014-05-29 15:37:46	EvilDMP	nanonyme: it certainly should, yes
2014-05-29 15:38:03	-->	semigloss (~semigloss@d192-24-132-200.try.wideopenwest.com) has joined #python
2014-05-29 15:38:51	<--	koell (~tauron@77.119.130.173.wireless.dyn.drei.com) has quit (Read error: Connection reset by peer)
2014-05-29 15:39:00	-->	Er[A]gon^ (era@unaffiliated/eragon) has joined #python
2014-05-29 15:39:18	<--	Salvakiya (~Salvakiya@100.32.234.17) has quit (Ping timeout: 265 seconds)
2014-05-29 15:39:31	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-29 15:40:03	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 15:40:25	<--	pld (~pld@unaffiliated/pld) has quit (Ping timeout: 252 seconds)
2014-05-29 15:40:37	<--	Er[A]gon^ (era@unaffiliated/eragon) has left #python ("Leaving")
2014-05-29 15:40:51	EvilDMP	nanonyme: it’s possible something slipped through the net: https://github.com/django/django/commits/master/docs/releases/1.6.txt
2014-05-29 15:40:54	nanonyme	EvilDMP, ah, yeah, I think it might have been the removal of markup. It's clearly mentioned https://docs.djangoproject.com/en/dev/internals/deprecation/#deprecation-removed-in-1-6 but not in https://docs.djangoproject.com/en/dev/releases/1.6/#backwards-incompatible-changes-in-1-6
2014-05-29 15:41:03	<--	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has quit (Quit: aljohri)
2014-05-29 15:41:41	<--	boris317_ (~boris317@unaffiliated/boris317) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 15:41:42	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Client Quit)
2014-05-29 15:41:47	<--	niklasb (~codeslay0@p5B313C6E.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2014-05-29 15:41:50	<--	thedodd (~Anthony@rrcs-67-78-97-126.sw.biz.rr.com) has quit (Quit: Leaving)
2014-05-29 15:42:29	nanonyme	It's one of those items that followed accelerated deprecation
2014-05-29 15:42:34	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 15:43:18	<--	Kaedenn1 (~ZettaAdmi@unaffiliated/kaedenn) has left #python
2014-05-29 15:43:33	EvilDMP	nanonyme: I think you’re right
2014-05-29 15:43:38	EvilDMP	I will check
2014-05-29 15:43:47	<--	Banditoo (~xxx@67-0-22-44.albq.qwest.net) has quit (Quit: Leaving)
2014-05-29 15:43:57	-->	jvv (~jvv@212.91.29.34) has joined #python
2014-05-29 15:44:05	<--	_Atom_ (~jawat@172.56.8.84) has quit (Ping timeout: 252 seconds)
2014-05-29 15:44:33	nanonyme	I was really confused when all Markdown-based content for my Django pages just broke after upgrading to 1.6 when there wasn't anything scary-sounding in release notes back before :)
2014-05-29 15:44:34	<--	carebeer (~snxt@gateway/tor-sasl/carebeer) has quit (Ping timeout: 272 seconds)
2014-05-29 15:45:27	<--	flubby_nanabo (~flubby_na@unaffiliated/tonnynerd) has quit (Ping timeout: 252 seconds)
2014-05-29 15:45:54	<--	DiabloHorn (~DiabloHor@unaffiliated/diablohorn) has quit (Quit: Leaving)
2014-05-29 15:46:17	<--	mrkz (~mark@187.244.15.18) has quit (Ping timeout: 252 seconds)
2014-05-29 15:46:23	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-29 15:46:33	<--	dj_pi (~dj@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-29 15:46:44	<--	bwreilly (~bwreilly@66.193.98.226) has quit (Ping timeout: 255 seconds)
2014-05-29 15:47:16	<--	NixMD (~irssi@unaffiliated/timmyt) has quit (Quit: No Ping reply in 180 seconds.)
2014-05-29 15:47:30	<--	ivanf (~ivan@unaffiliated/kferdous) has quit
2014-05-29 15:47:38	<--	Deithrian (~Deithrian@unaffiliated/deithrian) has quit (Ping timeout: 255 seconds)
2014-05-29 15:47:49	-->	Timmy (~irssi@unaffiliated/timmyt) has joined #python
2014-05-29 15:48:04	seaworthy	VooDooNOFX: k i got it thanks
2014-05-29 15:48:53	<--	throwinghammers (~hcs@unaffiliated/throwinghammers) has quit (Ping timeout: 264 seconds)
2014-05-29 15:49:50	-->	R0b0t1 (~dev@unaffiliated/r0b0t1) has joined #python
2014-05-29 15:50:15	-->	Fusxfaranto (~quassel@c-69-181-236-33.hsd1.ca.comcast.net) has joined #python
2014-05-29 15:50:42	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 15:50:52	nanonyme	EvilDMP, fwiw in case you're working on those things, would also be nice if https://docs.djangoproject.com/en/dev/releases/1.6/#backwards-incompatible-changes-in-1-6 deprecation plan link pointed to the actual release anchor and not the top of the page
2014-05-29 15:51:00	-->	amstan (~alex@aichallenge/admin/amstan) has joined #python
2014-05-29 15:51:04	<--	kermit (unknown@pdpc/supporter/bronze/kermit) has quit (Quit: Leaving.)
2014-05-29 15:51:09	<--	kaos01_ (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Quit: Lost terminal)
2014-05-29 15:51:20	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 15:51:32	nanonyme	But guess that might be require some more effort :)
2014-05-29 15:51:41	<--	clearcut (~reuf@188.127.124.69) has quit (Quit: Leaving)
2014-05-29 15:51:46	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 15:51:52	-->	kermit (unknown@pdpc/supporter/bronze/kermit) has joined #python
2014-05-29 15:52:42	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 15:53:35	<--	eka (~eka@190.237.10.159) has quit (Ping timeout: 260 seconds)
2014-05-29 15:53:41	nanonyme	EvilDMP, oh, yeah, that pre-1.4 manage.py not working anymore with 1.6 was another of the changes I bumped to that's not in release notes but only in deprecation list
2014-05-29 15:53:53	<--	bollullera (~ana@95.63.152.106) has left #python
2014-05-29 15:54:03	-->	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-29 15:54:07	nanonyme	I had been keeping the same from probably 1.2 or whatever :)
2014-05-29 15:54:11	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-29 15:54:38	EvilDMP	nanonyme: OK, the rule is: if it’s in the deprecation plan, then it doesn’t show up in backwards-incompatible changes
2014-05-29 15:55:19	-->	eka (~eka@190.237.10.159) has joined #python
2014-05-29 15:55:22	nanonyme	Yeah, that's how I understood
2014-05-29 15:55:24	-->	samfalkner (~samfalkne@inet-aumc01-o.oracle.com) has joined #python
2014-05-29 15:55:35	EvilDMP	nanonyme: timograham in #django-dev knows much more about this than I do
2014-05-29 15:55:49	<--	solidus-river (~solidus-r@207.170.224.131) has quit (Ping timeout: 252 seconds)
2014-05-29 15:56:05	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 252 seconds)
2014-05-29 15:56:15	<--	pabardina (~pabardina@128-79-160-198.hfc.dyn.abo.bbox.fr) has quit (Quit: Lingo - http://lingoirc.com)
2014-05-29 15:56:23	-->	gopar (~gopar@c-76-102-222-91.hsd1.ca.comcast.net) has joined #python
2014-05-29 15:57:22	<--	murk_ (~nnscript@D97A9253.cm-3-3c.dynamic.ziggo.nl) has quit (Quit: ( www.nnscript.com :: NoNameScript 4.22 :: www.esnation.com ))
2014-05-29 15:58:02	-->	lupfantomo (~lupfantom@137.119.162.151) has joined #python
2014-05-29 15:58:11	-->	naught101 (~naught101@129.94.8.137) has joined #python
2014-05-29 15:58:29	<--	EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Ping timeout: 264 seconds)
2014-05-29 15:58:31	<--	yorick (~yorick@oftn/member/yorick) has quit (Remote host closed the connection)
2014-05-29 15:58:58	nanonyme	EvilDMP, oh. Now I get it. There's actually two different links to deprecation plan on https://docs.djangoproject.com/en/dev/releases/1.6/#backwards-incompatible-changes-in-1-6; one of them has anchor to 1.6, one does not (the one at the beginning of the page does)
2014-05-29 15:59:26	<--	davidals (~davidals@179.180.21.178) has quit (Quit: Leaving)
2014-05-29 15:59:31	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 15:59:31	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-29 16:00:15	<--	aquinas (~aquinas_@unaffiliated/aquinas) has quit (Read error: Connection reset by peer)
2014-05-29 16:00:29	EvilDMP	nanonyme: yes, Tim is on to it
2014-05-29 16:00:43	<--	jpadilla (~jpadilla@adsl-64-237-236-222.prtc.net) has quit (Quit: Linkinus - http://linkinus.com)
2014-05-29 16:01:08	-->	aquinas (~aquinas_@unaffiliated/aquinas) has joined #python
2014-05-29 16:01:16	-->	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has joined #python
2014-05-29 16:01:34	nanonyme	EvilDMP, fwiw it would probably be easier to spot the deprecation plan if the link was with "dropped some features" so that it's on a different colour
2014-05-29 16:01:38	<--	faldridge (~faldridge@172.56.9.130) has quit (Remote host closed the connection)
2014-05-29 16:01:41	<--	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2014-05-29 16:01:50	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-29 16:02:05	<--	LeMike (~Thunderbi@ipservice-092-209-110-012.pools.arcor-ip.net) has quit (Ping timeout: 264 seconds)
2014-05-29 16:03:03	<--	jjmalina (~jjmalina@static-71-183-236-90.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2014-05-29 16:03:04	<--	JerryT (~jerryt@wsip-70-165-106-163.om.om.cox.net) has quit (Read error: Connection reset by peer)
2014-05-29 16:04:06	-->	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has joined #python
2014-05-29 16:04:25	-->	meet_praveen (~Thunderbi@www.gscglass.com) has joined #python
2014-05-29 16:04:28	-->	mrkz (~mark@187.244.15.18) has joined #python
2014-05-29 16:05:09	-->	bwreilly (~bwreilly@19.sub-70-210-135.myvzw.com) has joined #python
2014-05-29 16:06:07	<--	fbsd (~hjkl@a89-155-251-237.cpe.netcabo.pt) has quit (Quit: leaving)
2014-05-29 16:06:20	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-29 16:07:01	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Quit: spvensko)
2014-05-29 16:07:19	-->	darkbasic_ (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 16:07:22	<--	snyp (~snyp@223.29.204.2) has quit (Quit: Leaving)
2014-05-29 16:07:55	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-29 16:08:35	<--	mrkz (~mark@187.244.15.18) has quit (Ping timeout: 240 seconds)
2014-05-29 16:08:47	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Ping timeout: 265 seconds)
2014-05-29 16:08:51	<--	ovnicraft (~ovnicraft@181.211.97.242) has quit (Ping timeout: 276 seconds)
2014-05-29 16:08:53	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-29 16:08:59	<--	Timmy (~irssi@unaffiliated/timmyt) has quit (Ping timeout: 260 seconds)
2014-05-29 16:09:16	<--	tom94 (~tom@152.78.171.10) has quit (Quit: Konversation terminated!)
2014-05-29 16:10:13	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 16:10:19	<--	sepero (~none@7.sub-75-203-116.myvzw.com) has quit (Disconnected by services)
2014-05-29 16:10:30	-->	darkf (~darkf___@unaffiliated/darkf) has joined #python
2014-05-29 16:10:35	-->	swhdopbpgipeoevk (~none@7.sub-75-203-116.myvzw.com) has joined #python
2014-05-29 16:10:47	--	swhdopbpgipeoevk is now known as qeteipdichqiiltg
2014-05-29 16:10:50	-->	Samb2 (~Sammysama@2.121.203.77) has joined #python
2014-05-29 16:10:51	--	qeteipdichqiiltg is now known as sepero
2014-05-29 16:10:59	<--	elon (~Thunderbi@D97B1021.cm-3-4a.dynamic.ziggo.nl) has quit (Ping timeout: 240 seconds)
2014-05-29 16:11:20	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 16:11:32	<--	darkbasic_ (~quassel@niko.linuxsystems.it) has quit (Ping timeout: 245 seconds)
2014-05-29 16:11:49	-->	mrkz (~mark@187.244.15.18) has joined #python
2014-05-29 16:11:56	<--	Guest24966 (~max@md12036d0.tmodns.net) has quit (Ping timeout: 255 seconds)
2014-05-29 16:12:19	-->	cococo (~coffeecod@184.75.221.162) has joined #python
2014-05-29 16:12:21	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-29 16:12:46	<--	phuh (~phuh@cp66-203-194-42.cp.telus.net) has quit (Remote host closed the connection)
2014-05-29 16:12:54	-->	phuh (~phuh@cp66-203-194-42.cp.telus.net) has joined #python
2014-05-29 16:13:12	<--	FortySix2 (~FortySix2@h204-246-2-62.mdsnwi.tisp.static.tds.net) has quit (Remote host closed the connection)
2014-05-29 16:13:45	cococo	How can one detect whether a word is euphonic or not in Python?
2014-05-29 16:14:37	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 16:14:54	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-29 16:15:23	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 240 seconds)
2014-05-29 16:15:28	-->	Guest24966 (~max@md12036d0.tmodns.net) has joined #python
2014-05-29 16:15:43	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-29 16:15:53	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Ping timeout: 252 seconds)
2014-05-29 16:15:55	dash	cococo: write an irc bot that joins a random channel and asks people
2014-05-29 16:16:18	kadoban	cococo: Have to find or come up with some algorithm for it I'm sure, at least I don't know of any libraries for that kind of thing (although there may be). It looks like there are some academic papers on the subject, have you looked there?
2014-05-29 16:16:37	<--	umquant (~umquant@wsip-98-174-160-33.ok.ok.cox.net) has quit (Ping timeout: 252 seconds)
2014-05-29 16:16:38	<--	bwreilly (~bwreilly@19.sub-70-210-135.myvzw.com) has quit (Ping timeout: 240 seconds)
2014-05-29 16:16:54	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-29 16:17:09	-->	averagecase (~anon@dslb-094-221-216-065.pools.arcor-ip.net) has joined #python
2014-05-29 16:17:20	cob	nowai! python has batteries included even for poetry!
2014-05-29 16:17:22	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-29 16:17:32	cococo	cob: that's the spirit
2014-05-29 16:17:33	-->	crapp (~quassel@unaffiliated/saedelaere) has joined #python
2014-05-29 16:17:53	<--	zlalanne (~zlalanne@nat/ti/x-inskuqrlybtodtfu) has quit (Quit: Leaving)
2014-05-29 16:17:56	cococo	I was hoping there would be a library made. Guess I'm doing this the hard way.
2014-05-29 16:18:15	<--	cesar_bo (uid17588@gateway/web/irccloud.com/x-pkfaakrjqdqxczgg) has quit (Quit: Connection closed for inactivity)
2014-05-29 16:18:19	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Ping timeout: 240 seconds)
2014-05-29 16:18:36	<--	QBob (~qbob@amarok/developer/qbob) has quit (Quit: Bye)
2014-05-29 16:18:43	<--	stal[GL] (sss@unaffiliated/stal) has quit (Ping timeout: 240 seconds)
2014-05-29 16:18:46	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Excess Flood)
2014-05-29 16:19:12	-->	jdu (~jdu@cpc6-stav18-2-0-cust909.17-3.cable.virginm.net) has joined #python
2014-05-29 16:19:25	-->	aretecode (~aretecode@173.192.170.114-static.reverse.softlayer.com) has joined #python
2014-05-29 16:19:31	<--	motsu|away (motsu35@2604:180:1::ec72:b654) has quit (Ping timeout: 240 seconds)
2014-05-29 16:19:54	-->	eeriegeek (~eeriegeek@c-98-244-112-229.hsd1.va.comcast.net) has joined #python
2014-05-29 16:19:55	-->	stal (sss@unaffiliated/stal) has joined #python
2014-05-29 16:20:01	<--	SteveG (~SteveG@pdpc/supporter/21for7/steveg) has quit (Ping timeout: 252 seconds)
2014-05-29 16:20:13	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 16:20:19	<--	ultrashag (ultrashag@ipv6.firrre.com) has quit (Ping timeout: 240 seconds)
2014-05-29 16:20:34	--	stal is now known as stal[GL]
2014-05-29 16:20:37	cob	cococo: some universities have heavy linguistics labs that might do research into language aesthetics, who knows... need to dig into publications
2014-05-29 16:20:46	-->	Salvakiya (~Salvakiya@pool-100-32-234-17.lsanca.fios.verizon.net) has joined #python
2014-05-29 16:20:55	-->	EvergreenTree (~quassel@unaffiliated/evergreentree) has joined #python
2014-05-29 16:21:14	 *	cococo nods
2014-05-29 16:21:16	<--	firemark (~tiramo@cui103.internetdsl.tpnet.pl) has quit (Remote host closed the connection)
2014-05-29 16:21:23	<--	saedelaere (~quassel@unaffiliated/saedelaere) has quit (Ping timeout: 252 seconds)
2014-05-29 16:21:25	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 16:21:36	<--	jandrusk (~jra@cpe-24-29-234-80.neo.res.rr.com) has quit (Remote host closed the connection)
2014-05-29 16:21:45	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined #python
2014-05-29 16:22:05	-->	daidoji (~daidoji@c-50-168-11-190.hsd1.ca.comcast.net) has joined #python
2014-05-29 16:22:15	-->	ultrashag (ultrashag@ipv6.firrre.com) has joined #python
2014-05-29 16:22:25	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-29 16:22:59	<--	jdu (~jdu@cpc6-stav18-2-0-cust909.17-3.cable.virginm.net) has quit (Quit: leaving)
2014-05-29 16:23:04	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-29 16:23:08	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Konversation terminated!)
2014-05-29 16:23:38	<--	smccully (~smccully@192.65.45.20) has quit (Ping timeout: 255 seconds)
2014-05-29 16:23:45	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-29 16:24:06	-->	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined #python
2014-05-29 16:24:41	<--	dennisw (~dennis@nat-168-7-212-118.rice.edu) has quit (Ping timeout: 252 seconds)
2014-05-29 16:25:25	<--	ncthom91 (~ncthom91@mpk-nat-6.thefacebook.com) has quit (Ping timeout: 252 seconds)
2014-05-29 16:25:30	-->	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has joined #python
2014-05-29 16:25:38	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 240 seconds)
2014-05-29 16:25:53	-->	notdaniel (~notdaniel@99-110-132-175.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-29 16:25:55	--	Rev|SleepingFox is now known as TheReverend403
2014-05-29 16:26:33	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-29 16:26:42	-->	roymiloh (~roymiloh@37.142.233.109) has joined #python
2014-05-29 16:26:53	<--	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-29 16:27:26	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-29 16:27:55	--	ed_spec is now known as spec_ed
2014-05-29 16:27:57	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit
2014-05-29 16:28:07	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-29 16:28:47	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-29 16:28:50	<--	Wr4i7h (~abc@207.125.249.5.rev.vodafone.pt) has quit
2014-05-29 16:28:51	notdaniel	hey guys. using rethinkdb with python, so not much in the ORM way yet... ive looked around and apps using it seem to just create a ton of helper functions to use rethink (find_user_by_email(), etc). i was trying to write some basic objects to interact with rethink and wondering if this looks like a step in the right direction or, what am i thinking? haha https://gist.github.com/notdaniel/ea5d758482e5aeba0202
2014-05-29 16:29:13	notdaniel	not rethink-specific, but in terms of how someone might model objects for something like this
2014-05-29 16:29:16	<--	averagecase (~anon@dslb-094-221-216-065.pools.arcor-ip.net) has quit (Remote host closed the connection)
2014-05-29 16:29:21	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Client Quit)
2014-05-29 16:29:42	-->	bwreilly (~bwreilly@80.sub-70-199-134.myvzw.com) has joined #python
2014-05-29 16:29:43	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-29 16:30:06	-->	BC517 (~j@gateway/tor-sasl/lattes) has joined #python
2014-05-29 16:30:12	-->	unknown007 (~crew@c-73-180-230-232.hsd1.va.comcast.net) has joined #python
2014-05-29 16:30:18	dash	notdaniel: i would not be excited to use such an interface
2014-05-29 16:30:22	dash	notdaniel: what are you building?
2014-05-29 16:30:47	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-29 16:31:29	<--	roymiloh (~roymiloh@37.142.233.109) has quit (Ping timeout: 264 seconds)
2014-05-29 16:32:15	<--	rvchangue (~rvchangue@unaffiliated/rvchangue) has quit (Ping timeout: 276 seconds)
2014-05-29 16:32:38	<--	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has quit (Quit: Leaving.)
2014-05-29 16:32:54	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 16:33:08	--	Sakurazaki is now known as Sakurazaki|off
2014-05-29 16:33:19	<--	spvensko (~spvensko@unaffiliated/spvensko) has quit (Client Quit)
2014-05-29 16:33:20	-->	rvchangue (~rvchangue@unaffiliated/rvchangue) has joined #python
2014-05-29 16:33:30	notdaniel	web app for editing company. was hoping to then do something like Video.create(), User.find(), etc. and then specific methods for different types of items. better to just have a bunch of helper functions?
2014-05-29 16:33:39	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 16:33:44	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-29 16:33:46	dash	probably
2014-05-29 16:33:50	dash	what's rethinkdb good at?
2014-05-29 16:33:50	notdaniel	this is rethinkdb so rql query language and it can get redundant and verbose if i dont reuse it somehow
2014-05-29 16:34:33	notdaniel	nosql that's all json documents but still with things like table joins
2014-05-29 16:34:51	-->	ari-_-e (~ari-_-e@unaffiliated/atrigent) has joined #python
2014-05-29 16:34:57	dash	mmh
2014-05-29 16:35:04	-->	ncthom91 (~ncthom91@mobile-166-137-185-073.mycingular.net) has joined #python
2014-05-29 16:35:38	<--	EvilDMP (~superdmp@django/committer/EvilDMP) has quit (Quit: EvilDMP)
2014-05-29 16:35:39	dash	i haven't heard much about it, curious how it's superior to something like postgres
2014-05-29 16:35:46	<--	crapp (~quassel@unaffiliated/saedelaere) has quit (Remote host closed the connection)
2014-05-29 16:35:52	dash	anyway I would want to avoid any kind of API that requires subclassing to use
2014-05-29 16:36:22	notdaniel	you'd use it instead of something like mongo
2014-05-29 16:36:27	notdaniel	not sql
2014-05-29 16:36:32	<--	ncthom91 (~ncthom91@mobile-166-137-185-073.mycingular.net) has quit (Read error: Connection reset by peer)
2014-05-29 16:36:45	dash	well, i'd use postgres instead of mongo
2014-05-29 16:36:53	dash	so that's what i was wondering
2014-05-29 16:37:05	-->	ncthom91 (~ncthom91@mobile-166-137-185-073.mycingular.net) has joined #python
2014-05-29 16:37:12	<--	ncthom91 (~ncthom91@mobile-166-137-185-073.mycingular.net) has quit (Max SendQ exceeded)
2014-05-29 16:37:20	notdaniel	haha fair enough. for me this is more just like python-wise i dont know best practices like what you mentioned for instance, that subclassing isnt ideal
2014-05-29 16:37:47	-->	ncthom91 (~ncthom91@mobile-166-137-176-176.mycingular.net) has joined #python
2014-05-29 16:37:58	dash	(since postgres handles json so well these days)
2014-05-29 16:38:15	notdaniel	with ORM like peewee and sqlalchemy you declare the models as subclasses with different fields and such
2014-05-29 16:38:33	dash	yes
2014-05-29 16:38:43	dash	lots of old APIs work that way
2014-05-29 16:38:53	dash	unfortunately =/
2014-05-29 16:39:45	notdaniel	how would you work with it now, if you wanted to work with say sql tables Users and Videos, with different fields, just raw sql commands? handful of helper functions?
2014-05-29 16:39:47	dowwie	and you can save the JSON serialization step in your app with postgresql
2014-05-29 16:40:37	dash	notdaniel: i'd probably use sqlalchemy's query builder
2014-05-29 16:40:38	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 16:40:45	dash	(as opposed to its orm bits)
2014-05-29 16:41:45	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 16:42:06	<--	tdy (~tim@unaffiliated/tdy) has quit (Quit: WeeChat 0.4.3)
2014-05-29 16:42:35	<--	ncthom91 (~ncthom91@mobile-166-137-176-176.mycingular.net) has quit (Ping timeout: 260 seconds)
2014-05-29 16:42:36	-->	tdy (~tim@unaffiliated/tdy) has joined #python
2014-05-29 16:42:39	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 252 seconds)
2014-05-29 16:43:07	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Quit: No Ping reply in 180 seconds.)
2014-05-29 16:43:08	notdaniel	(looking at it) sqlalchemy seemed to have so many different ways to use it and the documentation was confusing to someone beginning
2014-05-29 16:43:16	notdaniel	and yeah everyone recommends a different approach to using sqlalchemy
2014-05-29 16:43:33	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 16:43:52	-->	SevenWolf (~SevenWolf@unaffiliated/sevenwolf) has joined #python
2014-05-29 16:43:53	dash	shrug
2014-05-29 16:44:00	dash	we use django's orm and mysql at work :)
2014-05-29 16:44:13	<--	ggp (~guilherme@189.79.252.145) has quit (Remote host closed the connection)
2014-05-29 16:44:14	notdaniel	dash: so you'd just interact with the db with functions that were doing direct sql queries? not orm
2014-05-29 16:44:22	dash	notdaniel: probably
2014-05-29 16:44:27	<--	someprimetime (~someprime@162.245.21.10) has quit (Quit: someprimetime)
2014-05-29 16:44:57	dash	(fortunately i get paid whether i'm writing code that adds useful features, or write code to test and debug problems we have with the ORM)
2014-05-29 16:45:20	<--	unknown007 (~crew@c-73-180-230-232.hsd1.va.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-29 16:45:34	-->	cardboard (~cardboard@DHCP-159-220.caltech.edu) has joined #python
2014-05-29 16:45:44	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 16:45:46	notdaniel	i'm in the position of doing this for myself so i can waste time overthinking things like this and nobody will get mad at me :/ hah
2014-05-29 16:45:54	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 276 seconds)
2014-05-29 16:45:59	--	whg is now known as zz_whg
2014-05-29 16:46:08	dash	notdaniel: yep, then it gets hard
2014-05-29 16:46:29	<--	mkster_ (~Mkster@i577B7A29.versanet.de) has quit (Ping timeout: 264 seconds)
2014-05-29 16:46:41	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-29 16:46:59	-->	ifim (~user@187.216.89.242) has joined #python
2014-05-29 16:47:10	dash	last time i wrote web code that wasn't for work it looked like this: https://github.com/iffy/frack/tree/master/frack
2014-05-29 16:47:20	<--	deSilva (~deSilva@c83-254-213-203.bredband.comhem.se) has quit
2014-05-29 16:47:28	-->	ytrezq (~0x0EDFADE@2a02-8422-1191-6e00-56e6-fcff-fedb-2bba.rev.sfr.net) has joined #python
2014-05-29 16:47:35	dash	oh, wrong url
2014-05-29 16:47:54	dash	http://bazaar.launchpad.net/~washort/frack/trunk/files/head:/frack/
2014-05-29 16:48:25	<--	quetzakubica (~quetzacot@89-66-203-102.dynamic.chello.pl) has quit (Quit: Leaving.)
2014-05-29 16:48:36	-->	someprimetime (~someprime@162.245.21.10) has joined #python
2014-05-29 16:48:58	-->	Mkster (~Mkster@i577B7A29.versanet.de) has joined #python
2014-05-29 16:49:22	ytrezq	Hello, I want to replace "choeur" by "ch½ur" except if there's ".JPG" after the word on the same line...
2014-05-29 16:49:33	ytrezq	(regex)
2014-05-29 16:50:34	cwillu_at_work	ytrezq, what character did you think you typed there?
2014-05-29 16:50:38	<--	drvanon (~drvanon@86.85.138.215) has quit (Ping timeout: 240 seconds)
2014-05-29 16:50:42	cwillu_at_work	"1/2"?
2014-05-29 16:50:49	<--	ixti (~ixti@77.226.194.200) has quit (Ping timeout: 252 seconds)
2014-05-29 16:50:53	<--	gelignite (~gelignite@i528C327D.versanet.de) has quit (Quit: http://bit.ly/nkczDT)
2014-05-29 16:50:59	-->	johnkevinmbasco (~johnkevin@203.215.120.216) has joined #python
2014-05-29 16:51:17	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Read error: Connection timed out)
2014-05-29 16:51:42	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 16:51:51	ytrezq	½
2014-05-29 16:52:03	ytrezq	œ
2014-05-29 16:52:04	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 16:52:05	cwillu_at_work	that's the same character, but what character do you think that is?
2014-05-29 16:52:20	cwillu_at_work	okay, so, do you know what encoding your filesystem is using?
2014-05-29 16:52:32	cwillu_at_work	(or rather, what encoding everything using your filesystem is expecting?)
2014-05-29 16:52:44	ytrezq	euehmm French : O eu accolé
2014-05-29 16:52:46	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Remote host closed the connection)
2014-05-29 16:52:59	ytrezq	UTF-8
2014-05-29 16:53:11	cwillu_at_work	if you're dealing with filenames in terms of bytes, you need to be careful about this, as both ½ and œ are multiple bytes
2014-05-29 16:53:27	cwillu_at_work	don't really need regex for this though
2014-05-29 16:53:38	<--	Mkster (~Mkster@i577B7A29.versanet.de) has quit (Ping timeout: 240 seconds)
2014-05-29 16:54:06	ytrezq	cwillu_at_work: I'm doing automated edit to some articles on a website... and the site use UTF-8
2014-05-29 16:54:15	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Ping timeout: 260 seconds)
2014-05-29 16:54:28	cwillu_at_work	oh, so these are url's then?
2014-05-29 16:54:30	ytrezq	I use an xml dump of the site for finding spell errors
2014-05-29 16:54:43	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 16:54:57	ytrezq	(fixing spell in articles)
2014-05-29 16:54:58	cwillu_at_work	you'll probably want to url-encode it instead then
2014-05-29 16:55:11	ytrezq	cwillu_at_work: There's no url at all
2014-05-29 16:55:18	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 16:55:19	-->	kosh (~kosh@aesaeion.com) has joined #python
2014-05-29 16:55:42	-->	Mkster (~Mkster@i577B7A29.versanet.de) has joined #python
2014-05-29 16:56:00	ytrezq	There's file link to the website... : [[Fichier: ACHEY Haute Saône 02 03 2014 choeur église St Martin.JPG]]
2014-05-29 16:56:24	-->	arescorpio (~arescorpi@105-24-245-190.fibertel.com.ar) has joined #python
2014-05-29 16:56:29	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 255 seconds)
2014-05-29 16:56:31	cwillu_at_work	sounds like you should exclude things in [[...]] instead maybe?
2014-05-29 16:56:37	ytrezq	If you edit something like this, the generated url form the parser will be broken...
2014-05-29 16:57:17	ytrezq	cwillu_at_work: no because of descriptions : [[File:Tombeau de la reine Mathilde.jpg|thumb|Tombeau de la reine Mathilde dans le choeur de l'abbatiale]]
2014-05-29 16:57:37	<--	QBob (~qbob@amarok/developer/qbob) has quit (Quit: Bye)
2014-05-29 16:57:43	cwillu_at_work	rapidly falling into "parse it properly" territory
2014-05-29 16:58:13	ytrezq	the | is for description and the spell of the description need to be fixed
2014-05-29 16:58:29	-->	boris317 (~boris317@unaffiliated/boris317) has joined #python
2014-05-29 16:58:53	cwillu_at_work	either way, you'd parse the document, handle it one way outside [[...]], and another way inside [[...]]
2014-05-29 16:59:13	ytrezq	So, I want to replace "choeur" by "chœur" except if there's ".JPG" on the same line...
2014-05-29 16:59:28	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Quit: No Ping reply in 180 seconds.)
2014-05-29 16:59:34	ytrezq	just need the regex syntax...
2014-05-29 16:59:49	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Read error: Connection reset by peer)
2014-05-29 16:59:53	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 16:59:56	-->	LocusAsaf (~LocusAsaf@173.247.199.20) has joined #python
2014-05-29 16:59:59	<--	byte48 (~byte48@unaffiliated/byte48) has quit (Ping timeout: 252 seconds)
2014-05-29 17:00:12	<--	tylrr (~textual@rrcs-173-197-114-202.west.biz.rr.com) has quit (Ping timeout: 276 seconds)
2014-05-29 17:00:22	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2014-05-29 17:00:25	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-29 17:00:53	-->	_ken_ (~ken@c-24-2-211-80.hsd1.ct.comcast.net) has joined #python
2014-05-29 17:01:21	LocusAsaf	does anyone know if there is a way to ignore bad certificates with treq like you can with the requests library?
2014-05-29 17:02:23	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-29 17:02:24	-->	softwaredoug (~quassel@c-76-104-27-79.hsd1.va.comcast.net) has joined #python
2014-05-29 17:02:40	ytrezq	note that .jpg should be ignored...
2014-05-29 17:02:43	-->	ggp (~guilherme@143.106.196.40) has joined #python
2014-05-29 17:02:58	-->	quetzakubica (~quetzacot@89-66-203-102.dynamic.chello.pl) has joined #python
2014-05-29 17:03:03	-->	cubicool (~cubicool@108-249-4-80.lightspeed.tukrga.sbcglobal.net) has joined #python
2014-05-29 17:03:08	LocusAsaf	channel is surprisingly quiet
2014-05-29 17:03:12	<--	hwrdprkns (~textual@unaffiliated/hwrdprkns) has quit (Quit: Computer has gone to sleep.)
2014-05-29 17:03:18	-->	magicflakes (~cellopin@202.78.127.130) has joined #python
2014-05-29 17:04:12	cubicool	Hey guys, I'm using WebOb to simplify WSGI interaction, but I don't need even a "micro" framework really even. Can anyone reccomend a small, popular "routing" library that works with WebOb perhaps to give me simple URL routing (ala Pyramid)?
2014-05-29 17:04:34	--	Guest24966 is now known as Synthead
2014-05-29 17:04:35	-->	JamesNZ (~james@fedora/JamesNZ) has joined #python
2014-05-29 17:05:12	cubicool	This is for an XMPP bot actually, that spawns a simple HTTPS server and accepts some POST data under certain conditions...
2014-05-29 17:05:41	<--	LocusAsaf (~LocusAsaf@173.247.199.20) has quit (Quit: Leaving)
2014-05-29 17:05:48	-->	fundies (~greg@unaffiliated/cheeseboy) has joined #python
2014-05-29 17:05:50	<--	oubiga (~oubiga@235.185.116.91.dynamic.mundo-r.com) has quit (Quit: oubiga)
2014-05-29 17:06:11	-->	LocusAsaf (~LocusAsaf@173.247.199.20) has joined #python
2014-05-29 17:06:30	-->	brotherBox (~brotherBo@unaffiliated/brotherbox) has joined #python
2014-05-29 17:06:32	wleslie	if you want to talk more than one network protocol, the easiest way to do that is twisted
2014-05-29 17:06:59	LocusAsaf	does anyone know if there is a way to ignore bad certificates with treq?
2014-05-29 17:07:15	cwillu_at_work	LocusAsaf, couple steps I believe
2014-05-29 17:07:29	cwillu_at_work	treq is a thing wrapper around twisted.web.client
2014-05-29 17:07:53	-->	alcides (~alcides@unaffiliated/alcides) has joined #python
2014-05-29 17:07:58	-->	bipolar (~bipolar@offsite.guru) has joined #python
2014-05-29 17:08:08	-->	alsuren (~Thunderbi@87.114.67.126) has joined #python
2014-05-29 17:08:09	<--	skimbrel (~skimbrel@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 17:08:18	<--	Chiasmata (~Chiasmata@dsl-dynamic-77-44-45-197.interdsl.co.uk) has quit (Quit: Chiasmata)
2014-05-29 17:08:20	cwillu_at_work	api._client makes an twisted.web.Agent, which is what you need to pass an argument to to configure certificate handling
2014-05-29 17:08:42	jr3	anyone vpython afficienados (sp?) here?
2014-05-29 17:08:55	<--	alcides (~alcides@unaffiliated/alcides) has left #python
2014-05-29 17:09:01	-->	phantomx013 (63e57dd7@gateway/web/freenode/ip.99.229.125.215) has joined #python
2014-05-29 17:09:05	cwillu_at_work	LocusAsaf, exactly as http://twistedmatrix.com/documents/current/web/howto/client.html#http-over-ssl shows
2014-05-29 17:09:07	brotherBox	You can pass it in **kwargs and the request command will pick it up.
2014-05-29 17:09:32	<--	boris317 (~boris317@unaffiliated/boris317) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 17:09:52	<--	mon5ter (~utilita@91-66-183-218-dynip.superkabel.de) has quit
2014-05-29 17:09:56	LocusAsaf	brotherBox: what argument needs to be passed?
2014-05-29 17:10:15	fundies	Im trying to get python2script to work with 3 but im getting error Traceback (most recent call last):
2014-05-29 17:10:15	fundies	  File "ultimate.py", line 113, in <module>
2014-05-29 17:10:15	fundies	    playerRev(re.findall(page_url))
2014-05-29 17:10:26	fundies	http://codepad.org/OQlz2h6f
2014-05-29 17:10:39	fundies	how do I fix it?
2014-05-29 17:11:32	<--	bwreilly (~bwreilly@80.sub-70-199-134.myvzw.com) has quit (Ping timeout: 245 seconds)
2014-05-29 17:11:48	cwillu_at_work	LocusAsaf, I believe http://twistedmatrix.com/documents/current/api/twisted.internet.ssl.CertificateOptions.html
2014-05-29 17:12:13	cwillu_at_work	brotherBox, not sure how that's useful, kwargs isn't passed to the agent when it's created, and that's when you need to configure ssl
2014-05-29 17:12:15	phantomx013	Hello, I have a small general question ....http://bpaste.net/show/uciX7sDuSiIl7fZcoeqf/
2014-05-29 17:12:15	wleslie	fundies: could you pastebin the traceback too?
2014-05-29 17:12:27	phantomx013	can someone help me please?
2014-05-29 17:12:46	cwillu_at_work	phantomx013, ask the question, don't ask to ask
2014-05-29 17:12:57	fundies	wleslie, its only those 3 lines
2014-05-29 17:13:08	phantomx013	the question is in the pastebin ..i wrote my quesry in comments in the program
2014-05-29 17:13:40	toothrot	phantomx013, you need to use the argument name, otherwise the order is used
2014-05-29 17:14:04	wleslie	phantomx013: because the second argument it gets is "simple.py"
2014-05-29 17:14:18	cwillu_at_work	LocusAsaf, so basically, you make your own treq.api.HTTPClient(agent), where agent is a twisted.web Agent that gets the ssl factory with the option to ignore certificate errors
2014-05-29 17:14:18	toothrot	phantomx013, so.. wx.Frame(None, title='simple.py')
2014-05-29 17:14:27	<--	mmikeym (~mikeym@184.70.65.118) has quit (Ping timeout: 245 seconds)
2014-05-29 17:14:39	wleslie	fundies: the exception and its message are missing
2014-05-29 17:14:40	phantomx013	but there are so many other defauly arguments, which I am not providing ..such as title, pos etc
2014-05-29 17:14:50	cwillu_at_work	(I wouldn't be surprised if the reasoning is precisely "it shouldn't be nice and simple to ignore proper ssl handling", given how many people screw this up)
2014-05-29 17:14:50	phantomx013	default**
2014-05-29 17:14:52	wleslie	fundies: there is a module called shutil which would be simpler than all this os.system
2014-05-29 17:15:34	fundies	wleslie, http://codepad.org/x6UDF12V
2014-05-29 17:15:42	<--	alsuren (~Thunderbi@87.114.67.126) has quit (Quit: alsuren)
2014-05-29 17:16:03	-->	alsuren (~Thunderbi@87.114.67.126) has joined #python
2014-05-29 17:16:03	<--	notdaniel (~notdaniel@99-110-132-175.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Leaving)
2014-05-29 17:16:04	-->	cibegtd (~cibegtd@gateway/tor-sasl/cibegtd) has joined #python
2014-05-29 17:16:07	cibegtd	hi
2014-05-29 17:16:49	 *	cwillu_at_work heads home
2014-05-29 17:16:53	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-29 17:17:23	-->	Fogest (Fogest@2604:180::1458:e4e6) has joined #python
2014-05-29 17:17:24	LocusAsaf	cwillu_at_work: you out?
2014-05-29 17:17:25	phantomx013	hi toothrot thanks for the explanation but I was just wondering why the interpreter is not complaing about 3rd or 4th element not being present\
2014-05-29 17:17:40	LocusAsaf	cwillu_at_work: I was just putting together a little example
2014-05-29 17:17:51	fundies	wleslie, thats not why its erroring tho right?
2014-05-29 17:17:53	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 17:18:04	cibegtd	how can i concatenate groups of a dataframe, created by groupedby, to a single dataframe?
2014-05-29 17:18:10	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-29 17:18:15	<--	dangayle (~dang@users.spokesman.com) has quit (Quit: dangayle)
2014-05-29 17:18:46	-->	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has joined #python
2014-05-29 17:18:59	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-29 17:19:33	-->	jimmybot (~jimmybot@64.124.192.210) has joined #python
2014-05-29 17:20:23	fundies	wleslie, do u need the python2 version?
2014-05-29 17:21:06	wleslie	fundies: so what do you want to find in the page url?
2014-05-29 17:21:07	wleslie	fundies: no
2014-05-29 17:21:07	wleslie	phantomx013: because it uses the default value for those.
2014-05-29 17:21:07	wleslie	phantomx013: you can't have a default second argument without having defaults for the rest.
2014-05-29 17:21:07	wleslie	well, you can in python 3. but, yeah.
2014-05-29 17:21:08	wleslie	fundies: that would be handy
2014-05-29 17:22:00	fundies	wleslie, http://codepad.org/vmel9Otx
2014-05-29 17:22:10	-->	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has joined #python
2014-05-29 17:22:17	phantomx013	so why isn't it picking id=-1 as default value as for the pother parameters? Why do I have to specify it?
2014-05-29 17:22:36	-->	amargherio (~MarioEIU@107-192-152-221.lightspeed.rcsntx.sbcglobal.net) has joined #python
2014-05-29 17:22:38	wleslie	phantomx013: because you specified id="simple.py"
2014-05-29 17:22:56	<--	lduros (~user@fsf/member/lduros) has quit (Remote host closed the connection)
2014-05-29 17:23:06	fundies	wleslie, its not my scipt so im not sure how it works but i believe it gets the show's name and episode from pageurl
2014-05-29 17:23:49	phantomx013	but i thought "simple.py" is the value for FrameNameString
2014-05-29 17:24:29	<--	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has left #python
2014-05-29 17:24:36	wleslie	phantomx013: not if you pass it as the second argument
2014-05-29 17:24:41	phantomx013	wleslie: gotit
2014-05-29 17:24:45	phantomx013	:)
2014-05-29 17:24:46	phantomx013	thanks
2014-05-29 17:24:54	<--	phantomx013 (63e57dd7@gateway/web/freenode/ip.99.229.125.215) has quit (Quit: Page closed)
2014-05-29 17:24:55	wleslie	you're welcome
2014-05-29 17:25:06	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-29 17:25:41	-->	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has joined #python
2014-05-29 17:25:51	-->	MatthewsFace (~MatthewsF@c-67-183-116-112.hsd1.wa.comcast.net) has joined #python
2014-05-29 17:27:23	<--	codeitloadit (~codeitloa@wsip-68-225-25-202.oc.oc.cox.net) has quit
2014-05-29 17:31:38	<--	andtorg (~andtorg@host247-93-dynamic.51-82-r.retail.telecomitalia.it) has quit (Quit: WeeChat 0.4.3)
2014-05-29 17:31:41	-->	donspaulding (~donspauld@71.201.172.43) has joined #python
2014-05-29 17:31:55	<--	werdna (werdna@wikimedia/Werdna) has quit (Ping timeout: 240 seconds)
2014-05-29 17:32:05	-->	nbastin (~nbastin@geni/support/mondragon) has joined #python
2014-05-29 17:32:12	--	Sakurazaki|off is now known as Sakurazaki
2014-05-29 17:32:19	-->	spvensko (~spvensko@unaffiliated/spvensko) has joined #python
2014-05-29 17:32:34	<--	Mkster (~Mkster@i577B7A29.versanet.de) has quit (Read error: Connection reset by peer)
2014-05-29 17:32:59	nbastin	Is there a common pattern / mixin for implementing __getitem__ against your class __dict__ so your object is subscriptable?
2014-05-29 17:33:04	-->	aberrant (~aberrant@unaffiliated/aberrant) has joined #python
2014-05-29 17:33:11	<--	mulander (uid1766@gateway/web/irccloud.com/x-wsqvmxsddecbvowm) has quit (Quit: Connection closed for inactivity)
2014-05-29 17:33:11	nbastin	(and still works for __getitem__ in base class, etc.)
2014-05-29 17:33:33	nbastin	I mean, it's not a lot of code but seems like it should be a common mixin to avoid repeating code
2014-05-29 17:33:43	<--	quetzakubica (~quetzacot@89-66-203-102.dynamic.chello.pl) has quit (Ping timeout: 252 seconds)
2014-05-29 17:33:53	nbastin	(and avoiding corner cases)
2014-05-29 17:34:32	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 17:34:45	-->	atolani (Arpit@nat/redhat/x-qihtfdzoslwehqqg) has joined #python
2014-05-29 17:34:54	<--	fundies (~greg@unaffiliated/cheeseboy) has quit (Read error: Connection reset by peer)
2014-05-29 17:35:26	wleslie	nbastin: the getattr() function
2014-05-29 17:35:37	nbastin	it doesn't actually seem to work in all cases..
2014-05-29 17:35:42	nbastin	I mean, yes, that's the basis of most of it
2014-05-29 17:35:44	wleslie	do tell
2014-05-29 17:35:47	-->	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has joined #python
2014-05-29 17:36:02	d4t	dash, with a loop you only really need the upper line as your flag line (assuming I'm looping to an array of lines in ascending order), here's what I did: http://sprunge.us/FJUO
2014-05-29 17:36:25	<--	magicflakes (~cellopin@202.78.127.130) has quit (Quit: Lost Connection)
2014-05-29 17:36:34	<--	jimmybot (~jimmybot@64.124.192.210) has quit (Remote host closed the connection)
2014-05-29 17:37:08	_habnabit	d4t, never ever ever use os.system with str.format
2014-05-29 17:37:25	-->	flubby_nanabo (~flubby_na@unaffiliated/tonnynerd) has joined #python
2014-05-29 17:37:28	nbastin	I mean there seem to be subclass/baseclass resolution order things with getattr() that don't work / change when I implement __getitem__ on my own object that affect other subscripting
2014-05-29 17:37:38	nbastin	so I figure I need to recognize and handle them
2014-05-29 17:37:54	_habnabit	d4t, you probably want the shutil module
2014-05-29 17:37:54	-->	waveclaw (~waveclaw@ip98-162-237-146.ok.ok.cox.net) has joined #python
2014-05-29 17:37:55	nbastin	(which makes me hope that someone else already has...)
2014-05-29 17:38:00	_habnabit	d4t, and/or a tempfile
2014-05-29 17:38:05	<--	marr (~ccc@78.9.139.204) has quit (Ping timeout: 264 seconds)
2014-05-29 17:38:11	nbastin	of course making it a mixin won't really work since that changes the MRO again as well
2014-05-29 17:38:21	_habnabit	d4t, also why are you calling .__add__ directly?
2014-05-29 17:38:34	-->	fundies (~greg@unaffiliated/cheeseboy) has joined #python
2014-05-29 17:38:51	fundies	sorry wleslie internet issues. i miss anything?
2014-05-29 17:38:54	<--	ytrezq (~0x0EDFADE@2a02-8422-1191-6e00-56e6-fcff-fedb-2bba.rev.sfr.net) has left #python ("Konversation terminated!")
2014-05-29 17:39:09	-->	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has joined #python
2014-05-29 17:39:11	nbastin	(really I just want the item to work in format strings, and it seems like there ought to be a way to do this that doesn't involve implementing __getitem__, but apparently not)
2014-05-29 17:39:18	<--	waveclaw (~waveclaw@ip98-162-237-146.ok.ok.cox.net) has quit (Client Quit)
2014-05-29 17:39:22	wleslie	fundies: well, I didn't see your python2 paste
2014-05-29 17:39:24	adamsilver	a more succinct way to say this http://bpaste.net/show/7zgu3nQGngr5iDjSkjWK/ ?
2014-05-29 17:39:33	cibegtd	any idea?
2014-05-29 17:39:34	-->	boris317 (~boris317@unaffiliated/boris317) has joined #python
2014-05-29 17:39:56	wleslie	oh! maybe I did.
2014-05-29 17:39:56	<--	boris317 (~boris317@unaffiliated/boris317) has quit (Read error: Connection reset by peer)
2014-05-29 17:40:09	fundies	wleslie, http://codepad.org/vmel9Otx
2014-05-29 17:40:17	nbastin	(sorry, I caused a distraction.. :-))
2014-05-29 17:40:23	-->	bwreilly (~bwreilly@80.sub-70-199-134.myvzw.com) has joined #python
2014-05-29 17:41:03	wleslie	there's no playerRev(re.findall(...)) in this code
2014-05-29 17:41:11	fundies	yup
2014-05-29 17:41:40	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 17:41:49	-->	jkyle (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-29 17:42:13	-->	mattwest (~mattwest@pat148.dartmouth-secure.border2-rt.dartmouth.edu) has joined #python
2014-05-29 17:42:47	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 17:42:54	-->	boris317 (~boris317@unaffiliated/boris317) has joined #python
2014-05-29 17:43:22	-->	bjb (~bjb@sourcerer.ca) has joined #python
2014-05-29 17:43:25	wleslie	fundies: are you sure you're running the program you wrote and not something else
2014-05-29 17:43:57	<--	mattwest (~mattwest@pat148.dartmouth-secure.border2-rt.dartmouth.edu) has quit (Client Quit)
2014-05-29 17:44:18	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Quit: No Ping reply in 180 seconds.)
2014-05-29 17:44:27	d4t	_habnabit, I don't know it just makes the trick I guess, and I'm lazy/don't have good programming habits
2014-05-29 17:44:45	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 17:44:49	_habnabit	d4t, here's an opportunity to learn!
2014-05-29 17:44:50	<--	FreezingCold (~FreezingC@135.0.41.14) has quit (Ping timeout: 258 seconds)
2014-05-29 17:44:52	<--	bwreilly (~bwreilly@80.sub-70-199-134.myvzw.com) has quit (Ping timeout: 245 seconds)
2014-05-29 17:44:52	fundies	wleslie, sorry pasted wrong error http://codepad.org/j0yWLy22
2014-05-29 17:45:14	_arturo	adamsilver: the nested dictionaries make it a pain in the ass
2014-05-29 17:45:50	wleslie	fundies: ah ok
2014-05-29 17:46:05	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-29 17:46:10	d4t	_habnabit, you didn't tell me why I shouldn't do that though
2014-05-29 17:46:30	_habnabit	d4t, which thing?
2014-05-29 17:46:43	wleslie	fundies: well you could pass it a byte string, br'flash(\\/...
2014-05-29 17:47:11	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 252 seconds)
2014-05-29 17:47:18	_arturo	adamsilver: or actually no http://bpaste.net/show/M1oXMKithjYv6Rz5OJAP/
2014-05-29 17:47:31	wleslie	fundies: usually you will convert to text as early as possible, a bit surprised BS doesn't do that for you.
2014-05-29 17:47:35	<--	phuh (~phuh@cp66-203-194-42.cp.telus.net) has quit (Remote host closed the connection)
2014-05-29 17:47:50	_arturo	adamsilver: also take a look at https://docs.python.org/2/library/collections.html#collections.defaultdict
2014-05-29 17:47:56	fundies	wleslie, what?
2014-05-29 17:48:07	<--	samfalkner (~samfalkne@inet-aumc01-o.oracle.com) has quit (Remote host closed the connection)
2014-05-29 17:48:12	-->	phuh (~phuh@cp66-203-194-42.cp.telus.net) has joined #python
2014-05-29 17:48:18	<--	keypusher (~tmeagher@209.6.175.46) has quit (Ping timeout: 276 seconds)
2014-05-29 17:48:23	<--	fossrox (~fossrox@unaffiliated/fossrox) has quit (Ping timeout: 252 seconds)
2014-05-29 17:48:47	d4t	_habnabit, calling __add__ directly
2014-05-29 17:48:48	wleslie	beautiful soup, it doesn't decode into text.  perhaps it doesn't have the required information to do so.
2014-05-29 17:48:54	_habnabit	d4t, well, it's kind of pointless
2014-05-29 17:49:02	_habnabit	d4t, why not `x = x + '\n'` ?
2014-05-29 17:49:30	d4t	right
2014-05-29 17:49:32	fundies	    player_revision = re.findall(b'flash\\/(.+)\\/StandardVideoPlayer.swf', html).pop() ?
2014-05-29 17:49:35	adamsilver	_arturo: that worked thanks but how come inexistent = None?
2014-05-29 17:49:51	d4t	exact same thing, I just guess it's how my mind operates
2014-05-29 17:50:04	wleslie	fundies: br'
2014-05-29 17:50:30	_arturo	adamsilver: because thats the default return value of get, https://docs.python.org/2/library/stdtypes.html#dict.get
2014-05-29 17:50:51	d4t	I guess it's easier for me to recall method names than valid/invalid operator syntax
2014-05-29 17:50:51	adamsilver	_arturo: i see, thanks
2014-05-29 17:51:09	fundies	wleslie, http://codepad.org/1ZhynpqB
2014-05-29 17:51:17	<--	deniska (~denis@unaffiliated/deniska) has quit (Quit: Leaving.)
2014-05-29 17:51:41	-->	sirfilip (~sirfilip@77.29.5.15) has joined #python
2014-05-29 17:51:48	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 17:51:48	<--	aberrant (~aberrant@unaffiliated/aberrant) has quit (Quit: aberrant)
2014-05-29 17:51:52	-->	zeissoctopus (~zeissocto@n1164914210.netvigator.com) has joined #python
2014-05-29 17:51:56	sirfilip	test
2014-05-29 17:52:02	wleslie	fundies: ok
2014-05-29 17:52:26	<--	sirfilip (~sirfilip@77.29.5.15) has left #python
2014-05-29 17:52:38	mythmon	In Django Rest Framework, the docs talk about a way to transform fields in a serializer. However, I can't seem to get it to work, and reading the code makes me think the docs are lying.
2014-05-29 17:52:38	<--	mn3monic (~xxwa@unaffiliated/mn3monic) has quit (Ping timeout: 240 seconds)
2014-05-29 17:52:40	fundies	:/
2014-05-29 17:52:53	mythmon	Has anyone used transform_<fieldname> in a Django Rest Framework serializer?
2014-05-29 17:52:58	-->	butterlove (~scott@cpe-66-65-90-122.nyc.res.rr.com) has joined #python
2014-05-29 17:53:15	<--	desophos (~desophos@128.149.227.202) has quit (Quit: Leaving)
2014-05-29 17:53:25	wleslie	fundies: you could wrap the urlopener in something that will decode it for you
2014-05-29 17:53:31	wleslie	fundies: assuming you know the encoding
2014-05-29 17:54:02	<--	rvchangue (~rvchangue@unaffiliated/rvchangue) has quit (Ping timeout: 258 seconds)
2014-05-29 17:54:11	fundies	wleslie, i know nothing
2014-05-29 17:54:25	-->	mven_ (~textual@ip68-104-38-84.lv.lv.cox.net) has joined #python
2014-05-29 17:54:28	wleslie	hum
2014-05-29 17:54:39	-->	joe100 (~joe100@unaffiliated/joe100) has joined #python
2014-05-29 17:55:07	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Ping timeout: 265 seconds)
2014-05-29 17:55:09	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 17:55:31	-->	mn3monic (~xxwa@unaffiliated/mn3monic) has joined #python
2014-05-29 17:55:42	-->	phantomx013 (63e57dd7@gateway/web/freenode/ip.99.229.125.215) has joined #python
2014-05-29 17:56:00	<--	riskable (~quassel@c-69-180-64-152.hsd1.fl.comcast.net) has quit (Remote host closed the connection)
2014-05-29 17:56:05	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 252 seconds)
2014-05-29 17:56:20	<--	yak (~yak@isper-224-24.isper.sk) has quit (Quit: Leaving)
2014-05-29 17:56:24	fundies	wleslie, so what exactly do i do?
2014-05-29 17:56:36	--	CyrilPeponnet is now known as CP|AFK
2014-05-29 17:56:43	-->	Leeds (~richardc@n112118156036.netvigator.com) has joined #python
2014-05-29 17:56:46	-->	wings (~Adium@18.111.12.220) has joined #python
2014-05-29 17:56:55	wleslie	I'm not sure, I haven't used bs in years
2014-05-29 17:56:57	-->	unit923 (~unit923@203.111.137.49) has joined #python
2014-05-29 17:57:06	phantomx013	Hi - Can a class call itself in the constructor method as shown in the code >> http://bpaste.net/show/IpsijESXJ6XcybMMqWhQ/   I am confused by line#6
2014-05-29 17:57:23	wleslie	fundies: you could try to pass it a wrapper that will decode for you.  there's probably something like that in the io package.
2014-05-29 17:57:31	-->	yedi (~yedi@201.199.88.62) has joined #python
2014-05-29 17:58:09	wleslie	fundies: since urllib doesn't give you headers, you'll need to open page info in your browser to see what encoding the page is in.
2014-05-29 17:58:23	wleslie	phantomx013: it's not calling itself, it's calling the parent class
2014-05-29 17:58:28	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 17:59:24	phantomx013	Is there a special reason on calling the parent class itself?
2014-05-29 17:59:24	wleslie	phantomx013: the current class is used to look up its position in the MRO
2014-05-29 17:59:25	wleslie	phantomx013: see help(super)
2014-05-29 17:59:34	fundies	wleslie, u mean like utf-8?
2014-05-29 17:59:45	-->	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has joined #python
2014-05-29 17:59:55	wleslie	phantomx013: because the parent class probably needs to do some initialisation
2014-05-29 17:59:55	wleslie	phantomx013: if you don't call it, it won't be initialised.
2014-05-29 17:59:57	wleslie	fundies: yes
2014-05-29 18:00:04	fundies	ya is utf-8
2014-05-29 18:00:20	<--	boris317 (~boris317@unaffiliated/boris317) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 18:00:47	phantomx013	wleslie: ok thanks a lot
2014-05-29 18:01:06	<--	butterlove (~scott@cpe-66-65-90-122.nyc.res.rr.com) has quit (Quit: butterlove)
2014-05-29 18:01:07	<--	sepero (~none@7.sub-75-203-116.myvzw.com) has quit (Disconnected by services)
2014-05-29 18:01:18	<--	meet_praveen (~Thunderbi@www.gscglass.com) has quit (Ping timeout: 276 seconds)
2014-05-29 18:01:20	<--	BeholdMyGlory (~behold@unaffiliated/beholdmyglory) has quit (Quit: Leaving)
2014-05-29 18:01:23	-->	sepero (~none@235.sub-75-199-87.myvzw.com) has joined #python
2014-05-29 18:01:31	fundies	wleslie, now what?
2014-05-29 18:01:37	<--	cococo (~coffeecod@184.75.221.162) has left #python
2014-05-29 18:01:55	<--	yedi (~yedi@201.199.88.62) has quit (Ping timeout: 260 seconds)
2014-05-29 18:02:47	wleslie	fundies: probably pass an io.TextIOWRapper(page, 'utf-8') instead of the output of urlopen
2014-05-29 18:03:33	wleslie	oh, you're using .read()
2014-05-29 18:03:47	fundies	wheres urlopen?
2014-05-29 18:03:48	fundies	:/
2014-05-29 18:03:50	wleslie	opener.open(url).read().decode('utf-8')
2014-05-29 18:03:54	<--	_arturo (~arturo@162.210.130.3) has quit (Quit: _arturo)
2014-05-29 18:04:05	 *	fundies so confused
2014-05-29 18:04:35	wleslie	line 93
2014-05-29 18:05:12	<--	Ard1t (~Ardit@unaffiliated/ard1t) has quit (Ping timeout: 276 seconds)
2014-05-29 18:05:29	-->	shunya_chakra (~shunya@117.200.71.135) has joined #python
2014-05-29 18:05:31	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has quit (Remote host closed the connection)
2014-05-29 18:06:05	fundies	wleslie, still br? or just r?
2014-05-29 18:06:06	<--	atolani (Arpit@nat/redhat/x-qihtfdzoslwehqqg) has quit (Quit: Leaving)
2014-05-29 18:06:56	-->	cesar_bo (uid17588@gateway/web/irccloud.com/x-dzrmcfobtqlcjvuz) has joined #python
2014-05-29 18:07:18	wleslie	just r
2014-05-29 18:07:22	-->	waveclaw (~waveclaw@ip98-162-237-146.ok.ok.cox.net) has joined #python
2014-05-29 18:07:32	-->	Berra (~arch@c83-252-1-146.bredband.comhem.se) has joined #python
2014-05-29 18:07:38	-->	saml_ (~saml@pool-71-190-4-101.nycmny.east.verizon.net) has joined #python
2014-05-29 18:07:50	<--	chrislkeller (~chrislkel@63.237.174.130) has quit (Quit: Leaving.)
2014-05-29 18:08:00	<--	zeissoctopus (~zeissocto@n1164914210.netvigator.com) has quit (Quit: 暫離)
2014-05-29 18:08:17	-->	Ard1t (~Ardit@unaffiliated/ard1t) has joined #python
2014-05-29 18:08:40	fundies	wleslie, http://codepad.org/rMmIBi5E :(
2014-05-29 18:09:35	<--	krawchyk (~textual@50-198-150-254-static.hfc.comcastbusiness.net) has quit (Quit: bbye)
2014-05-29 18:09:37	wleslie	you'll need to encode before posting
2014-05-29 18:09:45	fundies	:/
2014-05-29 18:10:00	<--	Berra (~arch@c83-252-1-146.bredband.comhem.se) has left #python
2014-05-29 18:10:01	<--	aleray (~aleray@ip-83-101-33-94.customer.schedom-europe.net) has quit (Ping timeout: 252 seconds)
2014-05-29 18:10:06	wleslie	encode media_id
2014-05-29 18:10:09	<--	phuh (~phuh@cp66-203-194-42.cp.telus.net) has quit (Remote host closed the connection)
2014-05-29 18:10:16	-->	aberrant (~aberrant@unaffiliated/aberrant) has joined #python
2014-05-29 18:10:21	-->	phuh (~phuh@cp66-203-194-42.cp.telus.net) has joined #python
2014-05-29 18:10:23	-->	shortdud_ (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has joined #python
2014-05-29 18:11:59	<--	k-dawg (~kdawg@124-171-252-45.dyn.iinet.net.au) has quit (Quit: This computer has gone to sleep)
2014-05-29 18:12:32	fundies	wleslie, i don't know python
2014-05-29 18:12:57	-->	claptor (~avarice@107-134-134-100.lightspeed.irvnca.sbcglobal.net) has joined #python
2014-05-29 18:13:12	<--	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has quit (Ping timeout: 258 seconds)
2014-05-29 18:13:38	-->	fluter (~fluter@fedora/fluter) has joined #python
2014-05-29 18:14:13	-->	k_sze[work] (~kvirc@unaffiliated/kira) has joined #python
2014-05-29 18:14:20	<--	fluter (~fluter@fedora/fluter) has quit (Max SendQ exceeded)
2014-05-29 18:14:39	-->	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has joined #python
2014-05-29 18:15:04	<--	cubicool (~cubicool@108-249-4-80.lightspeed.tukrga.sbcglobal.net) has left #python
2014-05-29 18:16:17	-->	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has joined #python
2014-05-29 18:16:31	<--	wleslie (~verte@python/site-packages/verte) has quit (Quit: ~~~ Crash in JIT!)
2014-05-29 18:17:23	-->	yuwang (~yuwang@114.113.122.191) has joined #python
2014-05-29 18:17:33	<--	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2014-05-29 18:17:56	<--	Synthead (~max@md12036d0.tmodns.net) has quit (Ping timeout: 255 seconds)
2014-05-29 18:18:18	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 240 seconds)
2014-05-29 18:18:21	<--	alsuren (~Thunderbi@87.114.67.126) has quit (Ping timeout: 252 seconds)
2014-05-29 18:18:23	-->	Gaan (~textual@12-141.207-68.elmore.res.rr.com) has joined #python
2014-05-29 18:18:32	<--	Gaan (~textual@12-141.207-68.elmore.res.rr.com) has quit (Max SendQ exceeded)
2014-05-29 18:18:51	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-29 18:19:24	-->	sl33k_ (~sl33k_@unaffiliated/sl33k-/x-0812184) has joined #python
2014-05-29 18:20:09	-->	shortdudey123 (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has joined #python
2014-05-29 18:20:28	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit
2014-05-29 18:20:34	<--	LocusAsaf (~LocusAsaf@173.247.199.20) has quit (Quit: Leaving)
2014-05-29 18:22:05	-->	john_f (~jwf@unaffiliated/john-f) has joined #python
2014-05-29 18:22:23	<--	xsamurai (~fahad@unaffiliated/xsamurai) has quit (Remote host closed the connection)
2014-05-29 18:22:45	<--	joe100 (~joe100@unaffiliated/joe100) has quit (Ping timeout: 252 seconds)
2014-05-29 18:22:53	<--	shortdud_ (~shortdude@c-67-180-84-163.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-29 18:23:15	<--	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has quit (Quit: jr3)
2014-05-29 18:24:13	<--	EvergreenTree (~quassel@unaffiliated/evergreentree) has quit (Read error: Connection reset by peer)
2014-05-29 18:24:13	-->	werdna (werdna@wikimedia/Werdna) has joined #python
2014-05-29 18:24:34	<--	nbastin (~nbastin@geni/support/mondragon) has left #python
2014-05-29 18:25:21	-->	aljohri (~atul@c-98-206-142-100.hsd1.il.comcast.net) has joined #python
2014-05-29 18:26:27	<--	wings (~Adium@18.111.12.220) has left #python
2014-05-29 18:26:33	-->	malte__ (~mablae@dyndsl-031-150-093-222.ewe-ip-backbone.de) has joined #python
2014-05-29 18:26:42	-->	hgl (~hgl@unaffiliated/hgl) has joined #python
2014-05-29 18:27:02	phantomx013	what does MRO mean?
2014-05-29 18:27:24	-->	plutoniix (~plutoniix@node-p78.pool-101-108.dynamic.totbb.net) has joined #python
2014-05-29 18:27:30	<--	theshadow (~theshadow@24.8.4.50) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 18:27:31	<--	digilord (~digilord@unaffiliated/digilord) has quit (Quit: Catch ya on the flipside!)
2014-05-29 18:27:52	-->	lowryder (~lowryder@pool-74-104-160-239.bstnma.fios.verizon.net) has joined #python
2014-05-29 18:27:59	<--	ionelmc (uid20175@gateway/web/irccloud.com/x-fgupwinhcslettvj) has quit (Quit: Connection closed for inactivity)
2014-05-29 18:28:13	<--	ggp (~guilherme@143.106.196.40) has quit (Remote host closed the connection)
2014-05-29 18:28:53	SegFaultAX	phantomx013: Method resolution order.
2014-05-29 18:29:12	phantomx013	SegFaultAX: thanks
2014-05-29 18:29:17	fundies	if '<code>4</code>' in xmlconfig: how is that invalid syntax?
2014-05-29 18:29:23	SegFaultAX	phantomx013: It refers to the technique python uses to resolve an attribute (eg during a method call)
2014-05-29 18:29:28	<--	cibegtd (~cibegtd@gateway/tor-sasl/cibegtd) has left #python
2014-05-29 18:29:45	<--	mexi_d3 (6d945edd@gateway/web/freenode/ip.109.148.94.221) has quit (Quit: Page closed)
2014-05-29 18:29:49	-->	RDustinB (~RDustinB@c-174-51-210-114.hsd1.co.comcast.net) has joined #python
2014-05-29 18:30:00	-->	magicflakes (~cellopin@202.78.127.130) has joined #python
2014-05-29 18:30:04	SegFaultAX	dash: Avail?
2014-05-29 18:30:17	phantomx013	SegFaultAX: I see ... thanks
2014-05-29 18:30:17	<--	Gambit- (~Gambit-@unaffiliated/gambit-) has quit (Ping timeout: 264 seconds)
2014-05-29 18:30:17	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2014-05-29 18:30:19	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Quit: Computer has gone to sleep.)
2014-05-29 18:30:20	<--	seaworthy (~seaworthy@unaffiliated/seaworthy) has quit (Quit: seaworthy)
2014-05-29 18:30:21	<--	mission (~mission@unaffiliated/mission) has quit (Remote host closed the connection)
2014-05-29 18:30:24	<--	mablae_ (~mablae@dyndsl-037-138-031-207.ewe-ip-backbone.de) has quit (Ping timeout: 265 seconds)
2014-05-29 18:30:39	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Konversation terminated!)
2014-05-29 18:30:55	<--	thelinuxkid (~thelinuxk@static-108-0-187-37.lsanca.fios.verizon.net) has quit (Quit: Leaving.)
2014-05-29 18:31:01	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-29 18:31:57	-->	digilord (~digilord@unaffiliated/digilord) has joined #python
2014-05-29 18:32:01	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 18:32:03	fundies	:/
2014-05-29 18:33:08	-->	Macuser (~textual@unaffiliated/macuser) has joined #python
2014-05-29 18:33:53	<--	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has quit (Quit: ZNC - http://znc.in)
2014-05-29 18:34:06	joshlegs	anybody ever had to test the xlwt library ?
2014-05-29 18:34:28	-->	mexi_d3 (6d945edd@gateway/web/freenode/ip.109.148.94.221) has joined #python
2014-05-29 18:34:31	-->	SegFaultAX (SegFaultAX@unaffiliated/segfaultax) has joined #python
2014-05-29 18:34:36	joshlegs	i cant figuer out how to read values after they're written to make sure they're writing properly. I really don't want to use xlrd because i don't want to have to save the file
2014-05-29 18:34:39	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-29 18:35:49	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-29 18:37:18	-->	_Atom_ (~jawat@172.56.9.57) has joined #python
2014-05-29 18:38:31	<--	donspaulding (~donspauld@71.201.172.43) has quit (Quit: donspaulding)
2014-05-29 18:38:48	-->	fluter (~fluter@fedora/fluter) has joined #python
2014-05-29 18:39:10	-->	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has joined #python
2014-05-29 18:39:24	<--	shunya_chakra (~shunya@117.200.71.135) has quit (Quit: Leaving)
2014-05-29 18:39:34	dash	SegFaultAX: hi
2014-05-29 18:39:54	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Read error: Connection reset by peer)
2014-05-29 18:40:19	<--	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has quit (Remote host closed the connection)
2014-05-29 18:40:25	-->	introom (~introom@wf076-246.ust.hk) has joined #python
2014-05-29 18:40:33	SegFaultAX	dash: You pinged me in #monte about my broke client. Was it getting booted for flood?
2014-05-29 18:40:36	<--	Macuser (~textual@unaffiliated/macuser) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 18:40:39	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 18:40:55	SegFaultAX	(Sometimes znc goes on the fritz and I haven't taken the time to debug why)
2014-05-29 18:41:11	dash	yes
2014-05-29 18:41:24	SegFaultAX	How many times did it happen?
2014-05-29 18:41:27	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Ping timeout: 252 seconds)
2014-05-29 18:41:33	dash	a lot :)
2014-05-29 18:41:38	SegFaultAX	Damn, sorry about that.
2014-05-29 18:41:39	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 18:41:50	<--	Arctico (~Arctico@244.174.218.87.dynamic.jazztel.es) has quit (Quit: Saliendo)
2014-05-29 18:42:03	<--	jorgev (~jorgev@rrcs-67-52-158-66.west.biz.rr.com) has quit (Quit: Computer has gone to sleep.)
2014-05-29 18:43:21	-->	remmy444 (~tylll2595@CPE-121-209-169-226.msxz1.ken.bigpond.net.au) has joined #python
2014-05-29 18:44:20	-->	dray3 (~daaray@cpe-173-095-178-019.nc.res.rr.com) has joined #python
2014-05-29 18:44:31	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-29 18:44:48	-->	Gaan_ (~textual@12-141.207-68.elmore.res.rr.com) has joined #python
2014-05-29 18:44:49	-->	heraclitus (~halcyon@unaffiliated/heraclitis) has joined #python
2014-05-29 18:45:30	<--	badon (~badon@pdpc/supporter/active/badon) has quit (Quit: Leaving)
2014-05-29 18:45:52	<--	darkbasic (~quassel@niko.linuxsystems.it) has quit (Ping timeout: 265 seconds)
2014-05-29 18:45:59	-->	beachandbytes (~beachandb@cpe-98-150-247-49.hawaii.res.rr.com) has joined #python
2014-05-29 18:46:07	-->	furoido (~Thunderbi@112.207.132.84) has joined #python
2014-05-29 18:46:19	<--	heraclitus (~halcyon@unaffiliated/heraclitis) has quit (Remote host closed the connection)
2014-05-29 18:46:19	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 252 seconds)
2014-05-29 18:46:28	-->	darkbasic (~quassel@niko.linuxsystems.it) has joined #python
2014-05-29 18:46:58	-->	heraclitus (~halcyon@unaffiliated/heraclitis) has joined #python
2014-05-29 18:47:15	<--	heraclitus (~halcyon@unaffiliated/heraclitis) has quit (Remote host closed the connection)
2014-05-29 18:47:22	-->	mahmoudimus (~mahmoudim@199.241.202.154) has joined #python
2014-05-29 18:47:40	-->	ggp (~guilherme@189.79.252.145) has joined #python
2014-05-29 18:49:10	fundies	TypeError: POST data should be bytes or an iterable of bytes. It cannot be of type str.
2014-05-29 18:49:20	fundies	how the fax i make it right type
2014-05-29 18:49:41	-->	yates (~user@nc-67-232-27-161.dhcp.embarqhsd.net) has joined #python
2014-05-29 18:49:48	<--	striglia (~striglia@72-18-233-188.static-ip.telepacific.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2014-05-29 18:50:40	-->	nedbat (~nedbat@python/psf/nedbat) has joined #python
2014-05-29 18:52:47	-->	Ariel_Calzada (~aricalso@181.135.224.238) has joined #python
2014-05-29 18:53:28	<--	Zer000 (~phil@216-58-17-59.cpe.distributel.net) has quit (Quit: Leaving)
2014-05-29 18:53:47	<--	narkeeso (~narkeeso@217.sub-70-197-71.myvzw.com) has quit (Ping timeout: 240 seconds)
2014-05-29 18:54:10	yates	1. is it possible to create a thread that runs a C library (module?) function?
2014-05-29 18:54:35	yates	2. is it possible for that C thread to share a pthread_mutex_t with the main python thread?
2014-05-29 18:54:52	yates	caveat: i am a beginner in python.
2014-05-29 18:55:03	<--	Ariel_Calzada (~aricalso@181.135.224.238) has quit (Client Quit)
2014-05-29 18:56:27	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-29 18:57:13	yates	python 2.x
2014-05-29 18:57:32	yates	the runtime environment is debian linux on a beaglebone black
2014-05-29 18:57:56	<--	kevlarman (~roman@tremulous/officialdevannoyer/kevlarman) has quit (Quit: Lost terminal)
2014-05-29 18:57:56	<--	someprimetime (~someprime@162.245.21.10) has quit (Quit: someprimetime)
2014-05-29 18:57:58	ari-_-e	yates: there are FFI libraries
2014-05-29 18:58:18	-->	andkenneth (~AndKennet@121-99-188-58.bng1.nct.orcon.net.nz) has joined #python
2014-05-29 18:58:48	ari-_-e	I believe cffi is well liked?
2014-05-29 18:58:54	yates	hmm.
2014-05-29 18:58:59	therealfakemoot	cffi is the thing to use
2014-05-29 18:59:15	-->	donspaulding (~donspauld@71.201.172.43) has joined #python
2014-05-29 19:00:01	yates	what about an alternative like 1) running the C code as another process, and 2) using a socket?
2014-05-29 19:00:40	-->	butterlove (~scott@cpe-66-65-90-122.nyc.res.rr.com) has joined #python
2014-05-29 19:00:59	-->	Rufflewind (~rf@76-250-60-119.lightspeed.lnngmi.sbcglobal.net) has joined #python
2014-05-29 19:01:03	-->	tyll_ (~till@fedora/tyll) has joined #python
2014-05-29 19:01:07	<--	Rufflewind_ (~rf@76-250-60-119.lightspeed.lnngmi.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2014-05-29 19:01:09	yates	domain socket
2014-05-29 19:01:36	-->	boris317 (~boris317@unaffiliated/boris317) has joined #python
2014-05-29 19:01:36	yates	does python have a handy interface to domain sockets on linux systems?
2014-05-29 19:01:54	<--	tilgovi (~randall@couchdb/committer/tilgovi) has quit (Remote host closed the connection)
2014-05-29 19:01:54	<--	p1ro (~p1ro@gentoo/user/p1ro) has quit (Ping timeout: 258 seconds)
2014-05-29 19:02:06	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Remote host closed the connection)
2014-05-29 19:02:16	-->	bkuberek (~bkuberek@74.72.159.31) has joined #python
2014-05-29 19:02:45	yates	ari-_-e, therealfakemoot: thanks for that hint
2014-05-29 19:03:13	-->	p1ro (~p1ro@gentoo/user/p1ro) has joined #python
2014-05-29 19:03:13	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-29 19:04:11	<--	tyll (~till@fedora/tyll) has quit (Ping timeout: 258 seconds)
2014-05-29 19:04:26	mexi_d3	yates: What are the graphics like on beaglebone? Can it do video streams OK?
2014-05-29 19:06:05	yates	mexi_d3: i hear it can - i'm not using the on-board video in my app
2014-05-29 19:06:18	yates	i'm using the BBB rev C
2014-05-29 19:07:48	magicflakes	when you define a function in a python module does that function gets automatically loaded in memory when that module is imported?
2014-05-29 19:07:49	kingplusplus	hey anyone please give me a task to do? something challenging something you think a beginner who has been learning python for just 3 and half month should be able to do? Don't worry I am not going to ask you to review it... i will keep it to myself that i did if i did... no obligation i just want to learn and challenge myself so i can get a job soon :)
2014-05-29 19:07:57	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Ping timeout: 252 seconds)
2014-05-29 19:08:14	therealfakemoot	magicflakes: the entire module is executed when you import it
2014-05-29 19:09:04	therealfakemoot	magicflakes: the 'from foo' bit just defines specific names in the current module.
2014-05-29 19:09:09	magicflakes	even if you choose what you import? example if a module has a function A and B if I just do import A does it also mean that be will be loaded?
2014-05-29 19:09:20	magicflakes	oh
2014-05-29 19:09:28	therealfakemoot	magicflakes: The entire module is executed during an import
2014-05-29 19:09:30	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Quit: Leaving)
2014-05-29 19:09:46	yates	"executed"?
2014-05-29 19:09:55	-->	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has joined #python
2014-05-29 19:10:12	therealfakemoot	Yeah. It's parsed and executed in the virtual machine
2014-05-29 19:10:27	<--	phantomx013 (63e57dd7@gateway/web/freenode/ip.99.229.125.215) has quit (Quit: Page closed)
2014-05-29 19:10:36	therealfakemoot	Function and class defintions are executed, etc etc.
2014-05-29 19:10:41	yates	just importing executes code?
2014-05-29 19:10:48	therealfakemoot	Yes.
2014-05-29 19:10:58	<--	lowryder (~lowryder@pool-74-104-160-239.bstnma.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-05-29 19:11:15	-->	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has joined #python
2014-05-29 19:11:25	kingplusplus	dash, you there?
2014-05-29 19:11:31	[Tritium]	yates: create a module that just has "print 'foo'" in it, and import it, see what happens :)
2014-05-29 19:11:36	therealfakemoot	Yep.
2014-05-29 19:11:41	-->	silphium (~jrjohnsto@173-81-201-66-siss.atw.dyn.suddenlink.net) has joined #python
2014-05-29 19:11:43	therealfakemoot	That's the simplest example of that
2014-05-29 19:12:11	yates	i'll shutup now - like i said, i'm an absolute beginner, i.e., pre-"Hello World"
2014-05-29 19:12:16	[Tritium]	suprised me the first time it happened
2014-05-29 19:12:23	<--	boris317 (~boris317@unaffiliated/boris317) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 19:12:31	ari-_-e	this is the reason for the if __name__ == '__main__' thing - it prevents code from being run on import
2014-05-29 19:12:37	<--	silphium (~jrjohnsto@173-81-201-66-siss.atw.dyn.suddenlink.net) has quit (Client Quit)
2014-05-29 19:12:44	dash	kingplusplus: hi what
2014-05-29 19:13:03	-->	boris317 (~boris317@unaffiliated/boris317) has joined #python
2014-05-29 19:13:05	[Tritium]	yates: naw.  just... its really hard to accidently break things by just trying things out
2014-05-29 19:13:25	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-29 19:13:34	yates	i just bought "Python Cookbook" - is it good?
2014-05-29 19:13:38	kingplusplus	just want to know if u have any idea of what i can take as a task? don't need to review it. Am just here useless can't think of what to code :)
2014-05-29 19:13:42	therealfakemoot	yates: probably not super good
2014-05-29 19:13:45	dash	kingplusplus: write a lisp interpreter
2014-05-29 19:13:48	yates	what is super good?
2014-05-29 19:13:55	therealfakemoot	not amazing
2014-05-29 19:14:01	yates	i was going to buy Python in a Nutshell
2014-05-29 19:14:01	-->	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-29 19:14:03	<--	neataroni (~neataroni@c-67-171-200-129.hsd1.or.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 19:14:03	<--	tdy (~tim@unaffiliated/tdy) has quit (Quit: WeeChat 0.4.3)
2014-05-29 19:14:14	[Tritium]	yates: what version of it?  dave just updated it not too long ago to python 3
2014-05-29 19:14:24	mexi_d3	beazley's cookbook is good
2014-05-29 19:14:24	blackmondolz	Yates: i think yes it is .. :)
2014-05-29 19:14:43	<--	dray3 (~daaray@cpe-173-095-178-019.nc.res.rr.com) has quit (Quit: Leaving.)
2014-05-29 19:14:46	kingplusplus	dash, i will give it a go even if i don't know lisp other than its a language thanks
2014-05-29 19:14:48	dash	kingplusplus: here's an article on it: http://norvig.com/lispy.html
2014-05-29 19:14:55	-->	dray3 (~daaray@cpe-173-095-178-019.nc.res.rr.com) has joined #python
2014-05-29 19:15:18	yates	[Tritium]: Publication Date: June 1, 2013 | ISBN-10: 1449340377 | ISBN-13: 978-1449340377 | Edition: 3
2014-05-29 19:15:26	-->	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has joined #python
2014-05-29 19:15:29	-->	theshadow (~theshadow@24.8.4.50) has joined #python
2014-05-29 19:15:29	yates	so it's only for python 3?
2014-05-29 19:15:33	<--	bipolar (~bipolar@offsite.guru) has quit (Ping timeout: 252 seconds)
2014-05-29 19:15:37	-->	tdy (~tim@unaffiliated/tdy) has joined #python
2014-05-29 19:15:41	yates	i'm confused about the difference between python 2.x and 3.x
2014-05-29 19:15:52	mexi_d3	beazley has some quite deep knowledge of meta programming
2014-05-29 19:15:53	[Tritium]	yates: a good deal of that book should still be valid python 2.
2014-05-29 19:16:00	-->	poppify (~poppify@triband-mum-120.60.145.5.mtnl.net.in) has joined #python
2014-05-29 19:16:00	yates	is 3.x a superset of 2.x?
2014-05-29 19:16:09	therealfakemoot	yates: nope
2014-05-29 19:16:15	therealfakemoot	yates: 2 and 3 are incompatible
2014-05-29 19:16:19	<--	poppify (~poppify@triband-mum-120.60.145.5.mtnl.net.in) has quit (Client Quit)
2014-05-29 19:16:20	kingplusplus	dash thanks... i have starting point
2014-05-29 19:16:22	[Tritium]	yates: python3 is a backwards incompatable update to the langauge
2014-05-29 19:16:58	yates	but mostly it does everything python 2 does?
2014-05-29 19:17:12	ari-_-e	they're both turing complete :)
2014-05-29 19:17:22	<--	_andyj_ (uid24906@gateway/web/irccloud.com/x-pjwtgygztwfzinso) has quit (Quit: Connection closed for inactivity)
2014-05-29 19:17:26	yates	so is TeX...
2014-05-29 19:17:29	<--	QBob (~qbob@amarok/developer/qbob) has quit (Ping timeout: 252 seconds)
2014-05-29 19:17:34	[Tritium]	yates: I use python 2 almost exclusively.
2014-05-29 19:18:15	yates	what is a good python 2 reference?
2014-05-29 19:18:25	therealfakemoot	yates: the docs at python.org
2014-05-29 19:18:44	<--	jalaziz (~jalaziz@67-207-118-18.static.wiline.com) has quit (Ping timeout: 265 seconds)
2014-05-29 19:18:54	<--	RDustinB (~RDustinB@c-174-51-210-114.hsd1.co.comcast.net) has quit (Quit: Computer has gone to sleep)
2014-05-29 19:19:24	[Tritium]	yates: docs.python.org ...keep in mind, learning python 3... learning python 2 later is almost trivial.
2014-05-29 19:20:05	yates	there is something about hardcopy that is better for some things - learning a new programming language is one of those, in my opinion. or at least VERY handy to have in addition to whatever online docs are there.
2014-05-29 19:20:11	<--	manizzle (~manizzle@107-220-114-180.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2014-05-29 19:20:17	<--	mribeirodantas (~mrd@fedora/mribeirodantas) has quit (Quit: leaving)
2014-05-29 19:20:33	<--	Mio-chan (~Mio-chan@unaffiliated/mio-chan) has quit (Quit: Leaving)
2014-05-29 19:20:42	yates	[Tritium]: ok, interesting.
2014-05-29 19:20:44	 *	[Tritium] ...references PDFs more
2014-05-29 19:21:13	yates	i'm on my 3rd or 4th copy of K&R...
2014-05-29 19:21:16	mexi_d3	i find a tablet or e-reader with the doc open is equivalent to a book, for me, in the look/feel of how i interact with it
2014-05-29 19:21:21	yates	i keep on wearing them out.
2014-05-29 19:21:44	mexi_d3	It's definitely different from reading it off a laptop screen.
2014-05-29 19:21:53	[Tritium]	A second monitor *nods sagely*
2014-05-29 19:22:18	mexi_d3	No, it's different from a second screen in a soft kind of way.
2014-05-29 19:22:43	-->	sec_ (fami@unaffiliated/sec/x-020333) has joined #python
2014-05-29 19:22:47	<--	johnkevinmbasco (~johnkevin@203.215.120.216) has quit (Ping timeout: 245 seconds)
2014-05-29 19:22:55	sec_	how optimise this?
2014-05-29 19:22:57	mexi_d3	For example I pick it up and thumb to turn the 'pages' and it just feels like a different learning experience
2014-05-29 19:23:29	<--	cmplxen (~cmplxen@unaffiliated/cmplxen) has quit (Quit: leaving)
2014-05-29 19:23:29	-->	bipolar (~bipolar@offsite.guru) has joined #python
2014-05-29 19:24:10	yates	mexi_d3: can you put your thumb in the index to hold your place while you turn to multiple page references? :)
2014-05-29 19:24:13	sec_	how optimise this? http://bpaste.net/show/H9It5kF1J7qXN37fUD7u/
2014-05-29 19:24:19	-->	guilhermebr (~guilherme@179.182.229.70) has joined #python
2014-05-29 19:24:35	<--	NeverGoWest (~Virus2000@93-163-178-102-static.dk.customer.tdc.net) has quit (Ping timeout: 240 seconds)
2014-05-29 19:24:54	<--	moldy (~asdf@unaffiliated/moldy) has quit (Read error: Connection reset by peer)
2014-05-29 19:24:55	-->	moldy_ (~asdf@unaffiliated/moldy) has joined #python
2014-05-29 19:25:32	mexi_d3	yates: They smell different too you know.
2014-05-29 19:25:47	yates	yes, visceral experience is important too
2014-05-29 19:26:01	-->	seaworthy (~seaworthy@unaffiliated/seaworthy) has joined #python
2014-05-29 19:26:03	-->	lowryder (~lowryder@pool-74-104-160-239.bstnma.fios.verizon.net) has joined #python
2014-05-29 19:26:15	<--	butterlove (~scott@cpe-66-65-90-122.nyc.res.rr.com) has left #python
2014-05-29 19:26:17	ari-_-e	sec_: MY EYESSSS
2014-05-29 19:26:34	ari-_-e	ok
2014-05-29 19:26:35	mexi_d3	I do actually hold the thing a bit lower with the thumb sort of across the front; it is a 'thumb in spine' gesture but adapted for digital
2014-05-29 19:26:39	ari-_-e	what on earth is this supposed to do
2014-05-29 19:26:41	-->	jalaziz (~jalaziz@76-217-208-122.lightspeed.sntcca.sbcglobal.net) has joined #python
2014-05-29 19:27:08	yates	mexi_d3: i also don't care for the licensing crap
2014-05-29 19:27:18	yates	i want to buy my book and OWN it.
2014-05-29 19:27:31	yates	in my hot little hands.
2014-05-29 19:27:43	yates	but to each his own.
2014-05-29 19:27:45	mexi_d3	yates: You can convert your ebooks to unprotected format quite easily
2014-05-29 19:28:03	yates	legally?
2014-05-29 19:28:13	yates	it's perfectly legal to buy a book.
2014-05-29 19:28:28	mexi_d3	I believe so but I never found out for sure.
2014-05-29 19:28:51	mexi_d3	It will depend on which jusistiction you are in as well.
2014-05-29 19:28:58	mexi_d3	juristiction
2014-05-29 19:29:02	<--	guilhermebr (~guilherme@179.182.229.70) has quit (Ping timeout: 255 seconds)
2014-05-29 19:29:05	yates	it doesn't matter to me - i prefer a book.
2014-05-29 19:29:33	nedbat	sec_: what are you trying to do in this code?
2014-05-29 19:30:05	<--	spec_ed (~spec_ed@c-98-203-32-130.hsd1.fl.comcast.net) has quit (Quit: meh)
2014-05-29 19:30:36	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 19:31:05	-->	codepython777 (~codepytho@c-69-244-213-227.hsd1.fl.comcast.net) has joined #python
2014-05-29 19:31:15	<--	boris317 (~boris317@unaffiliated/boris317) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 19:31:44	mexi_d3	21 levels
2014-05-29 19:31:47	<--	bipolar (~bipolar@offsite.guru) has quit (Ping timeout: 258 seconds)
2014-05-29 19:31:51	mexi_d3	I might have miscounted
2014-05-29 19:32:16	<--	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has quit
2014-05-29 19:32:25	sec_	ari-_-e: here is my last optimise, but it still too long run. http://bpaste.net/show/OKXcVOtCz03UelUquBHE/
2014-05-29 19:32:37	sec_	nedbat: it was old challenge
2014-05-29 19:32:41	nedbat	sec_: where did this problem come from?
2014-05-29 19:32:58	nedbat	sec_: first, don't use tabs to indent, this is impossible.  Use 4 spaces.
2014-05-29 19:33:00	ari-_-e	sec_: the problem is not just the runtime - the code is also completely ureadable
2014-05-29 19:33:15	ari-_-e	unreadable
2014-05-29 19:33:21	-->	BurritoBazooka (~Burrito@unaffiliated/burrito) has joined #python
2014-05-29 19:33:30	nedbat	sec_: why is x1 in the range 97 to 122?
2014-05-29 19:33:40	mexi_d3	I think I know what that code is. It's python. Specifically an ascii art python.
2014-05-29 19:33:58	-->	sertsa (~sertsa@69.39.10.209) has joined #python
2014-05-29 19:34:06	<--	BurritoBazooka (~Burrito@unaffiliated/burrito) has left #python
2014-05-29 19:34:20	sec_	yes, in range 'a..z'
2014-05-29 19:35:05	<--	DarkSector (~pronoy@unaffiliated/pronoy) has quit (Quit: ZNC - http://znc.in)
2014-05-29 19:35:21	-->	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has joined #python
2014-05-29 19:35:44	-->	DarkSector (~pronoy@unaffiliated/pronoy) has joined #python
2014-05-29 19:35:47	sec_	nedbat: it's sublimetext default indent
2014-05-29 19:35:57	nedbat	sec_: ok, change it
2014-05-29 19:36:06	-->	wong2 (~wong2@124.205.66.195) has joined #python
2014-05-29 19:36:46	<--	taion809 (~Nick@ool-43526e1b.dyn.optonline.net) has quit (Quit: 明天见)
2014-05-29 19:36:56	nedbat	sec_: also, this seems under-constrained, like there will be many answers.
2014-05-29 19:36:58	<--	al1o (~al1o@p4FF5439D.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2014-05-29 19:37:01	-->	andrewebdev (~andre@host-89-241-175-21.as13285.net) has joined #python
2014-05-29 19:37:36	-->	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has joined #python
2014-05-29 19:37:38	-->	ytrezq (~0x0EDFADE@2a02-8422-1191-6e00-56e6-fcff-fedb-2bba.rev.sfr.net) has joined #python
2014-05-29 19:37:39	<--	sertsa (~sertsa@69.39.10.209) has quit (Client Quit)
2014-05-29 19:38:04	introom	I compiled python by grabbing the source code hg.python.org/cpython. On my osx, when lanuching python, i can use tab to list all candidates.
2014-05-29 19:38:18	introom	on my remote ubuntu, tab won't list the candidates.
2014-05-29 19:38:37	<--	cparlette (~chris.par@pool-96-241-216-63.washdc.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2014-05-29 19:38:38	-->	Vivekananda (~Vivekanan@69.251.189.107) has joined #python
2014-05-29 19:38:43	introom	so I am missing some lib when compiling python3.5 on that ubuntu, but what dependecy is that?
2014-05-29 19:38:51	nedbat	introom: readline ?
2014-05-29 19:39:03	<--	SoftwareMaven (~Thunderbi@c-67-177-48-118.hsd1.ut.comcast.net) has quit (Quit: SoftwareMaven)
2014-05-29 19:39:05	sec_	nedbat: http://bpaste.net/show/lMgWr0890S5Af6NtdlQM/ here is 4 spaces only
2014-05-29 19:39:06	nedbat	introom: sorry, just a guess.
2014-05-29 19:39:18	-->	al1o (~al1o@p4FF54A70.dip0.t-ipconnect.de) has joined #python
2014-05-29 19:39:51	nedbat	sec_: why are lines 22-25 there?
2014-05-29 19:40:00	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 265 seconds)
2014-05-29 19:40:04	introom	nedbat: I would guess that too. I should give it a try.
2014-05-29 19:40:28	ytrezq	Hello, I know there's (?! ... ) with ISAAC(?!ASIMOV), but how to use it if there are several words beetween ISAAC en ASIMOV?
2014-05-29 19:40:35	<--	remmy444 (~tylll2595@CPE-121-209-169-226.msxz1.ken.bigpond.net.au) has quit (Quit: Leaving)
2014-05-29 19:40:51	<--	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has quit (Ping timeout: 252 seconds)
2014-05-29 19:40:53	<--	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has quit
2014-05-29 19:41:02	-->	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has joined #python
2014-05-29 19:41:18	ari-_-e	ytrezq: just put that in the regex?
2014-05-29 19:41:38	<--	jimmybot (~jimmybot@cpe-74-71-200-51.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-29 19:41:42	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 19:41:45	<--	naught101 (~naught101@129.94.8.137) has quit (Ping timeout: 258 seconds)
2014-05-29 19:41:53	ytrezq	ari-_-e: what? a space?   ?
2014-05-29 19:41:54	sec_	nedbat: it's debug line, forgot remove it, removed now: http://bpaste.net/show/5IMu2OjhtQ1PHxKyeWcN/
2014-05-29 19:42:14	-->	nitro25 (~nitro25@cpe-66-66-232-241.rochester.res.rr.com) has joined #python
2014-05-29 19:42:22	<--	Burgundy (~burgundy@5-12-74-32.residential.rdsnet.ro) has quit (Remote host closed the connection)
2014-05-29 19:42:27	<--	Watball (~Watball@f124242.upc-f.chello.nl) has quit (Quit: Leaving)
2014-05-29 19:42:33	-->	nguyt__ (~nguyt@c-24-16-77-218.hsd1.wa.comcast.net) has joined #python
2014-05-29 19:42:34	nedbat	sec_: I'm still curious about the challenge: it seems under-constrained.  Can you link to the challenge itself?
2014-05-29 19:42:53	-->	johnkevinmbasco (~johnkevin@203.215.120.216) has joined #python
2014-05-29 19:42:55	ytrezq	ari-_-e: Ah I see...
2014-05-29 19:43:06	ari-_-e	ytrezq: what's an example of something you'd want to match?
2014-05-29 19:43:31	ytrezq	ari-_-e: No. in my case the number of words vary...
2014-05-29 19:43:47	-->	guest_5698 (~efm@vpn.tummy.com) has joined #python
2014-05-29 19:43:47	--	guest_5698 is now known as efm_
2014-05-29 19:43:53	--	efm_ is now known as guest_5698
2014-05-29 19:44:00	<--	yacc_ (~quassel@84-113-164-165.dynamic.surfer.at) has quit (Ping timeout: 276 seconds)
2014-05-29 19:44:41	-->	meet_praveen (~Thunderbi@www.gscglass.com) has joined #python
2014-05-29 19:44:42	<--	guest_5698 (~efm@vpn.tummy.com) has left #python ("Konversation terminated!")
2014-05-29 19:45:12	sec_	nedbat: can i pm link?
2014-05-29 19:45:18	<--	gopar (~gopar@c-76-102-222-91.hsd1.ca.comcast.net) has quit (Quit: Leaving)
2014-05-29 19:45:30	nedbat	sec_: hmm, if you want to pm it, that makes me suspicious....
2014-05-29 19:45:36	ytrezq	Currently, '(?i)\b(ch)oe(urs?\b)(?!(JPG)' match "choeur église St Martin.JPG" as well as 'le choeur de l'église". I want it to not match "choeur église St Martin.JPG"
2014-05-29 19:45:37	<--	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-29 19:45:38	ari-_-e	sec_: is it private? I'm also curious
2014-05-29 19:46:07	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 245 seconds)
2014-05-29 19:46:18	ytrezq	ari-_-e: private? I don't understand???
2014-05-29 19:46:46	ari-_-e	ytrezq: that wasn't directed at you...
2014-05-29 19:47:12	ytrezq	ari-_-e: sorry :\
2014-05-29 19:47:59	-->	eoss (~e0s@pdpc/supporter/student/eoss) has joined #python
2014-05-29 19:48:01	-->	QBob (~qbob@amarok/developer/qbob) has joined #python
2014-05-29 19:48:02	ytrezq	'(?i)\b(ch)oe(urs?\b)(?!JPG)'
2014-05-29 19:48:25	<--	softwaredoug (~quassel@c-76-104-27-79.hsd1.va.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-29 19:48:49	-->	kushal3 (~kushal3@188-146.dorm.minotstateu.edu) has joined #python
2014-05-29 19:49:01	<--	meet_praveen (~Thunderbi@www.gscglass.com) has quit (Ping timeout: 252 seconds)
2014-05-29 19:49:25	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 258 seconds)
2014-05-29 19:49:31	<--	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has quit (Quit: Leaving)
2014-05-29 19:49:53	eoss	how does telnet client know when telnet server is finished sending data?
2014-05-29 19:50:31	ari-_-e	eoss: that would be handled by protocols further up the stack
2014-05-29 19:50:33	ari-_-e	tcp/ip
2014-05-29 19:50:34	<--	Snake2k (~snake2k@ip68-100-207-22.dc.dc.cox.net) has quit (Quit: Lost terminal)
2014-05-29 19:50:36	ytrezq	ari-_-e: Do you have any ideas?
2014-05-29 19:50:49	<--	kcj (~kcj@unaffiliated/kcj) has quit (Remote host closed the connection)
2014-05-29 19:50:58	ari-_-e	ytrezq: hm..
2014-05-29 19:51:31	ytrezq	clearer '(?i)\b(ch)oe(urs?\b)      (?!JPG)'
2014-05-29 19:51:33	<--	DarkSector (~pronoy@unaffiliated/pronoy) has quit (Quit: ZNC - http://znc.in)
2014-05-29 19:51:41	<--	bkuberek (~bkuberek@74.72.159.31) has quit (Remote host closed the connection)
2014-05-29 19:51:47	<--	mahmoudimus (~mahmoudim@199.241.202.154) has quit (Ping timeout: 240 seconds)
2014-05-29 19:51:48	<--	_Atom_ (~jawat@172.56.9.57) has quit (Read error: Connection reset by peer)
2014-05-29 19:51:51	-->	frothnicator (~frothy@unaffiliated/frothnicator) has joined #python
2014-05-29 19:52:18	-->	_Atom_ (~jawat@172.56.9.57) has joined #python
2014-05-29 19:52:27	eoss	ari-_-e: can you explain more? I thought it was the telnet application thats supposed to know this..
2014-05-29 19:52:28	-->	naught101 (~naught101@129.94.8.137) has joined #python
2014-05-29 19:52:35	-->	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has joined #python
2014-05-29 19:52:54	ari-_-e	ytrezq: are you just checking for a yes/no match or are you doing replacement/group capture or anything?
2014-05-29 19:52:56	eoss	you know how in socket programming the programmer has to create how they will communicate...fixed length data..delimeters..
2014-05-29 19:53:28	--	TheReverend403 is now known as Rev|SleepingFox
2014-05-29 19:53:29	-->	mikemac (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has joined #python
2014-05-29 19:53:58	-->	DarkSector (~pronoy@unaffiliated/pronoy) has joined #python
2014-05-29 19:54:02	<--	johnkevinmbasco (~johnkevin@203.215.120.216) has quit (Ping timeout: 245 seconds)
2014-05-29 19:54:04	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-29 19:54:09	<--	crazymykl (~mikemac@209-6-237-156.c3-0.wrx-ubr1.sbo-wrx.ma.cable.rcn.com) has quit (Read error: Connection reset by peer)
2014-05-29 19:54:23	ytrezq	ari-_-e: I am replacing "choeur" except if it is followed by ".jpg"
2014-05-29 19:54:32	ari-_-e	hm
2014-05-29 19:54:47	ytrezq	on the line...
2014-05-29 19:54:51	ari-_-e	ytrezq: I guess you can just put in a zero-width match for anything then?
2014-05-29 19:55:29	ytrezq	ari-_-e: After several tries, I can't find where to put it...
2014-05-29 19:55:52	ari-_-e	ytrezq: between the pattern for choeur and jpg?
2014-05-29 19:56:05	ari-_-e	sometimes the interaction between the zero-width things can be weird
2014-05-29 19:56:06	-->	eggsmiao (~cat@222.95.204.99) has joined #python
2014-05-29 19:56:45	sec_	ari-_-e: i pm to nedbat
2014-05-29 19:56:48	ari-_-e	I don't know whether putting a negative lookahead assertion after a positive one will behave as expected
2014-05-29 19:57:08	<--	mgrouchy (~mgrouchy@CPE00259c2e72ce-CMbcc810005578.cpe.net.cable.rogers.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2014-05-29 19:57:20	ari-_-e	eoss: IP packets have a length field
2014-05-29 19:57:53	ari-_-e	and then TCP has some stuff for splitting data into segments
2014-05-29 19:58:01	eoss	yes but thats the packets length, not the underlying protocol's message length, which would be in multiple packets
2014-05-29 19:58:26	-->	grg (817f6b8b@gateway/web/freenode/ip.129.127.107.139) has joined #python
2014-05-29 19:58:51	eoss	there is an architecture most application later protocols follow and they will determine message length
2014-05-29 19:59:52	-->	thinkxl (~Adium@207-91-184-235.nstci.net) has joined #python
2014-05-29 20:00:39	ari-_-e	I guess maybe it just doesn't matter as much for telnet
2014-05-29 20:00:45	<--	eggsmiao (~cat@222.95.204.99) has quit (Ping timeout: 252 seconds)
2014-05-29 20:00:57	<--	saml_ (~saml@pool-71-190-4-101.nycmny.east.verizon.net) has quit (Remote host closed the connection)
2014-05-29 20:01:04	<--	kexmex (~kexmex@ool-4a586221.dyn.optonline.net) has quit (Quit: Computer has gone to sleep.)
2014-05-29 20:01:23	-->	bitcraft_ (~bitcraft@173-23-165-139.client.mchsi.com) has joined #python
2014-05-29 20:01:26	<--	aretecode (~aretecode@173.192.170.114-static.reverse.softlayer.com) has quit (Ping timeout: 255 seconds)
2014-05-29 20:01:28	nedbat	sec_: i would find the possible x values first:  this takes 2 seconds to enumerate the 3 million possibilities: http://paste.pound-python.org/show/kaT4C7IClFd1fqZPPs1G/
2014-05-29 20:01:32	<--	_Atom_ (~jawat@172.56.9.57) has quit (Ping timeout: 245 seconds)
2014-05-29 20:01:44	nedbat	sec_: then find the rest, though I still think there are many answers.
2014-05-29 20:01:45	<--	_fmm (~freemymin@pdpc/supporter/professional/freemymind) has quit (Ping timeout: 252 seconds)
2014-05-29 20:01:55	-->	kcj (~kcj@unaffiliated/kcj) has joined #python
2014-05-29 20:02:05	--	bitcraft_ is now known as bitcraft_home
2014-05-29 20:02:08	<--	nedbat (~nedbat@python/psf/nedbat) has quit
2014-05-29 20:02:33	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined #python
2014-05-29 20:02:55	<--	Cruel` (~Cruel`@gateway/tor-sasl/cruel/x-83135588) has quit (Quit: Leaving)
2014-05-29 20:03:27	<--	nitro25 (~nitro25@cpe-66-66-232-241.rochester.res.rr.com) has quit (Quit: end of line)
2014-05-29 20:03:36	-->	_fmm (~freemymin@pdpc/supporter/professional/freemymind) has joined #python
2014-05-29 20:03:38	<--	beachandbytes (~beachandb@cpe-98-150-247-49.hawaii.res.rr.com) has quit (Ping timeout: 240 seconds)
2014-05-29 20:04:14	<--	ColdKeyboard (~coldkeybo@cable-188-2-9-220.dynamic.sbb.rs) has quit
2014-05-29 20:04:14	-->	johnkevinmbasco (~johnkevin@203.215.120.216) has joined #python
2014-05-29 20:05:27	<--	braincrash (~braincras@bl14-213-147.dsl.telepac.pt) has quit (Quit: bye bye)
2014-05-29 20:05:39	<--	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has quit (Remote host closed the connection)
2014-05-29 20:06:28	<--	Burrito (~Burrito@unaffiliated/burrito) has quit (Quit: Leaving)
2014-05-29 20:07:21	-->	mkenny_laptop (~matt@173-160-205-2-Washington.hfc.comcastbusiness.net) has joined #python
2014-05-29 20:08:36	-->	eggsmiao (~cat@222.95.204.99) has joined #python
2014-05-29 20:09:00	SrPx	What is a good lib that allows pubsup opening a TCP server?
2014-05-29 20:09:08	-->	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-29 20:09:15	-->	Mrokii_ (~Mrokii@planeshift/bugs/Mrokii) has joined #python
2014-05-29 20:09:24	-->	braincrash (~braincras@bl14-213-147.dsl.telepac.pt) has joined #python
2014-05-29 20:10:03	dash	SrPx: what do you want to do?
2014-05-29 20:10:25	--	CP|AFK is now known as CyrilPeponnet
2014-05-29 20:11:09	-->	jkyle (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-29 20:11:23	SrPx	dash: a pubsub service (school assignment) (actually a friend's question, I suggested using python + tcp server, but I don't know which lib for a tcp server I suggest)
2014-05-29 20:11:37	SrPx	as I don't know many for python
2014-05-29 20:11:45	<--	firecat53 (~firecat53@c-98-225-17-95.hsd1.wa.comcast.net) has quit (Ping timeout: 252 seconds)
2014-05-29 20:11:49	-->	cpc26 (~cpc26@fsf/member/cpc26) has joined #python
2014-05-29 20:12:07	<--	Mrokii (~Mrokii@planeshift/bugs/Mrokii) has quit (Ping timeout: 252 seconds)
2014-05-29 20:12:08	--	Mrokii_ is now known as Mrokii
2014-05-29 20:12:39	<--	mrkz (~mark@187.244.15.18) has quit (Quit: Leaving.)
2014-05-29 20:13:15	-->	foxygrandpa (foxygrandp@bb116-15-18-75.singnet.com.sg) has joined #python
2014-05-29 20:13:27	-->	LSC (b1c0b51c@gateway/web/freenode/ip.177.192.181.28) has joined #python
2014-05-29 20:13:27	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Read error: Connection reset by peer)
2014-05-29 20:14:02	-->	felipeduardo (~felipedua@189.103.154.158) has joined #python
2014-05-29 20:14:11	-->	butterlove (~scott@cpe-66-65-90-122.nyc.res.rr.com) has joined #python
2014-05-29 20:14:16	-->	invapid (~invapid@70-119-195-67.res.bhn.net) has joined #python
2014-05-29 20:14:27	<--	ThatOtherGuy (~TOGP]@unaffiliated/thatotherguy) has quit (Read error: Connection reset by peer)
2014-05-29 20:14:35	<--	butterlove (~scott@cpe-66-65-90-122.nyc.res.rr.com) has left #python
2014-05-29 20:14:54	--	CyrilPeponnet is now known as CP|AFK
2014-05-29 20:15:32	invapid	really simple question: anyway to write (http://pastebin.com/SEn7rTPX) better
2014-05-29 20:15:35	infobob	http://paste.pound-python.org/show/yh9vr7slHpEPHVVrl8qT/ (repasted for invapid)
2014-05-29 20:16:08	invapid	(goal is to re-use articles for future stuff in the for loop)
2014-05-29 20:16:29	-->	Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has joined #python
2014-05-29 20:18:11	therealfakemoot	invapid: how about you pastebin the full code and try asking more specific questions
2014-05-29 20:18:22	-->	JerryT (~jerryt@ip24-252-42-26.om.om.cox.net) has joined #python
2014-05-29 20:18:25	SrPx	nobody?
2014-05-29 20:18:44	<--	JerryT (~jerryt@ip24-252-42-26.om.om.cox.net) has quit (Max SendQ exceeded)
2014-05-29 20:19:12	preaction	srpx: zeromq and tornado
2014-05-29 20:19:27	SrPx	will take a look, thanks!
2014-05-29 20:19:45	joshlegs	ugh. is there an easy way to test python xlwt ?
2014-05-29 20:19:50	-->	JerryT (~jerryt@ip24-252-42-26.om.om.cox.net) has joined #python
2014-05-29 20:20:07	-->	randomshop (~Random@220-244-125-22.static.tpgi.com.au) has joined #python
2014-05-29 20:21:08	-->	Zigtalk (~Zigtalk@cpe-72-182-60-182.austin.res.rr.com) has joined #python
2014-05-29 20:21:43	<--	cpc26 (~cpc26@fsf/member/cpc26) has quit
2014-05-29 20:23:31	jr3	jeez man idle is anal about identations
2014-05-29 20:24:04	Ofek	how do I create a list of what an iterater yields using a one line list comprehension?
2014-05-29 20:24:26	JamesNZ	jr3: Don't use IDLE :P
2014-05-29 20:24:28	<--	dray3 (~daaray@cpe-173-095-178-019.nc.res.rr.com) has quit (Quit: Leaving.)
2014-05-29 20:24:30	JamesNZ	(seriously)
2014-05-29 20:24:53	<--	log` (~rockit@80-71-132-48.u.parknet.dk) has quit (Ping timeout: 264 seconds)
2014-05-29 20:24:57	<--	Like2HlpU-Laptop (~EA08BA8F5@unaffiliated/ea08ba8f51) has quit (Ping timeout: 265 seconds)
2014-05-29 20:25:02	[Tritium]	Dont use idle.  but it does coach indentation correctly
2014-05-29 20:25:05	<--	smue (~smue@gateway/tor-sasl/smue) has quit (Remote host closed the connection)
2014-05-29 20:25:05	<--	sr (~smrgr@shellium/member/samruger) has quit (Remote host closed the connection)
2014-05-29 20:25:05	<--	sgviking (~sgviking@gateway/tor-sasl/sgviking) has quit (Remote host closed the connection)
2014-05-29 20:25:05	<--	MouldyOldBones (~mob@gateway/tor-sasl/mouldyoldbones) has quit (Read error: Connection reset by peer)
2014-05-29 20:25:05	<--	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has quit (Write error: Connection reset by peer)
2014-05-29 20:25:05	<--	flax (~flax@gateway/tor-sasl/flax) has quit (Remote host closed the connection)
2014-05-29 20:25:05	<--	McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Read error: Connection reset by peer)
2014-05-29 20:25:05	<--	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has quit (Remote host closed the connection)
2014-05-29 20:25:05	<--	isomorphic (~isomorphi@gateway/tor-sasl/isomorphic) has quit (Write error: Broken pipe)
2014-05-29 20:25:05	<--	_joe_ (~joe@wikimedia/GLavagetto-WMF) has quit (Write error: Broken pipe)
2014-05-29 20:25:05	<--	BC517 (~j@gateway/tor-sasl/lattes) has quit (Write error: Broken pipe)
2014-05-29 20:25:05	<--	rabidfurby (~zack@gateway/tor-sasl/rabidfurby) has quit (Write error: Broken pipe)
2014-05-29 20:25:05	<--	causasui (~causasui@wikipedia/causa-sui) has quit (Write error: Broken pipe)
2014-05-29 20:25:05	<--	z0ran (~z0ran@gateway/tor-sasl/z0ran) has quit (Write error: Connection reset by peer)
2014-05-29 20:25:05	<--	gazprom (~gazprom@gateway/tor-sasl/gazprom) has quit (Write error: Connection reset by peer)
2014-05-29 20:25:11	jr3	yea, just downloaded pycharm
2014-05-29 20:25:14	preaction	Ofek: doesn't list( iterable ) do that?
2014-05-29 20:25:18	<--	buck1 (~buck1@72-18-233-188.static-ip.telepacific.net) has quit (Ping timeout: 240 seconds)
2014-05-29 20:25:27	-->	guilhermebr (~guilherme@179.182.229.70) has joined #python
2014-05-29 20:26:00	joshlegs	jr3: nice! the new version is out today.
2014-05-29 20:26:32	-->	CrypticByte (~CrypticBy@c-50-157-50-116.hsd1.ms.comcast.net) has joined #python
2014-05-29 20:26:38	-->	Like2HlpU-Laptop (~EA08BA8F5@unaffiliated/ea08ba8f51) has joined #python
2014-05-29 20:26:44	-->	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has joined #python
2014-05-29 20:26:45	Ofek	preaction, I'm a complete idiot haha, ty
2014-05-29 20:27:45	<--	phracker (~phracker@unaffiliated/phracker) has quit (Ping timeout: 258 seconds)
2014-05-29 20:27:54	-->	kerrick_ (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has joined #python
2014-05-29 20:29:19	-->	phracker (~phracker@unaffiliated/phracker) has joined #python
2014-05-29 20:30:11	<--	kerrick (~kerrick@50-196-159-42-static.hfc.comcastbusiness.net) has quit (Ping timeout: 240 seconds)
2014-05-29 20:30:16	<--	guilhermebr (~guilherme@179.182.229.70) has quit (Ping timeout: 265 seconds)
2014-05-29 20:30:49	-->	meet_praveen (~Thunderbi@www.gscglass.in) has joined #python
2014-05-29 20:31:34	-->	yrter (~yrter@unaffiliated/yrter) has joined #python
2014-05-29 20:31:49	-->	bocaneri (~bocaneri_@about/linux/staff/sauvin) has joined #python
2014-05-29 20:32:11	jr3	when you call sorted what is the underlying sort? does it depend on what's passed? is it always n*log n
2014-05-29 20:32:22	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 245 seconds)
2014-05-29 20:34:10	-->	wagnerrp (~wagnerrp_@mythtv/developer/wagnerrp) has joined #python
2014-05-29 20:34:26	-->	isomorphic (~isomorphi@gateway/tor-sasl/isomorphic) has joined #python
2014-05-29 20:34:35	ari-_-e	jr3: it's called timsort
2014-05-29 20:34:45	-->	smue (~smue@gateway/tor-sasl/smue) has joined #python
2014-05-29 20:34:47	-->	sr (~smrgr@shellium/member/samruger) has joined #python
2014-05-29 20:34:49	ari-_-e	http://en.wikipedia.org/wiki/Timsort
2014-05-29 20:35:05	<--	sr (~smrgr@shellium/member/samruger) has quit (Client Quit)
2014-05-29 20:35:23	-->	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has joined #python
2014-05-29 20:35:25	-->	_joe_ (~joe@wikimedia/GLavagetto-WMF) has joined #python
2014-05-29 20:35:40	ari-_-e	no self-respecting sort algorithm is worst than log linear :)
2014-05-29 20:36:04	-->	sr (~smrgr@shellium/member/samruger) has joined #python
2014-05-29 20:36:19	-->	MouldyOldBones (~mob@gateway/tor-sasl/mouldyoldbones) has joined #python
2014-05-29 20:36:23	-->	white_widow (~white_wid@gateway/tor-sasl/whitewidow/x-48282891) has joined #python
2014-05-29 20:36:49	jr3	heh
2014-05-29 20:37:32	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2014-05-29 20:37:38	jr3	best case is o(n) when the entire list is sorted "run"
2014-05-29 20:37:41	jr3	?
2014-05-29 20:38:13	-->	flax (~flax@gateway/tor-sasl/flax) has joined #python
2014-05-29 20:38:21	-->	pretty_function (~pretty_fu@61.12.96.10) has joined #python
2014-05-29 20:38:36	<--	Stealth (stealth@sourcemage/archon/stealth) has quit (Ping timeout: 276 seconds)
2014-05-29 20:38:43	<--	foxygrandpa (foxygrandp@bb116-15-18-75.singnet.com.sg) has quit (Ping timeout: 260 seconds)
2014-05-29 20:38:58	<--	invapid (~invapid@70-119-195-67.res.bhn.net) has quit (Ping timeout: 240 seconds)
2014-05-29 20:39:31	-->	ivanf (~ivan@unaffiliated/kferdous) has joined #python
2014-05-29 20:40:08	ari-_-e	it describes what runs are
2014-05-29 20:40:38	-->	McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has joined #python
2014-05-29 20:40:39	-->	BC517 (~j@gateway/tor-sasl/lattes) has joined #python
2014-05-29 20:40:44	-->	gazprom (~gazprom@gateway/tor-sasl/gazprom) has joined #python
2014-05-29 20:40:47	-->	rabidfurby (~zack@gateway/tor-sasl/rabidfurby) has joined #python
2014-05-29 20:41:40	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 20:42:38	<--	eggsmiao (~cat@222.95.204.99) has quit (Ping timeout: 240 seconds)
2014-05-29 20:43:09	<--	rezzack (~rezzack@unaffiliated/rezzack) has quit (Ping timeout: 276 seconds)
2014-05-29 20:43:46	<--	amstan (~alex@aichallenge/admin/amstan) has quit (Quit: Konversation terminated!)
2014-05-29 20:44:17	<--	seangrove (~user@50-0-185-254.dsl.dynamic.sonic.net) has quit (Ping timeout: 265 seconds)
2014-05-29 20:44:40	<--	windyhouser (~windyhous@c-69-138-47-77.hsd1.ms.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 20:44:57	sec_	nedbat: are you there?
2014-05-29 20:45:28	[Tritium]	sec_: its a good bet that if they are not in the nicklist, they are not here :)
2014-05-29 20:46:03	<--	ytrezq (~0x0EDFADE@2a02-8422-1191-6e00-56e6-fcff-fedb-2bba.rev.sfr.net) has left #python ("Konversation terminated!")
2014-05-29 20:46:32	<--	felipeduardo (~felipedua@189.103.154.158) has quit (Remote host closed the connection)
2014-05-29 20:46:49	sec_	[Tritium]: thanks,
2014-05-29 20:47:03	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 276 seconds)
2014-05-29 20:47:03	<--	Irrelium (~Irrelium@ryanmck.net) has quit (Ping timeout: 276 seconds)
2014-05-29 20:48:18	-->	Lemony (~textual@cpc50-slam6-2-0-cust27.2-4.cable.virginm.net) has joined #python
2014-05-29 20:50:20	<--	eka (~eka@190.237.10.159) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2014-05-29 20:50:53	-->	The-Mad-Pirate (~leandro@186.4.115.194) has joined #python
2014-05-29 20:51:19	<--	Bung_ (b8a71459@gateway/web/freenode/ip.184.167.20.89) has quit (Quit: Page closed)
2014-05-29 20:51:39	sec_	[Tritium]: could you help?
2014-05-29 20:51:46	<--	blurrr (~blurrr@27-32-139-62.static.tpgi.com.au) has quit (Remote host closed the connection)
2014-05-29 20:52:03	-->	ProfessorKaos64 (~mikeyd@70.15.183.48.res-cmts.dnh.ptd.net) has joined #python
2014-05-29 20:53:55	-->	bikeshedder__ (~bikeshedd@dslb-178-004-068-107.pools.arcor-ip.net) has joined #python
2014-05-29 20:56:30	--	mostly_d34dh0r53 is now known as d34dh0r53
2014-05-29 20:56:51	-->	neataroni (~neataroni@c-67-171-200-129.hsd1.or.comcast.net) has joined #python
2014-05-29 20:57:29	<--	bikeshedder_ (~bikeshedd@dslb-178-004-069-251.pools.arcor-ip.net) has quit (Ping timeout: 252 seconds)
2014-05-29 20:57:54	Dabo	/ns info <user> can be useful for telling when someone was last on also, just fyi
2014-05-29 20:58:14	<--	yuwang (~yuwang@114.113.122.191) has quit (Quit: Leaving)
2014-05-29 20:58:27	<--	eoss (~e0s@pdpc/supporter/student/eoss) has quit (Read error: Connection reset by peer)
2014-05-29 20:59:56	-->	satyajit (~satyajit@122.169.67.195) has joined #python
2014-05-29 21:01:01	<--	Megtastique (~Megtastiq@76-10-176-194.dsl.teksavvy.com) has quit
2014-05-29 21:01:16	-->	Synthead (~max@c-71-231-120-93.hsd1.wa.comcast.net) has joined #python
2014-05-29 21:03:00	-->	Stealth (stealth@sourcemage/archon/stealth) has joined #python
2014-05-29 21:03:06	<--	donspaulding (~donspauld@71.201.172.43) has quit (Quit: donspaulding)
2014-05-29 21:03:23	<--	Salvakiya (~Salvakiya@pool-100-32-234-17.lsanca.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2014-05-29 21:03:53	-->	wolrah_ (~wolrah@24.239.210.140) has joined #python
2014-05-29 21:04:03	<--	p1ro (~p1ro@gentoo/user/p1ro) has quit (Quit: Leaving)
2014-05-29 21:04:13	<--	centrapheta (ampharmex@2a00:dcc0:eda:3748:247:48:123:b33f) has quit (Remote host closed the connection)
2014-05-29 21:04:50	-->	Gambit- (~Gambit-@unaffiliated/gambit-) has joined #python
2014-05-29 21:04:53	<--	wolrah (~wolrah@24.239.210.140) has quit (Ping timeout: 255 seconds)
2014-05-29 21:08:39	-->	Salvakiya (~Salvakiya@pool-100-32-234-17.lsanca.fios.verizon.net) has joined #python
2014-05-29 21:09:08	-->	jkyle (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-29 21:09:33	<--	LSC (b1c0b51c@gateway/web/freenode/ip.177.192.181.28) has quit (Quit: Page closed)
2014-05-29 21:09:35	-->	wildtype (~wildtype@S01060026bb73d29f.vc.shawcable.net) has joined #python
2014-05-29 21:10:06	<--	amargherio (~MarioEIU@107-192-152-221.lightspeed.rcsntx.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-05-29 21:10:58	<--	magicflakes (~cellopin@202.78.127.130) has quit (Quit: Lost Connection)
2014-05-29 21:12:28	<--	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has quit (Quit: jr3)
2014-05-29 21:12:50	-->	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has joined #python
2014-05-29 21:13:07	<--	jr3 (~jr3@23-125-85-50.lightspeed.hstntx.sbcglobal.net) has quit (Client Quit)
2014-05-29 21:14:41	<--	mkenny_laptop (~matt@173-160-205-2-Washington.hfc.comcastbusiness.net) has quit (Quit: mkenny_laptop)
2014-05-29 21:15:27	<--	Gentilhomme (~Gentilhom@unaffiliated/gentilhomme) has quit (Remote host closed the connection)
2014-05-29 21:15:33	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 252 seconds)
2014-05-29 21:15:36	-->	thebearbear (~iamthebem@adsl-69-105-10-60.dsl.chic01.pacbell.net) has joined #python
2014-05-29 21:16:29	<--	jamphat (~jamphat@66-44-29-175.c3-0.129-ubr1.lnh-129.md.cable.rcn.com) has quit (Ping timeout: 264 seconds)
2014-05-29 21:16:31	-->	bipolar (~bipolar@offsite.guru) has joined #python
2014-05-29 21:16:32	-->	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has joined #python
2014-05-29 21:16:32	<--	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has quit (Client Quit)
2014-05-29 21:16:48	<--	plutoniix (~plutoniix@node-p78.pool-101-108.dynamic.totbb.net) has quit (Quit: จรลี จรลา)
2014-05-29 21:17:02	<--	mattallmill (1000@129.130.175.163) has quit (Quit: Konversation terminated!)
2014-05-29 21:18:16	-->	rudedogg (~rudedogg@unaffiliated/rudedogg) has joined #python
2014-05-29 21:18:56	-->	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has joined #python
2014-05-29 21:19:35	<--	simplisity (~simplisit@cpe-108-184-173-172.socal.res.rr.com) has quit (Ping timeout: 252 seconds)
2014-05-29 21:20:28	-->	kayatwork (~kayfox@orca.zerda.net) has joined #python
2014-05-29 21:21:02	<--	agjacome (~agjacome@181.217.11.37.dynamic.jazztel.es) has quit (Ping timeout: 258 seconds)
2014-05-29 21:21:30	<--	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has quit (Ping timeout: 276 seconds)
2014-05-29 21:22:53	<--	wong2 (~wong2@124.205.66.195) has quit (Ping timeout: 255 seconds)
2014-05-29 21:23:12	<--	Windy (~Windwaker@71.13.116.52) has quit (Ping timeout: 245 seconds)
2014-05-29 21:23:38	-->	wong2 (~wong2@124.205.66.195) has joined #python
2014-05-29 21:23:40	-->	plutoniix (~plutoniix@node-oaw.pool-101-108.dynamic.totbb.net) has joined #python
2014-05-29 21:25:57	-->	Windwaker (~Windwaker@71.13.116.52) has joined #python
2014-05-29 21:27:00	-->	mkenny_laptop (~matt@173-160-205-2-Washington.hfc.comcastbusiness.net) has joined #python
2014-05-29 21:27:07	-->	kjn (~kjn@24-136-26-109.c3-0.lem-ubr2.chi-lem.il.cable.rcn.com) has joined #python
2014-05-29 21:27:21	<--	adamsilver (~Adium@CKVLON0127W-LP130-03-845429720.dsl.bell.ca) has left #python
2014-05-29 21:28:15	<--	cesar_bo (uid17588@gateway/web/irccloud.com/x-dzrmcfobtqlcjvuz) has quit (Quit: Connection closed for inactivity)
2014-05-29 21:29:30	-->	mipo (~morteza@5.237.198.54) has joined #python
2014-05-29 21:29:38	<--	wilornel (93c20985@gateway/web/freenode/ip.147.194.9.133) has quit (Quit: Page closed)
2014-05-29 21:31:00	<--	wildtype (~wildtype@S01060026bb73d29f.vc.shawcable.net) has quit (Quit: Lingo - http://lingoirc.com)
2014-05-29 21:31:52	-->	aps-sids (aps@ip4-198-52-200-16.dal0.bnc.im) has joined #python
2014-05-29 21:32:41	<--	pretty_function (~pretty_fu@61.12.96.10) has quit (Ping timeout: 252 seconds)
2014-05-29 21:33:24	<--	satyajit (~satyajit@122.169.67.195) has quit (Remote host closed the connection)
2014-05-29 21:33:36	<--	jvv (~jvv@212.91.29.34) has left #python ("I'm gone...")
2014-05-29 21:33:56	aps-sids	Hello everyone. I'm new to python and have a doubt. Please see this output from ipython. http://paste.ubuntu.com/7548660/ I'm missing something here and not sure exactly how to use Gst.TIME_FORMAT. Basically, I need to pass a long int and get output in hh:mm:ss format. Can someone please help me out here?
2014-05-29 21:34:09	-->	teion (Elite9700@gateway/shell/elitebnc/x-yizbpaxjhoblfeny) has joined #python
2014-05-29 21:34:25	-->	satyajit (~satyajit@122.169.67.195) has joined #python
2014-05-29 21:34:48	<--	diverdude (5056d25d@gateway/web/freenode/ip.80.86.210.93) has quit (Ping timeout: 240 seconds)
2014-05-29 21:35:04	-->	kushal2 (~kushal3@188-146.dorm.minotstateu.edu) has joined #python
2014-05-29 21:35:37	<--	teion (Elite9700@gateway/shell/elitebnc/x-yizbpaxjhoblfeny) has left #python ("WeeChat 0.3.7")
2014-05-29 21:35:37	Lacriatch	aps-sids: The thing you're trying to call is a string representing a format
2014-05-29 21:35:47	Lacriatch	aps-sids: It doesn't convert to a format itself
2014-05-29 21:36:07	--	d34dh0r53 is now known as mostly_d34dh0r53
2014-05-29 21:37:22	<--	kushal3 (~kushal3@188-146.dorm.minotstateu.edu) has quit (Ping timeout: 245 seconds)
2014-05-29 21:37:37	-->	chaobin (chaobin@nat/redhat/x-igwqfqikcfscknva) has joined #python
2014-05-29 21:38:05	<--	seaworthy (~seaworthy@unaffiliated/seaworthy) has quit (Quit: seaworthy)
2014-05-29 21:38:14	aps-sids	Lacriatch: Thanks. I think I figured it out. We can use something like Gst.TIME_FORMAT % (1,2,3) and convert it to this string format
2014-05-29 21:38:24	<--	eeriegeek (~eeriegeek@c-98-244-112-229.hsd1.va.comcast.net) has quit (Ping timeout: 276 seconds)
2014-05-29 21:38:35	Lacriatch	aps-sids: Where are you getting 'Gst' from?
2014-05-29 21:38:50	-->	monzinator (~chatzilla@pool-108-2-128-33.phlapa.fios.verizon.net) has joined #python
2014-05-29 21:39:13	aps-sids	Lacriatch: this is a library string of Gstreamer
2014-05-29 21:39:24	Lacriatch	Ah
2014-05-29 21:39:25	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-29 21:39:32	Lacriatch	aps-sids: Print it and tell me what it shows
2014-05-29 21:39:45	Lacriatch	Just 'print Gst.TIME_FORMAT'
2014-05-29 21:39:45	<--	monzinator (~chatzilla@pool-108-2-128-33.phlapa.fios.verizon.net) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 29.0.1/20140506152807])
2014-05-29 21:39:51	sec_	ari-_-e: hi
2014-05-29 21:40:02	<--	satyajit (~satyajit@122.169.67.195) has quit (Remote host closed the connection)
2014-05-29 21:40:26	aps-sids	Lacriatch:  'u:01:02.000000003'
2014-05-29 21:40:26	<--	aholmberg (~aholmberg@64.202.160.233) has quit (Ping timeout: 255 seconds)
2014-05-29 21:40:29	<--	mipo (~morteza@5.237.198.54) has left #python
2014-05-29 21:40:34	<--	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has left #python
2014-05-29 21:40:39	-->	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has joined #python
2014-05-29 21:40:45	Lacriatch	aps-sids: Without your % stuff
2014-05-29 21:41:00	<--	daniel-s (~daniel-s@AToulouse-552-1-156-101.w86-206.abo.wanadoo.fr) has quit (Ping timeout: 276 seconds)
2014-05-29 21:41:13	-->	simplisity (~simplisit@cpe-108-184-173-172.socal.res.rr.com) has joined #python
2014-05-29 21:41:13	Lacriatch	aps-sids: How does your 'long int' work? Is it just a UNIX timestamp?
2014-05-29 21:41:21	<--	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has left #python
2014-05-29 21:41:24	-->	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has joined #python
2014-05-29 21:41:36	-->	sgviking (~sgviking@gateway/tor-sasl/sgviking) has joined #python
2014-05-29 21:41:40	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 21:42:06	-->	pingbat_ (~pingbat@f052209021.adsl.alicedsl.de) has joined #python
2014-05-29 21:42:09	<--	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has left #python
2014-05-29 21:42:09	-->	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has joined #python
2014-05-29 21:42:15	dash	 o/` the short is no longer than the long o/`
2014-05-29 21:42:35	aps-sids	Lacriatch: oops, I posted out put after using %.  Without using % stuff, it gives 'u:%02u:%02u.%09u'
2014-05-29 21:42:42	aps-sids	and yeah its UNIX timestamp
2014-05-29 21:42:51	<--	Gambit- (~Gambit-@unaffiliated/gambit-) has left #python
2014-05-29 21:42:52	<--	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has left #python
2014-05-29 21:42:54	-->	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has joined #python
2014-05-29 21:43:00	-->	hwrdprkns (~textual@unaffiliated/hwrdprkns) has joined #python
2014-05-29 21:43:02	Lacriatch	aps-sids: I don't think you're doing what you want to do correctly
2014-05-29 21:43:41	<--	pingbat (~pingbat@f051066148.adsl.alicedsl.de) has quit (Ping timeout: 252 seconds)
2014-05-29 21:43:41	--	pingbat_ is now known as pingbat
2014-05-29 21:43:42	Lacriatch	aps-sids: That format looks like it's for minutes + seconds + milliseconds
2014-05-29 21:43:55	<--	nodern (bs@gateway/shell/bouncerstation/x-bynxyjrryngrcppo) has left #python
2014-05-29 21:43:57	-->	zoso (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined #python
2014-05-29 21:44:05	<--	ZyX-I (~ZyX-I@broadband-77-37-224-207.nationalcablenetworks.ru) has quit (Ping timeout: 264 seconds)
2014-05-29 21:44:07	Lacriatch	aps-sids: A UNIX timestamp essentially includes year, month, day and hour
2014-05-29 21:44:28	Lacriatch	aps-sids: I think that format is for displaying position in a video, not for indicating the current date and time
2014-05-29 21:44:45	aps-sids	Oh, I just checked. my long is number of nanoseconds.
2014-05-29 21:44:48	<--	SrPx (b162647c@gateway/web/freenode/ip.177.98.100.124) has quit (Ping timeout: 240 seconds)
2014-05-29 21:45:03	Lacriatch	aps-sids: Nanoseconds since the start of a video or nanoseconds since the epoch?
2014-05-29 21:45:17	<--	kosh (~kosh@aesaeion.com) has quit (Ping timeout: 264 seconds)
2014-05-29 21:46:06	-->	mateNz (~mateNz@unaffiliated/matenz) has joined #python
2014-05-29 21:46:23	<--	Kayra (~Kayra@2.24.76.87) has quit (Ping timeout: 260 seconds)
2014-05-29 21:46:29	<--	wong2 (~wong2@124.205.66.195) has quit (Quit: wong2)
2014-05-29 21:47:31	-->	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has joined #python
2014-05-29 21:47:39	<--	Moonlightning (~blackl@unaffiliated/moonlightning) has quit (Quit: The Nightmares will collide. And become a Dream. <3)
2014-05-29 21:48:20	-->	dlsa_ (~dlsa@2.82.216.79) has joined #python
2014-05-29 21:48:22	-->	satyajit (~satyajit@122.169.67.195) has joined #python
2014-05-29 21:48:33	<--	dlsa (~dlsa@2.83.231.179) has quit (Ping timeout: 252 seconds)
2014-05-29 21:48:34	--	dlsa_ is now known as dlsa
2014-05-29 21:49:16	-->	centrapheta (ampharmex@2a00:dcc0:eda:3748:247:48:123:b33f) has joined #python
2014-05-29 21:49:52	aps-sids	Lacriatch: its duration of buffer
2014-05-29 21:50:23	Lacriatch	aps-sids: You'll need to convert it to minutes and seconds I guess then
2014-05-29 21:50:49	aps-sids	Lacriatch: yeah, I think there's a function available for that.
2014-05-29 21:51:38	<--	frothnicator (~frothy@unaffiliated/frothnicator) has quit (Quit: Leaving.)
2014-05-29 21:51:45	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 21:52:09	-->	gimps (~noone@unaffiliated/gimps) has joined #python
2014-05-29 21:52:11	sec_	i have a file:
2014-05-29 21:52:12	sec_	a:b
2014-05-29 21:52:12	sec_	c:d
2014-05-29 21:52:12	sec_	e:f
2014-05-29 21:52:13	sec_	how remove :b :d :f?
2014-05-29 21:52:40	dash	sec_: many possibilities
2014-05-29 21:52:47	dash	why do you want to? what is this file
2014-05-29 21:52:54	<--	kcj (~kcj@unaffiliated/kcj) has quit (Quit: 0x90)
2014-05-29 21:53:46	<--	bitcraft_home (~bitcraft@173-23-165-139.client.mchsi.com) has quit (Quit: Computer has gone to sleep.)
2014-05-29 21:54:03	-->	thomi (~quassel@194.158.52.138) has joined #python
2014-05-29 21:54:50	sec_	dash: find / -exec file {} \;|grep ELF >file
2014-05-29 21:54:51	-->	Back2Basics (~jeremy@66-169-157-135.dhcp.ftwo.tx.charter.com) has joined #python
2014-05-29 21:55:08	sec_	dash: i want to get list that files
2014-05-29 21:55:38	preaction	why not cut -d: -f1 then?
2014-05-29 21:55:40	<--	derek_v (~derek_v@cpe-75-80-57-182.san.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-29 21:55:45	dash	sec_: grep -h
2014-05-29 21:55:54	dash	preaction: why complicate things :)
2014-05-29 21:56:04	preaction	oh, trying to parse grep's output
2014-05-29 21:56:11	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 255 seconds)
2014-05-29 21:56:15	-->	Draecos (~Draecos@106-69-174-3.dyn.iinet.net.au) has joined #python
2014-05-29 21:56:28	-->	imsc (~chatzilla@unaffiliated/imsc) has joined #python
2014-05-29 21:56:31	-->	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has joined #python
2014-05-29 21:57:37	-->	derek_v (~derek_v@cpe-75-80-57-182.san.res.rr.com) has joined #python
2014-05-29 21:59:06	-->	syphilitic (~tim@c-50-173-159-230.hsd1.ca.comcast.net) has joined #python
2014-05-29 21:59:20	<--	The-Mad-Pirate (~leandro@186.4.115.194) has quit (Quit: Konversation terminated!)
2014-05-29 21:59:41	<--	Vutral (~ss@mirbsd/special/Vutral) has quit (Ping timeout: 265 seconds)
2014-05-29 22:00:06	Ofek	say I have a compiled regular expression          r = re.compile(r"a|b")         then I do matches = r.finditer(string)      to find all the matches in the string, is there a way substitute only certain matches with something else?
2014-05-29 22:00:15	<--	arescorpio (~arescorpi@105-24-245-190.fibertel.com.ar) has quit (Remote host closed the connection)
2014-05-29 22:00:19	syphilitic	i have multiple versions of python installed. how can i get all of them to recognize a module, or how can i install modules for a specific version?
2014-05-29 22:00:24	preaction	i suppose if you don't want to trawl the filesystem again, and you already have that file, cut would be useful
2014-05-29 22:00:29	<--	aps-sids (aps@ip4-198-52-200-16.dal0.bnc.im) has left #python
2014-05-29 22:00:30	<--	thomi (~quassel@194.158.52.138) has quit (Ping timeout: 276 seconds)
2014-05-29 22:00:39	<--	brotherBox (~brotherBo@unaffiliated/brotherbox) has quit (Ping timeout: 252 seconds)
2014-05-29 22:00:50	syphilitic	when i install a module with pip, only the 2.7 version can load it.
2014-05-29 22:01:03	syphilitic	i want to use it with python 3.4
2014-05-29 22:01:07	kormoc	syphilitic, do you have multiple pips? pip-3.4 ?
2014-05-29 22:01:11	syphilitic	no
2014-05-29 22:01:21	dash	syphilitic: run the version of pip installed for the version of python you want
2014-05-29 22:01:27	-->	phatina (~phatina@bband-dyn222.178-41-90.t-com.sk) has joined #python
2014-05-29 22:01:39	<--	mkenny_laptop (~matt@173-160-205-2-Washington.hfc.comcastbusiness.net) has quit (Quit: mkenny_laptop)
2014-05-29 22:01:40	dash	syphilitic: i assume you're installing stuff in your homedir?
2014-05-29 22:01:57	<--	QBob (~qbob@amarok/developer/qbob) has quit (Ping timeout: 245 seconds)
2014-05-29 22:02:06	kormoc	syphilitic, or you could use a virtualenv and install inside of that
2014-05-29 22:02:21	syphilitic	dash: i have my 3.4 version installed in /opt
2014-05-29 22:02:24	syphilitic	i manually compiled it
2014-05-29 22:02:32	dash	ah, python 3.
2014-05-29 22:02:32	syphilitic	i just installed pip with apt-get
2014-05-29 22:02:37	syphilitic	yeah
2014-05-29 22:02:40	<--	derek_v (~derek_v@cpe-75-80-57-182.san.res.rr.com) has quit (Ping timeout: 252 seconds)
2014-05-29 22:02:52	kormoc	syphilitic, no packages for your distro?
2014-05-29 22:03:16	syphilitic	E: Unable to locate package pip-3.4
2014-05-29 22:03:16	syphilitic	E: Couldn't find any package by regex 'pip-3.4'
2014-05-29 22:03:22	-->	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has joined #python
2014-05-29 22:03:30	kormoc	pip-3.4 comes with python 3.4
2014-05-29 22:03:41	syphilitic	i didn't see it there
2014-05-29 22:03:50	kormoc	(via a package that is)
2014-05-29 22:03:56	-->	derek_v (~derek_v@cpe-75-80-57-182.san.res.rr.com) has joined #python
2014-05-29 22:03:58	<--	grg (817f6b8b@gateway/web/freenode/ip.129.127.107.139) has left #python
2014-05-29 22:03:58	kormoc	https://docs.python.org/3/whatsnew/3.4.html#whatsnew-pep-453
2014-05-29 22:04:00	<--	Zigtalk (~Zigtalk@cpe-72-182-60-182.austin.res.rr.com) has quit (Remote host closed the connection)
2014-05-29 22:04:04	-->	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has joined #python
2014-05-29 22:04:24	-->	codeitloadit (~codeitloa@ip68-106-222-103.oc.oc.cox.net) has joined #python
2014-05-29 22:04:43	kormoc	syphilitic, find /opt -name pip\*
2014-05-29 22:04:44	-->	jpj (~jpj@101.63.159.251) has joined #python
2014-05-29 22:04:49	<--	jpj (~jpj@101.63.159.251) has quit (Client Quit)
2014-05-29 22:04:51	kormoc	see if it's in there and you didn't set the path right
2014-05-29 22:04:54	-->	kireevco (~kireevco@cpe-76-175-91-121.socal.res.rr.com) has joined #python
2014-05-29 22:05:58	-->	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-29 22:06:08	kireevco	Hi all, what is a standard  way of properly escaping unix path?
2014-05-29 22:06:31	nisstyre	kireevco: put them in quotation marks...
2014-05-29 22:06:33	-->	eeriegeek (~eeriegeek@c-98-244-112-229.hsd1.va.comcast.net) has joined #python
2014-05-29 22:06:40	syphilitic	kormoc: LOL, it was there and I didn't even see it
2014-05-29 22:06:44	-->	Deithrian (~Deithrian@unaffiliated/deithrian) has joined #python
2014-05-29 22:06:45	syphilitic	how embarassing
2014-05-29 22:06:52	syphilitic	i looked too
2014-05-29 22:07:11	-->	ncthom91 (~ncthom91@173.252.71.129) has joined #python
2014-05-29 22:07:14	nisstyre	kireevco: when in doubt wrt shell scripting, put it in quotes
2014-05-29 22:07:22	nisstyre	especially $variables
2014-05-29 22:07:23	syphilitic	it was right in front of me and i didnt see it
2014-05-29 22:08:45	<--	oleo (~oleo@xdsl-78-35-143-243.netcologne.de) has quit (Quit: Verlassend)
2014-05-29 22:08:53	syphilitic	thanks guys :D
2014-05-29 22:08:54	<--	syphilitic (~tim@c-50-173-159-230.hsd1.ca.comcast.net) has quit (Quit: leaving)
2014-05-29 22:08:57	-->	Vutral (~ss@mirbsd/special/Vutral) has joined #python
2014-05-29 22:09:44	kireevco	nisstyre: Don't get it. I have a square bracket in my path, I need it to be "\[". There should be a standard way, I guess, to esape all invalid characters
2014-05-29 22:09:45	<--	gremly (~gremly@190.85.36.58) has quit (Quit: WeeChat 0.3.2)
2014-05-29 22:10:02	<--	kadoban (~kadoban@ip70-171-230-183.tc.ph.cox.net) has quit (Quit: bye)
2014-05-29 22:10:13	kormoc	kireevco, with what environment? Bash script or ?
2014-05-29 22:10:20	<--	rudedogg (~rudedogg@unaffiliated/rudedogg) has quit (Read error: Connection reset by peer)
2014-05-29 22:10:36	nisstyre	kireevco: you should be able to do cd "[foobar baz ]]" and have it work fine
2014-05-29 22:10:38	kireevco	yes, I run it in bash
2014-05-29 22:11:05	kormoc	kireevco, did you try wrapping it in single quotes? '
2014-05-29 22:11:10	nisstyre	try mkdir "~/[[[[" ; cd "~/[[[["
2014-05-29 22:11:21	nisstyre	oh wait
2014-05-29 22:11:34	kireevco	my string is "foo[bar].baz". I'm using open function
2014-05-29 22:11:39	nisstyre	yeah bash dislikes that
2014-05-29 22:11:46	kireevco	my string is in single quotes
2014-05-29 22:11:54	nisstyre	you have to use the actual path
2014-05-29 22:11:56	nisstyre	rather than ~/
2014-05-29 22:12:11	nisstyre	or $HOME
2014-05-29 22:12:12	kireevco	It is an actual path. I just need to escape invalid characters
2014-05-29 22:12:20	nisstyre	kireevco: just do what I told you
2014-05-29 22:12:21	kireevco	it is 100% absolute path
2014-05-29 22:12:23	nisstyre	put it in quotes
2014-05-29 22:12:29	kireevco	it is in quotes.
2014-05-29 22:12:36	nisstyre	then it should work fine
2014-05-29 22:12:52	<--	mordonez (~mordonez@190.102.132.14) has quit (Quit: Computer has gone to sleep.)
2014-05-29 22:13:00	kireevco	What do you mean cd? I'm using "open" function in python
2014-05-29 22:13:03	nisstyre	wait, are you executing something in sh?
2014-05-29 22:13:11	nisstyre	oh okay so you're not using the shell
2014-05-29 22:13:18	kireevco	python3 script.py
2014-05-29 22:13:29	nisstyre	foo[bar].baz is a valid file though
2014-05-29 22:13:34	nisstyre	so it should work fine
2014-05-29 22:13:47	nisstyre	are you sure you have the right path and that it exists?
2014-05-29 22:14:11	-->	lony (~user@183.82.3.32) has joined #python
2014-05-29 22:14:42	kormoc	kireevco, http://pastebin.com/nE10e182
2014-05-29 22:14:44	kormoc	works for me
2014-05-29 22:14:45	infobob	http://paste.pound-python.org/show/k91XgfI41XlHbHaLWBXw/ (repasted for kormoc)
2014-05-29 22:15:17	<--	MatthewsFace (~MatthewsF@c-67-183-116-112.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2014-05-29 22:15:35	<--	introom (~introom@wf076-246.ust.hk) has quit (Ping timeout: 252 seconds)
2014-05-29 22:15:47	-->	rixx (~rixx@2a01:4f8:d16:b46::2) has joined #python
2014-05-29 22:15:57	-->	karab44 (~kvirc@host-91-192-90-101.elomza.pl) has joined #python
2014-05-29 22:16:04	-->	brotherBox (~brotherBo@unaffiliated/brotherbox) has joined #python
2014-05-29 22:16:07	<--	rixx (~rixx@2a01:4f8:d16:b46::2) has left #python
2014-05-29 22:17:15	-->	jkyle (~jkyle@unaffiliated/jkyle) has joined #python
2014-05-29 22:17:35	kireevco	let me check… seems like it finds it
2014-05-29 22:18:16	-->	agrajag42 (uid27336@gateway/web/irccloud.com/x-vstofvfrcwhpwlef) has joined #python
2014-05-29 22:20:18	-->	cadaver (~cadaver@unaffiliated/cadaver) has joined #python
2014-05-29 22:20:44	-->	mijicd (~mijicd@cable-188-2-93-34.dynamic.sbb.rs) has joined #python
2014-05-29 22:21:03	kireevco	ok, path is working as expected, I'm trying to bbdecode in python3. Anyone has any best practices?
2014-05-29 22:21:24	kireevco	I found bencoder
2014-05-29 22:21:45	kireevco	and by the way, what people think about python3 vs python 2.x?
2014-05-29 22:22:06	dash	kireevco: python 3 is more fashionable
2014-05-29 22:22:06	-->	innertracks (~Thunderbi@ip-64-134-128-160.public.wayport.net) has joined #python
2014-05-29 22:22:09	dash	python 2 is more useful
2014-05-29 22:22:58	kireevco	dash: any practical improvements in python3 that people actually use?
2014-05-29 22:23:04	dash	some
2014-05-29 22:23:20	dash	there are also practical difficulties that python 3 adds for some situations
2014-05-29 22:23:55	kireevco	dash: so no point to start a project in python3?
2014-05-29 22:24:08	kireevco	dash: What would you go with?
2014-05-29 22:25:22	-->	Tjati (~Thunderbi@unaffiliated/tjati) has joined #python
2014-05-29 22:25:27	-->	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has joined #python
2014-05-29 22:25:38	<--	ifim (~user@187.216.89.242) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2014-05-29 22:25:39	dash	everything i've done so far has been in python 2
2014-05-29 22:26:28	-->	Kayra (~Kayra@2.24.76.87) has joined #python
2014-05-29 22:26:33	dash	i wouldn't pick python 3 for anything, myself
2014-05-29 22:26:42	-->	kcj (~casey@unaffiliated/kcj) has joined #python
2014-05-29 22:27:01	kireevco	dash: do you think it needs couple more years?
2014-05-29 22:27:06	dash	no
2014-05-29 22:27:28	dash	I do not think python will ever get any better.
2014-05-29 22:28:15	-->	eggsmiao (~cat@222.94.243.166) has joined #python
2014-05-29 22:28:19	-->	D9 (~D9@rrcs-76-79-250-124.west.biz.rr.com) has joined #python
2014-05-29 22:28:52	-->	dumby_PC (~dumby@204.246.140.162) has joined #python
2014-05-29 22:29:11	-->	mkenny_laptop (~matt@c-24-18-230-47.hsd1.wa.comcast.net) has joined #python
2014-05-29 22:29:14	<--	innertracks (~Thunderbi@ip-64-134-128-160.public.wayport.net) has quit (Quit: innertracks)
2014-05-29 22:29:23	<--	dumby (~dumby@204.246.140.162) has quit (Read error: Connection reset by peer)
2014-05-29 22:29:27	kireevco	dash: is it still your language of choice? :)
2014-05-29 22:30:26	kireevco	i come from php, and it feels like python3 is like mythical php6 :0
2014-05-29 22:31:03	kireevco	but released
2014-05-29 22:31:22	Ofek	dash, what are some difficulties exclusive to python 3.x that you don't think will ever improve? (besides backwards compatibility)
2014-05-29 22:31:30	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-29 22:32:44	-->	The-Mad-Pirate (~leandro@186.135.15.77) has joined #python
2014-05-29 22:32:44	xiaomiao	kireevco: rakudo is very much alive, I don't understand your criticism :D
2014-05-29 22:33:03	kireevco	php, not perl
2014-05-29 22:33:09	-->	firecat53 (~firecat53@c-98-225-17-95.hsd1.wa.comcast.net) has joined #python
2014-05-29 22:33:39	<--	mkenny_laptop (~matt@c-24-18-230-47.hsd1.wa.comcast.net) has quit (Client Quit)
2014-05-29 22:35:47	<--	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has quit (Ping timeout: 255 seconds)
2014-05-29 22:35:48	-->	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has joined #python
2014-05-29 22:36:06	KingInTheNorth	http://pastebin.com/ZybyNPV1
2014-05-29 22:36:08	infobob	http://paste.pound-python.org/show/uOZeDmWwpXUEIm0dqy9o/ (repasted for KingInTheNorth)
2014-05-29 22:36:09	KingInTheNorth	What's wrong there...
2014-05-29 22:36:33	<--	__main__ (~main@adsl-99-173-15-158.dsl.pltn13.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-05-29 22:36:43	dash	Ofek: handling of bytes
2014-05-29 22:36:50	-->	__main__ (~main@adsl-99-173-15-158.dsl.pltn13.sbcglobal.net) has joined #python
2014-05-29 22:37:03	dash	kireevco: is what still my language of choice?
2014-05-29 22:37:25	kireevco	dash: python?
2014-05-29 22:37:34	dash	kireevco: for doing what?
2014-05-29 22:37:49	kireevco	dash: for scripting
2014-05-29 22:38:28	kireevco	well, for mid-load stuff
2014-05-29 22:38:41	-->	frothnicator (~frothy@unaffiliated/frothnicator) has joined #python
2014-05-29 22:38:51	-->	reference (~reference@122.172.198.131) has joined #python
2014-05-29 22:38:56	<--	kushal2 (~kushal3@188-146.dorm.minotstateu.edu) has quit (Quit: Leaving)
2014-05-29 22:39:52	cadaver	Hey guys I'm searching for a way to create a list of all files matching a regex given as a parameter recursively
2014-05-29 22:39:53	<--	__main__ (~main@adsl-99-173-15-158.dsl.pltn13.sbcglobal.net) has quit (Read error: Connection reset by peer)
2014-05-29 22:39:56	dash	i haven't ever really done "scripting"
2014-05-29 22:39:58	dash	so not sure
2014-05-29 22:40:00	-->	__main__ (~main@adsl-99-173-15-158.dsl.pltn13.sbcglobal.net) has joined #python
2014-05-29 22:40:12	preaction	isn't scripting just another word for programming?
2014-05-29 22:40:17	<--	bwreilly (~bwreilly@c-71-231-109-148.hsd1.wa.comcast.net) has quit (Ping timeout: 255 seconds)
2014-05-29 22:40:30	kireevco	dash: what's your main usecase of python then? websites/flask-django?
2014-05-29 22:40:41	<--	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has quit
2014-05-29 22:40:55	kireevco	preaction: C#, C++, Java, Scala people call scripting all that you don't have to compile :)
2014-05-29 22:41:08	dash	kireevco: i use django at work
2014-05-29 22:41:18	dash	kireevco: i've used python for implementing network protocols
2014-05-29 22:41:27	kireevco	dash: is it scalable? do you like it?
2014-05-29 22:41:39	dash	kireevco: everything's scalable
2014-05-29 22:41:43	preaction	kireevco: i call it programming, because those people you mentioned use the term "scripting" derisively
2014-05-29 22:41:43	kireevco	:) true
2014-05-29 22:41:44	dash	and no, i don't like it, it's the web
2014-05-29 22:41:51	<--	koz (~koz@2601:8:a900:88a:1e6f:65ff:fe31:7fcb) has quit (Quit: koz)
2014-05-29 22:41:51	dash	there's nothing to like, it's just a fact
2014-05-29 22:42:06	dash	kireevco: i am also currently using python to implement a new programming language
2014-05-29 22:42:11	-->	rudedogg (~rudedogg@unaffiliated/rudedogg) has joined #python
2014-05-29 22:42:22	Ofek	I agree, web development is nasty
2014-05-29 22:42:34	preaction	getting worse all the time
2014-05-29 22:42:47	dash	eh, ES6 at least looks like it'll be a language with several good parts
2014-05-29 22:42:55	kireevco	Ofek: Scala is a new buzzword for my devs now...
2014-05-29 22:43:12	preaction	yeah, javascript seems to be improving, but html is becoming a bloated monster
2014-05-29 22:43:22	dash	preaction: html's just data
2014-05-29 22:43:23	dash	who cares
2014-05-29 22:43:33	-->	mordonez (~mordonez@190.102.132.14) has joined #python
2014-05-29 22:43:59	<--	reference (~reference@122.172.198.131) has quit (Read error: Connection reset by peer)
2014-05-29 22:44:34	preaction	because they've thrown the idea of data/presentation separation out the window? they're reinventing in HTML things that markups like SMIL did better in the 90s?
2014-05-29 22:44:48	-->	JBreit (~Trip@h19.187.123.208.dynamic.ip.windstream.net) has joined #python
2014-05-29 22:45:03	-->	reference (~reference@122.167.181.212) has joined #python
2014-05-29 22:45:12	preaction	i'm waiting for "3d HTML"... just waiting...
2014-05-29 22:45:28	preaction	or do all those 3d CSS transforms count?
2014-05-29 22:45:33	Ofek	depending on length, C is more readable than js sometimes (imo)
2014-05-29 22:45:35	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-29 22:45:53	<--	poseidon (~joe@vps6967.inmotionhosting.com) has quit (Ping timeout: 264 seconds)
2014-05-29 22:46:34	dash	preaction: the idea of data/presentation separation hasn't been around since 2002 or so
2014-05-29 22:46:48	dash	preaction: html is the presentation layer, sorry
2014-05-29 22:46:52	<--	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has quit (Read error: Connection reset by peer)
2014-05-29 22:46:56	dash	data is json or whatever
2014-05-29 22:47:08	preaction	yeah... i'm old...
2014-05-29 22:47:17	dash	Ofek: hey you can compile C to js now
2014-05-29 22:47:25	preaction	XML+XSLT was supposed to free us!
2014-05-29 22:47:36	<--	waveclaw (~waveclaw@ip98-162-237-146.ok.ok.cox.net) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 29.0.1/2014050900])
2014-05-29 22:47:44	-->	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has joined #python
2014-05-29 22:47:45	-->	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has joined #python
2014-05-29 22:47:48	dash	preaction: you may even remember a pre-web time when we had gui libraries actually designed for building apps with... ;)
2014-05-29 22:48:26	<--	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has quit (Remote host closed the connection)
2014-05-29 22:48:36	<--	mordonez (~mordonez@190.102.132.14) has quit (Ping timeout: 276 seconds)
2014-05-29 22:48:44	preaction	but now we're building app bundlers that deliver a web server and a web browser to you and launches both?
2014-05-29 22:48:46	-->	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has joined #python
2014-05-29 22:49:24	dash	my hope is that in 20 years we can have something like the web
2014-05-29 22:49:27	dash	but actually designed
2014-05-29 22:49:43	Lacriatch	Wat no
2014-05-29 22:49:46	Lacriatch	That'll never happen
2014-05-29 22:49:52	Lacriatch	Humans like building things messily
2014-05-29 22:49:56	-->	vvoody (~vvoody@216.113.168.141) has joined #python
2014-05-29 22:50:03	preaction	i kind of like the idea of web as a platform, but i liked more the idea of an XML document that had a bunch of individual markups that could describe different things (HTML for the application, SMIL for multimedia, SVG for vector graphics/animation)
2014-05-29 22:50:20	kireevco	Why people choose python over ruby?
2014-05-29 22:50:31	preaction	because they chose python and not ruby
2014-05-29 22:50:33	<--	simplisity (~simplisit@cpe-108-184-173-172.socal.res.rr.com) has quit (Ping timeout: 276 seconds)
2014-05-29 22:50:39	mexi_d3	dash: You should see european roads. They were great 2000 years ago. Then they got cars ... and it's too late to fix
2014-05-29 22:50:39	preaction	i like the python community more than the ruby community
2014-05-29 22:50:44	dash	Lacriatch: we've had software systems that were designed in the past
2014-05-29 22:50:52	dash	Lacriatch: no reason we can't have them in the future
2014-05-29 22:51:21	dash	mexi_d3: like this? http://www.bostontourguide.org/wp-content/uploads/2013/02/boston-streets.jpg
2014-05-29 22:51:24	<--	johnkevinmbasco (~johnkevin@203.215.120.216) has quit (Ping timeout: 265 seconds)
2014-05-29 22:51:41	-->	johnkevinmbasco (~johnkevin@203.215.120.216) has joined #python
2014-05-29 22:51:43	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 22:52:00	<--	satyajit (~satyajit@122.169.67.195) has quit
2014-05-29 22:52:29	<--	kylethebaker (~KYLEtheBA@unaffiliated/kylethebaker) has quit (Ping timeout: 264 seconds)
2014-05-29 22:52:53	Ofek	ha
2014-05-29 22:53:20	<--	araujo (~araujo@gentoo/developer/araujo) has quit (Ping timeout: 255 seconds)
2014-05-29 22:53:20	<--	semigloss (~semigloss@d192-24-132-200.try.wideopenwest.com) has quit (Quit: leaving)
2014-05-29 22:53:21	<--	ncthom91 (~ncthom91@173.252.71.129) has quit (Ping timeout: 252 seconds)
2014-05-29 22:53:43	-->	jorrit (~jorrit@bluecoat2.uzleuven.be) has joined #python
2014-05-29 22:53:47	<--	evanz (~Evan@cpe-74-138-17-188.swo.res.rr.com) has quit (Ping timeout: 255 seconds)
2014-05-29 22:54:08	Lacriatch	Go have a look at Canberra
2014-05-29 22:54:30	jorrit	Hi
2014-05-29 22:55:39	-->	bdav|irccloud (uid18072@gateway/web/irccloud.com/x-mmlfowebxryhzeho) has joined #python
2014-05-29 22:56:02	-->	braoru (~B@146.67.253.15) has joined #python
2014-05-29 22:56:17	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 252 seconds)
2014-05-29 22:56:24	<--	eggsmiao (~cat@222.94.243.166) has quit (Ping timeout: 276 seconds)
2014-05-29 22:56:41	<--	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has quit (Ping timeout: 264 seconds)
2014-05-29 22:57:06	-->	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has joined #python
2014-05-29 22:57:22	<--	hgl (~hgl@unaffiliated/hgl) has quit (Ping timeout: 245 seconds)
2014-05-29 22:57:28	-->	Josse|BNC (uid29288@gateway/web/irccloud.com/x-creixpdioilgdsqd) has joined #python
2014-05-29 22:58:51	mexi_d3	dash: Kind of like that but single lane, with many one-way systems. Utterly impossible for a greyhound bus to take the corners: that's why they have those shorter double deck busses in London
2014-05-29 22:59:26	stal[GL]	bendy buses tho
2014-05-29 22:59:28	-->	fossrox (~fossrox@unaffiliated/fossrox) has joined #python
2014-05-29 23:01:09	xiaomiao	there's double-joint busses
2014-05-29 23:01:27	xiaomiao	they are awesomely long, but can't drive backwards, so if there's any obstruction they risk being stuck
2014-05-29 23:01:42	-->	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has joined #python
2014-05-29 23:01:50	KingInTheNorth	Hi guys. why is line 10 wrong
2014-05-29 23:01:51	KingInTheNorth	#Declare variables
2014-05-29 23:01:51	KingInTheNorth	USD_Rate=0.74
2014-05-29 23:01:51	KingInTheNorth	EU_Rate=1.36
2014-05-29 23:01:51	KingInTheNorth	#Input
2014-05-29 23:01:51	KingInTheNorth	which_rate=input("Convert USD to Euro? Yes or No?")
2014-05-29 23:01:51	KingInTheNorth	if which_rate=="Yes":
2014-05-29 23:01:52	KingInTheNorth		usdConvertAmount=eval(input("What amount of USD would you like to convert?"))
2014-05-29 23:01:52	KingInTheNorth		print(usdConvertAmount*USD_Rate+"Euros (Conversion rate is 0.74")
2014-05-29 23:01:53	KingInTheNorth	if which_rate=="No":
2014-05-29 23:01:53	KingInTheNorth		euro_to_usd=input("Convert Euro to USD? Yes or no?")
2014-05-29 23:01:54	KingInTheNorth		if euro_to_usd=="Yes":
2014-05-29 23:01:54	KingInTheNorth			euroConvertAmount=eval(input("What amount of Euros would you like to convert?"))
2014-05-29 23:01:55	KingInTheNorth			print(euroConvertAmount*EU_Rate+"Dollars (Conversion rate is 1.36")
2014-05-29 23:01:57	--	Mode #python [+o dash] by ChanServ
2014-05-29 23:02:00	--	Mode #python [+b *!*Robb@unaffiliated/kinginthenorth] by dash
2014-05-29 23:02:00	<--	dash has kicked KingInTheNorth (KingInTheNorth)
2014-05-29 23:02:05	-->	CodePulsar (~code@unaffiliated/shiningthrough) has joined #python
2014-05-29 23:02:52	--	Mode #python [-b *!*Robb@unaffiliated/kinginthenorth] by dash
2014-05-29 23:02:56	-->	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has joined #python
2014-05-29 23:03:00	KingInTheNorth	So sorry guys.
2014-05-29 23:03:02	@dash	np
2014-05-29 23:03:06	-->	DarkBeQst (~darkbeqst@x2f4a265.dyn.telefonica.de) has joined #python
2014-05-29 23:03:09	KingInTheNorth	Thought I had pastebin on clipboard
2014-05-29 23:03:19	KingInTheNorth	http://pastebin.com/0m0wsAkH
2014-05-29 23:03:21	infobob	http://paste.pound-python.org/show/O3ayo1sqDflUEarXmIim/ (repasted for KingInTheNorth)
2014-05-29 23:03:27	KingInTheNorth	there we go
2014-05-29 23:03:27	-->	malleYay (~malleYay@cable-78-34-20-187.netcologne.de) has joined #python
2014-05-29 23:03:54	-->	phmadoredotcom (~paul@host-184-166-19-213.gdj-co.client.bresnan.net) has joined #python
2014-05-29 23:03:58	<--	lettzmi (~lettzmi@64.149.140.196) has quit (Read error: Connection reset by peer)
2014-05-29 23:03:59	Nitori	python3?
2014-05-29 23:04:14	-->	mnx (~mnx@p5B34C460.dip0.t-ipconnect.de) has joined #python
2014-05-29 23:04:17	KingInTheNorth	Yea
2014-05-29 23:04:26	KingInTheNorth	line 10...need to use float somehow i believe
2014-05-29 23:04:27	<--	Lemony (~textual@cpc50-slam6-2-0-cust27.2-4.cable.virginm.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-29 23:04:28	-->	snyp (~snyp@223.29.204.2) has joined #python
2014-05-29 23:04:40	-->	alsuren (~Thunderbi@87.114.67.126) has joined #python
2014-05-29 23:04:52	<--	johnkevinmbasco (~johnkevin@203.215.120.216) has quit (Ping timeout: 245 seconds)
2014-05-29 23:05:21	Nitori	well, first of all, you should probably not use eval, but float or int instead, if the input is suppose to be some kind of number.
2014-05-29 23:05:44	-->	sunya7a_ (~pryde@unaffiliated/sunya7a) has joined #python
2014-05-29 23:05:52	Nitori	and line 10 is wrong, I believe, because you try to add a number with a string.
2014-05-29 23:06:13	KingInTheNorth	Thats what I thought.
2014-05-29 23:06:27	-->	plast1k_ (~plast1k__@gateway/tor-sasl/ch1m3ra) has joined #python
2014-05-29 23:06:28	Nitori	you could use string formatting.
2014-05-29 23:06:42	Nitori	or should
2014-05-29 23:07:04	-->	johnkevinmbasco (~johnkevin@203.215.120.216) has joined #python
2014-05-29 23:07:22	-->	FireMail (5b8d0221@gateway/web/freenode/ip.91.141.2.33) has joined #python
2014-05-29 23:07:32	FireMail	g'morn guys
2014-05-29 23:07:39	<--	sunya7a_ (~pryde@unaffiliated/sunya7a) has quit (Client Quit)
2014-05-29 23:07:46	<--	DarkBeQst (~darkbeqst@x2f4a265.dyn.telefonica.de) has quit
2014-05-29 23:07:51	KingInTheNorth	How could I do that nitori?
2014-05-29 23:08:04	-->	DarkBeQst (~darkbeqst@x2f4a265.dyn.telefonica.de) has joined #python
2014-05-29 23:08:29	Nitori	here are the details: https://docs.python.org/2/library/string.html#formatstrings
2014-05-29 23:08:31	<--	Draecos (~Draecos@106-69-174-3.dyn.iinet.net.au) has quit (Ping timeout: 260 seconds)
2014-05-29 23:08:38	<--	brodul (~brodul@brodul.org) has quit (Ping timeout: 255 seconds)
2014-05-29 23:08:39	FireMail	when I try to install python 3.4.1 via PIP (pip install Python==3.4.1), I get the following errors: http://pastebin.com/sfWAatur .... any ideas what might be wrong?
2014-05-29 23:08:40	infobob	http://paste.pound-python.org/show/wDpjAs44Y0a5D08odd5U/ (repasted for FireMail)
2014-05-29 23:08:45	<--	spal_ (~susam@pdpc/supporter/active/spal) has quit (Ping timeout: 276 seconds)
2014-05-29 23:08:46	-->	Justus (d5900eea@gateway/web/freenode/ip.213.144.14.234) has joined #python
2014-05-29 23:08:47	Ofek	KingInTheNorth, what error do you get?
2014-05-29 23:08:53	-->	bal (~Thunderbi@86.125.63.66) has joined #python
2014-05-29 23:09:52	Ofek	KingInTheNorth, try            str(usdConvertAmount*USD_Rate)
2014-05-29 23:10:35	<--	Wooble (~user@unaffiliated/wooble) has quit (Ping timeout: 252 seconds)
2014-05-29 23:11:18	Nitori	better use format: print("{:.2f} Euros (Conversion rate is 0.74)".format(usdConvertAmount*USD_Rate))
2014-05-29 23:11:37	-->	brodul (~brodul@brodul.org) has joined #python
2014-05-29 23:11:42	Justus	hi, I'm looking for a method to watch the main thread from a thread spawned with threading.Thread.start(), if a method gets stuck in there, how could I reset it?
2014-05-29 23:12:20	-->	wildtype (~wildtype@S01060026bb73d29f.vc.shawcable.net) has joined #python
2014-05-29 23:12:22	<--	kcj (~casey@unaffiliated/kcj) has quit (Ping timeout: 245 seconds)
2014-05-29 23:12:25	KingInTheNorth	so print str() wouldnt work?
2014-05-29 23:12:42	Nitori	it would, but it might return a float with like.. 10 digits
2014-05-29 23:13:00	Nitori	{:.2f} formats it to two digits after the period.
2014-05-29 23:13:13	KingInTheNorth	what does {:.2f} do?
2014-05-29 23:13:18	<--	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has quit (Remote host closed the connection)
2014-05-29 23:13:20	Nitori	what I just said
2014-05-29 23:13:22	-->	desophos (~desophos@cpe-108-184-211-188.socal.res.rr.com) has joined #python
2014-05-29 23:13:28	-->	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has joined #python
2014-05-29 23:13:52	Nitori	I gave you a link to the docs
2014-05-29 23:14:17	KingInTheNorth	thx
2014-05-29 23:14:18	-->	RaviTezu (~rpothan@64.136.3.250) has joined #python
2014-05-29 23:14:54	<--	frothnicator (~frothy@unaffiliated/frothnicator) has quit (Quit: Leaving.)
2014-05-29 23:15:48	--	Tiger|0 is now known as Siberian_Tiger
2014-05-29 23:15:57	-->	mordonez (~mordonez@190.102.132.11) has joined #python
2014-05-29 23:16:23	RaviTezu	Hi, I have a code(method) which has to be trigged on mutliple hosts in parallel..
2014-05-29 23:16:24	RaviTezu	Can someone suggest me any module(s)?
2014-05-29 23:16:29	<--	johnkevinmbasco (~johnkevin@203.215.120.216) has quit (Ping timeout: 264 seconds)
2014-05-29 23:16:57	RaviTezu	and code has to be applied on the hosts serially with some sleep x
2014-05-29 23:17:27	<--	nande (~quassel@190.183.4.91) has quit (Read error: Connection reset by peer)
2014-05-29 23:17:45	<--	BC517 (~j@gateway/tor-sasl/lattes) has quit (Quit: Lost terminal)
2014-05-29 23:17:48	-->	heedypo1 (~heedypo@user-5af4a188.broadband.tesco.net) has joined #python
2014-05-29 23:18:05	-->	fenre (~fenre@79.160.132.214.static.lyse.net) has joined #python
2014-05-29 23:18:54	<--	KingInTheNorth (~Robb@unaffiliated/kinginthenorth) has quit
2014-05-29 23:18:55	<--	mordonez (~mordonez@190.102.132.11) has quit (Client Quit)
2014-05-29 23:19:29	<--	ggp (~guilherme@189.79.252.145) has quit (Ping timeout: 264 seconds)
2014-05-29 23:19:31	CodePulsar	RaviTezu: https://wiki.python.org/moin/DistributedProgramming
2014-05-29 23:20:16	-->	tobixx (~tobixx@194.97.106.98) has joined #python
2014-05-29 23:20:41	<--	cothrun (~Chris@ip98-160-179-211.lv.lv.cox.net) has quit (Ping timeout: 264 seconds)
2014-05-29 23:20:46	CodePulsar	so you're looking for a method to broadcast commands from a server to all listening clients?
2014-05-29 23:21:51	-->	timkofu (~timkofu@196.200.18.30) has joined #python
2014-05-29 23:21:57	preaction	or are you talking something like Ansible or Rex to orchestrate multiple machines?
2014-05-29 23:22:37	-->	jnhghy (~jalexandr@86.125.114.50) has joined #python
2014-05-29 23:23:00	RaviTezu	CodePulsar: yes,
2014-05-29 23:23:24	RaviTezu	and preaction, we are looking for deploying applications to multiple hosts
2014-05-29 23:23:54	-->	mulander (uid1766@gateway/web/irccloud.com/x-nfbvwjitnxkzoofd) has joined #python
2014-05-29 23:23:56	-->	q4brk (~q4brk@unaffiliated/q4brk) has joined #python
2014-05-29 23:24:03	<--	nguyt (~nguyt@c-24-16-77-218.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2014-05-29 23:24:04	<--	nguyt__ (~nguyt@c-24-16-77-218.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2014-05-29 23:24:10	preaction	ansible, rex, chef, puppet, cfengine, there are probably more in that space by now
2014-05-29 23:24:13	-->	ggp (~guilherme@189.79.252.145) has joined #python
2014-05-29 23:24:22	preaction	i think ansible is the python one
2014-05-29 23:24:32	CodePulsar	y
2014-05-29 23:24:37	RaviTezu	we need to trigger deployments for different applications in parallel.. however the on same app hosts it has to be done in serial..
2014-05-29 23:24:53	-->	poppify (~poppify@triband-mum-120.60.160.9.mtnl.net.in) has joined #python
2014-05-29 23:25:08	-->	johnkevinmbasco (~johnkevin@203.215.120.216) has joined #python
2014-05-29 23:25:23	<--	poppify (~poppify@triband-mum-120.60.160.9.mtnl.net.in) has quit (Client Quit)
2014-05-29 23:25:26	jnhghy	Hi, I'm trying to build a custom app that will receive info throw http get somthing like http://site.com/getCities and the app will respond with a city list I've done the fist build using flask, works as expected but I'm a little bit concerned that I need to open an extra port so my question is anybody knows if flask relies on apache for security? or it has it's own way of doing it? are there any extra security risk in using flask?
2014-05-29 23:25:26	RaviTezu	preaction: we use ansible, but that goes serially and we need it in parallel for different applications
2014-05-29 23:25:33	<--	Tjati (~Thunderbi@unaffiliated/tjati) has quit (Quit: Tjati)
2014-05-29 23:25:43	-->	thanatos_hu (~thanatos_@563BB3EF.dsl.pool.telekom.hu) has joined #python
2014-05-29 23:25:53	preaction	you can't run multiple ansible commands in parallel in different processes?
2014-05-29 23:25:58	stal[GL]	jnhghy: put it behind nginx
2014-05-29 23:26:04	stal[GL]	listen on localhost
2014-05-29 23:26:22	-->	spal (~susam@pdpc/supporter/active/spal) has joined #python
2014-05-29 23:26:36	-->	macieks (~macieks@ip-222-135.ists.pl) has joined #python
2014-05-29 23:26:46	RaviTezu	preaction: Oh, we didn't check that. thanks
2014-05-29 23:26:50	<--	lamar (~Adium@AAnnecy-158-1-181-143.w86-209.abo.wanadoo.fr) has quit (Quit: Leaving.)
2014-05-29 23:27:24	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit
2014-05-29 23:27:32	<--	JBreit (~Trip@h19.187.123.208.dynamic.ip.windstream.net) has left #python ("Leaving")
2014-05-29 23:28:33	timkofu	preaction: you cant?
2014-05-29 23:28:49	jnhghy	stal[GL] : so the security solution is to make somthing like a relay? the request should go to nginx and nginx will pass it to flask on localhost? I also have a php website on that domain that runs on apache, would it be better to switch from flask to apache mod_python? or do you think that the nginx+flask setup is a good enough solution?
2014-05-29 23:28:52	timkofu	I dont see why not
2014-05-29 23:29:12	preaction	timkofu: i've never used ansible, which is why i'm asking the question
2014-05-29 23:29:14	-->	drinkycrow (drinkycrow@c-68-53-181-112.hsd1.il.comcast.net) has joined #python
2014-05-29 23:29:27	preaction	but i also don't really care about the answer, as i am not the original question asker
2014-05-29 23:29:39	CodePulsar	RaviTezu: also have a look at http://gearman.org
2014-05-29 23:29:42	-->	Dharmit (shahdharmi@nat/redhat/x-vtyknejkhphhtzza) has joined #python
2014-05-29 23:30:18	-->	ujjain (~ujjain@unaffiliated/ujjain) has joined #python
2014-05-29 23:30:34	-->	gr33n7007h (~gr33n7007@unaffiliated/gr33n7007h) has joined #python
2014-05-29 23:31:02	-->	alxgnon (~alxgnon@gateway/tor-sasl/alxgnon) has joined #python
2014-05-29 23:31:18	<--	f1nhack (~dolev@unaffiliated/finhack) has quit (Quit: changing servers)
2014-05-29 23:31:25	<--	inbisible (~inbisible@static-50-53-57-67.bvtn.or.frontiernet.net) has left #python
2014-05-29 23:31:42	<--	AnYaDi (~AnYaDi@res-234-248.dyn.carleton.edu) has quit (Quit: AnYaDi)
2014-05-29 23:31:55	@dash	jnhghy: what do you mean by "extra port"?
2014-05-29 23:32:12	@dash	jnhghy: your webserver listening on port 443 or 80 can run your flask app
2014-05-29 23:32:30	<--	Tii (~Tii@stevie-ray.me) has quit (Remote host closed the connection)
2014-05-29 23:32:56	-->	Tii (~Tii@stevie-ray.me) has joined #python
2014-05-29 23:33:45	-->	Spinkzeit (~Spinkzeit@110.232.142.137) has joined #python
2014-05-29 23:34:32	<--	FireMail (5b8d0221@gateway/web/freenode/ip.91.141.2.33) has quit (Quit: Page closed)
2014-05-29 23:36:01	jnhghy	dash: I've just started with flask and the default setup makes my python app respond to requests that come on port :5000 like http://mysite.com:5000/app can I change this 5000 port to 80 and get request from apache? is there a tutorial on this? will this break my php website/
2014-05-29 23:36:33	@dash	jnhghy: did you read the instructions on the flask website for using flask with apache?
2014-05-29 23:36:42	-->	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-29 23:36:55	jnhghy	I'm seraching for them, I've found how not to use flask with apache until now :))
2014-05-29 23:38:04	-->	nguyt___1 (~nguyt@c-24-16-77-218.hsd1.wa.comcast.net) has joined #python
2014-05-29 23:38:08	nguyt___1	#join #linux
2014-05-29 23:38:39	<--	mn3monic (~xxwa@unaffiliated/mn3monic) has quit (Remote host closed the connection)
2014-05-29 23:39:20	-->	Deseaus (~Deseaus@ttt9911.olf.sgsnet.se) has joined #python
2014-05-29 23:39:45	RaviTezu	CodePulsar: thanks for the link
2014-05-29 23:40:33	-->	localhost00 (~lo@2602:43:2952:6f00::1) has joined #python
2014-05-29 23:40:33	<--	localhost00 (~lo@2602:43:2952:6f00::1) has quit (Client Quit)
2014-05-29 23:41:04	-->	jargon (~jargon@unaffiliated/jargon-) has joined #python
2014-05-29 23:41:33	<--	rudedogg (~rudedogg@unaffiliated/rudedogg) has quit (Read error: No route to host)
2014-05-29 23:42:06	<--	vvoody (~vvoody@216.113.168.141) has quit (Quit: Leaving...)
2014-05-29 23:42:34	-->	localhost00 (~lo@2602:43:2952:6f00::1) has joined #python
2014-05-29 23:42:36	<--	Tii (~Tii@stevie-ray.me) has quit (Remote host closed the connection)
2014-05-29 23:42:49	<--	snyp (~snyp@223.29.204.2) has quit (Quit: Leaving)
2014-05-29 23:42:56	-->	ezdookie (~ezdookie@190.113.213.122) has joined #python
2014-05-29 23:43:04	-->	Tii (~Tii@stevie-ray.me) has joined #python
2014-05-29 23:43:18	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 240 seconds)
2014-05-29 23:43:22	kireevco	is anyone using intellij idea for python?
2014-05-29 23:43:34	kireevco	what IDE for mac do people prefer?
2014-05-29 23:43:48	preaction	i hear people like sublimetext2, but i use vim
2014-05-29 23:43:48	--	reference is now known as m0nad
2014-05-29 23:44:04	--	m0nad is now known as m0nAd
2014-05-29 23:44:09	ezdookie	Hello, is there a way to avoid "list index out of range" error without handling the exception?
2014-05-29 23:44:10	@dash	kireevco: emacs
2014-05-29 23:44:19	@dash	ezdookie: yes
2014-05-29 23:44:27	--	m0nAd is now known as m0NAd
2014-05-29 23:44:41	timkofu	kireevco: err various ones
2014-05-29 23:44:43	kireevco	preaction: what vim modules for python does have autocomplete? is there such function at all?
2014-05-29 23:44:44	<--	Tii (~Tii@stevie-ray.me) has left #python
2014-05-29 23:44:51	timkofu	kireevco: there is even atom from github
2014-05-29 23:45:10	--	m0NAd is now known as m0Nad
2014-05-29 23:45:30	<--	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has left #python ("Leaving")
2014-05-29 23:45:32	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit
2014-05-29 23:45:39	timkofu	ezdookie: by making sure you stay in range
2014-05-29 23:45:41	-->	mahmoudimus (~mahmoudim@199-188-192-223.PUBLIC.monkeybrains.net) has joined #python
2014-05-29 23:45:55	-->	strainwrld (~farfar@a95-95-166-141.cpe.netcabo.pt) has joined #python
2014-05-29 23:46:02	preaction	kireevco: autocomplete is a crutch that prevents understanding. yes, vim has an autocomplete function built-in
2014-05-29 23:46:02	timkofu	otherwise handle the exception
2014-05-29 23:46:22	kireevco	dash: switching to 2.7
2014-05-29 23:46:23	lowryder	kireevco: I use jedi-vim with neocomplete, though I used to use jedi-vim with supertab
2014-05-29 23:46:29	@dash	kireevco: ?
2014-05-29 23:46:29	kireevco	seems more usable
2014-05-29 23:46:33	ezdookie	timkofu: What if I don't know the list size...
2014-05-29 23:46:34	<--	kingplusplus (~kingplusp@41.58.219.117) has quit (Quit: Leaving)
2014-05-29 23:46:45	@dash	ezdookie: then why are you indexing it
2014-05-29 23:46:48	<--	Kayra (~Kayra@2.24.76.87) has quit (Remote host closed the connection)
2014-05-29 23:46:51	kireevco	lowryder: wow, looks really cool
2014-05-29 23:46:52	-->	alem0lars (~alem0lars@mail.spot.it) has joined #python
2014-05-29 23:46:55	-->	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-29 23:47:27	-->	rudedogg (~rudedogg@unaffiliated/rudedogg) has joined #python
2014-05-29 23:47:49	preaction	kireevco: my favorite vim plugin is Syntastic, which can run linters and syntax checkers and show you which lines you have problems on, but most editors have these kinds of plugins
2014-05-29 23:48:00	<--	malleYay (~malleYay@cable-78-34-20-187.netcologne.de) has quit (Remote host closed the connection)
2014-05-29 23:48:07	-->	dlman (~dlman@c-50-137-76-45.hsd1.ma.comcast.net) has joined #python
2014-05-29 23:48:14	preaction	so don't choose based on that. choose based on which one lets you edit code the best
2014-05-29 23:48:35	@dash	(that's emacs btw)
2014-05-29 23:48:58	preaction	vim and emacs have obscenely high learning curves (and emacs is easy to learn compared to vim, unless you've used ed in the past)
2014-05-29 23:48:59	witchdoc	 hi all
2014-05-29 23:48:59	timkofu	i use vim.nox and Komodo edit
2014-05-29 23:49:06	timkofu	yio
2014-05-29 23:49:07	-->	mablae_ (~mablae@dyndsl-037-138-119-139.ewe-ip-backbone.de) has joined #python
2014-05-29 23:49:08	timkofu	*yo
2014-05-29 23:49:10	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit (Client Quit)
2014-05-29 23:49:11	<--	malte__ (~mablae@dyndsl-031-150-093-222.ewe-ip-backbone.de) has quit (Ping timeout: 252 seconds)
2014-05-29 23:50:01	<--	meet_praveen (~Thunderbi@www.gscglass.in) has left #python
2014-05-29 23:50:27	<--	alem0lars (~alem0lars@mail.spot.it) has quit (Client Quit)
2014-05-29 23:50:31	ezdookie	dash: it comes from a url splitted...
2014-05-29 23:50:35	-->	vvoody (~vvoody@216.113.168.141) has joined #python
2014-05-29 23:50:41	@dash	ezdookie: OK?
2014-05-29 23:50:48	@dash	what do you want to do with it
2014-05-29 23:50:59	<--	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has quit (Quit: ArcTanSusan)
2014-05-29 23:51:06	<--	northfurr (~northfurr@unaffiliated/northfurr) has quit (Quit: northfurr)
2014-05-29 23:51:23	<--	plutoniix (~plutoniix@node-oaw.pool-101-108.dynamic.totbb.net) has quit (Ping timeout: 252 seconds)
2014-05-29 23:51:28	timkofu	I'm too cheap to buy sublime or pycharm
2014-05-29 23:51:41	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-29 23:51:42	--	m0Nad is now known as batman
2014-05-29 23:51:48	preaction	sublime isn't free? lame
2014-05-29 23:51:53	<--	le_tropico (~le_tropic@194.44.141.34) has quit (Ping timeout: 264 seconds)
2014-05-29 23:51:57	timkofu	nah
2014-05-29 23:51:58	<--	az_ (~az@unaffiliated/devix) has quit (Ping timeout: 240 seconds)
2014-05-29 23:52:05	<--	thinkxl (~Adium@207-91-184-235.nstci.net) has quit (Quit: Leaving.)
2014-05-29 23:52:12	--	batman is now known as Guest16643
2014-05-29 23:52:29	<--	kjn (~kjn@24-136-26-109.c3-0.lem-ubr2.chi-lem.il.cable.rcn.com) has quit (Quit: I was quit when I came in here. I'm twice as quit now.)
2014-05-29 23:52:35	-->	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has joined #python
2014-05-29 23:52:37	wei2912	it is
2014-05-29 23:52:39	preaction	i mean, i wouldn't have switched anyway ($dayjob has their own custom IDE for python, and I refuse to use it), but still...
2014-05-29 23:52:40	wei2912	just that it's a trial
2014-05-29 23:52:46	preaction	so it's not free
2014-05-29 23:52:58	wei2912	so it's not really supposed to be free in the sense of money, but it is
2014-05-29 23:52:59	timkofu	wei2912: you're funny
2014-05-29 23:53:11	wei2912	because you can use it free of charge
2014-05-29 23:53:24	timkofu	lol
2014-05-29 23:53:25	Lacriatch	The way I looked at it, I used it every day and it saved me time so I bought it
2014-05-29 23:53:29	Lacriatch	PyCharm CE wasn't bad though
2014-05-29 23:53:32	-->	skaflem (~skaflem@ti0099a430-0965.bb.online.no) has joined #python
2014-05-29 23:53:32	wei2912	hence you can use sublime without paying for it
2014-05-29 23:53:42	timkofu	please stop
2014-05-29 23:53:42	@dash	yeah i tried pycharm the other day
2014-05-29 23:53:48	timkofu	pycharm is the best I've used
2014-05-29 23:53:57	<--	pwh (~pwh@c-24-61-11-18.hsd1.ma.comcast.net) has quit (Client Quit)
2014-05-29 23:53:59	@dash	it's probably good at some stuff
2014-05-29 23:54:12	Lacriatch	It's great at merge conflicts
2014-05-29 23:54:17	Lacriatch	Dat 3 way merge interface <3
2014-05-29 23:54:23	<--	Guest16643 (~reference@122.167.181.212) has left #python
2014-05-29 23:54:44	timkofu	got a licence for the pro version coz I have a project who'se source is open
2014-05-29 23:54:48	-->	mishok13 (~mishok13@092-111-145-057.static.chello.nl) has joined #python
2014-05-29 23:55:11	Lacriatch	*whose
2014-05-29 23:55:12	-->	SittingShiva (~textual@68.204.154.30) has joined #python
2014-05-29 23:55:19	timkofu	thanks
2014-05-29 23:55:46	-->	_why_ (~reference@122.167.181.212) has joined #python
2014-05-29 23:55:54	-->	mguillech (~mguillech@unaffiliated/mguillech) has joined #python
2014-05-29 23:56:03	-->	thesheff17 (~thesheff1@24-148-57-183.c3-0.lem-ubr1.chi-lem.il.cable.rcn.com) has joined #python
2014-05-29 23:56:39	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Ping timeout: 265 seconds)
2014-05-29 23:57:06	<--	_why_ (~reference@122.167.181.212) has quit
2014-05-29 23:57:10	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #python
2014-05-29 23:57:43	-->	reference (~reference@122.167.181.212) has joined #python
2014-05-29 23:57:56	<--	bgs100 (~bgs@unaffiliated/bgs100) has quit (Quit: bgs100)
2014-05-29 23:57:59	<--	reference (~reference@122.167.181.212) has quit (Client Quit)
2014-05-29 23:58:31	-->	OOPMan (~adamj@105-236-104-101.access.mtnbusiness.co.za) has joined #python
2014-05-29 23:58:53	<--	kaos01 (~kaos01@12.186.233.220.static.exetel.com.au) has quit (Quit: leaving)
2014-05-29 23:58:58	<--	Wu (~wu@143.82.117.91.dynamic.mundo-r.com) has quit (Ping timeout: 258 seconds)
2014-05-29 23:59:18	<--	SittingShiva (~textual@68.204.154.30) has quit (Ping timeout: 240 seconds)
2014-05-29 23:59:45	DarkBeQst	i prefer Spyder
2014-05-30 00:00:17	<--	mguillech (~mguillech@unaffiliated/mguillech) has quit (Ping timeout: 245 seconds)
2014-05-30 00:00:28	<--	ezdookie (~ezdookie@190.113.213.122) has quit (Quit: Leaving)
2014-05-30 00:00:45	-->	teion (Elite9700@gateway/shell/elitebnc/x-yizbpaxjhoblfeny) has joined #python
2014-05-30 00:00:47	DarkBeQst	and for code snippet production i can recommend ipython notebook
2014-05-30 00:00:58	<--	Auv (~jack@unaffiliated/auv5) has quit (Ping timeout: 240 seconds)
2014-05-30 00:01:01	-->	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has joined #python
2014-05-30 00:01:16	<--	naught101 (~naught101@129.94.8.137) has quit (Ping timeout: 258 seconds)
2014-05-30 00:01:30	<--	Sonderblade (~Sonderbla@h-52-183.a157.priv.bahnhof.se) has quit (Quit: Lämnar)
2014-05-30 00:01:33	<--	Grant_P (~grant@14-200-229-143.static.tpgi.com.au) has quit (Ping timeout: 252 seconds)
2014-05-30 00:02:23	--	lorenzosu_ is now known as lorenzosu
2014-05-30 00:02:27	-->	RavenEye (~RavenEye@5249ED1F.cm-4-2d.dynamic.ziggo.nl) has joined #python
2014-05-30 00:02:42	<--	wildtype (~wildtype@S01060026bb73d29f.vc.shawcable.net) has quit (Quit: Lingo - http://lingoirc.com)
2014-05-30 00:02:49	-->	harobed (~harobed@ANancy-652-1-518-32.w86-197.abo.wanadoo.fr) has joined #python
2014-05-30 00:02:50	Lacriatch	ipynb is pretty nice
2014-05-30 00:02:51	-->	Grant_P (~grant@14-200-229-143.static.tpgi.com.au) has joined #python
2014-05-30 00:02:57	-->	pydave6367 (~dave@88-105-219-248.dynamic.dsl.as9105.com) has joined #python
2014-05-30 00:03:06	kireevco	timkofu: I'm trying intellij idea 13 which is pycham's big brother
2014-05-30 00:03:15	-->	clynamen (~clynamen@net-37-116-50-243.cust.vodafonedsl.it) has joined #python
2014-05-30 00:03:35	-->	bkuberek (~bkuberek@74.72.159.31) has joined #python
2014-05-30 00:04:35	mexi_d3	Pycharm has a free edition and it actually works. They just released a new version (3.4) today.
2014-05-30 00:04:50	alxgnon	All of JetBrains' IDEs are the same core with language-specific plugins basically
2014-05-30 00:05:16	@dash	pity it can't tempt me away from emacs =/
2014-05-30 00:05:28	-->	whyy (~whyy@122.167.181.212) has joined #python
2014-05-30 00:06:19	alxgnon	yeah PyCharm CE is nice, I fire it up when I want to easily do some major code-breaking refactoring
2014-05-30 00:06:19	mexi_d3	terminal emacs or x emacs?
2014-05-30 00:06:42	-->	amigo (~amigo@unaffiliated/amigo) has joined #python
2014-05-30 00:06:52	@dash	mexi_d3: what's the difference
2014-05-30 00:07:05	-->	agjacome (~agjacome@181.217.11.37.dynamic.jazztel.es) has joined #python
2014-05-30 00:07:11	mexi_d3	Wing has a beautiful IDE but it's not free and I haven't tried it.
2014-05-30 00:07:42	mexi_d3	dash: Fair enough
2014-05-30 00:07:48	-->	plutoniix (~plutoniix@node-oaw.pool-101-108.dynamic.totbb.net) has joined #python
2014-05-30 00:07:57	@dash	mexi_d3: you can use emacs in X and in the terminal at the same time :)
2014-05-30 00:08:11	@dash	(in the same process)
2014-05-30 00:08:45	<--	kireevco (~kireevco@cpe-76-175-91-121.socal.res.rr.com) has quit (Quit: Leaving.)
2014-05-30 00:08:55	<--	xintron (~xintron@unaffiliated/xintron) has quit (Quit: bice bice bice)
2014-05-30 00:09:22	-->	evil_gordita (robert@ip70-188-56-12.rn.hr.cox.net) has joined #python
2014-05-30 00:09:38	<--	bkuberek (~bkuberek@74.72.159.31) has quit (Ping timeout: 240 seconds)
2014-05-30 00:09:42	<--	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has quit (Ping timeout: 265 seconds)
2014-05-30 00:10:13	<--	Dharmit (shahdharmi@nat/redhat/x-vtyknejkhphhtzza) has quit (Quit: Leaving)
2014-05-30 00:12:09	-->	EvilDMP (~superdmp@django/committer/EvilDMP) has joined #python
2014-05-30 00:12:15	<--	nguyt___1 (~nguyt@c-24-16-77-218.hsd1.wa.comcast.net) has quit (Quit: Lost terminal)
2014-05-30 00:12:43	<--	jrm2k6 (~jrm2k6@78-131-36-37.pool.digikabel.hu) has quit (Remote host closed the connection)
2014-05-30 00:12:44	timkofu	mexi_d3: free version of pycharm? nah
2014-05-30 00:12:55	timkofu	it iss there
2014-05-30 00:12:59	timkofu	but nope
2014-05-30 00:13:00	-->	chobojordi (~chobojord@81.189.156.66) has joined #python
2014-05-30 00:13:35	-->	xa0s_ (xa0s@SDF.ORG) has joined #python
2014-05-30 00:14:50	<--	robmorrissey (~robmorris@cpc26-brig15-2-0-cust123.3-3.cable.virginm.net) has quit (Quit: Computer has gone to sleep.)
2014-05-30 00:15:15	-->	jvv (~jvv@212.91.29.34) has joined #python
2014-05-30 00:16:08	-->	z0ran (~z0ran@gateway/tor-sasl/z0ran) has joined #python
2014-05-30 00:16:08	<--	plutoniix (~plutoniix@node-oaw.pool-101-108.dynamic.totbb.net) has quit (Ping timeout: 255 seconds)
2014-05-30 00:16:16	-->	Ergo (~ergo@hyp-p-107.pabianice.msk.pl) has joined #python
2014-05-30 00:16:28	anddam	not sure it fits the IDE niche but I fetched the trial of Exedore a couple days ago and was impressed by the clean GUI
2014-05-30 00:16:33	<--	xa0s_ (xa0s@SDF.ORG) has quit (Client Quit)
2014-05-30 00:16:38	<--	alxgnon (~alxgnon@gateway/tor-sasl/alxgnon) has quit (Remote host closed the connection)
2014-05-30 00:16:41	-->	plutoniix (~plutoniix@node-oaw.pool-101-108.dynamic.totbb.net) has joined #python
2014-05-30 00:16:42	anddam	that's OS X only and very polished
2014-05-30 00:16:46	-->	Calle__Lid (~Ailongam@h-111-17.a323.priv.bahnhof.se) has joined #python
2014-05-30 00:17:12	anddam	woth a try if one is on a mac tho
2014-05-30 00:17:26	anddam	s/tho/IMHO/
2014-05-30 00:17:29	-->	[LustFul]V33nA (~umair.asl@202.69.13.179) has joined #python
2014-05-30 00:17:43	<--	rudedogg (~rudedogg@unaffiliated/rudedogg) has quit (Quit: Bye)
2014-05-30 00:18:17	<--	spal (~susam@pdpc/supporter/active/spal) has quit (Read error: Connection reset by peer)
2014-05-30 00:18:24	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-30 00:18:48	<--	ustunozgur (~ustunozgu@78.171.103.252) has quit (Remote host closed the connection)
2014-05-30 00:19:46	-->	ustunozgur (~ustunozgu@78.171.103.252) has joined #python
2014-05-30 00:21:01	-->	katspaugh (~katspaugh@95.143.216.104) has joined #python
2014-05-30 00:21:07	-->	vedic (~V@49.204.113.7) has joined #python
2014-05-30 00:21:10	mexi_d3	It does look pretty
2014-05-30 00:21:19	vedic	Hi, I have initialized a GMM with 8 components with mean taken from VQ clustering of the data and global variance. I want to plot this to see how well the initialization has happened. I have: for each Gaussian component its weight, mean vector and variance vector. How can I see how well the initialization has happened?
2014-05-30 00:21:51	<--	Justus (d5900eea@gateway/web/freenode/ip.213.144.14.234) has quit (Quit: Page closed)
2014-05-30 00:22:20	katspaugh	Hi! I’m using Tornado and send some Unicode text in JSON response. How do I make the text appear as text, not as Unicode code points?
2014-05-30 00:23:24	-->	chiui (~chiui@h-213.61.228.26.host.de.colt.net) has joined #python
2014-05-30 00:23:32	katspaugh	This is my handler: https://gist.github.com/katspaugh/2a7b557a28124700b96f
2014-05-30 00:24:06	-->	yak (~yak@isper-224-24.isper.sk) has joined #python
2014-05-30 00:24:39	-->	adambrenecki_ (uid16867@gateway/web/irccloud.com/x-vrezppserguqrivs) has joined #python
2014-05-30 00:24:48	katspaugh	I recieve "\u041c\u043e\u0441\u043a” instead of normal text.
2014-05-30 00:25:47	<--	plutoniix (~plutoniix@node-oaw.pool-101-108.dynamic.totbb.net) has quit (Ping timeout: 240 seconds)
2014-05-30 00:25:59	xiaomiao	that is normal text
2014-05-30 00:26:13	xiaomiao	just escaped so that it can be represented on your terminal
2014-05-30 00:26:26	-->	plutoniix (~plutoniix@node-oaw.pool-101-108.dynamic.totbb.net) has joined #python
2014-05-30 00:26:29	katspaugh	How do I make it appear readable by humans?
2014-05-30 00:27:16	<--	armyriad (~armyriad@198.23.71.93-static.reverse.softlayer.com) has quit (Read error: Connection reset by peer)
2014-05-30 00:27:19	virhilo	katspaugh: print 'thingy'
2014-05-30 00:27:47	virhilo	>>> print u'\u041c\u043e\u0441\u043a'
2014-05-30 00:27:48	virhilo	Моск
2014-05-30 00:28:02	-->	armyriad (~armyriad@198.23.71.93-static.reverse.softlayer.com) has joined #python
2014-05-30 00:28:06	<--	Jikkz (xchat@c-69-250-91-165.hsd1.md.comcast.net) has quit (Ping timeout: 258 seconds)
2014-05-30 00:28:10	katspaugh	virhilo: guys, this is a web server, OK?
2014-05-30 00:28:21	virhilo	katspaugh: so?
2014-05-30 00:28:37	virhilo	katspaugh: your template engine will serve it just fine to user
2014-05-30 00:28:42	katspaugh	So I don’t print, I send as JSON response. Have you looked at the gist?
2014-05-30 00:28:43	<--	neataroni (~neataroni@c-67-171-200-129.hsd1.or.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2014-05-30 00:29:00	<--	Itkovian (~Itkovian@178-118-76-90.access.telenet.be) has quit (Quit: Zzzzz ...)
2014-05-30 00:29:02	<--	fossrox (~fossrox@unaffiliated/fossrox) has quit (Ping timeout: 265 seconds)
2014-05-30 00:29:06	Peng	JSON escapes Unicode, right?
2014-05-30 00:29:08	virhilo	katspaugh: looked now
2014-05-30 00:29:14	virhilo	katspaugh: and still dont see the problem
2014-05-30 00:29:16	Peng	In that case, the answer is, don't ask humans to read JSON.
2014-05-30 00:29:17	<--	cardboard (~cardboard@DHCP-159-220.caltech.edu) has quit (Read error: Connection reset by peer)
2014-05-30 00:29:39	katspaugh	Peng: Tornado’s JSON encoder does and it doesn’t seem to have an option to do otherwise.
2014-05-30 00:29:44	-->	mn3monic (~xxwa@unaffiliated/mn3monic) has joined #python
2014-05-30 00:30:00	virhilo	Peng: well how you would want to send your fancy characters otherwise?
2014-05-30 00:30:28	katspaugh	Is it an inherently JSON limitation?
2014-05-30 00:30:56	-->	sputnikus (~sputnikus@ip-89-103-91-32.net.upcbroadband.cz) has joined #python
2014-05-30 00:31:48	-->	masci (~masci@host19-66-static.243-95-b.business.telecomitalia.it) has joined #python
2014-05-30 00:31:50	virhilo	Peng: oh, sorry, it was to katspaugh :)
2014-05-30 00:31:56	<--	moreisee (~monsterdi@cpe-76-90-172-20.socal.res.rr.com) has quit (Ping timeout: 258 seconds)
2014-05-30 00:32:36	katspaugh	virhilo: in UTF8?
2014-05-30 00:32:45	<--	DarkBeQst (~darkbeqst@x2f4a265.dyn.telefonica.de) has quit
2014-05-30 00:32:47	virhilo	katspaugh: so you seeing utf-8
2014-05-30 00:33:02	Peng	ascii is a subset of utf-8 >_>
2014-05-30 00:33:08	Nitori	katspaugh, whatever receives the json text, should be able to decode json as well.
2014-05-30 00:33:09	katspaugh	I see Unicode code points in ASCII, I think.
2014-05-30 00:33:14	-->	gelignite (~gelignite@i5387A4CC.versanet.de) has joined #python
2014-05-30 00:33:20	virhilo	katspaugh: as its encoded unicode
2014-05-30 00:33:37	virhilo	whatever receives it need to decode it
2014-05-30 00:33:39	virhilo	as Nitori said
2014-05-30 00:33:45	katspaugh	Nitori: I know, but this is a demo thing, should be viewable in the browser as is.
2014-05-30 00:33:49	<--	nanodano (~dtron@99-45-202-166.lightspeed.hstntx.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2014-05-30 00:34:03	Nitori	then decode it with javascript and print it out
2014-05-30 00:34:35	virhilo	katspaugh: protip, json isn't format for end user:f
2014-05-30 00:34:36	katspaugh	Oh, well. OK. Thanks :)
2014-05-30 00:34:50	katspaugh	virhilo: I guess it’s not...
2014-05-30 00:35:11	Nitori	I think you can do: obj = JSON.parse(yourtexthere);
2014-05-30 00:35:15	Nitori	or something like that
2014-05-30 00:36:34	<--	shackra (~shackra@186.32.192.206) has quit (Remote host closed the connection)
2014-05-30 00:36:34	<--	RaptorJesus (~RaptorJes@gateway/tor-sasl/raptorjesus) has quit (Ping timeout: 272 seconds)
2014-05-30 00:37:12	katspaugh	Yes, thank you.
2014-05-30 00:38:22	-->	Elek101 (~textual@8.219-201-80.adsl-dyn.isp.belgacom.be) has joined #python
2014-05-30 00:38:28	nanonyme	Assuming a modern browser :)
2014-05-30 00:38:28	-->	Joe-Joe (~joe@host-92-25-163-119.as13285.net) has joined #python
2014-05-30 00:38:31	<--	Elek101 (~textual@8.219-201-80.adsl-dyn.isp.belgacom.be) has quit (Max SendQ exceeded)
2014-05-30 00:38:57	Nitori	yes..
2014-05-30 00:39:03	<--	unit923 (~unit923@203.111.137.49) has quit (Quit: Leaving)
2014-05-30 00:39:10	-->	Elek101 (~textual@8.219-201-80.adsl-dyn.isp.belgacom.be) has joined #python
2014-05-30 00:39:57	virhilo	katspaugh: if you realy displaying it for 'end user' cosider using: http://marianoguerra.github.io/json.human.js/ :)
2014-05-30 00:40:15	nanonyme	Hey, there's still plenty of IE's out there that don't have a proper JSON parser
2014-05-30 00:40:24	virhilo	:D
2014-05-30 00:40:49	virhilo	nanonyme: btw what's the default browser in windows phones? IE ?:D
2014-05-30 00:41:15	nanonyme	virhilo, I'm fairly sure Windows Phones have a fairly new IE
2014-05-30 00:41:27	Nitori	I think jQuery even has a fallback implementation where JSON.parse() is not available.
2014-05-30 00:41:44	-->	spal (~susam@pdpc/supporter/active/spal) has joined #python
2014-05-30 00:42:26	nanonyme	Most people just use json2 if compatibility is important
2014-05-30 00:42:35	katspaugh	virhilo: nice!
2014-05-30 00:43:04	<--	whyy (~whyy@122.167.181.212) has quit (Remote host closed the connection)
2014-05-30 00:43:04	-->	andtorg (~andtorg@host145-85-dynamic.53-79-r.retail.telecomitalia.it) has joined #python
2014-05-30 00:43:05	-->	Balliad (~textual@80.79.35.95) has joined #python
2014-05-30 00:43:06	nanonyme	It's a cross-browser JSON library that fallbacks to its own implementation if browser has no native parser
2014-05-30 00:43:08	-->	patrick91 (~patrick91@93.55.54.119) has joined #python
2014-05-30 00:43:13	Nitori	http://caniuse.com/json
2014-05-30 00:43:18	-->	fossrox (~fossrox@unaffiliated/fossrox) has joined #python
2014-05-30 00:43:41	-->	whyy (~whyy@122.167.181.212) has joined #python
2014-05-30 00:43:55	virhilo	look at chrome:f
2014-05-30 00:44:02	virhilo	kicked all others:f
2014-05-30 00:44:08	virhilo	json from start:]
2014-05-30 00:44:37	Nitori	well it's a little bit weirdly displayed I think
2014-05-30 00:45:13	nanonyme	Okay, so 2017 when MS drops support from Vista this all will be a non-issue
2014-05-30 00:45:58	--	regebro|afk is now known as regebro
2014-05-30 00:46:42	<--	McMAGIC--Copy (~McMAGIC--@gateway/tor-sasl/mcmagic--copy) has quit (Ping timeout: 272 seconds)
2014-05-30 00:46:45	-->	Score_Under (~Score_Und@97e4d403.skybroadband.com) has joined #python
2014-05-30 00:47:36	-->	vnagpal (cba1b303@gateway/web/freenode/ip.203.161.179.3) has joined #python
2014-05-30 00:47:45	-->	Left_Turn (~Left_Turn@unaffiliated/turn-left/x-3739067) has joined #python
2014-05-30 00:47:51	<--	cadaver (~cadaver@unaffiliated/cadaver) has quit (Remote host closed the connection)
2014-05-30 00:48:01	-->	codex0 (~anonymous@ip174-65-140-33.sd.sd.cox.net) has joined #python
2014-05-30 00:48:50	<--	whyy (~whyy@122.167.181.212) has quit (Ping timeout: 276 seconds)
2014-05-30 00:49:12	-->	ArcTanSusan (~susantan@184-23-11-140.dsl.dynamic.sonic.net) has joined #python
2014-05-30 00:49:18	-->	JotaK (~HOL@unaffiliated/jotak) has joined #python
2014-05-30 00:49:34	<--	agjacome (~agjacome@181.217.11.37.dynamic.jazztel.es) has quit (Quit: leaving)
2014-05-30 00:49:42	nanonyme	And 2020 when MS drops support from Win7 CORS will no longer be a problem :)
2014-05-30 00:50:27	codex0	question about multiprocessing module, i had a connectio defined (via sqlalchemy engine) in my main, and i called pool.map(work_function,parameter_list)  , inside work_function i do not establish connection, but rather use session object which was defined in main() , this seems to work when i use multiprocessing, but my question is how is connection passed?
2014-05-30 00:50:30	Nitori	isn't 2020 a bit too optimistic?
2014-05-30 00:50:41	-->	ioggstream (~rpolli@109.55.250.255) has joined #python
2014-05-30 00:50:47	nanonyme	Nitori, just reading from their lifecycle plan
2014-05-30 00:51:03	Nitori	oh I see
2014-05-30 00:51:17	timkofu	at least they dont kill projects in a month in cold blood like google
2014-05-30 00:51:51	Nitori	I miss google reader :(
2014-05-30 00:51:54	<--	faldridge (~faldridge@108-194-52-92.lightspeed.austtx.sbcglobal.net) has quit (Remote host closed the connection)
2014-05-30 01:03:54		irc: disconnected from server
2014-05-30 01:04:44	--	#python: #python-unregistered :Forwarding to another channel
