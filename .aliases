# vim: set ft=bash

# zsh and bash behavior differ, effing "backwards compatible shell"
# Slow as hell, just as ugly ugh
#v() {
#	REGEX="(.*):([0-9]+)$"
#	[[ $@ =~ $REGEX ]]
#	# Bash
#	#LINE="${BASH_REMATCH[2]}"  
#	# zsh
#	LINE="${BASH_REMATCH[3]}"  
#	echo $LINE
#	# Bash
#	#FILE="${BASH_REMATCH[1]}"  
#	# zsh
#	FILE="${BASH_REMATCH[2]}"  
#	echo $FILE
#	if [ -n "$LINE" ] ; then
#		echo vim -p $FILE "+$LINE"
#		vim -p $FILE "+$LINE"
#	else
#		vim -p $@
#	fi
#}

# Don't search ctags files
alias ag='ag --ignore ./tags --ignore ./tags-e'

alias l=ls
alias ll='ls -hla'
alias la='ls -a'
alias sl='ls'
#alias venv=virtualenv
alias grep='grep --color=auto'
#alias vus='vagrant up && vagrant ssh'
#alias vs='vagrant ssh'
#alias vu='vagrant up'

alias rebash="exec bash"


if [[ $(uname) == "Darwin" ]]; then
	#alias 'objdump'='gobjdump'
	alias opn='open'
	alias pp='echo cd `pwd` | pbcopy'

	alias asleep='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'
elif [[ $(uname) == "Linux" ]]; then
	alias opn='xdg-open'
	alias pp='echo cd `pwd` | xclip'
	alias ls='ls --color'

	alias ff='/Applications/FirefoxNightly.app/Contents/MacOS/firefox'
fi

alias py=python
alias py3=python3

alias ga='git add'
alias gap='git add -up'
alias gb='git branch'
alias gc='git commit'
alias gcp='git commit -p'
alias gcb='git checkout -b'
alias gco='git checkout'
alias gd='git diff'
alias gdn='git diff --name-only'
alias gf='git fetch'
alias gfwl='git push --force-with-lease'
alias gl='git log'
alias gn='git net'
alias gp='git pull'
alias gpu='git push -u origin `git rev-parse --abbrev-ref HEAD`'
alias gr='git grep'
alias gs='git status'

#if [[ "$(type -t __git_complete)" == 'function' ]]; then
#	__git_complete ga _git_add
#	__git_complete gap _git_add
#	__git_complete gb _git_branch
#	__git_complete gc _git_commit
#	__git_complete gcp _git_commit
#	__git_complete gcb _git_checkout
#	__git_complete gco _git_checkout
#	__git_complete gd _git_diff
#	__git_complete gdn _git_diff
#	__git_complete gf _git_fetch
#	__git_complete gfwl _git_push
#	__git_complete gl _git_log
#	__git_complete gn _git_log
#	__git_complete gp _git_pull
#	__git_complete gpu _git_push
#	__git_complete gr _git_grep
#
#else
#	echo shorthand git completions not added
#fi

alias :tabe='vim -p'

alias jcheck="python -m json.tool"


grind () {
	find ${2:-.} -type d -name .git -prune -o -print | grep -i $1

	# The following is an experiment with filtering the output
	# through .gitignore
	# local OUTPUT=$(find ${2:-.} | grep -i $1)
	# echo $OUTPUT | wc -l
	# if git rev-parse ; then
	# 	for line in $OUTPUT; do
	# 		if git check-ignore -q $line; then
	# 			echo $line
	# 		else
	# 			echo ignoring $line
	# 			;
	# 		fi
	# 	done
	# else
	# 	echo $OUTPUT
	# fi
}

usage () {
	du -d1 ${@:-.} | awk '$1 > 10000' | sort -n | awk '{ split( "KB MB GB" , v ); s=1; while( $1 > 1024 ){ $1/=1024; s++ } print int($1)/2 v[s] "\t" $2 }'
}

alias hgr='history | grep'

# Weird habits from vim
alias tabe='vim -p'
alias :tabe='vim -p'
alias ':w'='echo this is not vim'
alias ':q'='echo this is not vim'
alias ':wq'='echo this is not vim'
alias 'pycheck'='python -m py_compile'


git-authors () {
	echo 'lines        name'
	git ls-tree -r -z --name-only HEAD --full-tree | xargs -0 -n1 git blame --line-porcelain HEAD | grep  "^author "|sort|uniq -c|sort -nr
}

godoc () {
	env godoc $@ | less
}

#objdump () {
#	env objdump $@ | less
#}

# If I'm writing too much asm :P
alias mov=mv

# Alias windows commands to unix
alias dir=ls
alias cls=clear

# Case sensitive recursive search
# One character for convenience like 'l' and 'v'

alias s='rg -n'
alias si='rg -in'

#if ! type "rg" > /dev/null; then
#alias s='rg -n'
#alias si='rg -in'
#else
#if ! type "ag" > /dev/null; then
#alias s='ag -s'
#alias si='ag'
#else
#
#alias s='grep -Rn'
#alias si='grep -Rin'
#fi
#fi

hbrun() {
OLDPATH=$PATH
PATH=/opt/homebrew/bin:$PATH
#echo $@
"${@:1}"
PATH=$OLDPATH

}

alias hist='history 0'

alias le='less -R'
export BREW_PREFIX=$(brew --prefix)

if [ -d "/AppleInternal" ]; then

	ring_decode() {
	xcrun -sdk iphoneos.internal embedded_device_map -query "select Platform, PlatformGeneration,PlatformName, Target, ProductType, ProductDescription from Targets" | grep -i $@
	}

	export XCODE_IPHONE_SDK=iphoneos.internal
	export XCODE_MAC_SDK=macosx.internal

else

	export XCODE_MAC_SDK=macosx
	export XCODE_IPHONE_SDK=iphoneos

fi

alias runm="xcrun -sdk $XCODE_MAC_SDK"
alias mrun=runm
alias runi="xcrun -sdk $XCODE_IPHONE_SDK"
alias irun=runi

sdkheader() {
	xcrun --sdk $XCODE_IPHONE_SDK clang -x c -include ptrcheck.h /dev/null -E | grep $@
}



dis() {
	 xcrun -sdk $XCODE_IPHONE_SDK  otool -xV $@ | less -R
}

odis() {
$BREW_PREFIX/opt/binutils/bin/objdump --visualize-jumps=extended-color --disassembler-color=extended -CD $@ | less -R
}


alias rfind=~/Library/Python/3.8/bin/rfind
alias xcpretty=/Users/ian/.gem/ruby/2.6.0/bin/xcpretty
export RIPGREP_CONFIG_PATH=~/gg/dotfiles/.ripgrepconfig

retag() {
cscope -b `git ls-files` `~/bin/clang_path.py -I`
hbrun ctags -R . --fields=+iaS --links=no --exclude="@.gitignore" --exclude="@$HOME/.gitignore"
}


alias vt='$EDITOR -t'
alias v='$EDITOR -p'
alias vgs='$EDITOR -p `git status -s | grep " M " | cut -d" " -f 3`'

vg () {
	$EDITOR -p `grind $@ | grep -v '\..*\.sw.'`
}

odis () {
arm-none-eabi-objdump -CD  --disassembler-color=on --visualize-jumps=extended-color $@ | less -R
}
